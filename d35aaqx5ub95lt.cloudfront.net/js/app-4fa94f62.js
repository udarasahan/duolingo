/*! For license information please see app-4fa94f62.js.LICENSE.txt */
(self.webpackChunk = self.webpackChunk || []).push([
    [2143], {
        90028: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => s
            });
            const s = {
                "course-card-container": "_2jhpw"
            }
        },
        43628: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => s
            });
            const s = {
                "_hoverable-cell": "_3VujI",
                "user-cell-minimal": "_28wNi _3VujI",
                "user-popover": "ZG4i1",
                "user-popover-wrap": "_3gmq6",
                "user-item": "a0wKg",
                "user-link": "_24Dhu _1HpcC",
                "logged-out-topbar-wrap": "_28xFW",
                "splash-topbar-wrap": "_2tsE9",
                "logged-out-topbar": "pE4IN",
                "logged-out-logo-container": "_3tVcA",
                "logged-out-logo": "_3yhXH",
                "right-header": "_3ujcB",
                "hidden-on-mobile": "LeLT1",
                "ui-language-wrap": "_2jWOx",
                _icon: "_1-Eb9",
                "get-started": "_3Zsmh _42WO0",
                "login-button": "_3Xgdh _42WO0",
                "hidden-everywhere": "IbIvK",
                "arrow-with-margin-gray": "_2Snvp"
            }
        },
        42985: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => s
            });
            const s = {
                _button: "_1so1r",
                "google-solid": "_38eRM _1so1r",
                "facebook-solid": "_2xkK- _1l4ed _1so1r",
                stroke: "_3m1fU _1so1r",
                "account-icon": "_2Drh9",
                "account-text": "_3KZ9i"
            }
        },
        4368: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => s
            });
            const s = {
                "duration-fade": "0.3s",
                "duration-slide": "0.4s",
                "height-tabbar-mobile": "90px",
                "juicy-bee": "rgb(var(--color-bee))",
                "margin-popover": "8px",
                "margin-popover-stem": "15px",
                "margin-popover-text": "5px",
                "z-index-modal": "310",
                "z-index-overlay": "300",
                "z-index-popover": "150",
                "z-index-topbar": "210"
            }
        },
        60410: (e, t, a) => {
            "use strict";
            a.d(t, {
                Q: () => d,
                m: () => c
            });
            var s = a(54174);
            const n = (0, a(48469).R)(s.d);
            var r = a(40893),
                i = a(97544),
                o = a(96195),
                l = a(19172);
            const c = (0, o.d)("featuresAtom", (0, l.f)("featuresAtom").primitive(void 0).reducer(((e, t) => {
                    var a;
                    return "network-success" === t.result.type ? t.result.value : "network-failure" === t.result.type && (0, i.Hx)(t.result.ex) && 401 === (null === (a = t.result.ex.response) || void 0 === a ? void 0 : a.status) ? void 0 : e
                })).build(), (e => {
                    const t = e.untracked(n),
                        a = e.untracked(r.t_);
                    return t || !a.length || 1 === a.length && "users" === a[0] ? [] : [{
                        queryFn: () => () => i.PA.getFeatures("DLAW"),
                        queryKey: ["features"]
                    }]
                })),
                d = (0, l.f)("canShakeToReport").selectedTracked(c, (e => void 0 !== e)).build()
        },
        40893: (e, t, a) => {
            "use strict";
            a.d(t, {
                DW: () => o,
                t_: () => l
            });
            var s = a(42659),
                n = a(48469),
                r = a(19172);
            const i = (0, n.R)(s.np),
                o = (0, n.R)(s.dY),
                l = (0, r.f)("userRoles").derived((e => {
                    var t;
                    return null !== (t = e(i).roles) && void 0 !== t ? t : []
                })).build()
        },
        40412: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => o
            });
            var s = a(27378),
                n = a(50548),
                r = a(88868),
                i = a(79465);
            const o = () => {
                const e = (0, n.TH)();
                return s.useEffect((() => {
                    e.pathname !== r.Oy && (async () => {
                        await (0, i.track)("page_not_found", {}, !1), await (0, r.Zs)(r.Oy, !0)
                    })()
                }), []), null
            }
        },
        47725: (e, t, a) => {
            "use strict";
            a.d(t, {
                PK: () => d,
                ZP: () => g,
                av: () => p
            });
            var s = a(27378),
                n = a(95324),
                r = a(4289),
                i = a(17060),
                o = a(58576),
                l = a(88868),
                c = a(79465);
            const d = ({
                    children: e,
                    trackingScreen: t,
                    trackingTarget: a
                }) => s.createElement("span", {
                    onClick: e => {
                        var s;
                        "a" === (null === (s = e.target.tagName) || void 0 === s ? void 0 : s.toLowerCase()) && (0, c.track)("click", {
                            screen: t,
                            target: a
                        })
                    }
                }, e),
                u = ({
                    activeClassName: e,
                    autoFocus: t,
                    children: a,
                    id: d,
                    isRoutableUrl: u = l.Iw,
                    onClick: g,
                    locationState: p,
                    replace: m,
                    trackingScreen: h,
                    trackingTarget: v,
                    ..._
                }, f) => {
                    var S;
                    const y = _,
                        E = s.useRef(null),
                        b = s.useMemo((() => (0, n.Z)([f, E])), [f, E]);
                    (0, i.Z)({
                        disabled: !d,
                        id: d,
                        offset: -100
                    });
                    const I = e => {
                        h && v && (0, c.track)("click", {
                            screen: h,
                            target: v
                        }), null == g || g(e)
                    };
                    if (s.useEffect((() => {
                            var e;
                            t && (null === (e = E.current) || void 0 === e || e.focus())
                        }), [t]), "target" in y && y.target && "_blank" === y.target.toLowerCase() && (y.rel = "rel" in y && y.rel && "noopener" !== y.rel.toLowerCase() ? `${y.rel} noopener` : "noopener"), !(null === (S = y.href) || void 0 === S ? void 0 : S.startsWith("#")) && y.href && u(y.href)) {
                        y.href.startsWith("http") && console.warn("Routable URL includes a protocol and domain");
                        const {
                            hash: t,
                            pathname: n,
                            search: i
                        } = y.href.startsWith("http") ? new URL(y.href) : new URL(y.href, window.location.origin);
                        return y.to = {
                            hash: t,
                            pathname: n,
                            search: i,
                            state: p
                        }, delete y.href, s.createElement(r.OL, { ...y,
                            activeClassName: e || "",
                            onClick: I,
                            ref: b,
                            replace: m
                        }, a)
                    }
                    return void 0 !== e && (0, o.Kp)("activeClassName was set on a native anchor tag", {
                        data: {
                            href: y.href
                        },
                        once: !0
                    }), s.createElement("a", { ...y,
                        onClick: I,
                        ref: b,
                        tabIndex: 0
                    }, a)
                },
                g = s.forwardRef(u),
                p = s.forwardRef(u)
        },
        10141: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => g
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(57052),
                o = a(42659);
            var l = a(18804),
                c = a(79465),
                d = a(81621);
            const u = {
                    large: 63,
                    medium: 48,
                    xlarge: 77
                },
                g = e => {
                    var t, a;
                    const {
                        forceNoPicture: s = !1,
                        size: g,
                        user: p
                    } = e, m = (0, l.Fx)(o.dY), h = (0, l.Fx)(o.gg), v = p.id === m, _ = `${e.picture||p.picture}/${g}`, f = null !== (t = e.displaySize) && void 0 !== t ? t : u[g];
                    return (0, d.z_)(_) || s || h ? r.createElement(i.Z, {
                        className: n()(e.className, e.letterAvatarClassName, e.disableDefaultBorder ? "_3UD1_" : void 0),
                        id: p.id,
                        name: p.name,
                        size: null != f ? f : g,
                        style: v && !s ? "ghost" : "colored",
                        username: p.username
                    }) : r.createElement("img", {
                        alt: null !== (a = p.name) && void 0 !== a ? a : p.username,
                        className: n()(e.className, "FjvBl", c.FULL_STORY_EXCLUDE),
                        src: _,
                        style: {
                            height: f,
                            width: f
                        }
                    })
                }
        },
        81928: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => o
            });
            var s = a(27378),
                n = a(47725),
                r = a(30033),
                i = a(79465);
            const o = ({
                [r.m5]: e,
                children: t,
                className: a
            }) => s.createElement(n.ZP, {
                className: a,
                href: "/help",
                onClick: () => {
                    (0, i.track)("help_center_tap", {})
                },
                ...(0, r._q)(e)
            }, t)
        },
        39368: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => l
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(28451),
                o = a(47725);
            const l = r.forwardRef((({
                children: e,
                className: t,
                fakeActive: a,
                fakeHover: s,
                leadingVisual: l,
                onTouchStart: c,
                size: d,
                state: u,
                trailingVisual: g,
                unstyledDisabled: p,
                unstyledHover: m,
                variant: h,
                ...v
            }, _) => r.createElement(i.Z, {
                fakeActive: a,
                fakeHover: s,
                leadingVisual: l,
                onTouchStart: c,
                render: ({
                    disabled: e,
                    ...a
                }) => r.createElement(o.ZP, { ...a,
                    ...v,
                    "aria-disabled": e,
                    className: n()(a.className, t),
                    ref: _
                }),
                size: d,
                state: u,
                trailingVisual: g,
                unstyledDisabled: p,
                unstyledHover: m,
                variant: h
            }, e)))
        },
        22498: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => s
            });
            const s = (0, a(1398).Z)((() => Promise.all([a.e(8751), a.e(5314), a.e(8106), a.e(6243), a.e(5101), a.e(7937), a.e(7216)]).then(a.bind(a, 13709)).then((e => ({
                default: e.LottieAnimation
            })))))
        },
        56252: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => _
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(93611),
                o = a(95931),
                l = a(47725);
            const c = a.p + "images/28d1f7a89ba7b57d86c6c1b2e40d8f4e.svg",
                d = a.p + "images/17db14133432ce4e82a799e760bd3e0e.svg",
                u = a.p + "images/4a9f9204e7e5c1d3ed3b79b7b7af8568.svg",
                g = {
                    _wrap: "sknt2",
                    "size-default": "_1yZgj",
                    "size-compact": "_1FLLT",
                    "size-icon": "EULtK",
                    "size-medium": "_3nMbq",
                    icon: "_1F1hW",
                    text: "_3smle",
                    "wrap-macaw": "L5pyk sknt2 _2ibm0",
                    "wrap-snow": "_14Z2G sknt2 _1mMPW",
                    "wrap-snow-always-light": "_133DB sknt2 _3-Y9x",
                    "wrap-snow-solid": "_1FhLg sknt2 _1fsx9",
                    "wrap-snow-solid-always-light": "wFEyN sknt2 _3MeDN"
                };
            var p = a(68903),
                m = a(8654),
                h = a(79465);
            const v = ({
                    children: e,
                    className: t,
                    href: a,
                    image: s,
                    onClick: c,
                    size: d = "default",
                    style: u = "snow"
                }) => r.createElement(l.ZP, {
                    className: n()((0, o.yO)({
                        variant: "macaw" === u || "snow-solid" === u || "snow-solid-always-light" === u ? "solid" : "stroke"
                    }), g[`wrap-${u}`], g[`size-${d}`], t),
                    href: a,
                    onClick: c
                }, r.createElement(i.Z, {
                    className: g.icon,
                    guaranteedSafeSrc: s
                }), r.createElement("span", {
                    className: g.text
                }, e)),
                _ = ({
                    type: e,
                    via: t,
                    ...a
                }) => {
                    switch (r.useEffect((() => {
                        t && (0, h.track)("web_to_app_store_load", {
                            via: t
                        })
                    }), []), e) {
                        case "apple":
                            return r.createElement(v, {
                                image: d,
                                ...a
                            }, (0, m._i)(7893));
                        case "china":
                            return r.createElement(v, {
                                image: c,
                                ...a
                            }, r.createElement("span", null, r.createElement("span", null, "下载请前往"), "360 手机助手"));
                        case "google":
                            return r.createElement(v, {
                                image: u,
                                ...a
                            }, (0, m._i)(9328));
                        default:
                            return (0, p.RJ)(e), null
                    }
                }
        },
        99961: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => v
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(64502),
                o = a(2559),
                l = a(47725);
            const c = a.p + "images/7ab97bf88f7cb74897e7b8e2acd77371.svg";
            var d = a(17833);
            const u = {
                "image-container": "_2RQkf",
                "_course-card-base": "_1IKTB",
                "_course-card": "qcdrk _1IKTB",
                "course-card-snow": "Pb9x4 qcdrk _1IKTB",
                "course-card-snow-always-light": "_1dr5q qcdrk _1IKTB",
                "course-card-transparent-always-light": "_2gY7r qcdrk _1IKTB",
                "course-card-header": "_2W-iU",
                "badge-row": "_1me_G",
                _badge: "_1o79T",
                "learning-badge-container-snow": "_3Lqga _1o79T",
                "learning-badge-container-snow-always-light": "_1XTi6 _1o79T",
                "learning-badge-container-transparent-always-light": "_2aE1V _3Lqga _1o79T",
                "learning-badge": "IKNb-",
                "_language-name": "_29k2o",
                "language-name-snow": "_3xBT6 _29k2o",
                "language-name-snow-always-light": "D4mMa _29k2o",
                "language-name-transparent-always-light": "_2_BQv _29k2o",
                "_learn-count": "_1E3L-",
                "learn-count-snow": "_2xVei _1E3L-",
                "learn-count-snow-always-light": "cUC7E _1E3L-",
                "learn-count-transparent-always-light": "rg2zM _1E3L-"
            };
            var g = a(30033),
                p = a(67173),
                m = a(8654),
                h = a(93746);
            const v = ({
                className: e,
                course: t,
                headingTag: a = "div",
                href: s,
                learning: v = !1,
                onSelectCourse: _,
                style: f = "snow"
            }) => {
                const S = "dark" === (0, i.Fg)(),
                    {
                        fromLanguageId: y,
                        learningLanguageId: E,
                        numLearners: b,
                        numLearnersString: I
                    } = t,
                    w = (0, m._i)(9517, {
                        num_learners: b,
                        num_learners_string: I
                    });
                let k = null;
                v && (k = r.createElement("div", {
                    className: u[`learning-badge-container-${f}`]
                }, r.createElement("img", {
                    className: u["learning-badge"],
                    src: S && "snow" === f ? c : d
                })));
                const T = a || "div",
                    C = "en" === y && "en" === E,
                    R = () => r.createElement("div", {
                        className: u["image-container"]
                    }, r.createElement("div", {
                        className: u["badge-row"]
                    }, k), r.createElement("div", {
                        className: u["course-card-header"]
                    }, r.createElement(o.Z, {
                        lang: E,
                        size: 88
                    })), r.createElement(T, {
                        className: u[`language-name-${f}`]
                    }, C ? "Intermediate English" : (0, m._i)(154, {
                        language_name: (0, h.vY)(E)
                    })), r.createElement("div", {
                        className: u[`learn-count-${f}`]
                    }, w)),
                    L = {
                        className: n()(u[`course-card-${f}`], e),
                        onClick: _,
                        ...(0, g._q)(p.V.LanguageCard, `language-${E}`)
                    };
                return s ? r.createElement(l.ZP, { ...L,
                    href: s
                }, R()) : r.createElement("button", { ...L
                }, R())
            }
        },
        75025: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            var s = a(27378),
                n = a(92883);
            const r = ({
                content: e
            }) => s.createElement(n.ql, null, s.createElement("meta", {
                content: e,
                id: "meta-description",
                name: "description"
            }), s.createElement("meta", {
                content: e,
                name: "twitter:description"
            }), s.createElement("meta", {
                content: e,
                name: "og:description"
            }))
        },
        82023: (e, t, a) => {
            "use strict";
            a.r(t), a.d(t, {
                APP_HOME_DEEP_LINK: () => b,
                default: () => I,
                isOnMobileEmailVerificationPage: () => E
            });
            var s = a(27378),
                n = a(80715),
                r = a(93030),
                i = a(39368),
                o = a(54575),
                l = a(25357),
                c = a(86518),
                d = a(98149);
            const u = "_3fxmT";
            var g, p = a(97544),
                m = a(68903),
                h = a(53229),
                v = a(8654),
                _ = a(88868),
                f = a(74597),
                S = a(16086);
            ! function(e) {
                e[e.VERIFYING = 0] = "VERIFYING", e[e.SUCCEEDED = 1] = "SUCCEEDED", e[e.FAILED = 2] = "FAILED"
            }(g || (g = {}));
            class y extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        pageState: g.VERIFYING
                    }, this.renderVerifyingState = () => s.createElement("div", {
                        className: u
                    }, s.createElement(r.Z, {
                        type: "screen-white"
                    })), this.renderSucceededState = e => s.createElement(s.Fragment, null, s.createElement("div", {
                        className: u
                    }, e ? s.createElement("img", {
                        alt: "",
                        className: "_217kA",
                        src: d
                    }) : null, s.createElement("div", {
                        className: "_3vFSZ"
                    }, (0, v._i)(22104)), s.createElement("div", null, (0, v._i)(23690))), e ? s.createElement("div", {
                        className: "CvAKU"
                    }, s.createElement(i.Z, {
                        className: "MpW7s",
                        href: b,
                        trackingScreen: "verification_page",
                        trackingTarget: "mobile_app_open_or_install"
                    }, (0, v._i)(32344))) : null), this.renderFailedState = () => s.createElement("div", {
                        className: u
                    }, s.createElement("div", {
                        className: "FsVi6"
                    }, (0, v._i)(21553)), s.createElement("div", null, (0, v._i)(11554)))
                }
                async componentDidMount() {
                    const {
                        dispatch: e,
                        history: t,
                        match: {
                            params: a
                        },
                        location: s
                    } = this.props;
                    let n, r, i = !1;
                    try {
                        n = (0, S.Jb)()
                    } catch {
                        n = void 0
                    }
                    if (r = parseInt((0, h.vl)(s.search).userId || "", 10), !r && n) r = n;
                    else if (!r) return void this.setState({
                        pageState: g.FAILED
                    });
                    n === r && (i = !0);
                    let o = !1;
                    try {
                        (await p.Vi.emailVerificationUpdate(r, a.token)).success ? (i || this.setState({
                            pageState: g.SUCCEEDED
                        }), o = !0) : this.setState({
                            pageState: g.FAILED
                        })
                    } catch {
                        this.setState({
                            pageState: g.FAILED
                        })
                    }
                    if (i) {
                        const a = e((0, c.eY)());
                        o && (await a, t.push(_.B6))
                    }
                }
                render() {
                    const {
                        pageState: e
                    } = this.state, t = E(this.props.match);
                    return s.createElement(l.Z, {
                        includeFooterLinks: !t
                    }, s.createElement(o.Z, {
                        centerOnMobile: !0
                    }, (() => {
                        switch (e) {
                            case g.SUCCEEDED:
                                return this.renderSucceededState(t);
                            case g.FAILED:
                                return this.renderFailedState();
                            case g.VERIFYING:
                                return this.renderVerifyingState();
                            default:
                                return (0, m.RJ)(e), null
                        }
                    })()))
                }
            }
            const E = e => "/verify/:token" === e.path && f.Z.hasMobileApp && !(0, S.Pc)(),
                b = f.Z.android ? "https://app.adjust.com/z5vyqb?deep_link=duolingo%3A%2F%2Fhome" : "https://af4a.adj.st/home?adj_t=r4yebem&adj_redirect_ios=https%3A%2F%2Fapps.apple.com%2Fus%2Fapp%2Fduolingo-language-lessons%2Fid570060128&adj_redirect_android=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.duolingo",
                I = (0, n.$j)()(y)
        },
        54575: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => n
            });
            var s = a(27378);
            const n = ({
                centerOnMobile: e,
                children: t
            }) => s.createElement("div", {
                className: e ? "_2jzCr O9xGu" : "O9xGu"
            }, t)
        },
        23831: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => c
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(31542),
                o = a(97390);
            var l = a(30033);
            const c = r.forwardRef((({
                [l.m5]: e,
                className: t,
                disablePointerEvents: a,
                portalToOverlays: s,
                secondaryOverlayType: c,
                style: d,
                ...u
            }, g) => {
                const p = r.createElement(o.Z, { ...(0, l._q)(e),
                    className: n()("modal" === c ? "_2zxQ8" : "drawer" === c ? "SGgzF" : "_1Fnem", t),
                    ref: g,
                    style: a ? { ...d,
                        pointerEvents: "none"
                    } : d,
                    ...u
                });
                return s ? (0, i.createPortal)(p, document.getElementById("overlays")) : p
            }))
        },
        27147: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => o
            });
            var s = a(27378);
            var n = a(8649),
                r = a(42464),
                i = a(79465);
            const o = ({
                disabled: e = !1,
                onClick: t,
                style: a
            }) => {
                const o = s.useRef(null),
                    [l, c] = s.useState(!1);
                return s.useEffect((() => {
                    (0, n.dH)()
                }), []), (0, r.Z)((() => {
                    window.google && (0, n.EV)() && c(!0)
                }), l || e ? void 0 : 10), s.useLayoutEffect((() => {
                    var a;
                    l && !e && window.google.accounts.id.renderButton(o.current, {
                        click_listener: t,
                        width: null === (a = o.current) || void 0 === a ? void 0 : a.offsetWidth
                    })
                }), [l, e, t]), e ? null : s.createElement("div", {
                    className: "_1tOsv",
                    onClick: () => l ? void 0 : (0, i.track)("sign_in_tap", {
                        target: "google_not_loaded"
                    }),
                    ref: o,
                    style: a
                })
            }
        },
        17791: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => x
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(3620),
                o = a(95931),
                l = a(47725),
                c = a(82023),
                d = a(36666);
            var u = a(30033),
                g = a(67173),
                p = a(8654),
                m = a(35160),
                h = a(79465);
            class v extends r.Component {
                constructor() {
                    super(...arguments), this.handleLogin = () => {
                        const {
                            dispatch: e,
                            redirectPath: t,
                            trackingScreen: a,
                            via: s
                        } = this.props;
                        (0, h.track)("click", {
                            screen: a,
                            target: "login"
                        }), e({
                            options: {
                                allowLanguagelessUser: !0,
                                isSignIn: !0,
                                name: m.t.SignInUp,
                                redirectPath: t,
                                removeFooter: !0,
                                via: s
                            },
                            type: "TOGGLE_MODAL"
                        })
                    }
                }
                render() {
                    const {
                        buttonClassName: e,
                        className: t,
                        text: a
                    } = this.props;
                    return r.createElement("div", {
                        className: n()("WzUXP", t)
                    }, r.createElement(d.Z, {
                        className: n()("_19aeB _1YXQx", e),
                        id: "sign-in-btn",
                        ...(0, u._q)(g.V.SignInButton),
                        onClick: this.handleLogin,
                        variant: "solid"
                    }, (0, p._i)(a || 9109)))
                }
            }
            var _ = a(41460),
                f = a(7334),
                S = a(31809);
            const y = () => r.createElement(S.Z, {
                modalName: m.t.PickUiLanguage
            }, (() => r.createElement(f.Z, {
                singleColumn: !0
            })));
            var E = a(74661);
            const b = "_2U8sn",
                I = "kUjpF _1HpcC";
            var w = a(4368),
                k = a(53229),
                T = a(93746),
                C = a(64865),
                R = a(18804),
                L = a(74597);
            const A = ({
                trackingScreen: e
            }) => {
                const t = (0, R.tX)(),
                    {
                        via: a
                    } = (0, k.vl)(),
                    [s, n] = r.useState(!1),
                    i = (0, C.VF)({
                        via: "share_profile" === a ? "share_profile" : "mobile_menu"
                    });
                r.useEffect((() => {
                    i && (0, h.track)("web_to_app_store_load", {
                        via: "mobile_menu"
                    })
                }), []);
                const o = r.createElement(E.Z, {
                    className: "i3KSH",
                    onToggle: () => {
                        switch (n((e => !e)), e) {
                            case "splash":
                                (0, h.track)("splash_tap", {
                                    target: "hamburger"
                                });
                                break;
                            case "course_picker":
                                (0, h.track)("course_picker_tap", {
                                    target: "hamburger",
                                    via: "onboarding"
                                })
                        }
                    }
                });
                return r.createElement("div", {
                    className: "d-oj5"
                }, o, s ? r.createElement(_.Z, {
                    direction: "down",
                    offset: -40,
                    onClick: () => n(!1),
                    onRequestClose: () => n(!1),
                    zIndex: parseInt(w.Z["z-index-popover"], 10)
                }, r.createElement("ul", null, r.createElement("li", {
                    className: b
                }, r.createElement(l.ZP, {
                    className: I,
                    href: "/log-in",
                    onClick: () => {
                        "splash" === e && (0, h.track)("splash_tap", {
                            target: "hamburger_login"
                        })
                    }
                }, (0, p._i)(1032))), r.createElement("li", {
                    className: b
                }, r.createElement(l.ZP, {
                    className: I,
                    href: "/register",
                    onClick: () => {
                        (0, h.track)("click", {
                            which: "topbar get started"
                        }), "splash" === e && (0, h.track)("splash_tap", {
                            target: "hamburger_get_started"
                        })
                    }
                }, (0, p._i)(18550))), i ? r.createElement("li", {
                    className: b
                }, r.createElement(l.ZP, {
                    className: I,
                    href: i,
                    onClick: () => {
                        (0, h.track)("web_to_app_store_tap", {
                            target: L.Z.ios ? "apple" : "google_or_China",
                            via: "mobile_menu"
                        })
                    }
                }, (0, p._i)(17779))) : null, r.createElement("li", {
                    className: b
                }, r.createElement("button", {
                    className: "KIBEO _1HpcC",
                    onClick: () => {
                        "splash" === e && (0, h.track)("splash_tap", {
                            target: "hamburger_switch_language"
                        }), t({
                            options: {
                                name: m.t.PickUiLanguage
                            },
                            type: "TOGGLE_MODAL"
                        })
                    }
                }, (0, p._i)(18889), " ", (0, p._i)(154, {
                    language_name: (0, T.vY)(T.h9)
                }))))) : null, r.createElement(y, null))
            };
            var P = a(40635),
                D = a(87122),
                N = a(43628),
                O = a(50548);
            const x = ({
                children: e,
                dispatch: t,
                isSplashPage: a,
                showButtons: s,
                trackingScreen: d,
                via: m
            }) => {
                const _ = (0, O.TH)(),
                    f = (0, i.$B)(),
                    S = (0, c.isOnMobileEmailVerificationPage)(f);
                return r.createElement("header", {
                    className: n()(N.Z["logged-out-topbar-wrap"], {
                        [N.Z["splash-topbar-wrap"]]: a
                    }),
                    ...(0, u._q)(g.V.LoggedOutTopbar)
                }, r.createElement("div", {
                    className: N.Z["logged-out-topbar"]
                }, r.createElement(l.ZP, {
                    className: N.Z["logged-out-logo-container"],
                    href: S ? c.APP_HOME_DEEP_LINK : "/",
                    onClick: () => (0, h.track)("topbar_logo_tapped", {
                        via: m
                    })
                }, r.createElement("img", {
                    alt: (0, p.H8)(23227),
                    className: N.Z["logged-out-logo"],
                    src: D
                })), S ? null : r.createElement("div", {
                    className: N.Z["right-header"]
                }, r.createElement(P.Z, {
                    className: n()(N.Z["ui-language-wrap"], N.Z["hidden-on-mobile"]),
                    style: a ? "snow-always-light" : "snow",
                    trackingScreen: d
                }), e, r.createElement(v, {
                    buttonClassName: N.Z["login-button"],
                    className: void 0 === s || s ? N.Z["hidden-on-mobile"] : N.Z["hidden-everywhere"],
                    dispatch: t,
                    redirectPath: "/join-beta" === _.pathname || "/stories" === _.pathname ? _.pathname : void 0,
                    trackingScreen: d,
                    via: m
                }), a ? null : r.createElement(l.ZP, {
                    className: n()((0, o.yO)({
                        color: "owl",
                        variant: "solid"
                    }), N.Z["get-started"]),
                    href: "/register",
                    onClick: () => (0, h.track)("click", {
                        which: "topbar get started"
                    })
                }, (0, p._i)(18550)), a ? null : r.createElement(A, {
                    trackingScreen: d
                }))))
            }
        },
        16101: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => o
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(47449);
            const o = ({
                children: e,
                className: t,
                includeFooterLinks: a = !0
            }) => r.createElement(r.Fragment, null, r.createElement("div", {
                className: n()(t, "_2zMTM")
            }, e), a ? r.createElement(i.Z, null) : null)
        },
        25357: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            var s = a(27378),
                n = a(16101);
            const r = ({
                children: e,
                includeFooterLinks: t
            }) => s.createElement("div", {
                className: "_3h2a7"
            }, s.createElement(n.Z, {
                className: "_25El3",
                includeFooterLinks: t
            }, e))
        },
        36011: (e, t, a) => {
            "use strict";
            a.d(t, {
                Mk: () => n,
                ZP: () => i
            });
            var s = a(27378);
            const n = s.createContext(void 0);
            class r {
                constructor() {
                    this.refCallbacks = {
                        gemsInHomepage: [],
                        heartsInSession: []
                    }, this.setHeartsStatInLessonRef = e => {
                        this.heartsStatInLessonRef = e, this.triggerCallbacks("heartsInSession")
                    }, this.getHeartsStatInLessonRef = () => this.heartsStatInLessonRef, this.setGemsHomepageRef = e => {
                        this.gemsHomepageRef = e, this.triggerCallbacks("gemsInHomepage")
                    }, this.getGemsHomepageRef = () => this.gemsHomepageRef
                }
                addCallback(e, t) {
                    this.refCallbacks[e].push(t)
                }
                removeCallback(e, t) {
                    this.refCallbacks[e] = this.refCallbacks[e].filter((e => e !== t))
                }
                triggerCallbacks(e) {
                    this.refCallbacks[e].forEach((e => e()))
                }
            }
            const i = ({
                children: e
            }) => {
                const [t] = s.useState((() => new r));
                return s.createElement(n.Provider, {
                    value: t
                }, e)
            }
        },
        7334: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => p
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(80254),
                o = a(2559),
                l = a(47725);
            const c = {
                "single-column": "ZowLe",
                "double-column": "_20NXf",
                "ui-language-item": "_26cAT",
                "always-light": "_1l-Wg",
                "ui-language-link": "_3OsZs",
                "ui-language-flag": "_3UD0R"
            };
            var d = a(93746),
                u = a(79465);
            const g = i.XP(d.Jl),
                p = ({
                    className: e,
                    singleColumn: t,
                    style: a,
                    trackingScreen: s,
                    via: i
                }) => r.createElement("ul", {
                    className: n()(e, c[(t ? "single" : "double") + "-column"], {
                        [c["always-light"]]: "always-light" === a
                    })
                }, g.map((e => {
                    const {
                        pathname: t,
                        search: a,
                        hash: n
                    } = window.location, g = `//${"zh"===e?"zh-CN":e}.duolingo.com${t}${a}${n}`;
                    return r.createElement("li", {
                        className: c["ui-language-item"],
                        key: e
                    }, r.createElement(l.ZP, {
                        className: c["ui-language-link"],
                        href: g,
                        onClick: () => {
                            (async e => {
                                "splash" !== s && "course_picker" !== s && "courses_page" !== s && "course_splash" !== s || await (0, u.track)("language_selector_tap", {
                                    fromLanguage: d.h9,
                                    toLanguage: e,
                                    via: i
                                })
                            })(e), (async () => {
                                "splash" === s && await (0, u.track)("splash_tap", {
                                    target: "switch_language"
                                })
                            })()
                        }
                    }, r.createElement(o.Z, {
                        className: c["ui-language-flag"],
                        lang: e,
                        size: 24
                    }), (0, d.lx)(e)))
                })))
        },
        40635: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => E
            });
            var s = a(27378),
                n = a(31542),
                r = a(64502),
                i = a(36666),
                o = a(7334),
                l = a(29531),
                c = a(82187),
                d = a(52761);
            const u = a.p + "images/splash/ca207386f803360434a992c33872c226.svg",
                g = a.p + "images/splash/c6eae48dd48246c89e415b89f9e55282.svg",
                p = a.p + "images/splash/255ee21b76e98df868332c509534e531.svg",
                m = a.p + "images/splash/936d5abdc28aa4f6f7219f6784691930.svg",
                h = {
                    _button: "_3IYFo _2Rt1l",
                    "button-hare": "_3QcXd _3IYFo _2Rt1l",
                    "button-hare-always-light": "_2cPiq _3IYFo _2Rt1l",
                    "button-snow": "_3Sc-w _3IYFo _2Rt1l",
                    "button-snow-always-light": "__UZi _3IYFo _2Rt1l",
                    caret: "_3fvmi",
                    inner: "_3_cnU",
                    _popover: "_22xje",
                    "popover-hare": "_3WIIs _22xje",
                    "popover-snow": "_33Vhe _22xje",
                    "popover-hare-always-light": "_25fsq",
                    "popover-snow-always-light": "_2XkMa"
                };
            var v = a(4368),
                _ = a(68903),
                f = a(8654),
                S = a(93746);
            const y = parseFloat(v.Z["margin-popover"]) + parseFloat(v.Z["margin-popover-text"]),
                E = ({
                    className: e,
                    trackingScreen: t,
                    style: a = "snow"
                }) => {
                    const [E, b] = s.useState(!1), I = (0, l.f)({
                        modifiers: [{
                            name: "offset",
                            options: {
                                offset: [0, y]
                            }
                        }],
                        placement: "bottom-end"
                    }), w = "dark" === (0, r.Fg)(), k = "splash" === t ? "splash" : "course_picker" === t ? "splash_course_picker" : "courses_page" === t ? "courses_logged_out_top_bar" : "course_splash" === t ? "course_splash" : void 0;
                    return s.createElement(c.Z, {
                        className: e,
                        customOffset: y,
                        isOpen: E,
                        onClose: () => b(!1),
                        onOpen: () => b(!0),
                        onToggle: () => b(!E),
                        popoverState: I.props.state,
                        ref: I.setElementRef
                    }, s.createElement(i.Z, {
                        className: h[`button-${a}`]
                    }, s.createElement("span", null, (0, f._i)(18889), " ", (0, f._i)(154, {
                        language_name: (0, S.vY)(S.h9)
                    })), s.createElement("img", {
                        alt: "",
                        className: h.caret,
                        src: (() => {
                            switch (a) {
                                case "hare":
                                    return w ? u : g;
                                case "hare-always-light":
                                    return g;
                                case "snow":
                                    return w ? p : m;
                                case "snow-always-light":
                                    return m;
                                default:
                                    return void(0, _.RJ)(a)
                            }
                        })()
                    })), E ? (0, n.createPortal)(s.createElement(d.Z, {
                        className: h[`popover-${a}`],
                        innerClassName: h.inner,
                        onRequestClose: () => b(!1),
                        popperProps: I.props,
                        ref: I.setPopoverRef,
                        stemContainerRef: I.setArrowRef,
                        zIndex: parseInt(v.Z["z-index-popover"], 10)
                    }, s.createElement(o.Z, {
                        singleColumn: !1,
                        style: "hare-always-light" === a || "snow-always-light" === a ? "always-light" : void 0,
                        trackingScreen: t,
                        via: k
                    })), document.getElementById("overlays")) : null)
                }
        },
        44451: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => l
            });
            var s = a(27378),
                n = a(42659);
            const r = class {
                constructor(e, {
                    resetEvery: t,
                    slowFrameThreshold: a
                }) {
                    this.isObserving = !1, this.slowFrames = 0, this.slowFramesDuration = 0, this.totalDuration = 0, this.totalFrames = 0, this.disconnect = () => {
                        void 0 !== this.requestAnimationFrameId && (cancelAnimationFrame(this.requestAnimationFrameId), this.requestAnimationFrameId = void 0), this.isObserving = !1
                    }, this.flush = () => {
                        this.report(), this.reset()
                    }, this.observe = () => {
                        this.isObserving = !0, this.lastFrame = void 0, this.requestFrame()
                    }, this.frame = e => {
                        var t;
                        this.requestAnimationFrameId = void 0;
                        const a = this.lastFrame ? Math.min(e - this.lastFrame, 1e4) : void 0;
                        this.lastFrame = e, void 0 !== a && (this.slowestFrame = Math.max(null !== (t = this.slowestFrame) && void 0 !== t ? t : 0, a), this.totalDuration += a, this.totalFrames++, a >= this.slowFrameThreshold && (this.slowFrames++, this.slowFramesDuration += a), void 0 !== this.resetEvery && this.totalDuration >= this.resetEvery && this.flush()), this.requestFrame()
                    }, this.report = () => {
                        void 0 !== this.slowestFrame && this.callback({
                            slowFrames: this.slowFrames,
                            slowFramesDuration: this.slowFramesDuration,
                            slowestFrame: this.slowestFrame,
                            totalDuration: this.totalDuration,
                            totalFrames: this.totalFrames
                        })
                    }, this.requestFrame = () => {
                        this.isObserving && void 0 === this.requestAnimationFrameId && (this.requestAnimationFrameId = requestAnimationFrame(this.frame))
                    }, this.reset = () => {
                        this.lastFrame = void 0, this.slowFrames = 0, this.slowFramesDuration = 0, this.slowestFrame = void 0, this.totalDuration = 0, this.totalFrames = 0
                    }, this.callback = e, this.resetEvery = t, this.slowFrameThreshold = a
                }
            };
            var i = a(18804),
                o = a(79465);
            const l = e => {
                var t, a, l, c;
                const d = (0, i.Fx)(n.Mb),
                    u = null !== (a = null === (t = d.featureFlags) || void 0 === t ? void 0 : t.web_frame_metrics_sampling_rate) && void 0 !== a ? a : 0,
                    g = null !== (c = null === (l = d.featureFlags) || void 0 === l ? void 0 : l.web_frame_metrics_slow_frame_threshold) && void 0 !== c ? c : Math.ceil(1e3 / 60);
                s.useEffect((() => {
                    if (Math.random() < u) {
                        const t = new r((t => {
                                e ? (0, o.track)("app_performance_frames", {
                                    sampling_rate: u,
                                    slow_frame_count: t.slowFrames,
                                    slow_frame_duration_total: Math.round(t.slowFramesDuration),
                                    slow_frame_max_duration: t.slowestFrame >= g ? Math.round(t.slowestFrame) : void 0,
                                    slow_frame_session_duration: Math.round(t.totalDuration),
                                    slow_frame_session_name: e,
                                    slow_frame_threshold: g,
                                    total_frame_count: t.totalFrames
                                }) : (0, o.track)("app_performance_frames_aggregated", {
                                    sampling_rate: u,
                                    slow_frame_count_agg: t.slowFrames,
                                    slow_frame_duration_total_agg: Math.round(t.slowFramesDuration),
                                    slow_frame_max_duration_agg: t.slowestFrame >= g ? Math.round(t.slowestFrame) : void 0,
                                    slow_frame_session_duration_agg: Math.round(t.totalDuration),
                                    slow_frame_threshold: g,
                                    total_frame_count_agg: t.totalFrames
                                })
                            }), {
                                resetEvery: 36e5,
                                slowFrameThreshold: g
                            }),
                            a = () => {
                                "hidden" === document.visibilityState ? (t.disconnect(), t.flush()) : t.observe()
                            };
                        return document.addEventListener("visibilitychange", a), a(), () => {
                            document.removeEventListener("visibilitychange", a), t.disconnect(), t.flush()
                        }
                    }
                }), [])
            }
        },
        31801: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            var s = a(27378);
            var n = a(10391);
            const r = e => {
                const [t, a] = s.useState(), r = ((e, t) => {
                    const a = s.useRef(),
                        n = s.useRef(null),
                        r = s.useRef();
                    return s.useLayoutEffect((() => {
                        a.current = e
                    })), s.useLayoutEffect((() => {
                        const e = new IntersectionObserver((e => {
                            var t;
                            return null === (t = a.current) || void 0 === t ? void 0 : t.call(a, e[0])
                        }), t);
                        return n.current && e.observe(n.current), r.current = e, () => e.disconnect()
                    }), [null == t ? void 0 : t.root, null == t ? void 0 : t.rootMargin]), s.useCallback((e => {
                        var t, a;
                        n.current && (null === (t = r.current) || void 0 === t || t.unobserve(n.current)), e && (null === (a = r.current) || void 0 === a || a.observe(e)), n.current = e
                    }), [])
                })((e => a(e.isIntersecting)), e), i = s.useRef(null);
                return [t, s.useCallback((t => {
                    null == t ? a(void 0) : null === i.current && (t => {
                        var s;
                        const r = (0, n.jL)(null == e ? void 0 : e.rootMargin),
                            i = (0, n.iY)((0, n.tW)(null !== (s = null == e ? void 0 : e.root) && void 0 !== s ? s : null), r),
                            o = t.getBoundingClientRect(),
                            l = (0, n.mH)(i, o);
                        a(void 0 !== l)
                    })(t), r(t), i.current = t
                }), [])]
            }
        },
        69755: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => n
            });
            var s = a(73790);
            const n = () => (0, s.Z)() > 0
        },
        58034: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i,
                y: () => r
            });
            var s = a(27378),
                n = a(18804);
            const r = async () => {
                    try {
                        return (await navigator.permissions.query({
                            name: "microphone"
                        })).state
                    } catch (e) {
                        return "prompt"
                    }
                },
                i = () => {
                    const e = (0, n.tX)();
                    s.useEffect((() => {
                        let t = !1;
                        return (async () => {
                            const a = await r();
                            t || e({
                                type: "MICROPHONE_PERMISSION",
                                value: a
                            })
                        })(), () => {
                            t = !0
                        }
                    }), [])
                }
        },
        15746: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(42659),
                n = a(70220),
                r = a(18804);
            const i = () => (0, r.Fx)((e => (0, s.Lm)(e) && !e.user.animationEnabled)) || n.H
        },
        73790: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            var s = a(27378),
                n = a(3731);
            const r = () => {
                const [e, t] = s.useState((() => n.O.y));
                return s.useLayoutEffect((() => {
                    const e = () => t(n.O.y);
                    return n.O.addEventListener("scroll", e), () => {
                        n.O.removeEventListener("scroll", e)
                    }
                }), []), e
            }
        },
        17060: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(27378),
                n = a(3731);
            let r = !1;
            const i = ({
                disabled: e,
                id: t,
                offset: a = 0
            } = {}) => {
                s.useEffect((() => {
                    if (!e && !r && window.location.hash.length > 1) {
                        const e = window.location.hash.slice(1);
                        if (t && e !== t) return;
                        const s = document.getElementById(e);
                        s && (n.O.scrollTo(0, n.O.y + s.getBoundingClientRect().top + a), r = !0)
                    }
                }), [])
            }
        },
        75671: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            var s = a(27378);
            const n = (e, t) => t ? e * (1e3 / t) : 0,
                r = (e, t = {}) => {
                    t = {
                        damping: 26,
                        mass: 1,
                        stiffness: 170,
                        ...t
                    };
                    const a = s.useRef(),
                        r = s.useRef(),
                        i = s.useRef(),
                        o = s.useRef(),
                        l = s.useRef(),
                        c = s => {
                            var d, u, g;
                            const p = s - (null !== (d = r.current) && void 0 !== d ? d : s);
                            r.current = s;
                            const m = (({
                                damping: e = 10,
                                from: t,
                                mass: a = 1,
                                restDistance: s = .5,
                                restSpeed: r = 2,
                                stiffness: i = 100,
                                to: o,
                                velocity: l = 0
                            }) => {
                                l /= 1e3;
                                const c = o - t,
                                    d = Math.sqrt(i / a) / 1e3,
                                    u = ((e, t, a) => t / (2 * Math.sqrt(e * a)))(i, e, a),
                                    g = (() => {
                                        if (u < 1) {
                                            const e = d * Math.sqrt(1 - u * u);
                                            return t => o - Math.exp(-u * d * t) * ((u * d * c - l) / e * Math.sin(e * t) + c * Math.cos(e * t))
                                        }
                                        return e => o - Math.exp(-d * e) * (c + (d * c - l) * e)
                                    })();
                                return e => {
                                    const a = g(e),
                                        i = 0 === e ? l : ((e, t, a) => {
                                            const s = Math.max(t - 5, 0);
                                            return n(a - e(s), t - s)
                                        })(g, e, a),
                                        c = t < o && a >= o || t > o && a <= o || t === o,
                                        d = Math.abs(o - a) <= s,
                                        u = Math.abs(i) <= r;
                                    return {
                                        current: a,
                                        done: d && u,
                                        hasReachedTarget: c,
                                        target: o,
                                        velocity: i
                                    }
                                }
                            })({ ...t,
                                from: null !== (u = a.current) && void 0 !== u ? u : 0,
                                to: null !== (g = o.current) && void 0 !== g ? g : 1,
                                velocity: l.current
                            })(p);
                            a.current = m.current, l.current = m.velocity, m.hasReachedTarget && t.clamp && (m.done = !0), m.done ? i.current = void 0 : i.current = window.requestAnimationFrame(c), e(m)
                        },
                        d = s.useCallback((() => void 0 !== i.current), []),
                        u = s.useCallback(((e, s) => {
                            a.current = e, r.current = void 0, o.current = s, l.current = t.velocity, void 0 !== i.current && window.cancelAnimationFrame(i.current), i.current = window.requestAnimationFrame(c)
                        }), [t.velocity]),
                        g = s.useCallback((() => {
                            void 0 !== i.current && (window.cancelAnimationFrame(i.current), i.current = void 0)
                        }), []),
                        p = s.useCallback((e => o.current = e), []);
                    return {
                        isAnimating: d,
                        start: u,
                        stop: g,
                        target: o,
                        update: p
                    }
                }
        },
        44780: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ue: () => H,
                ZP: () => B,
                gs: () => M
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(2559),
                o = a(36666),
                l = a(10141),
                c = a(42659);
            const d = a.p + "images/leagues/5642e1e72813a88e8973b551a2004c7f.svg",
                u = a.p + "images/leagues/f12703218fc80de76a63e650726f742e.svg";
            var g = a(78466);
            const p = a.p + "images/leagues/9fadb349c2ece257386a0e576359c867.svg",
                m = a.p + "images/leagues/a8e5c18e80054228b2c61168846ff643.svg",
                h = a.p + "images/leagues/6b8a8db5ac7f847e7e87efe97c8b451a.svg",
                v = a.p + "images/leagues/535fc27de224cc7d311dbb5de4f33be6.svg",
                _ = a.p + "images/leagues/2ceb401cae52712705b66a77df83ce40.svg",
                f = a.p + "images/leagues/beb0df263d0f696bc7095d56b448ca78.svg",
                S = a.p + "images/leagues/573de2bc90b2499eeb2b3738cff90133.svg",
                y = a.p + "images/leagues/6df6337370e45c1b9a5029e78211d114.svg",
                E = a.p + "images/leagues/a35f1db4398fd29e66f1abc33a0d11a2.svg",
                b = a.p + "images/leagues/2439bac00452e99ba7bf6a7ed0b04196.svg",
                I = a.p + "images/leagues/22df4cb957e6cf2d7198b6e5449a342e.svg",
                w = {
                    "active-dot": "_2yc73",
                    "main-content": "_2LvZa",
                    base: "_2R_e4",
                    "base-blue": "_3kHdq _2R_e4",
                    "base-green": "_2dLgE _2R_e4",
                    "base-purple": "_2zS3T _2R_e4",
                    "base-large": "_3mRSn _2R_e4",
                    "base-green-large": "_3YIae _3mRSn _2R_e4",
                    "base-purple-large": "_5V3uJ _3mRSn _2R_e4",
                    img: "_m6h6",
                    "img-large": "QRO37",
                    placeholder: "_1ZPDZ",
                    "placeholder-mobile": "_2nB8S",
                    "img-green": "_23gzy",
                    "img-green-large": "_2XrTN",
                    "flag-img": "_1cxQk",
                    "flag-img-large": "_2hLBo",
                    "button-base": "_2FxcQ",
                    "button-gray": "_5Keb0 _2FxcQ",
                    "button-active-gray": "_25saE _2FxcQ",
                    "button-green": "_3cwVc _2FxcQ",
                    "button-active-green": "_333Yq _3cwVc _2FxcQ",
                    "button-purple": "_39lxK _2FxcQ",
                    "button-active-purple": "mHYBG _39lxK _2FxcQ",
                    "button-img": "_3-Vxu",
                    set: "_2LYFC",
                    "panel-avatar": "ZgBN6",
                    "drawer-avatar": "_3pPG3 ZgBN6",
                    "set-reaction-animation": "_2Ubs8",
                    "scale-up-down": "lIsSW",
                    transparent: "Y3mVB"
                };
            var k = a(81149),
                T = a(68903),
                C = a(28818),
                R = a(10300),
                L = a(93746),
                A = a(87471),
                P = a(18804);
            const D = L.Dz.map((e => `FLAG,${e}`)),
                N = e => e.slice(5),
                O = ["NONE", "ANGRY", "SUNGLASSES", "CAT", "TROPHY_DIAMOND", "DUMPSTER_FIRE", "EYES", "FLEX", "ONE_HUNDRED", "POOP", "POPCORN", "POPPER", "TROPHY", ...D],
                x = ["ANGRY", "TROPHY_DIAMOND", "SUNGLASSES"],
                F = {
                    ANGRY: u,
                    CAT: v,
                    DUMPSTER_FIRE: p,
                    EYES: m,
                    FLEX: h,
                    ONE_HUNDRED: d,
                    POOP: f,
                    POPCORN: S,
                    POPPER: _,
                    SUNGLASSES: b,
                    TROPHY: I,
                    TROPHY_DIAMOND: g
                },
                M = (0, T.p)(O),
                U = (0, T.p)(D),
                H = ({
                    className: e,
                    isEmphasizing: t = !1,
                    isSmall: a,
                    reaction: s,
                    returnPlaceholder: o = !1
                }) => {
                    const [l, c] = r.useState("NONE"), [d, u] = r.useState("NONE" === s ? l : s), [g, p] = r.useState(!1);
                    if (r.useEffect((() => {
                            "NONE" === s ? (p(!0), u(l)) : (p(!1), u(s), c(s))
                        }), [s]), "NONE" === s) {
                        if (o) return r.createElement("div", {
                            className: n()(e, a ? w["base-blue"] : w["base-large"])
                        }, r.createElement("img", {
                            className: a ? w["placeholder-mobile"] : w.placeholder,
                            src: a ? y : E
                        }));
                        if ("NONE" === l) return null
                    }
                    const m = U(d),
                        h = x.includes(d),
                        v = (() => {
                            if (!m) return h ? a ? w["img-green"] : w["img-green-large"] : a ? w.img : w["img-large"]
                        })(),
                        _ = m ? a ? w["flag-img"] : w["flag-img-large"] : void 0,
                        f = (() => {
                            if (h) {
                                const e = [s, l].includes("TROPHY_DIAMOND") ? "purple" : "green";
                                return a ? w[`base-${e}`] : w[`base-${e}-large`]
                            }
                            return a ? w.base : w["base-large"]
                        })(),
                        S = n()(e, f, t ? w["set-reaction-animation"] : void 0, g ? w.transparent : void 0);
                    return r.createElement("div", {
                        className: S
                    }, m ? r.createElement(i.Z, {
                        className: _,
                        lang: N(d),
                        size: a ? 22 : 38
                    }) : r.createElement("img", {
                        className: v,
                        src: F[d]
                    }))
                },
                G = (e, t) => {
                    if (!O.includes(e)) return w["button-gray"];
                    if (x.includes(e)) {
                        const a = "TROPHY_DIAMOND" === e ? "purple" : "green";
                        return e === t ? w[`button-active-${a}`] : w[`button-${a}`]
                    }
                    return e === t ? w["button-active-gray"] : w["button-gray"]
                },
                V = ({
                    activeReaction: e,
                    onReactionClick: t,
                    reactions: a
                }) => r.createElement("div", {
                    className: w.set,
                    style: {
                        gridTemplateColumns: `repeat(${a.length}, 1fr)`
                    }
                }, a.map(((a, s) => r.createElement(o.Z, {
                    className: G(a, e),
                    key: s,
                    onClick: () => t(a),
                    variant: "stroke"
                }, U(a) ? r.createElement(i.Z, {
                    lang: N(a),
                    size: 38
                }) : r.createElement("img", {
                    className: w["button-img"],
                    src: F[a]
                }))))),
                B = ({
                    displayedReaction: e,
                    isEmphasizing: t,
                    onReactionClick: a,
                    type: s
                }) => {
                    var n, i;
                    const o = (0, P.Fx)(c.Mb),
                        d = (0, P.Fx)(c.Oz),
                        u = (0, P.Fx)(c.np),
                        g = "FLAG,".concat(d.learningLanguage),
                        p = (0, C.tj)(R.gz),
                        m = (null !== (n = null == p ? void 0 : p.numWins) && void 0 !== n ? n : 0) > 0 && "experiment" === (0, k.j6)("tsl_web_tournament_port", void 0),
                        h = m ? ["TROPHY_DIAMOND", "SUNGLASSES", "POPPER", "FLEX", "EYES", "POPCORN"] : ["SUNGLASSES", "POPPER", "FLEX", "EYES", "POPCORN", g],
                        v = m ? ["ANGRY", "ONE_HUNDRED", "POOP", g, "DUMPSTER_FIRE", "CAT"] : ["ANGRY", "ONE_HUNDRED", "POOP", "TROPHY", "DUMPSTER_FIRE", "CAT"];
                    return r.createElement("div", {
                        className: w["main-content"]
                    }, r.createElement("div", {
                        className: "panel" === s ? w["panel-avatar"] : w["drawer-avatar"]
                    }, r.createElement(l.Z, {
                        displaySize: 80,
                        forceNoPicture: (0, A.d0)(u, o),
                        picture: u.picture,
                        size: "xxlarge",
                        user: {
                            id: u.id,
                            name: null !== (i = u.name) && void 0 !== i ? i : u.username
                        }
                    }), r.createElement(H, {
                        isEmphasizing: !1,
                        isSmall: !1,
                        reaction: "NONE",
                        returnPlaceholder: !0
                    }), r.createElement(H, {
                        isEmphasizing: t,
                        isSmall: !1,
                        reaction: e
                    }), r.createElement("span", {
                        className: w["active-dot"]
                    })), r.createElement(V, {
                        activeReaction: e,
                        onReactionClick: a,
                        reactions: h
                    }), r.createElement(V, {
                        activeReaction: e,
                        onReactionClick: a,
                        reactions: v
                    }))
                }
        },
        98071: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => l
            });
            var s = a(27378),
                n = a(59815),
                r = a(58576),
                i = a(79465);
            class o extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        hasError: !1
                    }
                }
                static getDerivedStateFromError() {
                    return {
                        hasError: !0
                    }
                }
                componentDidCatch(e, t) {
                    if (!(0, n.Wp)(e)) {
                        const a = (0, r.vU)(e, {
                            data: t
                        });
                        (0, i.track)("app_crash", {
                            crash_message: e.message,
                            crash_type: e.name,
                            sentry_event_id: a
                        })
                    }
                }
                render() {
                    return this.state.hasError ? null : s.createElement(s.Suspense, {
                        fallback: null
                    }, this.props.children)
                }
            }
            const l = o
        },
        31809: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => T
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(31542),
                o = a(2580),
                l = a(63169),
                c = a(91374),
                d = a(64502),
                u = a(42659),
                g = a(89090),
                p = a(45633);
            const m = {
                "style-super": "_3I9hN",
                "style-white": "FohH5",
                container: "_3Mzt6",
                "container-secondary-modal": "lagNb",
                _content: "_3fFQQ",
                content: "_1yFTM _3fFQQ",
                "content-fullscreen": "H-DGD _3fFQQ",
                close: "rXoiv",
                "close-fullscreen": "_1sSQy",
                "close-top-left": "_3CQt_ rXoiv",
                "close-top-left-with-header": "_2csbn _3CQt_ rXoiv"
            };
            var h = a(3731),
                v = a(9979),
                _ = a(50498),
                f = a(30033),
                S = a(67173),
                y = a(68903),
                E = a(26506),
                b = a(35160),
                I = a(18804);
            const w = ({
                    animateOnMount: e,
                    children: t,
                    className: a,
                    closeStyle: s,
                    isFullscreen: i,
                    isSecondaryModal: v,
                    onDismiss: _,
                    restoreScrollPosition: y,
                    visibility: b
                }) => {
                    const w = (0, I.Fx)(u.Sg),
                        k = (0, I.Fx)(u.ep) && !v,
                        T = r.useRef(null),
                        C = r.useRef(null);
                    (0, l.Z)({
                        disabled: "visible" !== b || w || k || i,
                        onClick: _,
                        ref: C
                    }), (0, h.H)("invisible" !== b, y), (0, c.Z)(T, {
                        animateOnMount: e,
                        isVisible: "visible" === b
                    });
                    const R = "dark" === (0, d.Fg)();
                    return r.useEffect((() => {
                        if (!w && "visible" === b) {
                            const e = e => {
                                "Escape" === e.key && _()
                            };
                            return E.U.disableListeners(), E._.disableListeners(), document.addEventListener("keydown", e), () => {
                                E.U.enableListeners(), E._.enableListeners(), document.removeEventListener("keydown", e)
                            }
                        }
                    }), [w, _, b]), r.createElement(o.ZP, {
                        autoFocus: !1,
                        whiteList: e => "com-1password-menu" !== e.localName
                    }, r.createElement("div", {
                        className: v ? m["container-secondary-modal"] : m.container,
                        ref: T
                    }, r.createElement("div", {
                        className: n()(m["content" + (i ? "-fullscreen" : "")], a),
                        ref: C
                    }, "hidden" === s ? null : r.createElement("div", { ...(0, f._q)(S.V.CloseButton),
                        className: i ? m["close-fullscreen"] : "top-left" === s ? m["close-top-left"] : "top-left-with-header" === s ? m["close-top-left-with-header"] : m.close,
                        onClick: _
                    }, r.createElement("img", {
                        src: R ? g : p
                    })), t)))
                },
                k = e => {
                    const {
                        animation: t,
                        isFullscreen: a,
                        isVisible: s
                    } = e, n = (0, I.Fx)((e => e.ui.modalShouldWaitForOverlay)), [i, o] = r.useState(s ? "visible" : "invisible");
                    return r.useEffect((() => {
                        let e = !1;
                        return s ? (async () => {
                            switch (i) {
                                case "before-fade-in":
                                    await (0, v.Gg)(), e || o("overlay");
                                    break;
                                case "fading-out":
                                    o("overlay");
                                    break;
                                case "invisible":
                                    o("before-fade-in");
                                    break;
                                case "overlay":
                                    "overlay-then-modal" === t && !a && n && await (0, _._v)(v.nN), e || o("visible");
                                    break;
                                case "visible":
                                    break;
                                default:
                                    (0, y.RJ)(i)
                            }
                        })() : (async () => {
                            switch (i) {
                                case "before-fade-in":
                                    o("invisible");
                                    break;
                                case "fading-out":
                                    await (0, _._v)(v.nN), e || o("invisible");
                                    break;
                                case "invisible":
                                    break;
                                case "overlay":
                                case "visible":
                                    o("fading-out");
                                    break;
                                default:
                                    (0, y.RJ)(i)
                            }
                        })(), () => {
                            e = !0
                        }
                    }), [a, s, i]), "invisible" === i ? null : r.createElement(w, { ...e,
                        visibility: i
                    })
                },
                T = ({
                    animateOnMount: e = !1,
                    animation: t = "overlay-then-modal",
                    children: a,
                    className: s,
                    closeStyle: o,
                    customStyle: l = b.W.White,
                    isFullscreen: c = !1,
                    isSecondaryModal: d = !1,
                    modalName: u,
                    onDismiss: g
                }) => {
                    var p;
                    const h = (0, I.tX)(),
                        v = (0, I.Fx)((e => e.ui.isModalReallyOpen)),
                        _ = (0, I.Fx)((e => e.ui.modal)),
                        f = (0, I.Fx)((e => e.ui.secondaryModal)),
                        S = (0, I.CC)(),
                        [y, E] = r.useState(),
                        w = (null == _ ? void 0 : _.name) === u || d && (null == f ? void 0 : f.name) === u,
                        T = d ? f : _;
                    w && T !== y && E(T), r.useLayoutEffect((() => (h({
                        name: u,
                        type: "MODAL_MOUNTED"
                    }), () => {
                        h({
                            name: u,
                            type: "MODAL_UNMOUNTED"
                        })
                    })), []), r.useEffect((() => {
                        if (w) return v || h({
                            type: "MODAL_OPENED"
                        }), () => {
                            var e;
                            void 0 === (null === (e = S.getState().ui.modal) || void 0 === e ? void 0 : e.name) && h({
                                type: "MODAL_CLOSED"
                            })
                        }
                    }), [w]);
                    const C = () => {
                        g && y ? g({
                            modalOptions: y
                        }) : h(d ? {
                            options: void 0,
                            type: "TOGGLE_SECONDARY_MODAL"
                        } : {
                            options: void 0,
                            type: "TOGGLE_MODAL"
                        })
                    };
                    return (0, i.createPortal)(r.createElement(k, {
                        animateOnMount: e,
                        animation: t,
                        className: n()(m[l], s),
                        closeStyle: o,
                        isFullscreen: c,
                        isSecondaryModal: d,
                        isVisible: w,
                        onDismiss: C,
                        restoreScrollPosition: null === (p = null == y ? void 0 : y.restoreScrollPosition) || void 0 === p || p
                    }, y ? a({
                        modalOptions: y,
                        onDismiss: C
                    }) : null), document.getElementById("overlays"))
                }
        },
        22772: (e, t, a) => {
            "use strict";
            a.r(t), a.d(t, {
                default: () => S,
                getRemainingSessions: () => _
            });
            var s = a(27378),
                n = a(86155),
                r = a(42659),
                i = a(54174),
                o = a(93540),
                l = a(68903),
                c = a(60752),
                d = a(58576),
                u = a(23275),
                g = a(89260),
                p = a(80820),
                m = a(18804),
                h = a(79465),
                v = a(64591);

            function* _(e, t) {
                for (t || (t = {
                        level: e[0].levels[0],
                        levelIndex: 0,
                        unitIndex: 0,
                        unitNumber: 1
                    }); t;) {
                    if ("unit_test" === t.level.state) return;
                    for (let e = t.level.finishedSessions; e < t.level.totalSessions; e++) yield(0, v.$f)(t, ["level"], {
                        finishedSessions: e,
                        state: "active"
                    });
                    t = (0, u.OE)(e, t)
                }
            }
            const f = async (e, t, a, s, n, r) => {
                    const i = {
                        pathLevelNumber: (e.levelIndex + 1).toString(),
                        pathUnitNumber: (e.unitIndex + 1).toString(),
                        type: "path-level"
                    };
                    return (0, g.u4)({
                        dispatch: t.dispatch.bind(t),
                        getState: t.getState.bind(t),
                        includeFreeform: a,
                        includeListening: s,
                        includeSmartTips: n,
                        includeSpeaking: r,
                        levelData: e,
                        params: i,
                        sessionWillStartRightAway: !1
                    })
                },
                S = () => {
                    const e = (0, m.Fx)(r.$4),
                        t = (0, m.Fx)(r.Xr),
                        a = (0, m.Fx)(i.d),
                        u = (0, m.CC)(),
                        {
                            includeListening: g,
                            includeSpeaking: v
                        } = (0, n.ZP)();
                    return s.useEffect((() => {
                        t && !a && (async () => {
                            try {
                                await (async (e, t, a, s, n) => {
                                    const r = e.getState(),
                                        i = (0, o.cb)(r),
                                        u = (0, o.HF)(r);
                                    if (!i || !u) return;
                                    const g = await (0, c.b)(),
                                        [m, v] = ((e, t) => {
                                            const a = [];
                                            let s = !1;
                                            for (const n of _(e, t))
                                                if ((0, p.tr)(n.level)) {
                                                    if (a.push(n), 8 === a.length) break
                                                } else if ("chest" === n.level.type) {
                                                if (s) return a.pop(), [a, !0];
                                                s = !0
                                            }
                                            return [a, !1]
                                        })(u, i),
                                        S = m.map((async n => {
                                            try {
                                                const r = await f(n, e, s && "story" === n.level.type, t, s && "story" !== n.level.type, a);
                                                switch (r.cacheType) {
                                                    case "error":
                                                        return "error";
                                                    case "existing":
                                                        return !1;
                                                    case "fresh":
                                                        return !0;
                                                    case void 0:
                                                        return (0, d.Kp)("Tried to prefetch a session that isn't eligible for caching", {
                                                            data: n
                                                        }), "error";
                                                    default:
                                                        return (0, l.RJ)(r.cacheType), !1
                                                }
                                            } catch (e) {
                                                return (0, d.Kp)(e), "error"
                                            }
                                        })),
                                        y = await Promise.all(S);
                                    if (await (0, p._x)(e), await (0, p.rb)(e), Math.random() < .1) {
                                        const e = y.filter((e => !0 === e)).length,
                                            t = y.filter((e => "error" === e)).length,
                                            a = (await g.getAllKeys("prefetchedSessions")).length;
                                        (0, h.track)("prefetch_sessions_end", {
                                            download_time_seconds: Math.round((window.performance.now() - n) / 1e3),
                                            num_sessions_downloaded: e,
                                            num_sessions_in_cache: a,
                                            num_sessions_remaining: t,
                                            prefetch_end_reason: t > 0 ? "error" : v ? "multiple_chests" : e > 0 ? "finished" : "nothing_to_download"
                                        })
                                    }
                                })(u, g, v, e, window.performance.now())
                            } catch (e) {
                                (0, d.Kp)(e)
                            }
                        })()
                    }), [g, v, e, t, a]), null
                }
        },
        77888: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(42659),
                n = a(21791),
                r = a(18804);
            const i = () => {
                const e = (0, r.Fx)(s.Oz);
                return (0, r.Fx)((t => void 0 === e ? 0 : (0, n.L)(t)))
            }
        },
        74661: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378);
            const i = r.forwardRef((({
                children: e,
                className: t,
                onToggle: a,
                tabIndex: s,
                ...i
            }, o) => r.createElement("div", {
                className: n()("HPdUG", t),
                onClick: a,
                onKeyDown: e => {
                    ["Enter", " "].includes(e.key) && (a(), e.preventDefault())
                },
                onMouseUp: e => {
                    e.stopPropagation()
                },
                ref: o,
                role: "button",
                tabIndex: null != s ? s : 0,
                ...i
            }, e)))
        },
        29531: (e, t, a) => {
            "use strict";
            a.d(t, {
                R: () => o,
                f: () => d
            });
            var s = a(27378),
                n = a(97276),
                r = a(4368),
                i = a(92209);
            const o = "bottom",
                l = i.B,
                c = e => [{
                    name: "arrow",
                    options: {
                        element: e,
                        padding: parseFloat(r.Z["margin-popover-stem"])
                    }
                }, {
                    name: "flip",
                    options: {
                        padding: l
                    }
                }, {
                    name: "offset",
                    options: {
                        offset: [0, parseFloat(r.Z["margin-popover"])]
                    }
                }, {
                    name: "preventOverflow",
                    options: {
                        padding: l
                    }
                }],
                d = ({
                    modifiers: e = [],
                    ...t
                } = {}) => {
                    var a, r;
                    const [i, l] = s.useState(null), [d, u] = s.useState(null), [g, p] = s.useState(null), m = (0, n.D)(d, g, {
                        modifiers: [...c(null != i ? i : void 0), ...e],
                        ...t
                    });
                    return {
                        currentPlacement: null !== (r = null === (a = m.state) || void 0 === a ? void 0 : a.placement) && void 0 !== r ? r : o,
                        props: m,
                        setArrowRef: l,
                        setElementRef: u,
                        setPopoverRef: p
                    }
                }
        },
        82187: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => d
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(41460),
                o = a(29531);
            const l = {
                    _after: "j0sMI",
                    wrap: "tFegI",
                    "wrap-open-down": "_2YMBW j0sMI tFegI",
                    "wrap-open-left": "RgvWC j0sMI tFegI",
                    "wrap-open-right": "_27RAb j0sMI tFegI",
                    "wrap-open-up": "_1156w j0sMI tFegI"
                },
                c = e => null !== e && "direction" in e,
                d = r.forwardRef((({
                    children: e,
                    className: t,
                    customOffset: a,
                    isOpen: s,
                    onClose: d,
                    onOpen: u,
                    onToggle: g,
                    popoverState: p,
                    tabIndex: m,
                    ...h
                }, v) => {
                    var _;
                    const f = c(p) ? p.direction : (0, i.h)(null !== (_ = null == p ? void 0 : p.placement) && void 0 !== _ ? _ : o.R),
                        S = () => c(p) ? p.ref.current : null == p ? void 0 : p.elements.popper;
                    return r.createElement("div", {
                        className: n()(l["wrap" + (s ? `-open-${f}` : "")], t),
                        onClick: e => {
                            var t;
                            (null === (t = S()) || void 0 === t ? void 0 : t.contains(e.target)) || g()
                        },
                        onKeyDown: e => {
                            ["Enter", " "].includes(e.key) && (g(), e.preventDefault())
                        },
                        onMouseEnter: u,
                        onMouseLeave: d,
                        onMouseUp: e => {
                            e.stopPropagation()
                        },
                        onTouchEnd: e => {
                            var t;
                            (null === (t = S()) || void 0 === t ? void 0 : t.contains(e.target)) || (e.preventDefault(), g())
                        },
                        ref: v,
                        style: void 0 !== a && a >= 0 ? {
                            "--offset": `${a}px`
                        } : void 0,
                        tabIndex: null != m ? m : 0,
                        ...h
                    }, e)
                }))
        },
        52761: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => l
            });
            var s = a(27378),
                n = a(41460),
                r = a(29531),
                i = a(8654);
            const o = e => "placement" in e,
                l = s.forwardRef((({
                    dir: e,
                    popperProps: t,
                    style: a,
                    ...l
                }, c) => {
                    var d, u;
                    let g = (0, n.h)(o(t) ? t.placement : null !== (u = null === (d = t.state) || void 0 === d ? void 0 : d.placement) && void 0 !== u ? u : r.R);
                    const p = "left" === g ? 90 : "right" === g ? -90 : "up" === g ? 180 : 0,
                        m = {
                            margin: 0,
                            ...o(t) ? t.arrowProps.style : t.styles.arrow
                        };
                    m.transform && (m.transform = `${m.transform} rotate(${p}deg)`);
                    const h = {
                        margin: 0,
                        ...o(t) ? t.style : t.styles.popper,
                        ...a
                    };
                    return i.lw && ("left" === g ? g = "right" : "right" === g && (g = "left")), s.createElement(n.Z, { ...l,
                        direction: g,
                        manualPositioning: !0,
                        ref: c,
                        stemContainerStyle: m,
                        style: h
                    })
                }))
        },
        33467: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    K: () => s
                }),
                function(e) {
                    e[e.Loading = 0] = "Loading", e[e.Login = 1] = "Login", e[e.Mistakes = 2] = "Mistakes", e[e.FamilyPlanUpsell = 3] = "FamilyPlanUpsell", e[e.FeaturesLongScroll = 4] = "FeaturesLongScroll", e[e.FeaturesChecklist = 5] = "FeaturesChecklist", e[e.NotificationReminder = 6] = "NotificationReminder", e[e.Packages = 7] = "Packages", e[e.BillingInfo = 8] = "BillingInfo", e[e.Welcome = 9] = "Welcome"
                }(s || (s = {}))
        },
        86155: (e, t, a) => {
            "use strict";
            a.d(t, {
                ZP: () => c,
                eG: () => l
            });
            var s = a(30427),
                n = a(42659),
                r = a(17135),
                i = a(68564),
                o = a(18804);
            const l = s.P1(n.jv, n.iH, n.Jw, n.np, ((e, t, a, s) => {
                    const n = (0, r.Zo)(),
                        o = s.enableMicrophone,
                        l = s.enableSpeaker,
                        c = e.listenDisabledUntil,
                        d = a.microphonePermission,
                        u = e.speakDisabledUntil,
                        g = l && c < n,
                        p = u >= n,
                        m = o && u < n,
                        h = ["ar", "ca", "cs", "cy", "da", "de", "el", "en", "eo", "es", "fi", "fr", "ga", "gd", "gn", "he", "hi", "ht", "hu", "hv", "id", "it", "ja", "la", "nl-NL", "no-BO", "nv", "pl", "pt", "ro", "ru", "sv", "sw", "tlh", "tr", "uk", "vi", "zh", "zu"].includes(t),
                        v = ["de", "en", "es", "fr", "it", "pt", "nl-NL", "da", "sv", "tr", "no-BO", "uk", "ru"].includes(t) && "denied" !== d && i.c;
                    return {
                        includeListening: g && h,
                        includeSpeaking: m && v,
                        isListenEnabled: g,
                        isListenSupported: h,
                        isSpeakDisabledTemporarily: p,
                        isSpeakEnabled: m,
                        isSpeakSupported: v,
                        microphonePermission: d
                    }
                })),
                c = () => {
                    const e = (0, o.tX)();
                    return { ...(0, o.Fx)(l),
                        resetListenDisabledTemporarily: () => e({
                            type: "ENABLE_LISTEN"
                        }),
                        resetSpeakDisabledTemporarily: () => e({
                            type: "ENABLE_SPEAK"
                        })
                    }
                }
        },
        47449: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => c
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(47725);
            const o = a.p + "images/china/8ac5f69a53362c09584230c85b567ef7.png";
            var l = a(80388);
            const c = ({
                inSplash: e
            }) => (0, l.J9)() ? r.createElement("div", {
                className: n()("_2HXBj", {
                    "wjXh-": e
                })
            }, r.createElement("div", {
                className: "_1hp5D"
            }, r.createElement(i.ZP, {
                href: "http://beian.miit.gov.cn"
            }, "京ICP备14061397号-1"), r.createElement("span", null, " • "), r.createElement("img", {
                src: o
            }), r.createElement(i.ZP, {
                href: "http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010102005866"
            }, "京公网安备 11010102005866 号"))) : null
        },
        9343: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => h
            });
            var s = a(60042),
                n = a.n(s),
                r = a(27378),
                i = a(80254),
                o = a(2559),
                l = a(47725);
            const c = "yg19_ _1Ai11",
                d = "_1nZQi";
            var u = a(26886),
                g = a(8654),
                p = a(93746);
            const m = ["en", "es", "fr", "de", "it", "pt", "nl-NL", "ja"],
                h = ({
                    className: e,
                    disabled: t,
                    onCarouselItemClick: a,
                    trackingScreen: s
                }) => {
                    const h = r.useRef(null),
                        v = r.useRef([]),
                        _ = r.useRef(null),
                        [f, S] = r.useState(),
                        [y, E] = r.useState(0),
                        b = r.useMemo((() => {
                            var e;
                            return (null !== (e = p.Jl[p.h9]) && void 0 !== e ? e : []).filter((e => !(0, u.It)(e, p.h9)))
                        }), []),
                        I = m.filter((e => b.includes(e))),
                        w = i.jj([...I, ...b]),
                        k = (() => {
                            var e;
                            for (let t = 0; t < w.length; t++)
                                if ((null !== (e = null == f ? void 0 : f[t - 1]) && void 0 !== e ? e : 0) >= y) return t;
                            return 0
                        })(),
                        T = null == f ? void 0 : f[f.length - 1],
                        C = () => {
                            var e;
                            const t = null === (e = h.current) || void 0 === e ? void 0 : e.getBoundingClientRect().width;
                            return void 0 === T || void 0 === t ? void 0 : Math.max(T - t, 0)
                        },
                        R = e => {
                            var t;
                            return null !== (t = null == f ? void 0 : f[e - 1]) && void 0 !== t ? t : 0
                        };
                    return r.useLayoutEffect((() => {
                        var e, t;
                        if (_.current) {
                            const a = _.current.getBoundingClientRect().left,
                                s = [];
                            for (let e = 1; e < v.current.length; e++) {
                                const t = v.current[e];
                                t && (s[e - 1] = t.getBoundingClientRect().left - a)
                            }
                            s[v.current.length - 1] = s[v.current.length - 2] + (null !== (t = null === (e = v.current[v.current.length - 1]) || void 0 === e ? void 0 : e.getBoundingClientRect().width) && void 0 !== t ? t : 0), S(s)
                        }
                    }), []), r.createElement("nav", {
                        className: n()("zU2RQ", e)
                    }, r.createElement("svg", {
                        className: c,
                        fill: "none",
                        onClick: () => {
                            const e = C();
                            if (void 0 === e) return;
                            const t = Math.max(R(k - 2), 0);
                            E(t < y ? t : e)
                        },
                        viewBox: "0 0 16 16"
                    }, r.createElement("path", {
                        d: "M10 2L4 8L10 14",
                        stroke: "currentColor",
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2"
                    })), r.createElement("div", {
                        className: "I36m9",
                        ref: h
                    }, r.createElement("ul", {
                        className: "_399s9",
                        ref: _,
                        style: {
                            transform: `translateX(-${y}px)`
                        }
                    }, w.map(((e, n) => {
                        return r.createElement("li", {
                            key: e,
                            ref: e => v.current[n] = e
                        }, (i = r.createElement(r.Fragment, null, r.createElement(o.Z, {
                            className: "_1RsYI",
                            lang: e,
                            size: 36
                        }), r.createElement("span", {
                            className: "_2qfTm"
                        }, (0, g._i)(154, {
                            language_name: (0, p.vY)(e)
                        }))), t ? r.createElement("span", {
                            className: d
                        }, i) : r.createElement(l.ZP, {
                            className: d,
                            href: (0, u.og)(e),
                            onClick: a,
                            trackingScreen: s,
                            trackingTarget: "flag"
                        }, i)));
                        var i
                    })))), r.createElement("svg", {
                        className: c,
                        fill: "none",
                        onClick: () => {
                            const e = C();
                            if (void 0 === e) return;
                            const t = Math.min(R(k + 2), e);
                            E(t > y ? t : 0)
                        },
                        viewBox: "0 0 16 16"
                    }, r.createElement("path", {
                        d: "M6 2L12 8L6 14",
                        stroke: "currentColor",
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2"
                    })))
                }
        },
        98683: (e, t, a) => {
            "use strict";
            a.d(t, {
                J: () => f,
                Q: () => S
            });
            var s = a(33467),
                n = a(9249),
                r = a(42659),
                i = a(80164),
                o = a(50548),
                l = a(8654),
                c = a(35160),
                d = a(2439),
                u = a(6545),
                g = a(32499),
                p = a(88868),
                m = a(18804),
                h = a(79465),
                v = a(16086),
                _ = a(20028);
            const f = () => {
                    const e = (0, m.Fx)(i.y1);
                    return (0, m.Fx)((e => "alreadyHasSuper" === (0, i.gb)(e))) ? (0, l._i)(34068) : e ? (0, l._i)(38413, {
                        num: 2
                    }) : (0, l._i)(34201)
                },
                S = ({
                    customStartStep: e = s.K.Packages,
                    iapContext: t,
                    onBeforeClose: a
                } = {}) => {
                    const l = (0, m.Fx)(i.y1),
                        f = (0, u.ew)(),
                        S = (0, o.k6)(),
                        y = (0, m.Fx)((e => (0, r.Mb)(e).ipCountry)),
                        E = (0, m.Fx)(r.Lm),
                        b = (0, o.TH)(),
                        I = (0, m.Fx)(r.np),
                        w = (0, m.tX)(),
                        k = (0, m.CC)();
                    return (s = !1) => {
                        const r = "boolean" == typeof s && s;
                        if (E && !(0, _.pN)(I))(0, d.jF)({
                            customStartStep: r ? (0, g.$2)(e) : e,
                            didClickFreeTrial: l,
                            onBeforeClose: a,
                            trackingProps: {
                                iap_context: null != t ? t : l ? "plus_landing_page_trial" : "plus_landing_page_no_trial"
                            },
                            ...r ? {
                                defaultSubscriptionPlanType: g._r.FamilyPlan
                            } : {}
                        }, w);
                        else {
                            const t = (0, v.Pc)() ? "plus_landing_page_trial_user" : "plus_landing_page_logged_out";
                            (0, h.track)("premium_ad_click", {
                                iap_context: t
                            }), w({
                                options: {
                                    allowLanguagelessUser: !0,
                                    closeModalOnLogin: !1,
                                    goBack: async s => {
                                        switch (await Promise.all([w(n.ke()), w(n.Hm(y, f))]), (0, i.gb)(k.getState())) {
                                            case "eligible":
                                            case "eligibleFreeTrial":
                                                (0, d.qj)({
                                                    customStartStep: e,
                                                    didClickFreeTrial: l,
                                                    onBeforeClose: a,
                                                    restoreScrollPosition: !1,
                                                    trackingProps: {
                                                        iap_context: t
                                                    }
                                                }, w);
                                                break;
                                            case "alreadyHasSuper":
                                                null == s || s();
                                                break;
                                            case "ineligible":
                                                null == s || s(), S.push(p.B6)
                                        }
                                    },
                                    isSignIn: !1,
                                    limitRedirect: "ui-language-change",
                                    name: c.t.SignInUp,
                                    redirectPath: b.pathname || "/super",
                                    via: "plus_landing_page_start_free_trial"
                                },
                                type: "TOGGLE_MODAL"
                            })
                        }
                    }
                }
        },
        14649: (e, t, a) => {
            "use strict";
            a.d(t, {
                _: () => o
            });
            var s = a(97544),
                n = a(79465),
                r = a(81621),
                i = a(20028);
            const o = () => async (e, t) => {
                const a = t(),
                    {
                        user: o,
                        user: {
                            fromLanguage: l,
                            learningLanguage: c
                        }
                    } = a;
                if (c) try {
                    const t = await s.I7.getAchievementsV3(o.id, l, c, (0, i.jq)(o), (0, r.VY)(o), (0, i.dE)(o), o.hasPlus);
                    t.length > 0 ? e({
                        achievements: t,
                        type: "UPDATE_USER_ACHIEVEMENTS_V3"
                    }) : s.I7.migrateToV3(o.id)
                } catch (e) {
                    (0, n.trackAndLogApiError)("load_v3_user_achievements_failed", "Failed to load V3 user achievements", e)
                }
            }
        },
        53278: (e, t, a) => {
            "use strict";
            a.d(t, {
                $l: () => i,
                K_: () => r,
                bf: () => n
            });
            var s = a(80254);
            const n = e => r([e]),
                r = e => t => {
                    t({
                        animations: e.map((e => {
                            var t;
                            return { ...e,
                                id: null !== (t = e.id) && void 0 !== t ? t : s.EL()
                            }
                        })),
                        type: "QUEUE_ANIMATIONS"
                    })
                },
                i = (e, t = []) => a => {
                    const n = s.EL(),
                        r = (e, t) => {
                            var a;
                            return null !== (a = e.id) && void 0 !== a ? a : `${n}_${t}`
                        };
                    a({
                        animations: e.map(((e, a, s) => ({ ...e,
                            blockers: 0 === a ? t : [r(s[a - 1], a - 1)],
                            id: r(e, a)
                        }))),
                        type: "QUEUE_ANIMATIONS"
                    })
                }
        },
        94103: (e, t, a) => {
            "use strict";
            a.d(t, {
                fh: () => c,
                pe: () => u,
                pn: () => d
            });
            var s = a(53278),
                n = a(42659),
                r = a(46355),
                i = a(97544),
                o = a(16970);
            const l = (e, t, a) => {
                    var s, n, r, i, l;
                    return void 0 === t || void 0 === a ? e.flatMap((e => e.groups.flatMap((e => e.characters.flat())))) : (0, o.yB)(t) ? null === (r = null === (n = null === (s = e.find((e => e.id === t))) || void 0 === s ? void 0 : s.groups.find((e => e.id === a))) || void 0 === n ? void 0 : n.characterGroups) || void 0 === r ? void 0 : r.flatMap((e => e.characters)).flat() : null === (l = null === (i = e.find((e => e.id === t))) || void 0 === i ? void 0 : i.groups.find((e => e.id === a))) || void 0 === l ? void 0 : l.characters.flat()
                },
                c = e => async (t, a) => {
                    const c = (0, n.Oz)(a()),
                        d = (0, r.cL)(a()),
                        u = null == d ? void 0 : d.activeAlphabetId,
                        g = void 0 !== u && (0, o.HZ)(u) ? null == d ? void 0 : d.activeGroupId : void 0;
                    if ((null == d ? void 0 : d.characterChart) && (null == d ? void 0 : d.learningLanguage) && (null == d ? void 0 : d.fromLanguage)) {
                        const a = await i.zQ.getCharacterChart(d.learningLanguage, d.fromLanguage, c.alphabetsPathProgressKey),
                            n = l(d.characterChart.alphabets, u, g),
                            r = l(a.alphabets, u, g),
                            o = void 0 === r ? [] : r.filter(((e, t) => {
                                const a = null == n ? void 0 : n[t];
                                return null !== e && null != a && e.strength > a.strength
                            })),
                            p = o[o.length - 1];
                        p && e && t((0, s.bf)({
                            character: p.character,
                            groupId: g,
                            name: "CHARACTER_SCROLL",
                            transliteration: p.transliteration
                        })), t({
                            changedCharacters: o,
                            fromLanguage: d.fromLanguage,
                            learningLanguage: d.learningLanguage,
                            stagedCharacterChart: a,
                            type: "characters/STAGE_CHART_UPDATE"
                        })
                    }
                },
                d = () => (e, t) => {
                    const a = (0, r.cL)(t());
                    if (void 0 === a) return;
                    const n = a.stagedCharacterChart,
                        i = a.changedCharacters;
                    if (n && i) {
                        const t = i.map((e => ({
                            character: e.character,
                            groupId: void 0,
                            name: "CHARACTER_PROGRESS",
                            transliteration: e.transliteration
                        })));
                        if (e((0, s.K_)(t)), void 0 === a.fromLanguage || void 0 === a.learningLanguage) return;
                        e({
                            characterChart: n,
                            fromLanguage: a.fromLanguage,
                            learningLanguage: a.learningLanguage,
                            type: "characters/UPDATE_CHARACTER_CHART"
                        })
                    }
                },
                u = () => async (e, t) => {
                    const a = (0, n.Oz)(t()),
                        s = void 0 !== (0, r.cL)(t());
                    if ((0, o.bo)(a.learningLanguage, a.fromLanguage) && !s) {
                        const t = await i.zQ.getCharacterChart(a.learningLanguage, a.fromLanguage, a.alphabetsPathProgressKey);
                        e({
                            activeAlphabetId: t.alphabets[0].id,
                            characterChart: t,
                            fromLanguage: a.fromLanguage,
                            learningLanguage: a.learningLanguage,
                            type: "characters/SET_CHARACTER_CHART"
                        })
                    }
                }
        },
        50791: (e, t, a) => {
            "use strict";
            a.d(t, {
                i: () => r
            });
            var s = a(97544),
                n = a(79465);
            const r = () => async e => {
                try {
                    e({
                        config: await s.Vi.getConfig(),
                        type: "UPDATE_CONFIG"
                    })
                } catch (e) {
                    (0, n.trackAndLogApiError)("load_config_failed", "Failed to load config", e)
                }
            }
        },
        61544: (e, t, a) => {
            "use strict";
            a.d(t, {
                Fn: () => u,
                GG: () => i,
                HQ: () => l,
                j1: () => o,
                oh: () => c,
                tD: () => d,
                w7: () => g
            });
            var s = a(42659),
                n = a(97544),
                r = a(81621);
            const i = () => async (e, t) => {
                    const a = (0, s.np)(t());
                    if (!(0, r.VY)(a)) return;
                    const i = (0, s.Mb)(t()),
                        [o, l, c] = await Promise.all([n.i_.getFeedV2(a.id, a.fromLanguage, i), n.i_.getKudosAssets(i), n.i_.getKudosDrawerV2(a.id, a.fromLanguage, i)]);
                    e({
                        feed: o,
                        type: "SET_FEED"
                    }), e({
                        assets: l,
                        type: "SET_KUDOS_ASSETS"
                    }), e({
                        drawer: c,
                        type: "SET_KUDOS_DRAWER"
                    })
                },
                o = (e, t, a) => async s => {
                    await n.tX.markFeedSeen(e, t, a), await s(i())
                },
                l = (e, t, a) => async s => {
                    await n.tX.sendFeedReactions(e, t, a), await s(i())
                },
                c = e => async t => {
                    await n.tX.deleteFeedReaction(e), await t(i())
                },
                d = (e, t) => async a => {
                    a({
                        recommendationInfo: await n.i_.getFriendRecommendations(e, t),
                        type: "SET_FOLLOW_SUGGESTIONS"
                    })
                },
                u = (e, t) => async a => {
                    const {
                        filteredIds: s,
                        rotatedIds: r
                    } = await n.i_.updateFriendRecommendations(e, t);
                    a({
                        filteredIds: s,
                        rotatedIds: r,
                        type: "UPDATE_FOLLOW_SUGGESTIONS"
                    })
                },
                g = (e, t) => async a => {
                    await n.i_.deleteFriendRecommendation(e, t), a({
                        deletedId: t,
                        type: "DELETE_FOLLOW_SUGGESTION"
                    })
                }
        },
        33: (e, t, a) => {
            "use strict";
            a.d(t, {
                AG: () => L,
                Ic: () => b,
                Up: () => E,
                b5: () => y,
                kS: () => C,
                lx: () => T,
                mE: () => I,
                pt: () => k
            });
            var s = a(99369),
                n = a(80254),
                r = a(86155),
                i = a(9990),
                o = a(42659),
                l = a(73520),
                c = a(93540),
                d = a(97544),
                u = a(17135),
                g = a(64115),
                p = a(94171),
                m = a(41831),
                h = a(68903),
                v = a(58576),
                _ = a(16689),
                f = a(79465),
                S = a(55829);
            const y = () => async (e, t) => {
                    var a, s, v, y, E, b, I, k, T;
                    const C = t(),
                        L = (0, o.np)(C),
                        [A, P, D] = await Promise.all([d.JV.getQuestsData(L.id), d.JV.getQuestsSchema(L.fromLanguage), d.JV.getQuestProgress({
                            timezone: L.timezone,
                            uiLanguage: L.fromLanguage,
                            userId: L.id
                        })]),
                        N = null !== (a = P.goals) && void 0 !== a ? a : [],
                        O = D.difficulty - 1;
                    e({
                        payload: N,
                        type: "SET_GOALS_SCHEMA"
                    }), e({
                        payload: D.goals.progress,
                        type: "SET_GOALS_PROGRESS"
                    }), e({
                        payload: O,
                        type: "SET_GOALS_DIFFICULTY"
                    }), e({
                        badges: P.badges,
                        type: "SET_QUEST_BADGES"
                    }), e({
                        earnedBadges: null !== (s = D.badges.details) && void 0 !== s ? s : [],
                        type: "SET_EARNED_BADGES"
                    });
                    const x = (0, p.ed)(A),
                        F = (0, g.ky)("debugFriendsQuestState");
                    if (x) {
                        const t = n.HK(N, "goalId"),
                            a = x.goalId,
                            s = x.questState === S.S.ACTIVE ? D.goals.details[a] : null === (y = null === (v = D.pastGoals) || void 0 === v ? void 0 : v[0]) || void 0 === y ? void 0 : y.details;
                        e(w({
                            details: s,
                            friendsQuestInfo: x,
                            historicalStats: D.goals.historicalStats,
                            schemaByGoalId: t
                        }))
                    } else e(F ? {
                        payload: (0, p.ET)(),
                        type: "SET_FRIENDS_QUEST_DETAILS"
                    } : {
                        payload: void 0,
                        type: "SET_FRIENDS_QUEST_DETAILS"
                    });
                    e(R(Date.now()));
                    const {
                        lastUpdated: M
                    } = (0, l.oV)(C), U = (0, r.eG)(C), H = (0, c.HF)(C), G = null !== (I = null === (b = null === (E = (0, o.np)(C).streakData) || void 0 === E ? void 0 : E.currentStreak) || void 0 === b ? void 0 : b.length) && void 0 !== I ? I : 0, V = (0, o.np)(C).xpSummaries, {
                        includeSpeaking: B,
                        includeListening: z
                    } = U, Z = {
                        includeListening: z,
                        includeSpeaking: B,
                        learningLanguage: L.learningLanguage,
                        path: H,
                        streak: G,
                        xpSummaries: V
                    };
                    if ((0, g.ky)("debugRefreshDailyQuests", !1) || !M || !(0, u.zk)((0, u.Gz)(M))) {
                        const t = (0, m.Ch)({
                                assignedQuestGoalIds: [],
                                questEligibilityParams: Z,
                                schema: N,
                                slotType: "DAILY"
                            }),
                            a = (0, m.Ch)({
                                assignedQuestGoalIds: t ? [t] : [],
                                questEligibilityParams: Z,
                                schema: N,
                                slotType: "CORE"
                            }),
                            s = (0, m.Ch)({
                                assignedQuestGoalIds: [t, a].filter(h.$K),
                                questEligibilityParams: Z,
                                schema: N,
                                slotType: "HARD"
                            });
                        e({
                            payload: {
                                coreQuest: a,
                                dailyQuest: t,
                                hardQuest: s,
                                lastUpdated: Date.now()
                            },
                            type: "SET_DAILY_QUESTS"
                        }), [a, t, s].forEach((e => {
                            e && (0, f.track)("daily_quest_assigned", {
                                daily_quest_difficulty: O,
                                daily_quest_name: e
                            })
                        }))
                    }
                    const W = null !== (k = (0, g.ky)("debugChooseSpecificMonthlyChallenge")) && void 0 !== k ? k : (0, _.$A)(N);
                    e({
                        payload: {
                            updates: 0
                        },
                        type: "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE"
                    }), e({
                        payload: W,
                        type: "SET_MONTHLY_QUEST"
                    }), e({
                        monthlyQuestTheme: null === (T = P.themes) || void 0 === T ? void 0 : T.filter((e => e.themeId === W))[0],
                        type: "SET_MONTHLY_QUEST_THEME"
                    }), e((0, i._P)(L.id))
                },
                E = () => (e, t) => {
                    var a, s, n;
                    const i = t(),
                        d = (0, l.D_)(i),
                        u = d.schema;
                    if (u.length < 1) return;
                    const g = (0, l.oV)(i),
                        p = (0, r.eG)(i),
                        v = (0, c.HF)(i),
                        _ = null !== (n = null === (s = null === (a = (0, o.np)(i).streakData) || void 0 === a ? void 0 : a.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== n ? n : 0,
                        S = (0, o.np)(i).xpSummaries,
                        {
                            includeSpeaking: y,
                            includeListening: E
                        } = p,
                        b = {
                            includeListening: E,
                            includeSpeaking: y,
                            path: v,
                            streak: _,
                            xpSummaries: S
                        },
                        {
                            dailyQuest: I,
                            coreQuest: w,
                            hardQuest: k
                        } = g,
                        T = I && (0, m.n0)(I, b) ? I.goalId : (0, m.Ch)({
                            assignedQuestGoalIds: [],
                            questEligibilityParams: b,
                            schema: u,
                            slotType: "DAILY"
                        }),
                        C = w && (0, m.n0)(w, b) ? w.goalId : (0, m.Ch)({
                            assignedQuestGoalIds: T ? [T] : [],
                            questEligibilityParams: b,
                            schema: u,
                            slotType: "CORE"
                        }),
                        R = k && (0, m.n0)(k, b) ? k.goalId : (0, m.Ch)({
                            assignedQuestGoalIds: [C, T].filter(h.$K),
                            questEligibilityParams: b,
                            schema: u,
                            slotType: "HARD"
                        });
                    e({
                        payload: {
                            coreQuest: C,
                            dailyQuest: T,
                            hardQuest: R,
                            lastUpdated: Date.now()
                        },
                        type: "SET_DAILY_QUESTS"
                    }), [C, T, R].forEach((e => {
                        e && (0, f.track)("daily_quest_assigned", {
                            daily_quest_difficulty: d.difficulty,
                            daily_quest_name: e
                        })
                    }))
                },
                b = (e, t, a) => {
                    if (!a || !t || !(0, u.zk)((0, u.Gz)(a.timestamp))) return {
                        updatedTotalProgress: t,
                        updatedVisibleProgress: e.reduce(((e, a) => (e[a.goalId] = t ? t[a.goalId] : 0, e)), {})
                    };
                    const n = (0, s.asMutable)(t),
                        r = e.reduce(((e, s) => {
                            var n;
                            return e[s.goalId] = Math.max(null !== (n = a.updates[s.goalId]) && void 0 !== n ? n : 0, t ? t[s.goalId] : 0), e
                        }), {});
                    if (n)
                        for (const e in r) Object.prototype.hasOwnProperty.call(r, e) && (n[e] = r[e]);
                    return {
                        updatedTotalProgress: n,
                        updatedVisibleProgress: r
                    }
                },
                I = e => (t, a) => {
                    const s = (0, l.ey)(a());
                    if (!s || !(0, p.Vz)(Date.now(), s)) return;
                    const {
                        metric: n,
                        ownProgress: r,
                        threshold: i,
                        totalProgress: o
                    } = s, c = Math.max(0, i - o);
                    for (const a of e.metricUpdates) a.metric === n && t({
                        ownProgress: r + Math.min(a.quantity, c),
                        totalProgress: o + Math.min(a.quantity, c),
                        type: "SET_FRIENDS_QUEST_PROGRESS"
                    })
                },
                w = ({
                    details: e,
                    friendsQuestInfo: t,
                    historicalStats: a,
                    schemaByGoalId: s
                }) => n => {
                    var r;
                    const i = t.goalId;
                    n({
                        payload: {
                            acknowledged: t.acknowledged,
                            friendProgress: e.socialProgress[0],
                            goalId: i,
                            metric: s[i].metric,
                            ownProgress: e.progressIncrements.reduce(((e, t) => e + t), 0),
                            questId: t.questId,
                            questPoints: t.questPoints,
                            status: t.questState,
                            threshold: t.questThreshold,
                            totalProgress: null !== (r = e.progress) && void 0 !== r ? r : 0,
                            winStreak: (0, p.Fy)(a)
                        },
                        type: "SET_FRIENDS_QUEST_DETAILS"
                    })
                },
                k = () => async (e, t) => {
                    const a = t(),
                        s = (0, o.np)(a),
                        n = (0, l.xm)(a);
                    try {
                        const [t, a] = await Promise.all([d.JV.getQuestsData(s.id), d.JV.getQuestProgress({
                            timezone: s.timezone,
                            uiLanguage: s.fromLanguage,
                            userId: s.id
                        })]), r = (0, p.ed)(t);
                        if (r) {
                            const t = a.goals.details[r.goalId];
                            e(w({
                                details: t,
                                friendsQuestInfo: r,
                                historicalStats: a.goals.historicalStats,
                                schemaByGoalId: n
                            })), e(R(Date.now()))
                        }
                    } catch (e) {
                        (0, v.Kp)("Failed to load new friends quest data", {
                            ex: e
                        })
                    }
                },
                T = e => (t, a) => {
                    const s = (0, l.ey)(a()),
                        n = (0, o.dY)(a());
                    if (!s) return;
                    const {
                        friendProgress: r,
                        metric: i,
                        threshold: c,
                        totalProgress: u
                    } = s;
                    d.i_.postFriendsQuestNudge({
                        eventType: i,
                        nudgeType: e,
                        recipientId: r.userId,
                        remainingEvents: Math.max(0, c - u),
                        userId: n
                    }), (0, f.track)("send_nudge", {
                        nudge_name: d.i_.NUDGE_TRACKING_NAMES[e],
                        nudge_type: p.N7.includes(e) ? "welcome" : "nudge"
                    }), t({
                        nudgeType: e,
                        timestamp: Date.now(),
                        type: "SET_LAST_SENT_FRIENDS_QUEST_NUDGE"
                    })
                },
                C = ({
                    purchasingId: e,
                    receivingId: t
                }) => a => {
                    a({
                        gems: -p.py,
                        type: "UPDATE_USER_GEMS"
                    }), a({
                        timestamp: Date.now(),
                        type: "SET_LAST_SENT_FRIENDS_QUEST_GIFT_TIMESTAMP"
                    }), d.Vi.purchaseShopItemGift({
                        itemName: p.xH,
                        purchasingId: e,
                        receivingId: t
                    })
                },
                R = e => (t, a) => {
                    e >= (0, l.D_)(a()).lastSeenNextFriendsQuestStart && t({
                        lastSeenTotalProgress: 0,
                        type: "SET_LAST_SEEN_FRIENDS_QUEST_TOTAL_PROGRESS"
                    })
                },
                L = e => t => {
                    d.i_.sendTriggeredKudos([p.wS], [e]), t({
                        type: "SET_FRIENDS_QUEST_HIGH_FIVE_TIMESTAMP",
                        value: Date.now()
                    })
                }
        },
        9249: (e, t, a) => {
            "use strict";
            a.d(t, {
                Hm: () => d,
                Ij: () => u,
                ZK: () => g,
                ke: () => c,
                w4: () => m,
                xD: () => p
            });
            var s = a(14649),
                n = a(42659),
                r = a(97544),
                i = a(17135),
                o = a(51551),
                l = a(79465);
            const c = () => async e => {
                    try {
                        e({
                            items: await r.Vi.getShopItems(),
                            type: "SET_SHOP_ITEMS"
                        })
                    } catch (e) {
                        (0, l.trackAndLogApiError)("load_shop_items_failed", "Failed to load shop items", e)
                    }
                },
                d = (e, t) => async a => {
                    try {
                        const {
                            currentPlan: s,
                            subscriptionPlans: n
                        } = await r.Vi.getSubscriptionPlans(e, t);
                        a({
                            currentPlan: s,
                            subscriptionPlans: n,
                            type: "SET_AVAILABLE_SUBSCRIPTION_PLANS"
                        })
                    } catch (e) {
                        (0, l.trackAndLogApiError)("load_subscription_plans_failed", "Failed to load available subscription plans", e)
                    }
                },
                u = ({
                    currentStreak: e
                }) => async (t, a) => {
                    const s = (0, n.__)(a()),
                        r = (0, o.Wp)(s, e, (0, i.Ux)());
                    void 0 !== r && await t(p(r, "item_offer", !0, 1))
                },
                g = async ({
                    dispatch: e,
                    fromMilestone: t = !1,
                    fromStories: a = !1,
                    quantity: s = 1,
                    shopItems: n
                }) => {
                    const r = n.shop.misc.streak_freeze;
                    if (r) try {
                        await e(p(r, "item_offer", !0, s)), a || e({
                            fromMilestone: t,
                            gift: "streakFreeze",
                            quantity: s,
                            type: "RECEIVE_GIFT"
                        })
                    } catch (e) {
                        (0, l.trackAndLogApiError)("streak_freeze_gifting_failed", "Failed to gift the user a streak freeze", e, {
                            fromMilestone: t,
                            fromStories: a
                        })
                    }
                },
                p = (e, t, a = !1, i = 1) => async (o, c) => {
                    const d = (0, n.iH)(c()),
                        u = a ? {
                            isFree: !0
                        } : {};
                    o({
                        status: "START",
                        type: "PURCHASE_ITEM"
                    });
                    try {
                        const [n] = (await Promise.all(new Array(i).fill(null).map((() => r.Vi.purchaseUserShopItem(e.id, {
                            learningLanguage: d,
                            ...u
                        }))))).map((e => e.item));
                        (0, l.track)("purchase_item", {
                            currency_type: e.currencyType,
                            item_name: e.id,
                            num_purchased: i,
                            purchased_via: t,
                            ...a ? {
                                is_free: !0
                            } : {}
                        }), o({
                            item: n,
                            purchaseQuantity: i,
                            status: "SUCCESS",
                            type: "PURCHASE_ITEM"
                        }), o(s._())
                    } catch (e) {
                        (0, l.trackAndLogApiError)("purchase_failed", "Failed to purchase item", e), o({
                            status: "FAIL",
                            type: "PURCHASE_ITEM"
                        })
                    }
                },
                m = e => async t => {
                    try {
                        t({
                            item: await r.Vi.getUserShopItem(e),
                            type: "REFRESH_USER_ITEM"
                        })
                    } catch (e) {
                        (0, l.trackAndLogApiError)("load_user_shop_item_failed", "Failed to get user item", e)
                    }
                }
        },
        9990: (e, t, a) => {
            "use strict";
            a.d(t, {
                AO: () => o,
                LQ: () => n,
                MS: () => i,
                _P: () => c,
                iU: () => r,
                lc: () => l
            });
            var s = a(30839);
            const n = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_AgeRestrictedLeaderboardsIntro)) {
                        const a = (0, s.rV)(s.Qt.REDUX_AgeRestrictedLeaderboardsIntro)[e];
                        void 0 !== a && t({
                            isEligible: a,
                            type: "SET_CAN_SHOW_AGE_RESTRICTED_LEADERBOARDS_INTRO"
                        })
                    }
                },
                r = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_AvatarsIntro)) {
                        const a = (0, s.rV)(s.Qt.REDUX_AvatarsIntro)[e];
                        void 0 !== a && t({
                            isEligible: a,
                            type: "SET_CAN_SHOW_AVATARS_INTRO"
                        })
                    }
                },
                i = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_DailyQuests)) {
                        const a = (0, s.rV)(s.Qt.REDUX_DailyQuests)[e];
                        void 0 !== a && t({
                            payload: a,
                            type: "SET_DAILY_QUESTS"
                        })
                    }
                },
                o = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_DarkMode)) {
                        const a = (0, s.rV)(s.Qt.REDUX_DarkMode)[e];
                        void 0 !== a && t({
                            type: "DARK_MODE",
                            value: "boolean" == typeof a ? a ? "on" : "off" : a
                        })
                    }
                },
                l = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_FriendsQuestNextStart)) {
                        const a = (0, s.rV)(s.Qt.REDUX_FriendsQuestNextStart)[e];
                        void 0 !== a && t({
                            lastSeenNextFriendsQuestStart: a,
                            type: "SET_LAST_SEEN_NEXT_FRIENDS_QUEST_START"
                        })
                    }
                },
                c = e => t => {
                    if ((0, s.No)(s.Qt.REDUX_LastSeenMonthlyChallengeId)) {
                        const a = (0, s.rV)(s.Qt.REDUX_LastSeenMonthlyChallengeId)[e];
                        void 0 !== a && t({
                            monthlyChallengeId: a,
                            type: "SET_LAST_SEEN_MONTHLY_CHALLENGE_ID"
                        })
                    }
                }
        },
        46644: (e, t, a) => {
            "use strict";
            a.d(t, {
                P: () => m,
                _: () => h
            });
            var s = a(42659),
                n = a(97544),
                r = a(17135),
                i = a(43633),
                o = a(10300),
                l = a(87471),
                c = a(88868),
                d = a(79465),
                u = a(81621),
                g = a(16086),
                p = a(20028);
            const m = (e, t, a = !1) => async (m, h) => {
                    const v = (0, s.NT)(h()),
                        _ = (0, s.np)(h()),
                        f = (0, s.Mb)(h()),
                        S = (0, i.h0)().get(o.RT).value;
                    if (!e && !t) return;
                    if (!a && v && (v.id === e || v.username === t)) return v;
                    m({
                        type: "RESET_PROFILE"
                    });
                    const y = void 0 === e ? void 0 : (0, l.pW)(S, e),
                        E = (() => {
                            if ("leagues" === (null == S ? void 0 : S.alias) && void 0 !== y) return {
                                id: y.userId,
                                isPrivate: !0,
                                name: y.displayName,
                                picture: y.avatarUrl,
                                username: void 0
                            }
                        })(),
                        b = await (async () => {
                            var a;
                            return void 0 !== e ? e : void 0 !== t ? null === (a = (await n.Vi.userIdsByUsername(t))[0]) || void 0 === a ? void 0 : a.id : void 0
                        })(),
                        I = await (async () => {
                            var e;
                            if (void 0 !== b) try {
                                return await n.Vi.userProfileInfo(b)
                            } catch (t) {
                                if ((0, n.Hx)(t) && 404 === (null === (e = t.response) || void 0 === e ? void 0 : e.status)) return;
                                return void(0, d.trackAndLogApiError)("fetch_user_profile_failed", `Failed to fetch user profile info for user ${b}`, t)
                            }
                        })();
                    if (I && (I.streakData = {
                            currentStreak: {
                                endDate: (0, r.zK)(0),
                                length: I.streak,
                                startDate: (0, r.zK)(0)
                            },
                            longestStreak: null,
                            previousStreak: null
                        }), !(0, g.Pc)() || (0, g.Jb)() !== (null == I ? void 0 : I.id)) try {
                        if (void 0 === I || (0, p.pN)(I) || !(0, u.VY)(I) && !(0, p.E4)(_) || (0, p.jq)(I) && !(0, p.zZ)(I) && void 0 !== y || (0, g.Pc)() && _.blockerUserIds.includes(I.id) || (0, l.d0)(_, f) && void 0 !== y) return E ? (m({
                            type: "LOAD_PRIVATE_PROFILE_USER",
                            user: E
                        }), E) : ((0, d.track)("page_not_found", {}), void await (0, c.Zs)(c.Oy, !0))
                    } catch {
                        return void await (0, c.Zs)(c.Oy, !0)
                    }
                    m({
                        type: "LOAD_PROFILE_USER",
                        user: I
                    });
                    const w = I.id,
                        k = () => {
                            var e;
                            return (null === (e = (0, s.NT)(h())) || void 0 === e ? void 0 : e.id) === w
                        };
                    return (0, g.Pc)() ? (async () => {
                        if (!I.fromLanguage || !I.learningLanguage) return void m({
                            achievements: {
                                v2: [],
                                v3: []
                            },
                            type: "LOAD_ACHIEVEMENTS"
                        });
                        const e = await n.I7.getAchievementsV3(I.id, I.fromLanguage, I.learningLanguage, (0, p.jq)(_), (0, u.VY)(_), (0, p.dE)(_), I.hasPlus);
                        k() && m({
                            achievements: {
                                v2: [],
                                v3: e
                            },
                            type: "LOAD_ACHIEVEMENTS"
                        })
                    })() : m({
                        achievements: {
                            v2: [],
                            v3: []
                        },
                        type: "LOAD_ACHIEVEMENTS"
                    }), (async () => {
                        const e = await n.Vi.getUserXPSummaries(w);
                        if (!k()) return;
                        const t = e.map((({
                            date: e,
                            gainedXp: t
                        }) => ({
                            time: e,
                            xp: t
                        })));
                        m({
                            summaries: t,
                            type: "LOAD_PROFILE_XP"
                        })
                    })(), (async () => {
                        const e = await n.Kz.getUserBuiltAvatar(w);
                        k() && m({
                            builtAvatar: e,
                            type: "LOAD_PROFILE_AVATAR"
                        })
                    })(), I
                },
                h = (e, t) => async a => {
                    const s = await n.i_.getSocialProfile(e, 5);
                    a(t ? {
                        socialProfile: s,
                        type: "LOAD_FIRST_PERSON_SOCIAL_PROFILE"
                    } : {
                        socialProfile: s,
                        type: "LOAD_SOCIAL_PROFILE"
                    })
                }
        },
        7924: (e, t, a) => {
            "use strict";
            a.d(t, {
                VE: () => l,
                nn: () => o,
                uM: () => c
            });
            var s = a(9249),
                n = a(42659),
                r = a(97544),
                i = a(79465);
            const o = (e, t, a, n) => async o => {
                    var l;
                    try {
                        const c = await r.bu.joinClassroom(e);
                        (0, i.track)("add_observer", {
                            from_settings: t,
                            with_classroom: !0
                        }), o({
                            classroom: c,
                            type: "JOIN_CLASSROOM"
                        }), o(s.ke()), o(s.Hm(a, n)), t || o({
                            name: "schoolsJoinedClassroom",
                            observerName: null !== (l = c.observer_name) && void 0 !== l ? l : c.observer_username,
                            type: "CREATE_HOME_MESSAGE"
                        })
                    } catch (e) {
                        (0, i.trackAndLogApiError)("join_classroom_failed", "Failed to add teacher", e)
                    }
                },
                l = e => async t => {
                    try {
                        await r.bu.leaveClassroom(e), (0, i.track)("remove_observer", {}), t({
                            classroomId: e,
                            type: "LEAVE_CLASSROOM"
                        })
                    } catch (e) {
                        (0, i.trackAndLogApiError)("leave_classroom_failed", "Failed to leave classroom", e)
                    }
                },
                c = (e, t) => async (a, s) => {
                    const o = (0, n.np)(s());
                    try {
                        a({
                            sessionActivities: await r.bu.getSessionActivitiesByUser(o.id, e, t),
                            type: "UPDATE_SESSION_ACTIVITIES"
                        })
                    } catch (e) {
                        (0, i.trackAndLogApiError)("update_session_activities_failed", "Failed to update Schools session activities", e)
                    }
                }
        },
        15879: (e, t, a) => {
            "use strict";
            a.d(t, {
                SC: () => f,
                SL: () => _,
                Vw: () => S
            });
            var s = a(86518),
                n = a(42659),
                r = a(54174),
                i = a(97544),
                o = a(50498),
                l = a(94786),
                c = a(68903),
                d = a(60752),
                u = a(41364),
                g = a(58576),
                p = a(44637),
                m = a(89260),
                h = a(79465),
                v = a(16086);
            let _;
            const f = e => async () => {
                    try {
                        const t = await (0, d.b)(),
                            a = await t.getAllKeys("submittableRequests"),
                            s = [];
                        for (const n of a) {
                            const a = await t.get("submittableRequests", n);
                            if (void 0 !== a) switch (a.type) {
                                case "experiment-treatment":
                                    s.push(y(n, a.request, e).catch((e => {
                                        (0, g.vU)("Failed to sync stored experiment treatment", {
                                            data: a.request,
                                            ex: e
                                        })
                                    })));
                                    break;
                                case "goals-progress":
                                case "remove-heart":
                                case "reward":
                                case "session":
                                case "story":
                                    break;
                                default:
                                    (0, c.RJ)(a)
                            }
                        }
                        await Promise.all(s)
                    } catch (e) {
                        (0, g.vU)("Failed to sync stored requests", {
                            ex: e
                        })
                    }
                },
                S = e => (0, u.p)("SYNC_STORED_PROGRESS")((async (t, a) => {
                    _ = (async () => {
                        try {
                            const t = await (0, d.b)(),
                                a = await t.getAllKeys("submittableRequests");
                            for (const s of a) {
                                const a = await t.get("submittableRequests", s);
                                if (void 0 !== a) switch (a.type) {
                                    case "experiment-treatment":
                                        break;
                                    case "goals-progress":
                                        await E(s, a.request, e);
                                        break;
                                    case "remove-heart":
                                        await b(s, e);
                                        break;
                                    case "reward":
                                        await I(s, a.rewardRequest, e);
                                        break;
                                    case "session":
                                        await w(s, a.session, a.sessionEndTrackingProperties, e);
                                        break;
                                    case "story":
                                        await k(s, a.session, a.sessionEndTrackingProperties, a.storyCompleteTrackingProperties, a.storyId);
                                        break;
                                    default:
                                        (0, c.RJ)(a)
                                }
                            }
                        } catch (e) {
                            (0, g.vU)("Failed to sync stored progress", {
                                ex: e
                            })
                        }(0, n.eI)(a()) || (0, r.d)(a()) || await t((0, s.eY)())
                    })(), await _, _ = void 0
                })),
                y = async (e, t, a) => {
                    const s = await (0, d.b)();
                    let n = !1;
                    try {
                        await (0, o.XD)((() => i.Vi.treatUser((0, v.Jb)(), t.experimentName, {
                            contexts: t.contexts,
                            treated: !0
                        })), {
                            retries: 1,
                            signal: a
                        }), n = !0
                    } catch (e) {
                        (0, h.trackAndLogApiError)("treat_user_failed", "Failed to treat user for experiment", e)
                    }!n && a.aborted || await s.delete("submittableRequests", e)
                },
                E = async (e, t, a) => {
                    const s = await (0, d.b)();
                    let n = !1;
                    try {
                        await (0, o.XD)((() => i.JV.sendBatchUpdate((0, v.Jb)(), t.batchUpdate, t.timestamp, t.timezone)), {
                            retries: 1,
                            signal: a
                        }), n = !0
                    } catch (e) {
                        (0, h.trackAndLogApiError)("update_goals_progress_failed", "Failed to update goals progress", e)
                    }!n && a.aborted || await s.delete("submittableRequests", e)
                },
                b = async (e, t) => {
                    const a = await (0, d.b)();
                    let s = !1;
                    try {
                        await (0, o.XD)((() => i.Vi.removeHeart()), {
                            retries: 1,
                            signal: t
                        }), s = !0
                    } catch (e) {
                        (0, h.trackAndLogApiError)("remove_user_heart_failed", "Failed to remove users' hearts", e)
                    }!s && t.aborted || await a.delete("submittableRequests", e)
                },
                I = async (e, t, a) => {
                    const s = await (0, d.b)();
                    let n = !1;
                    try {
                        await (0, o.XD)((() => i.Vi.consumeReward(t.userPartial, t.rewardId, t.pathLevelMetadata)), {
                            retries: 1,
                            signal: a
                        }), n = !0
                    } catch (e) {
                        "path-chest" === t.source && (0, h.trackAndLogApiError)("consume_path_chest_reward_failed", "Failed to consume path chest reward", e)
                    }!n && a.aborted || await s.delete("submittableRequests", e)
                },
                w = async (e, t, a, s) => {
                    const n = await (0, d.b)();
                    let r = !1;
                    try {
                        (0, h.track)("session_end_attempt", {});
                        const e = await i.Vi.sessionSubmit(t, {
                            onError: e => {
                                (0, h.trackAndLogApiError)("submit_session_failed", "Failed to submit stored session", e)
                            },
                            signal: s
                        });
                        r = !0, (0, h.track)("session_end", { ...a,
                            ...e.trackingProperties,
                            upload_timestamp: Date.now()
                        })
                    } catch (e) {
                        (0, p.gZ)(e, (0, m.Xd)(t.type))
                    }!r && s.aborted || await n.delete("submittableRequests", e)
                },
                k = async (e, t, a, s, n) => {
                    const r = await (0, d.b)();
                    try {
                        const e = await i.Mw.postStoryComplete(n, t);
                        (0, h.track)("session_end", { ...a,
                            upload_timestamp: Date.now()
                        }), (0, h.track)("stories_story_complete", { ...s,
                            ...e.trackingProperties
                        })
                    } catch (e) {
                        (0, h.trackAndLogApiError)("stories_story_complete", "Story complete request failed", e), (0, p.gZ)(e, l.Q.Stories)
                    }
                    await r.delete("submittableRequests", e)
                }
        },
        86518: (e, t, a) => {
            "use strict";
            a.d(t, {
                rf: () => K,
                DG: () => q,
                kS: () => J,
                fN: () => X,
                Kb: () => ee,
                TS: () => te,
                zv: () => Y,
                M$: () => se,
                J0: () => ae,
                eY: () => j,
                DZ: () => Q
            });
            var s = a(80254),
                n = a(14649),
                r = a(42659),
                i = a(97544);
            var o = a(94103),
                l = a(50791),
                c = a(61544),
                d = a(33),
                u = a(9249),
                g = a(6986),
                p = a(20028);
            const m = e => (t, a) => {
                const s = a().user,
                    n = !("username" in s) && "username" in e && (!("id" in e) || s.id === e.id);
                (0, g.yI)(a().config, (0, p.jq)(e), n) && t({
                    name: "marketingOptIn",
                    type: "CREATE_HOME_MESSAGE"
                })
            };
            var h = a(9990),
                v = a(46644),
                _ = a(7924),
                f = a(15879),
                S = a(46355),
                y = a(73520),
                E = a(54174),
                b = a(83936),
                I = a(80164),
                w = a(3731),
                k = a(51827),
                T = a(70326),
                C = a(78939),
                R = a(54412),
                L = a(17135),
                A = a(64115),
                P = a(81149),
                D = a(15670),
                N = a(50548),
                O = a(60752),
                x = a(43633),
                F = a(33124),
                M = a(93746),
                U = a(58576),
                H = a(36914),
                G = a(71371),
                V = a(67280),
                B = a(88787),
                z = a(88868),
                Z = a(30839),
                W = a(79465),
                $ = a(16086);
            const j = ({
                    forNewTrialUser: e,
                    onUserRetrieved: t,
                    urlForStringsReload: a
                } = {}) => async (g, f) => {
                    try {
                        const b = await i.Vi.userInfo((0, $.Jb)(), !0 !== e),
                            I = Date.now();
                        null == t || t(b), (0, W.setDistinctId)(b.id), (0, k.N1)(b), g(m(b));
                        const w = (0, R.ej)(R.Vj.RedirectToPreview);
                        (0, p.Sk)(b) ? void 0 === w && (0, R.d8)(R.Vj.RedirectToPreview, "true"): "ENROLLED" === b.betaStatus ? "true" !== w && (0, R.d8)(R.Vj.RedirectToPreview, "true") : "true" !== w || (0, p.u)(b) || (0, R.nJ)(R.Vj.RedirectToPreview), M.h9 === b.fromLanguage || e || await (0, z.Zs)(a), (0, p.Go)(b) && (0, A.R)(), g((0, h.AO)(b.id)), g((0, h.LQ)(b.id)), g((0, h.iU)(b.id)), g((0, h.lc)(b.id)), g((0, h.MS)(b.id)), g({
                            type: "UPDATE_USER",
                            user: b
                        }), P.LK(), g({
                            currentTimestampMs: I,
                            heartsConfig: b.health,
                            type: "UPDATE_HEARTS_STATE"
                        }), document.hidden || "/reset_password" === window.location.pathname || (0, W.trackUserActive2022)({
                            activity_trigger: "user_model_update"
                        }), g(q());
                        const T = f().notifications;
                        let D = s.ZP.isEmpty(T);
                        if (!D) {
                            const e = b.webNotificationIds || [],
                                t = s.ZP.pluck(s.ZP.values(T), "id");
                            D = !!s.ZP.difference(e, t).length
                        }
                        D || (0, W.track)("notification_bell_load", {
                            has_unread_notifications: !1
                        }), D && (async () => {
                            try {
                                const e = (await i.d0.getNotifications()).map((e => ({ ...e,
                                    id: `ev_${e.id}`,
                                    pretty_datetime: e.pretty_datetime.trim()
                                })));
                                (0, W.track)("notification_bell_load", {
                                    has_unread_notifications: s.ZP.where(e, {
                                        unseen: !0
                                    }).length > 0
                                }), g({
                                    notifications: s.ZP.indexBy(e, "id"),
                                    type: "SET_NOTIFICATIONS"
                                })
                            } catch (e) {
                                (0, W.trackAndLogApiError)("load_user_notifications_failed", "Failed to load web notifications", e)
                            }
                        })(), g(ae());
                        const N = (0, r.Mb)(f()).ipCountry,
                            O = (0, V.Ay)((0, r.np)(f()).plusDiscounts, Date.now());
                        if (g(u.ke()).then((() => {
                                g({
                                    items: (0, r.__)(f()),
                                    streakData: b.streakData,
                                    type: "UPDATE_STREAK_REPAIR_OFFER"
                                })
                            })), g(u.Hm(N, O)), (0, p.dE)(b)) {
                            (async () => {
                                try {
                                    const e = await i.bu.getUserClassrooms();
                                    g({
                                        classrooms: e,
                                        type: "UPDATE_CLASSROOMS"
                                    })
                                } catch (e) {
                                    (0, W.trackAndLogApiError)("load_user_classrooms_failed", "Failed to load classrooms", e)
                                }
                            })();
                            const e = Date.now(),
                                t = e - 1e3 * (0, L.dz)({
                                    days: 30
                                });
                            g(_.uM(t, e)), i.bu.autoFollowClassmates(b.id)
                        }
                        if ("true" !== (0, R.ej)(R.Vj.Impersonate)) {
                            const e = (0, L.NP)();
                            b.timezone !== e && (console.log(`Changing time zone from ${b.timezone} to ${e}`), g(Q({
                                timezone: e
                            })))
                        }["fromLanguage", "learningLanguage"].forEach((e => {
                            const t = b[e],
                                a = `${Z.Qt.LanguageTokens}.${t}`;
                            (0, Z.No)(a) || (async () => {
                                try {
                                    (0, Z.LS)(a, await i._s.getLanguageTokens(t))
                                } catch (e) {
                                    (0, W.trackAndLogApiError)("load_user_language_tokens_failed", "Failed to load language tokens", e)
                                }
                            })()
                        }));
                        const U = async () => {
                            try {
                                const e = await i.bG.requestGradingConfig();
                                (0, C.tc)(e)
                            } catch (e) {
                                (0, W.trackAndLogApiError)("load_user_grading_config_failed", "Failed to download client-side grading config.", e)
                            }
                        };
                        (0, C.gE)() && (e ? U() : await U()), g(l.i()), (0, x.h0)().set(F.PD), g(c.GG()), g(d.b5()), g(c.tD(b.id, window.duo.uiLanguage)), g(v._(b.id, !0)), g(n._()), g((y = b.id, E = b.fromLanguage, (e, t) => {
                            var a;
                            (null === (a = (0, r.Mb)(t()).featureFlags) || void 0 === a ? void 0 : a.web_fetch_avatars_info) || (e((e => async t => {
                                t({
                                    payload: await i.Kz.getUserBuiltAvatar(e),
                                    type: "SET_BUILT_AVATAR_STATE"
                                })
                            })(y)), e(((e, t) => async a => {
                                a({
                                    payload: await i.Kz.getAvatarBuilderConfig(e, t),
                                    type: "SET_AVATAR_BUILDER_CONFIG"
                                })
                            })(y, E)))
                        })), void 0 === (0, S.cL)(f()) && g(o.pe())
                    } catch (e) {
                        (0, W.trackAndLogApiError)("load_user_failed", "Failed to load user", e)
                    }
                    var y, E;
                    (0, W.startTracking)()
                },
                q = () => async e => {
                    try {
                        const t = await i.Vi.getUserXPSummaries((0, $.Jb)(), (0, L.zM)((0, L.RF)({
                            days: 365
                        })));
                        e({
                            type: "SET_XP_SUMMARIES",
                            xpSummaries: Object.fromEntries(t.map((e => [(0, L.zK)(e.date), e])))
                        })
                    } catch (e) {
                        (0, W.trackAndLogApiError)("load_xp_summaries_failed", "Failed to load xp summaries", e)
                    }
                },
                Q = (e, t = !0, a = !1) => async (n, o) => {
                    var l, c;
                    const p = {
                        trackingProperties: !0,
                        ...e
                    };
                    delete p.currentPassword, "facebookToken" in e && (p.email = !0, p.facebookId = !0, p.hasFacebookId = !0, p.name = !0, delete p.facebookToken), "googleToken" in e && (p.email = !0, p.googleId = !0, p.hasGoogleId = !0, p.name = !0, delete p.googleToken), "googleIdToken" in e && (p.email = !0, p.googleId = !0, p.hasGoogleId = !0, p.name = !0, delete p.googleIdToken), e.learningLanguage && (p.courses = !0, p.currentCourse = !0), "password" in e && (p.name = !0, p.username = !0, delete p.password), "timezone" in e && (p.timezoneOffset = !0), "age" in e && (p.adsConfig = !0, p.privacySettings = !0, delete p.age);
                    const h = a ? await D.e("SIGNUP") : null,
                        v = s.ZP.keys(p).sort();
                    if (e.picture instanceof File) {
                        try {
                            await i.d0.uploadAvatar(e.picture), (0, W.track)("profile_picture_activity_result", {
                                is_success: !0
                            })
                        } catch {
                            (0, W.track)("profile_picture_activity_result", {
                                is_success: !1
                            })
                        }
                        delete e.picture
                    }
                    if (void 0 !== e.password) try {
                        const t = await i.Vi.checkPasswordQuality({
                            context: a ? i.Vi.PasswordContext.SIGN_UP : i.Vi.PasswordContext.CHANGE_PASSWORD,
                            password: e.password,
                            uiLanguage: window.duo.uiLanguage
                        });
                        if (!t.allowed) throw new T.Wj(!1, {
                            password: t.reason
                        })
                    } catch (e) {
                        if (e instanceof T.Wj) throw e;
                        console.error(e)
                    }
                    try {
                        const t = await i.Vi.userUpdate((0, $.Jb)(), { ...e,
                            picture: e.picture
                        }, v, h);
                        if (n(m(t)), "age" in e) {
                            const e = (0, r.Mb)(o()).ipCountry,
                                t = (0, V.Ay)((0, I.I9)(o()), Date.now());
                            n(u.ke()), n(u.Hm(e, t))
                        }
                        n({
                            type: "UPDATE_USER",
                            user: { ...s.ZP.object(v.map((e => [e, null]))),
                                ...t
                            }
                        }), e.privacySettings && (0, W.track)("privacy_settings_update", {
                            public_profile: !e.privacySettings.includes("DISABLE_SOCIAL")
                        });
                        const a = (0, r.np)(o());
                        if ((0, g.vK)(a.picture), a.learningLanguage) {
                            const {
                                dailyQuest: t,
                                coreQuest: a,
                                hardQuest: s
                            } = (0, y.oV)(o()), r = [null == t ? void 0 : t.metric, null == a ? void 0 : a.metric, null == s ? void 0 : s.metric];
                            (!1 === e.enableMicrophone && r.includes("SPEAK_CHALLENGES") || !1 === e.enableSpeaker && r.includes("LISTEN_CHALLENGES")) && n(d.Up())
                        }
                    } catch (e) {
                        const a = t && (0, i.Hx)(e) ? null === (c = null === (l = e.response) || void 0 === l ? void 0 : l.data) || void 0 === c ? void 0 : c.details : void 0;
                        throw t ? a ? (0, T.lV)(a) : {} : e
                    }
                },
                K = e => async (t, a) => {
                    const s = (0, r.np)(a()).blockedUserIds || [];
                    s.includes(e) || (await i.i_.block(e), t({
                        type: "UPDATE_USER",
                        user: {
                            blockedUserIds: [e, ...s]
                        }
                    }), t(v._((0, $.Jb)(), !0)))
                },
                Y = e => async (t, a) => {
                    const s = (0, r.np)(a()).blockedUserIds || [];
                    s.includes(e) && (await i.i_.unblock(e), t({
                        type: "UPDATE_USER",
                        user: {
                            blockedUserIds: s.filter((t => t !== e))
                        }
                    }))
                },
                J = (e = "/") => async t => {
                    await t(X()), await (0, z.Zs)(e)
                },
                X = () => async (e, t) => {
                    await (async (e, t) => {
                        const a = (0, E.d)(t());
                        await (0, W.track)("sign_out", {}, !1), e({
                            type: "LOGOUT"
                        }), (0, p.Sk)((0, r.np)(t())) || (0, Z.cl)(Z.Qt.LoggedOutExperiments);
                        try {
                            const e = await (0, O.b)();
                            await e.clear("prefetchedSessions"), await e.clear("submittableRequests")
                        } catch (e) {
                            (0, U.Kp)(e)
                        }
                        try {
                            await (0, B.r1)(a)
                        } catch (e) {
                            (0, U.Kp)("Failed to unsubscribe from push notifications", {
                                ex: e
                            })
                        }
                    })(e, t), (0, E.d)(t()) || await i.d0.logout(), (0, i.ub)()
                },
                ee = (e, t) => async a => {
                    try {
                        if (await a(((e, t) => async a => {
                                await (0, T.pK)(e, t), await a(j({
                                    forNewTrialUser: !0
                                })), a((async e => {
                                    try {
                                        e({
                                            type: "UPDATE_USER",
                                            user: {
                                                currentCourse: (await i.Vi.userInfoPartial((0, $.Jb)(), ["currentCourse"])).currentCourse
                                            }
                                        })
                                    } catch (e) {
                                        (0, U.Kp)(e)
                                    }
                                })), (0, W.track)("welcome", {})
                            })(e, t)), t && t !== M.h9) {
                            (0, R.d8)(R.Vj.ShouldTrackWelcome, "true");
                            const e = H.BA.findIndex((e => "coursePicker" === e)) + 1;
                            await (0, z.Zs)(`/welcome?${H.lE}=${H.BA[e]}`)
                        } else N.m8.push("/welcome")
                    } catch (e) {}
                },
                te = ({
                    courseId: e,
                    fromLanguage: t,
                    learningLanguage: a,
                    redirectToHome: s,
                    resetScrollPosition: n
                }) => async (r, o) => {
                    const l = window.location.pathname === z.B6 && (0, b.N9)(o())({
                        fromLanguageId: t,
                        learningLanguageId: a
                    });
                    l && G.Z.start("language_switch");
                    const c = {
                        from_language: t,
                        learning_language: a
                    };
                    e && (c.course_id = e), (0, W.track)("switch_language", c), r({
                        type: "SWITCH_COURSE"
                    }), r({
                        name: "skillTreeMigration",
                        type: "CAN_SHOW_HOME_MESSAGE"
                    }), s && window.location.pathname !== z.B6 && N.m8.push(z.B6), n && w.O.scrollTo(0, 0), await f.SL;
                    try {
                        r({
                            type: "UPDATE_USER",
                            user: await i.Vi.userUpdate((0, $.Jb)(), {
                                fromLanguage: t,
                                learningLanguage: a
                            }, ["courses", "currentCourse", "fromLanguage", "learningLanguage"])
                        }), r(d.Up()), l && G.Z.finish("language_switch"), t !== M.h9 && await (0, z.Zs)()
                    } catch (e) {
                        (0, W.trackAndLogApiError)("switch_course_failed", "Failed to switch course", e)
                    } finally {
                        r({
                            type: "SWITCH_COURSE_END"
                        })
                    }
                },
                ae = () => async e => {
                    try {
                        const t = await i.Vi.getUserInventory();
                        e({
                            inventory: s.ZP.indexBy(t, "itemName"),
                            type: "UPDATE_INVENTORY"
                        })
                    } catch (e) {
                        (0, W.trackAndLogApiError)("load_user_inventory_failed", "Failed to load user inventory", e)
                    }
                },
                se = e => async t => {
                    const a = await i.Vi.updatePrivacySettings(e);
                    t({
                        type: "UPDATE_USER",
                        user: {
                            privacySettings: a
                        }
                    }), (0, W.track)("privacy_settings_update", {
                        public_profile: !a.includes("DISABLE_SOCIAL")
                    })
                }
        },
        37993: (e, t, a) => {
            "use strict";
            a.d(t, {
                I: () => h,
                R: () => g
            });
            var s = a(99369),
                n = a(80254),
                r = a(68903),
                i = a(8718),
                o = a(77042),
                l = a(18513),
                c = a(20662),
                d = a(43094),
                u = a(79465);
            const g = ["monthlyChallengeComplete", "streakExplainer", "streakSociety"],
                p = {
                    audio: {
                        instructionId: 0,
                        playState: "PAUSE",
                        seekTo: 0,
                        speed: 1
                    },
                    baseXp: 14,
                    fromLanguage: void 0,
                    isListenModeReadOption: !1,
                    learningLanguage: void 0,
                    listenModeCharacterIds: [],
                    masterVersion: !1,
                    mode: "READ",
                    speakingDisabledLineIndex: -1,
                    storyAudioLoadState: "UNDEFINED",
                    trackingProperties: {}
                },
                m = e => setTimeout(e),
                h = (e = (0, s.from)(p), t) => {
                    var a, h, v, _, f, S, y, E, b, I, w, k, T, C, R, L, A, P, D, N, O, x, F, M, U, H, G, V, B, z, Z, W, $, j, q, Q, K, Y, J, X, ee, te, ae, se;
                    switch (t.type) {
                        case "stories/UNLOAD_STORY":
                            return e.audio && "PLAY" === e.audio.playState && (e = (0, s.merge)(e, {
                                audio: (0, o.EU)({
                                    playState: "PAUSE"
                                })(e.audio)
                            })), e.storyElements && (0, o.FG)(e.storyElements), (0, s.merge)(e, {
                                audioPrefetchState: void 0,
                                pendingAudio: void 0,
                                storyAudioLoadState: "UNDEFINED",
                                storyElements: void 0,
                                storyId: void 0,
                                storyRevision: void 0,
                                storySession: void 0,
                                trackingProperties: void 0
                            });
                        case "stories/SELECT_STORY":
                            return (0, s.merge)(e, {
                                masterVersion: t.masterVersion,
                                storyId: t.storyId,
                                storySession: void 0
                            });
                        case "stories/SET_STORY":
                            return (0, s.merge)(e, {
                                audioPrefetchState: t.audioPrefetchState,
                                baseXp: t.baseXp,
                                cefrLevel: t.cefrLevel,
                                conversationModeListenCharacterIds: t.conversationModeListenCharacterIds,
                                conversationModeSpeakCharacterIds: t.conversationModeSpeakCharacterIds,
                                conversationModeSpeakLineIds: t.conversationModeSpeakLineIds,
                                fallbackElements: t.fallbackElements,
                                fromLanguage: t.storyFromLanguage,
                                illustrations: t.illustrations,
                                isListenModeReadOption: t.isListenModeReadOption,
                                learningLanguage: t.storyLanguage,
                                levelData: t.levelData,
                                listenModeCharacterIds: t.listenModeCharacterIds,
                                loadTime: t.startTime,
                                mode: t.mode,
                                multiPartInfo: t.multiPartInfo,
                                showPromptsInTargetLanguage: t.showPromptsInTargetLanguage,
                                speakingDisabledLineIndex: t.speakingDisabledLineIndex,
                                storyAudioLoadState: "LOADING",
                                storyElements: t.storyElements,
                                storyFromLanguageName: t.fromLanguageName,
                                storyId: t.storyId,
                                storyRevision: t.storyRevision,
                                storySession: void 0,
                                trackingConstants: t.trackingConstants,
                                trackingProperties: t.trackingProperties
                            });
                        case "stories/AUDIO_FOR_ELEMENT_PREFETCHED":
                            return e.audioPrefetchState ? (0, s.merge)(e, {
                                audioPrefetchState: (0, s.merge)(e.audioPrefetchState, {
                                    [t.elementIndex]: !0
                                })
                            }) : e;
                        case "stories/UPDATE_STORY_AUDIO_FILE_LOAD_STATE":
                            return (e = (0, s.merge)(e, {
                                storyAudioLoadState: t.state
                            })).pendingAudio && (e = (0, s.merge)(e, {
                                audio: e.pendingAudio,
                                pendingAudio: void 0
                            })), e;
                        case "stories/START_STORY":
                            {
                                const n = {
                                        elementIndex: (0, i.HD)(e),
                                        textIndex: 0
                                    },
                                    r = {
                                        completed: !1,
                                        furthestPosition: n,
                                        grammarCorrectionRequestStatus: "not-done",
                                        hintPosition: void 0,
                                        hintsUsed: [],
                                        maxScore: 0,
                                        onboardingStep: void 0,
                                        score: 0,
                                        selectedPosition: n,
                                        speakCount: 0,
                                        startTime: null !== (a = e.loadTime) && void 0 !== a ? a : Date.now(),
                                        status: "in-progress",
                                        storyCompleteRequestStatus: "ok",
                                        timeline: [{
                                            time: t.time / 1e3,
                                            type: "line-start"
                                        }],
                                        viewedIntroCard: null === (h = e.storySession) || void 0 === h ? void 0 : h.viewedIntroCard
                                    },
                                    l = null === (v = (e = (0, s.merge)(e, {
                                        storySession: r
                                    })).storyElements) || void 0 === v ? void 0 : v[n.elementIndex],
                                    c = l && (0, i.z_)(l);
                                if (void 0 === c) throw Error("Unexpected type for first element");
                                const d = null !== (_ = c.audioPrefix) && void 0 !== _ ? _ : c.audio,
                                    u = (0, o.EU)({
                                        audioSyncModel: d,
                                        playState: "PLAY"
                                    })(e.audio),
                                    g = "LOAD_SUCCESS" === e.storyAudioLoadState;
                                return e = (0, s.merge)(e, {
                                    audio: g ? u : e.audio,
                                    pendingAudio: g ? void 0 : u
                                })
                            }
                        case "stories/AUTO_ADVANCE_STORY_POSITION":
                            {
                                const a = e.storySession,
                                    n = e.storyElements,
                                    r = null == n ? void 0 : n[t.position.elementIndex];
                                if ("HINT_ONBOARDING" === (null == r ? void 0 : r.type) && 0 === (null == a ? void 0 : a.hintsUsed.length) && (e = (0, s.merge)(e, {
                                        storySession: (0, s.merge)(a, {
                                            onboardingStep: "newUser" === r.onboardingType ? "tap-translation-hint" : void 0
                                        })
                                    })), (!(null == a ? void 0 : a.selectedPosition) || t.position.elementIndex > a.selectedPosition.elementIndex) && r && (0, i.P3)(r)) {
                                    if (void 0 === e.fromLanguage || void 0 === e.learningLanguage) throw Error("From- or learning language cannot be undefined during story.");
                                    const a = (0, l.FE)(r, t.position.elementIndex, null !== (S = null === (f = e.storySession) || void 0 === f ? void 0 : f.hintsUsed) && void 0 !== S ? S : [], t.showLengthReducedMatchChallenge, e.fromLanguage, e.learningLanguage);
                                    e = (0, s.merge)(e, {
                                        storySession: (0, s.merge)(e.storySession, {
                                            challengeSession: a
                                        })
                                    }), a && (m((() => (0, l.M6)(e, a))), e = (0, l.v5)(e))
                                }
                                return (0, d.DG)(e, t.position)
                            }
                        case "stories/AUDIO_STOPPED":
                            return (0, s.merge)(e, {
                                audio: { ...e.audio,
                                    playState: "PAUSE"
                                }
                            });
                        case "stories/SHOW_TRANSCRIPT_HINT":
                            {
                                const a = null === (y = e.storyElements) || void 0 === y ? void 0 : y[t.position.elementIndex];
                                return m((() => (0, u.track)("LINE" === (null == a ? void 0 : a.type) ? "stories_story_translation_hint" : "stories_challenge_translation_hint", { ...e.trackingProperties,
                                    ...null == a ? void 0 : a.trackingProperties,
                                    phrase: t.hint
                                }))),
                                (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        hintPosition: t.position,
                                        hintShownTime: t.time,
                                        hintText: t.hint,
                                        hintsUsed: [...null !== (b = null === (E = e.storySession) || void 0 === E ? void 0 : E.hintsUsed) && void 0 !== b ? b : [], {
                                            phrase: t.text,
                                            translation: t.hint
                                        }]
                                    })
                                })
                            }
                        case "stories/DISMISS_HINT":
                            {
                                const a = e.storySession,
                                    n = 200;
                                return (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        hintPosition: void 0,
                                        hintText: void 0,
                                        hintsUsed: (null == a ? void 0 : a.hintShownTime) && t.time - a.hintShownTime < n ? a.hintsUsed.slice(a.hintsUsed.length - 1) : null == a ? void 0 : a.hintsUsed
                                    })
                                })
                            }
                        case "stories/REPLAY_LINE_AUDIO":
                            {
                                const a = e.storySession,
                                    n = e.storyElements,
                                    r = null == n ? void 0 : n[(0, d.lo)(n, t.elementIndex, !0)];
                                if (!r || !["LINE", "HEADER", "FREEFORM_WRITING_EXAMPLE_RESPONSE", "FREEFORM_WRITING"].includes(r.type)) throw Error("Tried to replay an element of type other than line, header, or example response");
                                if (!(null == a ? void 0 : a.furthestPosition) || !n) throw Error("No story session found when replaying audio");
                                let l = 1;t.elementIndex === (null == a ? void 0 : a.previousReplayElementIndex) && (l = .6);
                                const c = (() => {
                                    var s, o;
                                    switch (r.type) {
                                        case "LINE":
                                            return r.line.content.audioPrefix && n && (0, d.O$)(n, (null == a ? void 0 : a.furthestPosition.elementIndex) || 0) === t.elementIndex + 1 && !(null === (o = null === (s = e.storySession) || void 0 === s ? void 0 : s.challengeSession) || void 0 === o ? void 0 : o.completed) ? r.line.content.audioPrefix : r.line.content.audio;
                                        case "HEADER":
                                            return r.learningLanguageTitleContent.audio;
                                        case "FREEFORM_WRITING_EXAMPLE_RESPONSE":
                                            return (0, i.Au)(r);
                                        case "FREEFORM_WRITING":
                                            if (!a.freeformChallengeSubmittedResponseTtsUrl || !a.freeformChallengeSubmittedResponseWithHints) throw Error("No TTS or hints for user's response!");
                                            return (0, i.Au)({
                                                content: a.freeformChallengeSubmittedResponseWithHints,
                                                ttsURL: a.freeformChallengeSubmittedResponseTtsUrl
                                            })
                                    }
                                    throw Error(`No audio for "${r.type}" element`)
                                })();
                                return m((() => (0, u.track)("stories_audio_replay", { ...e.trackingProperties,
                                    ...r.trackingProperties,
                                    first_replay: t.elementIndex !== a.previousReplayElementIndex,
                                    furthest_line: (0, d.D5)(a.furthestPosition.elementIndex, n)
                                }))),
                                (0, s.merge)(e, {
                                    audio: (0, o.EU)({
                                        audioSyncModel: c,
                                        playState: "PLAY",
                                        speed: l
                                    })(e.audio),
                                    storySession: (0, s.merge)(a, {
                                        previousReplayElementIndex: t.elementIndex,
                                        selectedPosition: {
                                            elementIndex: t.elementIndex,
                                            textIndex: void 0
                                        }
                                    })
                                })
                            }
                        case "stories/ADVANCE_STORY_POSITION":
                            {
                                e = (0, s.merge)(e, {
                                    audio: (0, s.merge)(e.audio, {
                                        playError: !1
                                    })
                                }),
                                e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        hintPosition: void 0
                                    })
                                });
                                const a = (e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        timeline: [...null !== (w = null === (I = e.storySession) || void 0 === I ? void 0 : I.timeline) && void 0 !== w ? w : [], {
                                            time: t.time / 1e3,
                                            type: "line-start"
                                        }]
                                    })
                                })).storyElements;
                                if (!a) throw Error("No story element list found");
                                const n = null === (k = e.storySession) || void 0 === k ? void 0 : k.furthestPosition.elementIndex,
                                    r = t.position.elementIndex,
                                    u = a[r],
                                    g = a[(0, d.lo)(a, r, void 0 !== (null === (T = e.storySession) || void 0 === T ? void 0 : T.freeformChallengeSubmittedResponseTtsUrl))];
                                (!n || r > n) && (e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: void 0
                                    })
                                }));
                                const p = "LINE" === u.type && e.storyElements && "CONVERSATION" === e.mode && -1 === e.speakingDisabledLineIndex && "SPEAK" === (0, c.gu)({
                                    conversationModeSpeakCharacterIds: null !== (C = e.conversationModeSpeakCharacterIds) && void 0 !== C ? C : [],
                                    conversationModeSpeakLineIds: null !== (R = e.conversationModeSpeakLineIds) && void 0 !== R ? R : [],
                                    line: u.line,
                                    lineIndex: (0, i.IG)(u),
                                    listenModeCharacterIds: [],
                                    mode: e.mode,
                                    nextElement: a[r + 1]
                                });
                                if (u && (0, i.P3)(u) || p) {
                                    if (void 0 === e.fromLanguage || void 0 === e.learningLanguage) throw Error("From- or learning language cannot be undefined during story.");
                                    const a = (0, l.FE)(u, r, null !== (A = null === (L = e.storySession) || void 0 === L ? void 0 : L.hintsUsed) && void 0 !== A ? A : [], t.showLengthReducedMatchChallenge, e.fromLanguage, e.learningLanguage);
                                    e = (0, s.merge)(e, {
                                        storySession: (0, s.merge)(e.storySession, {
                                            challengeSession: a
                                        })
                                    }), a && (m((() => (0, l.M6)(e, a))), e = (0, l.v5)(e))
                                }
                                const h = "LINE" === (null == u ? void 0 : u.type) ? t.position : { ...t.position,
                                    textIndex: "LINE" === (null == g ? void 0 : g.type) ? g.line.content.text.length - 1 : 0
                                };e = (0, d.DG)(e, h);
                                const v = a[h.elementIndex],
                                    _ = (0, i.z_)(v);
                                if (_) {
                                    const a = null !== (P = _.audioPrefix) && void 0 !== P ? P : _.audio;
                                    e = (0, s.set)(e, "audio", (0, o.EU)({
                                        audioSyncModel: a,
                                        playState: "PLAY",
                                        seekTo: (0, d.SU)(a, null !== (D = h.textIndex) && void 0 !== D ? D : 0),
                                        speed: t.playbackRate
                                    })(e.audio))
                                }
                                return e
                            }
                        case "stories/SELECT_MULTIPLE_CHOICE":
                            {
                                let a;
                                if (!e.storySession) throw Error("No story session found");
                                const n = e.storySession.furthestPosition,
                                    r = e.storySession.challengeSession;
                                if ("multiple-choice" !== (null == r ? void 0 : r.type)) throw Error("Unexpected challenge type");
                                const c = (0, s.set)(e.storySession, "challengeSession", (r => {
                                    var i;
                                    const l = [...r.selectedIndices, t.index],
                                        c = void 0 !== r.additionalCorrectAnswerIndices && r.additionalCorrectAnswerIndices.length > 0,
                                        d = c ? r.additionalCorrectAnswerIndices.every((e => l.includes(e))) && l.includes(r.correctAnswerIndex) : l.includes(r.correctAnswerIndex),
                                        u = null === (i = e.storyElements) || void 0 === i ? void 0 : i[n.elementIndex - 1];
                                    d && "LINE" === (null == u ? void 0 : u.type) && u.line.content.audioSuffix && (a = (0, o.EU)({
                                        audioSyncModel: u.line.content.audioSuffix,
                                        playState: "PLAY"
                                    }));
                                    const g = {
                                        mistakeCount: t.index === r.correctAnswerIndex || c && r.additionalCorrectAnswerIndices.includes(t.index) ? r.mistakeCount : r.mistakeCount + 1,
                                        selectedIndices: l
                                    };
                                    return (0, s.merge)(r, g)
                                })(r));e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, c)
                                }),
                                a && (e = (0, s.set)(e, "audio", a(e.audio))),
                                (0, i.Xq)(r.correctAnswerIndex, t.index, r.selectedIndices, r.additionalCorrectAnswerIndices) && (e = (0, l.Q5)(e), m((() => (0, l.S5)(e))));
                                const d = null === (N = e.storySession) || void 0 === N ? void 0 : N.challengeSession;
                                return m((() => (0, u.track)("stories_select_multiple_choice", { ...e.trackingProperties,
                                    ...r.trackingProperties,
                                    select_method: t.selectMethod,
                                    success: !!d && 0 === d.mistakeCount
                                }))),
                                e
                            }
                        case "stories/SELECT_PHRASE":
                            {
                                if ("select-phrases" !== (null === (x = null === (O = e.storySession) || void 0 === O ? void 0 : O.challengeSession) || void 0 === x ? void 0 : x.type)) throw Error("Unexpected type");
                                const a = null === (F = e.storySession) || void 0 === F ? void 0 : F.challengeSession,
                                    n = t.optionIndex === a.correctAnswerIndex ? 0 : 1;e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(e.storySession.challengeSession, {
                                            mistakeCount: e.storySession.challengeSession.mistakeCount + n,
                                            selectedIndices: [...e.storySession.challengeSession.selectedIndices, t.optionIndex]
                                        })
                                    })
                                }),
                                t.optionIndex === a.correctAnswerIndex && (e = (0, l.Q5)(e), m((() => (0, l.S5)(e))));
                                const r = null === (M = e.storySession) || void 0 === M ? void 0 : M.challengeSession;
                                return m((() => (0, u.track)("stories_select_multiple_choice", { ...e.trackingProperties,
                                    ...a.trackingProperties,
                                    select_method: t.selectMethod,
                                    success: !!r && 0 === r.mistakeCount
                                }))),
                                e
                            }
                        case "stories/SELECT_MATCH_TOKEN":
                            {
                                if ("match" !== (null === (H = null === (U = e.storySession) || void 0 === U ? void 0 : U.challengeSession) || void 0 === H ? void 0 : H.type)) throw Error("Challenge type is incorrect. It should be 'match'.");
                                const a = e.storySession.challengeSession,
                                    r = n.cx(a.tokens, {
                                        status: "selected"
                                    }),
                                    i = a.tokens[r],
                                    o = a.tokens[t.index];
                                if (t.index === r) e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            tokens: a.tokens.map(((e, a) => a === t.index ? (0, s.set)(e, "status", "initial") : e))
                                        })
                                    })
                                });
                                else if (i && i.language !== o.language) {
                                    const n = a.dictionary[`from:${i.text}`],
                                        c = o.text === n ? "correct" : "incorrect",
                                        d = a.tokens.map(((e, a) => a === t.index || a === r ? (0, s.set)(e, "status", c) : e)),
                                        u = "correct" === c && d.every((e => "correct" === e.status));
                                    e = (0, s.merge)(e, {
                                        storySession: (0, s.merge)(e.storySession, {
                                            challengeSession: (0, s.merge)(a, {
                                                mistakeCount: a.mistakeCount + ("incorrect" === c ? 1 : 0),
                                                tokens: d
                                            })
                                        })
                                    }), u && (e = (0, l.Q5)(e), m((() => (0, l.S5)(e))))
                                } else e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            tokens: a.tokens.map(((e, a) => a === t.index ? (0, s.set)(e, "status", "selected") : a === r || "incorrect" === e.status ? (0, s.set)(e, "status", "initial") : e))
                                        })
                                    })
                                });
                                return e
                            }
                        case "stories/SELECT_ARRANGE_PHRASE":
                            {
                                const a = null === (G = e.storySession) || void 0 === G ? void 0 : G.challengeSession;
                                if ("arrange" !== (null == a ? void 0 : a.type)) throw Error("Unexpected type");
                                const n = null === (V = e.storySession) || void 0 === V ? void 0 : V.furthestPosition,
                                    r = n ? null === (B = e.storyElements) || void 0 === B ? void 0 : B[n.elementIndex] : void 0;
                                if ("ARRANGE" !== (null == r ? void 0 : r.type)) throw Error("Unexpected challenge type");
                                if (r.selectablePhrases[t.index] === r.selectablePhrases[r.phraseOrder[a.arrangedPhrases]]) {
                                    const n = [...a.phraseOrder];
                                    t.index !== r.phraseOrder[a.arrangedPhrases] && (n[a.arrangedPhrases] = t.index, n[n.indexOf(t.index)] = r.phraseOrder[a.arrangedPhrases]);
                                    const i = a.arrangedPhrases + 1;
                                    return e = (0, s.merge)(e, {
                                        storySession: (0, s.merge)(e.storySession, {
                                            challengeSession: (0, s.merge)(a, {
                                                arrangedPhrases: i,
                                                phraseOrder: n,
                                                selectedIncorrectIndices: []
                                            })
                                        })
                                    }), i >= r.selectablePhrases.length && (e = (0, l.Q5)(e), m((() => (0, l.S5)(e)))), e
                                }
                                return (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            mistakeCount: a.selectedIncorrectIndices.includes(t.index) ? a.mistakeCount : a.mistakeCount + 1,
                                            selectedIncorrectIndices: [...a.selectedIncorrectIndices.filter((e => e !== t.index)), t.index]
                                        })
                                    })
                                })
                            }
                        case "stories/SET_STORY_COMPLETE_REQUEST_STATUS":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    storyCompleteRequestStatus: t.status
                                })
                            });
                        case "stories/SET_GRAMMAR_CORRECTION_REQUEST_STATUS":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    grammarCorrectionRequestStatus: t.status,
                                    grammarCorrectionTimeTaken: t.timeTaken
                                })
                            });
                        case "stories/COMPLETE_STORY":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    challengeSession: void 0,
                                    nextMode: (0, s.from)(t.nextMode),
                                    onboardingStep: void 0,
                                    pendingStoryEndSections: (0, s.from)(t.storyEndSections),
                                    status: "story-end",
                                    storyCompleteRequestStatus: "ok",
                                    visibleStoryEndSections: (0, s.from)([])
                                })
                            });
                        case "stories/SHOW_NEXT_STORY_END_SECTION":
                            {
                                if (!(null === (z = e.storySession) || void 0 === z ? void 0 : z.furthestPosition)) return e;
                                if ((0, d.DG)(e, e.storySession.furthestPosition), !e.storySession.pendingStoryEndSections) return e;
                                if (e.storySession.pendingStoryEndSections.length < t.increment) return (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        status: "completed"
                                    })
                                });
                                const a = e.storySession.pendingStoryEndSections[t.increment - 1],
                                    n = e.storySession.pendingStoryEndSections.slice(t.increment);m((() => {
                                    var t, s, n, r, i, o;
                                    (null === (s = null === (t = e.storySession) || void 0 === t ? void 0 : t.pendingStoryEndSections) || void 0 === s ? void 0 : s.length) && (0, u.track)("stories_show_end_section", {
                                        end_section_position: null !== (r = null === (n = e.storySession.visibleStoryEndSections) || void 0 === n ? void 0 : n.length) && void 0 !== r ? r : 0,
                                        end_section_type: a.type,
                                        total_end_sections: (null !== (o = null === (i = e.storySession.visibleStoryEndSections) || void 0 === i ? void 0 : i.length) && void 0 !== o ? o : 0) + e.storySession.pendingStoryEndSections.length
                                    })
                                }));
                                const i = void 0 !== e.storySession.fullscreenStoryEndSection,
                                    o = (0, r.p)(g)(a.type) ? a : void 0;
                                return (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        fullscreenStoryEndSection: o,
                                        pendingStoryEndSections: n,
                                        status: 0 === n.length ? "completed" : "story-end",
                                        useImmediateScrolling: i,
                                        visibleStoryEndSections: [...null !== (Z = e.storySession.visibleStoryEndSections) && void 0 !== Z ? Z : [], a]
                                    })
                                })
                            }
                        case "stories/SET_EDITING_TEXT":
                            return (null === (W = e.storySession) || void 0 === W ? void 0 : W.challengeSession) ? (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    challengeSession: (0, s.merge)(e.storySession.challengeSession, {
                                        answer: t.text
                                    })
                                })
                            }) : e;
                        case "stories/SET_CORRECTED_TEXT":
                            return "freeform-writing" !== (null === (j = null === ($ = e.storySession) || void 0 === $ ? void 0 : $.challengeSession) || void 0 === j ? void 0 : j.type) ? e : (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    challengeSession: (0, s.merge)(e.storySession.challengeSession, {
                                        answer: t.correctedText,
                                        fetchedCorrection: t.correctedText
                                    }),
                                    freeformChallengeCorrectedResponse: t.correctedText,
                                    freeformChallengeCorrectionId: t.correctionId,
                                    freeformChallengeCorrectionModel: t.model,
                                    freeformChallengeCorrectionModelVersion: t.modelVersion,
                                    freeformChallengeOriginalResponse: t.originalText
                                })
                            });
                        case "stories/RE_EDIT_TEXT":
                            return (null === (q = e.storySession) || void 0 === q ? void 0 : q.challengeSession) ? (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    challengeSession: (0, s.merge)(e.storySession.challengeSession, {
                                        allowEditAfterGrammarCheck: !0
                                    })
                                })
                            }) : e;
                        case "stories/DISMISS_CORRECTION":
                            {
                                const a = null === (Q = e.storySession) || void 0 === Q ? void 0 : Q.challengeSession;
                                return "freeform-writing" !== (null == a ? void 0 : a.type) ? e : (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            answer: t.text,
                                            numberOfCorrectionsDismissed: a.numberOfCorrectionsDismissed + 1
                                        })
                                    })
                                })
                            }
                        case "stories/START_CHALLENGE":
                            {
                                const a = null === (K = e.storySession) || void 0 === K ? void 0 : K.challengeSession;
                                return a && "freeform-writing" === a.type ? (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            startTime: t.startTime
                                        })
                                    })
                                }) : e
                            }
                        case "stories/DID_SCROLL_DURING_FREEFORM_CHALLENGE":
                            {
                                const t = null === (Y = e.storySession) || void 0 === Y ? void 0 : Y.challengeSession;
                                return t && "freeform-writing" === t.type ? (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(t, {
                                            didScroll: !0
                                        })
                                    })
                                }) : e
                            }
                        case "stories/TYPE_TEXT_SUBMIT":
                            return e = (0, l.vX)(e, t.gradingResult), e = (0, l.Q5)(e), m((() => (0, l.S5)(e))), e;
                        case "stories/FREEFORM_WRITING_SUBMIT":
                            return e = (0, l.Om)(e), e = (0, l.Q5)(e), m((() => (0, l.S5)(e))), (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    freeformChallengeSubmittedResponseWithHints: t.responseWithHints,
                                    responseTtsStatus: "done"
                                })
                            });
                        case "stories/ONBOARDING_HINT_VIEWED":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    onboardingStep: void 0
                                })
                            });
                        case "stories/ANSWER_POINT_TO_PHRASE":
                            {
                                const a = null === (J = e.storySession) || void 0 === J ? void 0 : J.challengeSession;
                                if ("point-to-phrase" !== (null == a ? void 0 : a.type)) throw Error("Unexpected type");
                                const r = a.correctAnswerIndex,
                                    o = a.additionalCorrectAnswerIndices,
                                    c = t.partIndex === a.correctAnswerIndex || (null == o ? void 0 : o.includes(t.partIndex));
                                return e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            mistakeCount: a.mistakeCount + (c ? 0 : 1),
                                            selectedIndices: n.G0(a.selectedIndices, [t.partIndex])
                                        })
                                    })
                                }),
                                (0, i.Xq)(r, t.partIndex, a.selectedIndices, o) && (e = (0, l.Q5)(e), m((() => (0, l.S5)(e)))),
                                e
                            }
                        case "stories/SET_AUDIO_ERROR":
                            return (0, s.setIn)(e, ["audio", "playError"], !0);
                        case "stories/SET_LINE_AUDIO_DURATION":
                            return (0, s.setIn)(e, ["audio", "duration"], t.duration);
                        case "stories/SKIP_CHALLENGE":
                            {
                                const t = null === (X = e.storySession) || void 0 === X ? void 0 : X.challengeSession;
                                if ("freeform-writing" !== (null == t ? void 0 : t.type)) throw Error("Attempted to skip unskippable challenge");
                                return (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(t, {
                                            skipped: !0
                                        })
                                    })
                                })
                            }
                        case "stories/SET_HOOTS_USER_PROPERTIES":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    freeformUserProperties: t.properties
                                })
                            });
                        case "stories/FREEFORM_WRITING_SET_TTS_URL":
                            if ("freeform-writing" !== (null === (te = null === (ee = e.storySession) || void 0 === ee ? void 0 : ee.challengeSession) || void 0 === te ? void 0 : te.type)) throw Error("Unexpected challenge type");
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    freeformChallengeSubmittedResponseTtsUrl: t.url
                                })
                            });
                        case "stories/FREEFORM_WRITING_PREPARE_SUBMIT":
                            return (0, s.merge)(e, {
                                storySession: (0, s.merge)(e.storySession, {
                                    responseTtsStatus: "in-progress"
                                })
                            });
                        case "stories/USED_KEYBOARD_FOR_MATCH_CHALLENGE":
                            return (0, s.setIn)(e, ["storySession", "usedKeyboardForMatchChallenge"], !0);
                        case "stories/GRADE_SPEAK_LINE":
                            {
                                const a = null === (ae = e.storySession) || void 0 === ae ? void 0 : ae.challengeSession;
                                if ("speak" !== (null == a ? void 0 : a.type)) throw Error(`Unexpected speak challenge on ${null==a?void 0:a.type}`);
                                return e = (0, s.merge)(e, {
                                    storySession: (0, s.merge)(e.storySession, {
                                        challengeSession: (0, s.merge)(a, {
                                            mistakeCount: !0 === t.correct || !0 === t.skipped ? 0 : 1,
                                            skipped: t.skipped
                                        })
                                    })
                                }),
                                e = (0, l.Q5)(e),
                                m((() => (0, l.S5)(e))),
                                e
                            }
                        case "DISABLE_SPEAK":
                            {
                                if (void 0 === e.storySession) return e;
                                const t = e.storyElements,
                                    a = null === (se = e.storySession) || void 0 === se ? void 0 : se.furthestPosition.elementIndex,
                                    n = t && a ? t[a] : void 0;
                                if ("LINE" !== (null == n ? void 0 : n.type)) throw Error(`Unexpected switch to fall back ${null==n?void 0:n.type}`);
                                const r = e.fallbackElements;
                                if (!r) throw Error("No fallback elements");
                                if (!t) throw Error("No elements");
                                const o = (0, i.IG)(n),
                                    l = (0, i.BT)(o, t),
                                    c = t.slice(0, l),
                                    d = (0, i.BT)(o, r),
                                    u = [...c, ...r.slice(d, r.length)];
                                return (0, s.merge)(e, {
                                    speakingDisabledLineIndex: o,
                                    storyElements: u
                                })
                            }
                        case "stories/VIEWED_INTRO_CARD":
                            return (0, s.setIn)(e, ["storySession", "viewedIntroCard"], !0)
                    }
                    return e
                }
        },
        42659: (e, t, a) => {
            "use strict";
            a.d(t, {
                $4: () => B,
                Al: () => Se,
                B8: () => V,
                Bk: () => z,
                Ch: () => C,
                Cm: () => ne,
                EQ: () => u,
                F$: () => ve,
                Fp: () => j,
                Jw: () => D,
                Lm: () => W,
                M6: () => ge,
                MY: () => H,
                Mb: () => l,
                NR: () => oe,
                NT: () => K,
                Oz: () => G,
                Rg: () => fe,
                Rv: () => d,
                S1: () => ue,
                SJ: () => h,
                Sf: () => me,
                Sg: () => g,
                Xr: () => S,
                Y2: () => ie,
                Y4: () => Y,
                YW: () => v,
                Zk: () => o,
                __: () => y,
                aQ: () => ee,
                bE: () => f,
                bR: () => i,
                c1: () => he,
                cQ: () => N,
                dE: () => c,
                dY: () => te,
                dz: () => q,
                eI: () => de,
                ep: () => _,
                ez: () => m,
                fI: () => b,
                fn: () => se,
                gg: () => ae,
                gl: () => le,
                hp: () => w,
                hy: () => M,
                iH: () => I,
                iM: () => U,
                is: () => F,
                jv: () => r,
                lA: () => R,
                mk: () => p,
                nI: () => pe,
                nW: () => _e,
                np: () => O,
                oe: () => A,
                r8: () => X,
                rF: () => k,
                rx: () => ce,
                tz: () => $,
                uZ: () => J,
                vw: () => Z,
                w0: () => L,
                wG: () => Q,
                wW: () => P,
                yV: () => T,
                yW: () => x,
                yk: () => re
            });
            var s = a(30427);
            const n = e => e.avatars,
                r = e => e.browserSettings,
                i = e => e.ui.canShowAgeRestrictedLeaderboardsIntro,
                o = e => e.characters,
                l = e => e.config,
                c = e => e.courses,
                d = e => e.user.fromLanguage,
                u = e => e.ui.homeMessagingClientState,
                g = e => void 0 !== e.ui.drawer && void 0 !== e.ui.modal,
                p = e => void 0 !== e.ui.drawer || void 0 !== e.ui.modal,
                m = e => e.ui.isInventoryFresh,
                h = e => void 0 !== e.ui.modal,
                v = e => e.ui.online,
                _ = e => void 0 !== e.ui.secondaryModal,
                f = e => e.ui.isShopItemsFresh,
                S = e => e.ui.isUserModelFresh,
                y = e => e.items,
                E = e => e.profile,
                b = e => e.uiPersisted.skippedLevelInfo,
                I = e => e.user.learningLanguage,
                w = ({}, e) => e.location,
                k = e => e.ui.modal,
                T = e => e.notifications,
                C = e => e.paymentMethods,
                R = e => e.player,
                L = e => e.animations,
                A = e => e.skills,
                P = e => e.subscriptions,
                D = e => e.ui,
                N = e => e.uiPersisted,
                O = e => e.user,
                x = s.P1(D, (e => e.isAvatarUploading)),
                F = s.P1(R, (e => e.session)),
                M = s.P1(R, F, ((e, t) => t && (e.currentIndex === t.challenges.length - 1 || e.endedEarly || "sessionHearts" === e.heartsType && t.heartsLeft <= 0))),
                U = s.P1(F, (e => {
                    var t;
                    return null !== (t = null == e ? void 0 : e.challenges.filter((e => {
                        var t;
                        return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
                    }))) && void 0 !== t ? t : []
                })),
                H = s.P1(R, F, ((e, t) => null == t ? void 0 : t.challenges[e.currentIndex])),
                G = s.P1(c, O, ((e, t) => {
                    var a, s;
                    if (!t.currentCourseId) return;
                    const n = e[t.currentCourseId];
                    if ((null !== (s = null === (a = n.pathSectioned) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) > 0 && (void 0 === n.path || 0 === n.path.length)) {
                        const e = n.pathSectioned.flatMap((e => e.units));
                        return { ...n,
                            path: e
                        }
                    }
                    return e[t.currentCourseId]
                })),
                V = s.P1((e => e.courseHistories), G, ((e, t) => e[t.id])),
                B = s.P1(D, (e => e.viewportWidth >= 700)),
                z = s.P1(D, (e => e.viewportWidth < 530)),
                Z = s.P1(D, (e => !!e.purchasingItem)),
                W = s.P1(O, (e => !!e.id)),
                $ = s.P1(O, (e => e.streakRepairOffer)),
                j = s.P1(D, (e => e.popover)),
                q = s.P1(E, (e => e.privateProfile)),
                Q = s.P1(E, (e => e.builtAvatar)),
                K = s.P1(E, (e => e.user)),
                Y = s.P1(E, (e => e.socialProfile)),
                J = s.P1(E, (e => e.firstPersonSocialProfile)),
                X = s.P1(E, (e => e.achievements)),
                ee = s.P1(E, (e => e.xpEvents)),
                te = s.P1(O, (e => e.id)),
                ae = s.P1(l, (e => {
                    var t, a, s, n;
                    return "CN" === e.ipCountry && null !== (a = null === (t = e.featureFlags) || void 0 === t ? void 0 : t.disable_avatars_cn) && void 0 !== a && a || null !== (n = null === (s = e.featureFlags) || void 0 === s ? void 0 : s.disable_avatars_global) && void 0 !== n && n
                })),
                se = (s.P1(V, (e => e.numSessionsWithMistakes)), s.P1(y, (e => e.inventory.premium_subscription))),
                ne = s.P1(se, (e => null == e ? void 0 : e.subscriptionInfo)),
                re = s.P1(y, (e => e.inventory.immersive_subscription)),
                ie = (s.P1(y, (e => e.inventory.gold_subscription)), s.P1(y, (e => {
                    var t, a;
                    return null !== (a = null !== (t = e.inventory.premium_subscription) && void 0 !== t ? t : e.inventory.gold_subscription) && void 0 !== a ? a : e.inventory.immersive_subscription
                }))),
                oe = s.P1(y, (e => {
                    var t;
                    return null !== (t = e.inventory.premium_subscription) && void 0 !== t ? t : e.inventory.gold_subscription
                })),
                le = s.P1(R, (e => {
                    var t, a;
                    return null !== (a = null === (t = e.sessionParams) || void 0 === t ? void 0 : t.isGrammarSkill) && void 0 !== a && a
                })),
                ce = e => e.user.gemsConfig,
                de = e => !!e.stories.storySession || !!e.player.session,
                ue = s.P1(N, (e => e.streakSocietyRewardClaimed)),
                ge = s.P1(N, (e => e.streakSocietyInductionSlideShownTime)),
                pe = s.P1(y, (e => {
                    var t, a, s, n;
                    return (null !== (a = null === (t = e.inventory.streak_freeze) || void 0 === t ? void 0 : t.quantity) && void 0 !== a ? a : 0) + (null !== (n = null === (s = e.inventory.society_streak_freeze) || void 0 === s ? void 0 : s.quantity) && void 0 !== n ? n : 0)
                })),
                me = s.P1(n, (e => e.builderConfig)),
                he = (s.P1(n, (e => {
                    var t;
                    return null === (t = e.builderConfig) || void 0 === t ? void 0 : t.riveFileUrl
                })), s.P1(n, (e => e.builtAvatar))),
                ve = s.P1(n, (e => e.canShowAvatarsIntro)),
                _e = s.P1(D, (e => e.swrlEngagement)),
                fe = s.P1(D, (e => e.storyModeSWRLEngagement)),
                Se = s.P1((e => e.streakEarnback), (e => e.earnbackMultiSessionStats))
        },
        46355: (e, t, a) => {
            "use strict";
            a.d(t, {
                Y2: () => c,
                cL: () => o,
                tZ: () => l
            });
            var s = a(30427),
                n = a(42659),
                r = a(16970),
                i = a(34704);
            const o = s.P1(n.Zk, n.Oz, ((e, t) => {
                    const a = (0, i.LP)(t.learningLanguage, t.fromLanguage);
                    return e.characterState[a]
                })),
                l = s.P1(o, (e => {
                    var t;
                    const a = null == e ? void 0 : e.activeAlphabetId;
                    return null === (t = null == e ? void 0 : e.characterChart) || void 0 === t ? void 0 : t.alphabets.find((e => e.id === a))
                })),
                c = s.P1(l, (e => {
                    var t;
                    return (0, r.HZ)(null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "")
                }))
        },
        73520: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ap: () => I,
                B$: () => p,
                Cu: () => h,
                D_: () => o,
                EL: () => d,
                MI: () => k,
                Rc: () => y,
                TE: () => _,
                Ti: () => b,
                W1: () => S,
                ey: () => u,
                gD: () => E,
                jK: () => m,
                kK: () => v,
                oO: () => f,
                oV: () => c,
                uL: () => w,
                x2: () => g,
                xm: () => l
            });
            var s = a(30427),
                n = a(80254),
                r = a(41831),
                i = a(16689);
            const o = e => e.goals,
                l = s.P1(o, (e => n.HK(e.schema, "goalId"))),
                c = s.P1(o, l, ((e, t) => ({
                    coreQuest: e.coreQuest ? t[e.coreQuest] : void 0,
                    dailyQuest: e.dailyQuest ? t[e.dailyQuest] : void 0,
                    difficulty: e.difficulty,
                    hardQuest: e.hardQuest ? t[e.hardQuest] : void 0,
                    lastUpdated: e.lastUpdated
                }))),
                d = s.P1(o, (e => e.progress)),
                u = s.P1(o, (e => e.friendsQuest.details)),
                g = s.P1(o, (e => e.friendsQuest.highFiveTimestamp)),
                p = s.P1(o, (e => e.friendsQuest.lastSentGiftTimestamp)),
                m = s.P1(o, (e => e.friendsQuest.lastSentNudge)),
                h = s.P1(u, (e => null == e ? void 0 : e.winStreak)),
                v = s.P1(o, (e => e.lastSeenNextFriendsQuestStart)),
                _ = s.P1(o, (e => e.monthlyQuestTheme)),
                f = s.P1(o, (e => n.HK(e.badges, "badgeId"))),
                S = s.P1(o, (e => e.monthlyQuest)),
                y = s.P1(o, f, ((e, t) => n.MR(e.earnedBadges, "earnedTimestamp").reverse().map((e => ({ ...t[e.badgeId],
                    ...e
                }))).filter((t => void 0 !== e.schema.find((e => e.badgeId === t.badgeId)))))),
                E = s.P1(o, (e => {
                    var t;
                    const a = e.schema,
                        s = e.monthlyQuest;
                    return null === (t = a.find((e => e.goalId === s))) || void 0 === t ? void 0 : t.badgeId
                })),
                b = s.P1(o, d, l, ((e, t, a) => [e.coreQuest, e.dailyQuest, e.hardQuest].filter((s => {
                    if (s && t) {
                        const n = a[s];
                        return t[s] >= (0, r.ng)(e.difficulty, n)
                    }
                    return !1
                })).length)),
                I = s.P1(o, l, ((e, t) => {
                    var a;
                    return e.monthlyQuest ? null === (a = t[e.monthlyQuest]) || void 0 === a ? void 0 : a.threshold : 30
                })),
                w = s.P1(o, d, I, ((e, t, a) => !(!e.monthlyQuest || !t) && t[e.monthlyQuest] >= a)),
                k = s.P1(f, E, ((e, t) => t ? (0, i.br)(e[t]) : void 0))
        },
        74462: (e, t, a) => {
            "use strict";
            a.d(t, {
                LG: () => d,
                MQ: () => c,
                q0: () => i,
                sJ: () => l,
                su: () => o
            });
            var s = a(30427),
                n = a(42659),
                r = a(1);
            const i = e => e.heartsState,
                o = s.P1([n.np, i, n.Y2, n.Oz], ((e, t, a, s) => (0, r.Ef)(e, t, a, s))),
                l = s.P1([o, i], ((e, t) => r.$E.includes(e) && t.unlimitedHeartsShieldIsOff)),
                c = s.P1([o, l], ((e, t) => "free" === e || t)),
                d = s.P1([i, c], ((e, t) => t && (0, r.is)(e)))
        },
        54174: (e, t, a) => {
            "use strict";
            a.d(t, {
                d: () => r
            });
            var s = a(30427),
                n = a(64115);
            const r = s.P1((e => e.brb.zombie.status), (e => (0, n.gQ)("debugZombieMode") || "enabled" === e))
        },
        4060: (e, t, a) => {
            "use strict";
            a.d(t, {
                Kh: () => A,
                oG: () => D,
                av: () => N,
                fx: () => P,
                WB: () => O
            });
            var s = a(30427),
                n = a(80254),
                r = a(42659),
                i = a(54174),
                o = a(93540),
                l = a(15307),
                c = a(80164),
                d = a(35160),
                u = a(64115),
                g = a(20041),
                p = a(16970),
                m = a(54412),
                h = a(17135),
                v = a(37825),
                _ = a(64865),
                f = a(25447),
                S = a(23275),
                y = a(67280),
                E = a(69243),
                b = a(88787),
                I = a(88868),
                w = a(51551),
                k = a(81621),
                T = a(20028);
            const C = {
                    charactersTabCallout: ({
                        user: e
                    }) => (0, p.S9)(e.learningLanguage, e.fromLanguage) && !("ja" === e.learningLanguage && "en" === e.fromLanguage),
                    dogfoodingPreview: e => (({
                        homeMessagingClientState: e
                    }) => e.dogfoodingPreview)(e) && (0, T.u)(e.user) && window.location.host !== I.Vb && window.location.host !== I.a_ && void 0 === (0, m.ej)(m.Vj.RedirectToPreview),
                    dynamic: () => !0,
                    emailVerified: ({
                        isDesktop: e,
                        user: t
                    }) => t.persistentNotifications.includes(g.Qd.emailVerified) && e && !(0, T.pN)(t),
                    guidebookCallout: ({
                        path: e,
                        user: t
                    }) => {
                        var a;
                        if (!e) return !1;
                        const {
                            unitIndex: s
                        } = null !== (a = (0, S.Bm)(e)) && void 0 !== a ? a : {};
                        return void 0 !== s && !!e[s].guidebook && t.sessionCount >= 3
                    },
                    immersivePlusPromo: ({
                        homeMessagingClientState: e,
                        isDesktop: t,
                        user: a
                    }) => e.immersivePlusPromo && t && !(0, T.pN)(a),
                    kudosOffer: ({
                        kudosDrawer: e,
                        kudosAssets: t
                    }) => !!e && "OFFER" === e.notificationType && void 0 !== t[e.kudosIcon] && void 0 !== t[e.actionIcon],
                    kudosReceive: ({
                        kudosDrawer: e,
                        kudosAssets: t
                    }) => !!e && "RECEIVE" === e.notificationType && void 0 !== t[e.actionIcon],
                    leaderboardsIntro: ({
                        sessionsToUnlockLeagues: e,
                        user: t
                    }) => t.persistentNotifications.includes(g.Qd.leaderboardsIntro) && 0 === e,
                    legendaryRebrandGoldColor: ({
                        path: e
                    }) => (0, v.lZ)(e),
                    maintenanceBreak: () => !1,
                    marketingOptIn: ({
                        homeMessagingClientState: e
                    }) => e.marketingOptIn,
                    mobileWebToAppConversion: ({
                        isDesktop: e,
                        homeMessagingClientState: t
                    }) => t.mobileWebToAppConversion && (0, _.WV)(e),
                    mobileWebToAppConversionAggressive: ({
                        isDesktop: e
                    }) => (0, _.WV)(e),
                    newYearsDiscount: ({
                        homeMessagingClientStatePersisted: e,
                        user: t
                    }) => {
                        var a;
                        const s = Date.now(),
                            n = (0, k.yS)(t),
                            r = (0, y.p4)(t.plusDiscounts, s);
                        return r && void 0 === (null === (a = e.newYearsDiscount) || void 0 === a ? void 0 : a.lastShown) && (n || r.expirationTime - s <= 2 * h.Mb)
                    },
                    pathChange: ({
                        currentCourse: e,
                        homeMessagingClientState: t,
                        path: a
                    }) => {
                        var s;
                        return !!a && t.pathChange && (null === (s = e.pathDetails) || void 0 === s ? void 0 : s.clientNotifications.some((e => "pathChange" === (0, f.c)(e).id)))
                    },
                    pathMigration: ({
                        currentCourse: e,
                        homeMessagingClientState: t,
                        path: a
                    }) => {
                        var s;
                        return !!a && t.pathMigration && (null === (s = e.pathDetails) || void 0 === s ? void 0 : s.clientNotifications.some((e => "pathMigration" === (0, f.c)(e).id)))
                    },
                    pathSectionsCallout: ({
                        path: e
                    }) => !!e,
                    pathSkipping: ({
                        homeMessagingClientStatePersisted: e
                    }) => e.pathSkipping,
                    plusBadge: ({
                        homeMessagingClientState: e,
                        user: t
                    }) => t.hasPlus && e.plusBadge,
                    plusBadgeFamily: ({
                        homeMessagingClientState: e,
                        user: t
                    }) => t.hasPlus && e.plusBadgeFamily,
                    plusBadgeMigration: ({
                        homeMessagingClientStatePersisted: e,
                        user: t
                    }) => t.hasPlus && e.plusBadgeMigration,
                    plusBottomSheetFamilyFollowUp: ({
                        items: e
                    }) => {
                        var t;
                        const a = null !== (t = e.inventory.gold_subscription) && void 0 !== t ? t : e.inventory.premium_subscription,
                            s = null == a ? void 0 : a.familyPlanInfo;
                        return !!s && (0, h.M)(a.purchaseDate, Date.now()) > 3 && 0 === s.secondaryMembers.length && (0, E.GC)()
                    },
                    reactivatedWelcome: ({
                        homeMessagingClientState: e,
                        user: t
                    }) => !(0, T.pN)(t) && e.reactivatedWelcome,
                    resurrectedWelcome: ({
                        homeMessagingClientState: e,
                        user: t
                    }) => !(0, T.pN)(t) && e.resurrectedWelcome,
                    schoolsJoinedClassroom: ({
                        homeMessagingClientState: e
                    }) => !!e.schoolsJoinedClassroom,
                    shakeToReportAlert: ({
                        user: e
                    }) => (0, T.ms)(e),
                    skillTreeMigration: ({
                        user: e
                    }) => e.persistentNotifications.includes(g.Qd.skillTreeMigration),
                    streakFreezeFromDuo: ({
                        homeMessagingClientState: e,
                        items: t,
                        user: a
                    }) => {
                        var s, n, r, i;
                        const o = null === (s = t.shop.misc.duo_streak_freeze) || void 0 === s ? void 0 : s.lastUsedDate,
                            l = null === (n = t.shop.misc.streak_freeze) || void 0 === n ? void 0 : n.lastUsedDate;
                        return (null !== (i = null === (r = a.streakData.currentStreak) || void 0 === r ? void 0 : r.length) && void 0 !== i ? i : 0) >= 1 && void 0 === t.inventory.duo_streak_freeze && void 0 !== o && o > (null != l ? l : 0) && !0 === e.streakFreezeFromDuo
                    },
                    streakFreezeRecurringOffer: ({
                        homeMessagingClientState: e,
                        items: t,
                        user: a
                    }) => {
                        var s, n;
                        const r = (null !== (n = null === (s = a.streakData.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== n ? n : 0) >= 3,
                            i = a.gemsConfig.gems >= w.Fk,
                            o = t.shop.misc.streak_freeze,
                            l = o && o.id in t.inventory;
                        return e.streakFreezeRecurringOffer && r && i && !l
                    },
                    streakFreezeUsed: ({
                        items: e,
                        user: t
                    }) => {
                        var a, s, n, r;
                        if (!t.persistentNotifications.includes(g.Qd.streakFreezeUsed)) return !1;
                        const i = (null !== (s = null === (a = t.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) > 1,
                            o = t.gemsConfig.gems >= w.Fk,
                            l = e.shop.misc.streak_freeze,
                            c = null !== (r = null === (n = e.inventory.streak_freeze) || void 0 === n ? void 0 : n.quantity) && void 0 !== r ? r : 0;
                        return i && o && l && c < 2
                    },
                    streakRepairOffer: ({
                        homeMessagingClientStatePersisted: e,
                        user: t
                    }) => {
                        var a;
                        return void 0 !== t.streakRepairOffer && void 0 === (null === (a = e.streakRepairOffer) || void 0 === a ? void 0 : a.lastClosed)
                    },
                    superFamilyPlanInvite: ({
                        user: e
                    }) => {
                        var t, a;
                        return "PENDING" === (null === (a = null === (t = e.familyPlanInviteReceived) || void 0 === t ? void 0 : t.invite) || void 0 === a ? void 0 : a.status) && !(0, T.pN)(e)
                    },
                    superPreviewEndingCallout: ({
                        homeMessagingClientState: {
                            superPreviewEndingCallout: e
                        }
                    }) => !!e,
                    turningNotificationsOn: e => (({
                        homeMessagingClientState: e
                    }) => e.turningNotificationsOn)(e) && (0, b.Hd)() && "default" === Notification.permission,
                    webToAppConversion: ({
                        homeMessagingClientState: e,
                        isDesktop: t,
                        user: a
                    }) => !(0, T.pN)(a) && e.webToAppConversion && t,
                    webToAppConversionAggressive: e => void 0 !== (0, _.TI)() && (({
                        homeMessagingClientState: e,
                        isDesktop: t,
                        user: a
                    }) => !(0, T.pN)(a) && e.webToAppConversionAggressive && t)(e)
                },
                R = C,
                L = s.zB({
                    config: r.Mb,
                    currentCourse: r.Oz,
                    homeMessagingClientState: r.EQ,
                    homeMessagingClientStatePersisted: e => e.uiPersisted.homeMessagingClientState,
                    isDesktop: r.$4,
                    isShopItemsFresh: r.bE,
                    isUserModelFresh: r.Xr,
                    isZombieMode: i.d,
                    items: r.__,
                    kudosAssets: e => e.friends.assets,
                    kudosDrawer: e => e.friends.drawer,
                    path: o.HF,
                    shouldOfferSuperDuolingo: c.tE,
                    student: l.Bs,
                    user: r.np
                }),
                A = s.P1(L, ((e, t) => t), (({
                    isUserModelFresh: e,
                    isZombieMode: t,
                    path: a,
                    shouldOfferSuperDuolingo: s,
                    user: n,
                    ...r
                }, i) => {
                    return n.id && e && !t && void 0 !== a && void 0 !== s ? [(o = {
                        isUserModelFresh: e,
                        path: a,
                        sessionsToUnlockLeagues: i,
                        shouldOfferSuperDuolingo: s,
                        user: n,
                        ...r
                    }, g.Iu.filter((e => (0, u.ky)("debugHomeMessage") === e || R[e](o)))), !0] : [
                        [], !1
                    ];
                    var o
                }), {
                    memoizeOptions: {
                        resultEqualityCheck: n.Xy
                    }
                }),
                P = s.P1(r.w0, r.Jw, ((e, t) => e.some((e => e.blocksHomeMessages)) && (void 0 === t.toast || !t.toastIsUhmManaged) || void 0 !== t.drawer && !t.drawerIsUhmManaged || void 0 !== t.modal && !t.modalIsUhmManaged || void 0 !== t.toast && !t.toastIsUhmManaged ? void 0 : t.homeMessage)),
                D = s.P1(P, r.Jw, ((e, t) => void 0 === e ? void 0 : t.homeMessageData)),
                N = s.P1(r.Jw, (e => {
                    var t;
                    return (null === (t = e.modal) || void 0 === t ? void 0 : t.name) === d.t.HomeMessage ? e.modal.homeMessage : void 0
                })),
                O = s.P1(r.Jw, (e => e.modalIsUhmManaged || e.drawerIsUhmManaged || e.toastIsUhmManaged))
        },
        93540: (e, t, a) => {
            "use strict";
            a.d(t, {
                DN: () => R,
                F8: () => M,
                HF: () => I,
                Iw: () => L,
                MK: () => A,
                T4: () => U,
                YM: () => F,
                Zw: () => O,
                _j: () => H,
                cb: () => N,
                iv: () => D,
                md: () => P,
                r6: () => x
            });
            var s = a(30427),
                n = a(42659),
                r = a(54174),
                i = a(93718),
                o = a(64115),
                l = a(99644),
                c = a(23275);
            const d = e => {
                    const t = (0, c.Bm)(e);
                    if ("alphabet_gate" === (null == t ? void 0 : t.level.type)) {
                        const {
                            updatedPath: a
                        } = (0, l.yY)(e, !1, t);
                        e = a
                    }
                    return e.map((e => ({ ...e,
                        levels: e.levels.filter((e => "alphabet_gate" !== e.type))
                    })))
                },
                u = (e, t) => {
                    const a = (0, c.Bm)(e);
                    if ("alphabet_gate" === (null == a ? void 0 : a.level.type)) {
                        const {
                            gateId: s
                        } = a.level.pathLevelClientData;
                        if (t.includes(s)) {
                            const {
                                updatedPath: t
                            } = (0, l.yY)(e, !1, a);
                            return t
                        }
                    }
                    return e
                },
                g = (e, t) => {
                    const a = (0, c.Bm)(e);
                    if (a && a.level.id === t.levelId) {
                        const {
                            updatedPath: t
                        } = (0, l.yY)(e, !1, a, !0);
                        return t
                    }
                    return e
                },
                p = e => {
                    const t = (0, c.Bm)(e);
                    if ("chest" === (null == t ? void 0 : t.level.type)) {
                        const {
                            updatedPath: a
                        } = (0, l.yY)(e, !1, t);
                        e = a
                    }
                    return e.map((e => ({ ...e,
                        levels: e.levels.filter((e => "chest" !== e.type))
                    })))
                },
                m = s.P1(n.Oz, (e => void 0 !== (null == e ? void 0 : e.pathSectioned) && e.pathSectioned.length > 0 ? e.pathSectioned.flatMap((e => e.units)) : null == e ? void 0 : e.path)),
                h = s.P1(n.Oz, (e => null == e ? void 0 : e.pathSectioned)),
                v = s.P1(n.Mb, (e => !0 === e.featureFlags.web_hide_alphabet_gates && !(0, o.gQ)("debugAlphabetGates"))),
                _ = s.P1(n.Mb, i.N, ((e, t) => !0 === e.featureFlags.web_hide_path_rewards || !t)),
                f = s.P1(n.Zk, n.Oz, ((e, t) => {
                    var a;
                    return void 0 === t ? [] : null !== (a = e.skippedAlphabetGateIds[t.id]) && void 0 !== a ? a : []
                })),
                S = s.P1(m, v, ((e, t) => t && e ? d(e) : e)),
                y = s.P1(S, _, ((e, t) => t && e ? p(e) : e)),
                E = s.P1(y, f, ((e, t) => void 0 === e ? e : u(e, t))),
                b = s.P1(E, n.fI, ((e, t) => void 0 === e || void 0 === t ? e : g(e, t))),
                I = s.P1(b, (e => e)),
                w = s.P1(h, v, ((e, t) => t && e ? e.map((e => ({ ...e,
                    units: d(e.units)
                }))) : e)),
                k = s.P1(w, _, ((e, t) => t && e ? e.map((e => ({ ...e,
                    units: p(e.units)
                }))) : e)),
                T = s.P1(k, f, ((e, t) => void 0 === e ? e : e.map((e => ({ ...e,
                    units: u(e.units, t)
                }))))),
                C = s.P1(T, n.fI, ((e, t) => void 0 === e || void 0 === t ? e : e.map((e => ({ ...e,
                    units: g(e.units, t)
                }))))),
                R = s.P1(C, (e => e)),
                L = s.P1(R, (e => {
                    var t, a;
                    return null !== (a = null !== (t = null == e ? void 0 : e.find((e => "active" === e.status))) && void 0 !== t ? t : null == e ? void 0 : e[e.length - 1]) && void 0 !== a ? a : void 0
                })),
                A = s.P1(R, L, (e => e.ui.selectedPathSectionType), ((e, t, a) => {
                    var s, n;
                    return null !== (n = null !== (s = null == e ? void 0 : e.find((e => e.type === a))) && void 0 !== s ? s : t) && void 0 !== n ? n : void 0
                })),
                P = s.P1(R, (e => void 0 === e ? {} : Object.fromEntries(e.flatMap((e => e.units.map((t => [t.unitIndex, e]))))))),
                D = s.P1((e => e.ui.shouldReturnToSections), (e => e)),
                N = s.P1(I, (e => e ? (0, c.Bm)(e) : void 0)),
                O = (s.P1(I, (e => e ? (0, c.d$)(e) : void 0)), s.P1(R, (e => e ? Object.fromEntries(e.map((e => [e.index, e.units[0].levels.find((e => "unit_test" === e.state))]))) : {}))),
                x = s.P1(I, (e => !!e && e.every((e => e.levels.every((e => (0, c.Wc)(e.state) || void 0 !== e.dailyRefreshInfo)))))),
                F = s.P1(r.d, I, ((e, t) => !e && t && t[0].levels[0].finishedSessions > 0)),
                M = s.P1(I, (e => void 0 === e ? {} : Object.fromEntries(e.map((e => [e.unitIndex, e.unitNumber]))))),
                U = s.P1(N, I, A, (e => e.ui.visibleUnitIndex), ((e, t, a, s) => {
                    var n;
                    if (!t) return;
                    const r = (null !== (n = null == e ? void 0 : e.unitNumber) && void 0 !== n ? n : 1) - 1;
                    return a && a.units.length > 0 ? a.units[null != s ? s : r] : t[null != s ? s : r]
                })),
                H = s.P1(n.cQ, (e => e.courseDailyRefreshShown))
        },
        93718: (e, t, a) => {
            "use strict";
            a.d(t, {
                N: () => i
            });
            var s = a(30427),
                n = a(42659),
                r = a(2072);
            const i = s.P1(n.Lm, n.np, ((e, t) => {
                var a;
                if (!e) return;
                const s = (0, r.Zp)(t, "PATH_CHEST");
                return null === (a = null == s ? void 0 : s.rewards) || void 0 === a ? void 0 : a.find((e => !e.consumed))
            }))
        },
        83936: (e, t, a) => {
            "use strict";
            a.d(t, {
                N9: () => g,
                Rq: () => m,
                WM: () => p,
                Y_: () => u
            });
            var s = a(30427),
                n = a(42659),
                r = a(40387),
                i = a(95332),
                o = a(16970),
                l = a(64115),
                c = a(37971),
                d = a(44637);
            const u = s.P1(n.jv, n.MY, n.$4, n.gl, n.iH, n.is, ((e, t, a, s, n, r) => t && r ? (0, i.eK)({
                    browserSettings: e,
                    challenge: t,
                    isDesktop: a,
                    isGrammar: s,
                    learningLanguage: n,
                    session: r
                }) : {
                    canToggleTyping: !1,
                    isToggledToTyping: !1
                })),
                g = s.P1(n.np, n.dE, ((e, t) => {
                    const a = (e.courses || []).map((e => t[e])).map((e => `${e.learningLanguage}_${e.fromLanguage}`));
                    return e => a.includes(`${e.learningLanguageId}_${e.fromLanguageId}`)
                })),
                p = s.P1(n.Mb, (e => e.clientExperiments)),
                m = s.P1(n.lA, n.hy, ((e, t) => {
                    var a, s;
                    if (!e.session) return;
                    if (e.sessionParams.isFinalLevel) {
                        const [t, n] = (0, d.Dk)(e);
                        return ![c.c.PartialXpDuo, c.c.PartialXpDuoSliding].includes(e.status) && void 0 !== t && t < e.challengeIdSections.length - 1 && n === (null !== (s = null === (a = e.challengeIdSections[t]) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) - 1 ? "partialXpDuo" : void 0
                    }
                    const n = [c.c.CoachDuo, c.c.CoachDuoSliding, c.c.SmartTip, c.c.SmartTipBlaming, c.c.SmartTipSliding, c.c.HardModeDuo, c.c.HardModeDuoSliding];
                    let i = n.indexOf(e.status) < n.indexOf(c.c.CoachDuo) && e.coachDuo.model && !t;
                    const u = n.indexOf(e.status) < n.indexOf(c.c.SmartTip) && e.smartTipToShow && !t,
                        g = n.indexOf(e.status) < n.indexOf(c.c.HardModeDuo) && ((0, l.gQ)("hardModeDuo") || (0, r.IF)(e) || (0, o.Yt)(e));
                    return i && !u && g && (i = !1), i ? "coachDuo" : u ? "smartTip" : g ? "hardModeDuo" : void 0
                }))
        },
        27429: (e, t, a) => {
            "use strict";
            a.d(t, {
                XL: () => u,
                eE: () => m,
                ek: () => g,
                ix: () => p
            });
            var s = a(30427),
                n = a(42659),
                r = a(74462),
                i = a(93540),
                o = a(16970),
                l = a(23275),
                c = a(89260),
                d = a(11811);
            const u = s.P1(i.DN, i.HF, i.cb, n.hp, ((e, t, a, s) => {
                    var n;
                    if (!s) return;
                    const {
                        pathType: r,
                        scopeType: i,
                        unitOrSectionNumber: o,
                        lessonType: d,
                        levelNumber: u
                    } = (0, c.mi)(s.pathname);
                    if ("lesson" !== r) return;
                    void 0 !== e && e.length > 0 && (t = e.flatMap((e => e.units)));
                    const g = e => {
                            var a, s;
                            return (null === (a = null == t ? void 0 : t[e.unitIndex]) || void 0 === a ? void 0 : a.levels[e.levelIndex]) ? { ...e,
                                level: null === (s = t[e.unitIndex]) || void 0 === s ? void 0 : s.levels[e.levelIndex],
                                unitNumber: t[e.unitIndex].unitNumber
                            } : void 0
                        },
                        p = o ? parseInt(o, 10) - 1 : void 0;
                    if ("section" === i && e && t) {
                        if (void 0 === p) return;
                        const a = (0, l.E0)(e[p].units[0]),
                            s = e[p].units[0].unitIndex;
                        if (-1 === a) return;
                        return {
                            level: null === (n = t[s]) || void 0 === n ? void 0 : n.levels[a],
                            levelIndex: a,
                            unitIndex: s,
                            unitNumber: t[s].unitNumber
                        }
                    }
                    const m = u ? parseInt(u, 10) - 1 : void 0;
                    if ("lesson" === r && void 0 !== t) switch (d) {
                        case "legendary":
                            if (void 0 === p) return;
                            if (void 0 === m) return;
                            return g({
                                levelIndex: m,
                                unitIndex: p
                            });
                        case "level":
                            if (void 0 === p || void 0 === m) return;
                            return g({
                                levelIndex: m,
                                unitIndex: p
                            });
                        case "test":
                            if (void 0 === p) return;
                            return g({
                                levelIndex: (0, l.E0)(t[p]),
                                unitIndex: p
                            });
                        default:
                            return a
                    }
                })),
                g = s.P1(i.cb, u, ((e, t) => void 0 !== t && void 0 !== e && e.unitIndex === t.unitIndex && e.levelIndex === t.levelIndex)),
                p = s.P1(n.lA, (e => {
                    var t, a, s, n, r, i;
                    const c = null === (t = e.levelData) || void 0 === t ? void 0 : t.level,
                        u = "path-level" === (null === (a = e.sessionRouteParams) || void 0 === a ? void 0 : a.type) && e.sessionRouteParams.isEarnbackSession,
                        g = "alphabets" === (null === (s = e.sessionRouteParams) || void 0 === s ? void 0 : s.type) && (0, o.Rv)(null === (n = e.sessionParams) || void 0 === n ? void 0 : n.learningLanguage),
                        p = (null === (r = e.session) || void 0 === r ? void 0 : r.type) === d.FF.Adventures;
                    return g || !!c && !u && !("placement" === (null === (i = e.sessionRouteParams) || void 0 === i ? void 0 : i.type)) && !(0, l.qM)(c) && !p
                })),
                m = s.P1(p, r.MQ, ((e, t) => e && t))
        },
        21791: (e, t, a) => {
            "use strict";
            a.d(t, {
                L: () => _,
                Q: () => v
            });
            var s = a(30427),
                n = a(22772),
                r = a(42659),
                i = a(54174),
                o = a(93540),
                l = a(95351),
                c = a(89260),
                d = a(80820),
                u = a(11811);
            const g = r.$4,
                p = e => e.sessionCache.keys,
                m = (e, t, a, s, n, r) => i => {
                    if (!a && !s) return !0;
                    if ("chest" === i.level.type) return !0;
                    const o = (0, l.K)({
                        currentCourseHistory: e,
                        levelData: i,
                        sessionType: u.FF.LevelReview
                    });
                    let g = !1;
                    if ("skill" === i.level.type) {
                        const {
                            skillId: e
                        } = i.level.pathLevelClientData;
                        g = (0, c.Uj)(r, e)
                    }
                    const p = (() => {
                            if ("story" !== i.level.type) return;
                            const e = i.level.pathLevelClientData.mode;
                            return "read" === e ? "READ" : "listen" === e ? "LISTEN" : void 0
                        })(),
                        m = (0, d.gL)({
                            currentStoryMode: p,
                            generatorIdsOfRecentMistakes: null == o ? void 0 : o.map((e => e.generatorId)),
                            includeSmartTips: t && "story" !== i.level.type,
                            isExplanationSeen: g,
                            pathLevel: i.level
                        });
                    return n.includes(m)
                },
                h = s.P1(r.B8, g, i.d, p, r.np, ((e, t, a, s, n) => m(e, t, a, !0, s, n))),
                v = s.P1(r.B8, g, i.d, p, r.np, ((e, t, a, s, n) => m(e, t, a, !1, s, n))),
                _ = s.P1(o.cb, o.HF, h, ((e, t, a) => {
                    if (void 0 === t) return 0;
                    let s = 0;
                    for (const r of (0, n.getRemainingSessions)(t, e)) {
                        if (!a(r)) break;
                        s++
                    }
                    return s
                }))
        },
        15307: (e, t, a) => {
            "use strict";
            a.d(t, {
                Bs: () => u,
                FF: () => h,
                GP: () => _,
                Yk: () => m,
                jG: () => y,
                pA: () => S,
                x0: () => g
            });
            var s = a(30427),
                n = a(99369),
                r = a(42659),
                i = a(93540),
                o = a(97544),
                l = a(68903),
                c = a(23275),
                d = a(12125);
            const u = e => e.student,
                g = s.P1(r.Oz, (e => {
                    var t;
                    return null === (t = null == e ? void 0 : e.assignments) || void 0 === t ? void 0 : t.filter((t => {
                        const a = t.fromLanguageId === e.fromLanguage && t.learningLanguageId === e.learningLanguage,
                            s = t.type === o.bu.AssignmentType.SKILL && null !== t.skillId && null !== t.crownLevel,
                            n = t.type !== o.bu.AssignmentType.SKILL;
                        return a && (s || n)
                    }))
                })),
                p = s.P1(i.HF, (e => {
                    if (void 0 === e) return;
                    const t = {},
                        a = {};
                    return e.forEach((e => {
                        const {
                            levels: s,
                            unitIndex: n,
                            unitNumber: r
                        } = e;
                        s.forEach(((e, s) => {
                            const i = {
                                level: e,
                                levelIndex: s,
                                unitIndex: n,
                                unitNumber: r
                            };
                            switch (e.type) {
                                case "skill":
                                    {
                                        const {
                                            skillId: a
                                        } = e.pathLevelClientData;void 0 === t[a] && (t[a] = []),
                                        t[a].push(i);
                                        break
                                    }
                                case "story":
                                    {
                                        const {
                                            storyId: t
                                        } = e.pathLevelClientData;a[t] = i;
                                        break
                                    }
                            }
                        }))
                    })), {
                        skill: t,
                        story: a
                    }
                })),
                m = s.P1(g, p, ((e, t) => {
                    if (void 0 === e || void 0 === t) return;
                    const a = {};
                    return e.forEach((e => {
                        const {
                            assignmentId: s,
                            type: n
                        } = e;
                        switch (n) {
                            case o.bu.AssignmentType.SKILL:
                                {
                                    const {
                                        crownLevel: n,
                                        skillId: r
                                    } = e;null !== n && null !== r && r in t.skill && (a[s] = t.skill[r][n]);
                                    break
                                }
                            case o.bu.AssignmentType.STORY:
                                e.storyId in t.story && (a[s] = t.story[e.storyId]);
                                break;
                            case o.bu.AssignmentType.XP:
                            case o.bu.AssignmentType.UNIT:
                                break;
                            default:
                                throw (0, l.RJ)(n), Error(`Unexpected assignment type: ${n}`)
                        }
                    })), a
                })),
                h = s.P1(m, g, ((e, t) => {
                    if (void 0 === e || void 0 === t) return;
                    const a = t.filter((e => (0, d.R0)(e.status)));
                    return (0, n.asMutable)(a).sort(((t, a) => {
                        if (t.status === a.status) {
                            if (t.dueDateTs === a.dueDateTs) {
                                if (o.bu.CONTENT_SPECIFIC_ASSIGNMENT_TYPES.includes(t.type) && o.bu.CONTENT_SPECIFIC_ASSIGNMENT_TYPES.includes(a.type)) {
                                    const s = e[t.assignmentId],
                                        n = e[a.assignmentId];
                                    return (0, c.Nk)(s, n)
                                }
                                return t.openDateTs - a.openDateTs
                            }
                            return "missed" === t.status && "missed" === a.status ? a.dueDateTs - t.dueDateTs : t.dueDateTs - a.dueDateTs
                        }
                        return "missed" === t.status && "active" === a.status ? 1 : -1
                    }))
                })),
                v = s.P1(h, (e => {
                    if (void 0 === e) return;
                    const t = e.filter((e => [o.bu.AssignmentType.SKILL, o.bu.AssignmentType.STORY].includes(e.type)));
                    return 0 !== t.length ? 0 === t.length ? void 0 : t : void 0
                })),
                _ = s.P1(v, (e => {
                    if (void 0 !== e) return e[0]
                })),
                f = s.P1(i.MK, v, m, ((e, t, a) => {
                    if (void 0 === e || void 0 === a || void 0 === t) return;
                    const s = [e.units[0].unitIndex, e.units[e.units.length - 1].unitIndex];
                    return t.find((e => {
                        const t = a[e.assignmentId].unitIndex;
                        return t >= s[0] && t <= s[1]
                    }))
                })),
                S = s.P1(m, _, ((e, t) => void 0 === e || void 0 === t ? void 0 : e[t.assignmentId])),
                y = s.P1(m, f, ((e, t) => void 0 === e || void 0 === t ? void 0 : e[t.assignmentId]))
        },
        80164: (e, t, a) => {
            "use strict";
            a.d(t, {
                Go: () => T,
                I3: () => v,
                I9: () => b,
                M8: () => h,
                Oi: () => p,
                QK: () => y,
                Qb: () => w,
                SS: () => _,
                W: () => k,
                dT: () => m,
                gb: () => I,
                jD: () => f,
                tE: () => S,
                y1: () => E
            });
            var s = a(30427),
                n = a(42659),
                r = a(51827),
                i = a(64115),
                o = a(68903),
                l = a(25062),
                c = a(74541),
                d = a(32499),
                u = a(16086),
                g = a(20028);
            const p = s.P1(n.__, (e => {
                    var t;
                    return null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded
                })),
                m = s.P1(n.__, (e => {
                    var t;
                    return null === (t = e.subscriptions) || void 0 === t ? void 0 : t.subscriptionPlans
                })),
                h = s.P1(n.__, (e => {
                    var t;
                    return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? e.subscriptions.currentPlan : void 0
                })),
                v = s.P1(m, (e => null == e ? void 0 : e.find((e => e.isFamilyPlan)))),
                _ = s.P1(m, (e => null == e ? void 0 : e.find((e => e.planType === d._r.TwelveMonth)))),
                f = (s.P1(_, n.Mb, ((e, t) => e ? (0, d.eh)(e, null == t ? void 0 : t.ipCountry) : void 0)), s.P1(v, n.Mb, ((e, t) => e ? (0, d.eh)(e, null == t ? void 0 : t.ipCountry) : void 0)), s.P1(n.__, n.np, d.Wt)),
                S = s.P1(n.__, n.np, d.X0),
                y = s.P1(n.__, S, ((e, t = !1) => {
                    var a, s, n, r;
                    return (0, i.gQ)("mockFreeTrialEligible") ? "eligible" === (null === (a = (0, i.ky)("mockFreeTrialEligible")) || void 0 === a ? void 0 : a.toLowerCase()) : (null === (s = e.subscriptions) || void 0 === s ? void 0 : s.isLoaded) ? (t || e.inventory.immersive_subscription) && (null === (r = null === (n = e.subscriptions) || void 0 === n ? void 0 : n.subscriptionPlans) || void 0 === r ? void 0 : r.some((e => e.isFreeTrial))) : void 0
                })),
                E = (s.P1(n.__, (e => (0, r._H)(e))), s.P1(n.Mb, n.__, ((e, t) => (0, u.Pc)() ? (0, r.BY)(t) : e.ipCountry ? (0, l.kk)(e.ipCountry) : void 0)), s.P1(y, (e => !1 !== e))),
                b = s.P1(n.np, (e => e.plusDiscounts)),
                I = s.P1(n.np, n.Lm, S, y, n.Y2, f, ((e, t, a, s, n, r) => {
                    if (!t || (0, g.pN)(e)) return "eligibleFreeTrial";
                    if ("immersive_subscription" === (null == n ? void 0 : n.itemName)) return s ? "eligibleFreeTrial" : "eligible";
                    const i = (0, c.l1)(n, "alreadyHasSuper", "alreadyHasMax");
                    if (i) return i;
                    switch (a) {
                        case !0:
                            return s ? "eligibleFreeTrial" : "eligible";
                        case !1:
                            return r ? "eligibleToRedeem" : "ineligible";
                        case void 0:
                            return;
                        default:
                            return void(0, o.RJ)(a)
                    }
                })),
                w = s.P1(n.Y2, (e => (0, c.KX)(e))),
                k = s.P1(m, (e => {
                    var t;
                    const a = null == e ? void 0 : e.find((e => e.planType === d._r.TwelveMonth && !e.isFamilyPlan && e.isNewYears));
                    return null !== (t = null == a ? void 0 : a.productId.includes("us_usd")) && void 0 !== t && t
                })),
                T = s.P1(h, m, ((e, t) => (0, d.XZ)(e, t)))
        },
        50888: (e, t, a) => {
            "use strict";
            a.d(t, {
                J6: () => l,
                KD: () => i,
                mu: () => c
            });
            var s = a(30427),
                n = a(42659),
                r = a(97106);
            const i = e => (0, r.h0)(e.items.inventory),
                o = s.P1([i, n.__], ((e, t) => {
                    var a;
                    return e ? null === (a = t.inventory[e]) || void 0 === a ? void 0 : a.purchaseDate : void 0
                })),
                l = s.P1([i, o], ((e, t) => void 0 !== t && void 0 !== e && void 0 !== r.$Z[e] ? 1e3 * t + r.$Z[e] : void 0)),
                c = s.P1([l, (e, t) => t], ((e, t) => void 0 !== e && e >= t))
        },
        30027: (e, t, a) => {
            "use strict";
            a(69098);
            var s = a(58729),
                n = a(58576);
            window.duo.enableSentry && (0, n.D_)(), (0, s.JE)(), console.log(`On commit https://github.com/duolingo/duolingo-web/commit/${window.duo.version}`);
            var r = a(67899),
                i = (a(74971), a(91575), a(27378)),
                o = a(31542),
                l = a(92883),
                c = a(80715),
                d = a(3620),
                u = a(99369),
                g = a(80254),
                p = a(84389);
            const m = (0, u.from)({
                brb: {
                    status: "disabled"
                },
                zombie: {
                    status: "disabled"
                }
            });
            var h = a(34704),
                v = a(64591);
            const _ = (0, u.from)({
                coachEnabled: !0,
                completeReverseTranslationTypingEnabled: !1,
                darkMode: "system",
                listenDisabledUntil: 0,
                speakDisabledUntil: 0,
                transliterationsSettings: {
                    "ja<en": { ...h.lL.romaji,
                        enabled: !0
                    },
                    "zh<en": { ...h.lL.pinyin_all,
                        enabled: !0
                    }
                },
                typingEnabled: !1
            });
            var f = a(16970);
            const S = {
                    characterState: {},
                    skippedAlphabetGateIds: {}
                },
                y = JSON.parse('{"ageRestrictionLimit":13,"clientExperiments":{},"courses":{"ar":["en","fr","de","sv"],"cs":["en"],"de":["en","es","fr"],"el":["en"],"en":["es","fr","de","it","pt","nl-NL","ga","da","sv","tr","eo","no-BO","uk","ru","pl","cy"],"es":["en","fr","pt","de","it","ca"],"fr":["de","en","es","it"],"hi":["en"],"hu":["en"],"id":["en"],"it":["fr","en"],"ja":["en"],"ko":["en"],"nl-NL":["en"],"pl":["en"],"pt":["de","en","es","fr"],"ro":["en"],"ru":["en","de","fr","es"],"tr":["en","de"],"uk":["en"],"vi":["en"],"zh":["en"]},"dictionaryHost":"d2.duolingo.com","featureFlags":{},"speechHost":"speech.duolingo.com"}');
            var E = a(64115),
                b = a(17135),
                I = a(68903);
            const w = ({
                    history: e,
                    updateTimestamp: t,
                    values: a
                }) => e.filter((e => t < e.expirationTimestamp)).filter((e => !(0, I.cY)(a, e.value))),
                k = (0, b.dz)({
                    days: 28
                }),
                T = ({
                    challenges: e,
                    history: t,
                    levelId: a,
                    updateTimestamp: s
                }) => {
                    const n = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => ({
                        generatorIdentifier: e.challengeGeneratorIdentifier
                    })));
                    return (({
                        additionalData: e,
                        history: t,
                        ttl: a,
                        unique: s,
                        updateTimestamp: n,
                        values: r
                    }) => {
                        let i = [...t, ...r.map(((t, s) => ({ ...(null == e ? void 0 : e[s]) ? {
                                additionalData: null == e ? void 0 : e[s]
                            } : {},
                            expirationTimestamp: n + a,
                            value: t
                        })))].filter((e => n < e.expirationTimestamp));
                        if (s) {
                            const e = [];
                            i.sort(((e, t) => t.expirationTimestamp - e.expirationTimestamp)).forEach((t => {
                                (0, I.cY)(e.map((e => e.value)), t.value) || e.push(t)
                            })), i = e
                        }
                        return i.sort(((e, t) => e.expirationTimestamp - t.expirationTimestamp))
                    })({
                        additionalData: a ? n.map((() => ({
                            levelId: a
                        }))) : void 0,
                        history: t,
                        ttl: k,
                        unique: !0,
                        updateTimestamp: s,
                        values: n
                    })
                },
                C = ({
                    challenges: e,
                    history: t,
                    updateTimestamp: a
                }) => {
                    const s = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => ({
                        generatorIdentifier: e.challengeGeneratorIdentifier
                    })));
                    return w({
                        history: t,
                        updateTimestamp: a,
                        values: s
                    })
                };
            var R = a(11811);
            const L = (e = (0, u.from)({
                globalPlacementSessionStarts: 0,
                globalPracticeSessionEnds: 0,
                globalPracticeSessionStarts: 0,
                mistakeHistory: [],
                numSessionsWithMistakes: 0
            }), t) => {
                var a, s;
                switch (t.type) {
                    case "QUIT_SESSION":
                        {
                            const {
                                isZombieMode: a,
                                levelId: s,
                                sessionParams: {
                                    generatorIdentifiersOfRecentMistakes: n
                                },
                                session: r,
                                session: {
                                    challenges: i,
                                    startTime: o
                                }
                            } = t;
                            return r.type !== R.FF.Lesson && r.type !== R.FF.LexemePractice || a || (e = (0, u.set)(e, "mistakeHistory", T({
                                challenges: i.filter((e => {
                                    var t;
                                    return !1 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
                                })),
                                history: e.mistakeHistory,
                                levelId: s,
                                updateTimestamp: o
                            }))),
                            n && !a && (e = (0, u.set)(e, "mistakeHistory", C({
                                challenges: i.filter((e => {
                                    var t;
                                    return !0 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
                                })),
                                history: e.mistakeHistory,
                                updateTimestamp: o
                            }))),
                            e
                        }
                    case "START_SESSION":
                        {
                            const {
                                sessionParams: {
                                    generatorIdentifiersOfRecentMistakes: s
                                },
                                session: n,
                                startTime: r
                            } = t;
                            return n.type === R.FF.GlobalPractice && (e = (0, u.set)(e, "globalPracticeSessionStarts", e.globalPracticeSessionStarts + 1)),
                            n.type === R.FF.PlacementTest && (e = (0, u.set)(e, "globalPlacementSessionStarts", (null !== (a = e.globalPlacementSessionStarts) && void 0 !== a ? a : 0) + 1)),
                            s && (e = (0, u.set)(e, "mistakeHistory", (({
                                challenges: e,
                                generatorIdentifiers: t,
                                history: a,
                                updateTimestamp: s
                            }) => {
                                const n = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => e.challengeGeneratorIdentifier)),
                                    r = t.filter((e => !(0, I.cY)(n, e))).map((e => ({
                                        generatorIdentifier: e
                                    })));
                                return w({
                                    history: a,
                                    updateTimestamp: s,
                                    values: r
                                })
                            })({
                                challenges: n.challenges,
                                generatorIdentifiers: s,
                                history: e.mistakeHistory,
                                updateTimestamp: r
                            }))),
                            e
                        }
                    case "RECORDED_SESSION":
                        {
                            const {
                                levelId: a,
                                requestSession: n,
                                requestSession: {
                                    challenges: r,
                                    endTime: i
                                },
                                sessionParams: {
                                    generatorIdentifiersOfRecentMistakes: o
                                }
                            } = t;
                            if (n.type === R.FF.GlobalPractice && (e = (0, u.set)(e, "globalPracticeSessionEnds", e.globalPracticeSessionEnds + 1)), n.type === R.FF.Lesson) {
                                const n = r.filter((e => !1 === e.correct));
                                n.length > 0 && (e = (0, u.set)(e, "numSessionsWithMistakes", (null !== (s = e.numSessionsWithMistakes) && void 0 !== s ? s : 0) + 1)), t.isZombieMode || (e = (0, u.set)(e, "mistakeHistory", T({
                                    challenges: n,
                                    history: e.mistakeHistory,
                                    levelId: a,
                                    updateTimestamp: i
                                })))
                            }
                            return o && !t.isZombieMode && (e = (0, u.set)(e, "mistakeHistory", C({
                                challenges: r.filter((e => void 0 !== e.correct)),
                                history: e.mistakeHistory,
                                updateTimestamp: i
                            }))),
                            e
                        }
                    default:
                        return e
                }
            };
            var A = a(89065);
            const P = (e, t, a) => {
                    const s = e.filter((e => !t.includes(e.userId))),
                        n = s.filter((e => a.includes(e.userId)));
                    return s.filter((e => !a.includes(e.userId))).concat(n)
                },
                D = ["health_refill_partial_1", "health_refill_partial_2", "health_refill_partial_3", "health_refill_partial_4", "health_refill", "health_refill_reactive", "health_refill_discounted", "health_segment"],
                N = (e, t) => e ? 1e3 * e + t : void 0;
            var O = a(51551),
                x = a(37971),
                F = a(8698),
                M = a(56043),
                U = a(95332),
                H = a(7113);
            const G = [R.FF.Lesson, R.FF.LevelReview, R.FF.GlobalPractice, R.FF.LexemePractice, R.FF.LexemeSkillLevelPractice],
                V = (e, t) => {
                    const a = (0, H.w)(e.prompt).map(((e, a) => ({
                        isBlank: a >= t.blankStartIndex && a < t.blankEndIndex,
                        text: e
                    })));
                    return {
                        challengeGeneratorIdentifier: e.challengeGeneratorIdentifier,
                        challengeResponseTrackingProperties: {},
                        character: e.character,
                        explanation: e.explanation,
                        id: e.id,
                        indicatorType: R.A.PastMistake,
                        metadata: e.metadata,
                        newWords: void 0,
                        solutionTranslation: e.solutionTranslation,
                        trackingProperties: {},
                        type: R.Sm.PartialListen,
                        displayTokens: a,
                        grader: e.grader,
                        prompt: e.prompt,
                        slowTts: e.slowTts,
                        tts: e.tts,
                        type: R.Sm.PartialListen
                    }
                },
                B = (e, t, a) => {
                    const s = e.map(((e, t) => ({
                        isBlank: t === a.blankIndex,
                        text: e
                    })));
                    return {
                        challengeGeneratorIdentifier: t.challengeGeneratorIdentifier,
                        challengeResponseTrackingProperties: {},
                        character: t.character,
                        explanation: t.explanation,
                        id: t.id,
                        indicatorType: R.A.PastMistake,
                        metadata: t.metadata,
                        newWords: void 0,
                        solutionTranslation: t.solutionTranslation,
                        trackingProperties: {},
                        type: R.Sm.PartialReverseTranslate,
                        grader: t.grader,
                        displayTokens: s,
                        prompt: t.prompt,
                        slowTts: t.slowTts,
                        tts: t.tts,
                        type: R.Sm.ListenComplete
                    }
                },
                z = (e, t, a) => {
                    const s = e.map(((e, t) => ({
                        isBlank: t === a.blankIndex,
                        text: e
                    })));
                    return {
                        challengeGeneratorIdentifier: t.challengeGeneratorIdentifier,
                        challengeResponseTrackingProperties: {},
                        character: t.character,
                        explanation: t.explanation,
                        id: t.id,
                        indicatorType: R.A.PastMistake,
                        metadata: t.metadata,
                        newWords: void 0,
                        solutionTranslation: t.solutionTranslation,
                        trackingProperties: {},
                        type: R.Sm.PartialReverseTranslate,
                        grader: t.grader,
                        displayTokens: s,
                        prompt: t.prompt,
                        tokens: t.tokens,
                        type: R.Sm.CompleteReverseTranslation
                    }
                },
                Z = (e, t) => {
                    const a = (0, H.w)(e.correctSolutions[0]).map(((e, a) => ({
                        isBlank: a >= t.blankStartIndex && a < t.blankEndIndex,
                        text: e
                    })));
                    return {
                        challengeGeneratorIdentifier: e.challengeGeneratorIdentifier,
                        challengeResponseTrackingProperties: {},
                        character: e.character,
                        explanation: void 0,
                        id: e.id,
                        indicatorType: R.A.PastMistake,
                        metadata: e.metadata,
                        newWords: void 0,
                        solutionTranslation: e.solutionTranslation,
                        trackingProperties: {},
                        type: R.Sm.PartialReverseTranslate,
                        displayTokens: a,
                        grader: e.grader,
                        prompt: e.prompt,
                        tokens: e.tokens,
                        type: R.Sm.PartialReverseTranslate
                    }
                };
            var W = a(23275),
                $ = a(44637),
                j = a(84401),
                q = a(89260),
                Q = a(97106);
            const K = (0, u.from)({
                canShowHintsOnHover: !1,
                challengeIdSections: [],
                challengeStates: [],
                coachDuo: {
                    allCharacters: [],
                    allShowReasons: [],
                    currentCorrectStreak: 0,
                    currentIncorrectStreak: 0
                },
                completedWithHeartsRemaining: !1,
                confidence: 0,
                currentInLessonStreak: 0,
                currentIndex: 0,
                enableBonusPoints: !1,
                endedEarly: !1,
                hasShownEasierLessonNudge: !1,
                heartsType: "unlimitedHearts",
                inLessonTipResources: {},
                inLessonTipShowing: !1,
                isFinalLevel: !1,
                key: 0,
                maxHearts: 0,
                maxInLessonStreak: 0,
                mistakesReplacementChallengeIndex: 0,
                numChallengesAnswered: 0,
                numChallengesCorrect: 0,
                numChallengesSkipped: 0,
                numChallengesTotal: 0,
                numInLessonTipOpens: 0,
                numTimesTransliterationToggled: 0,
                receivedGifts: {
                    fromMilestone: !1,
                    quantity: 0,
                    streakFreeze: !1
                },
                recycledMistakeIndexToOriginalMistakeIndex: {},
                session: void 0,
                sessionParams: void 0,
                sessionPrefetchedTimestamp: void 0,
                sessionRouteParams: void 0,
                sessionSubmitError: void 0,
                sessionSubmitted: !1,
                sessionSubmitting: !1,
                sessionTime: 0,
                shownSmartTipIds: [],
                slideData: [],
                status: void 0,
                strength: 0
            });
            var Y = a(16086);
            const J = (0, u.from)({
                    keys: []
                }),
                X = (e, t) => void 0 === e.time[e.time.length - 1][1] ? (0, u.setIn)(e, ["time", e.time.length - 1, 1], t) : e;
            var ee = a(37993),
                te = a(39837),
                ae = a(35160);
            const se = (0, u.from)({
                availableModals: [],
                b2bPricingData: void 0,
                canShowAgeRestrictedLeaderboardsIntro: !0,
                canShowHomeMessage: !0,
                didChangeSetting: !1,
                drawer: void 0,
                drawerIsUhmManaged: !1,
                engagementOverride: void 0,
                homeMessage: void 0,
                homeMessageData: void 0,
                homeMessagingClientState: {
                    dogfoodingPreview: !0,
                    maintenanceBreak: !0,
                    turningNotificationsOn: !0
                },
                isAvatarUploading: !1,
                isDimmedOverlayOpen: !1,
                isInventoryFresh: !1,
                isLoggingOut: !1,
                isModalReallyOpen: !1,
                isRequestingNotificationPermission: !1,
                isShopItemsFresh: !1,
                isSwitchingCourse: !1,
                isUserModelFresh: !1,
                microphonePermission: void 0,
                modal: void 0,
                modalIsUhmManaged: !1,
                modalShouldWaitForOverlay: !1,
                online: !0,
                purchasingItem: !1,
                secondaryModal: void 0,
                settingsOpenedAt: void 0,
                settingsSubmitting: [],
                shouldUnmount: !1,
                spotlightType: void 0,
                swrlEngagement: void 0,
                toast: void 0,
                toastIsUhmManaged: !1,
                viewportHeight: window.innerHeight,
                viewportWidth: window.innerWidth,
                visibleUnitIndex: void 0
            });
            var ne = a(6947);
            const re = (0, I.p)(["pathSkipping", "plusBadgeMigration"]);
            var ie = a(20041),
                oe = a(59096);
            const le = e => ({
                    discountType: e.discountType,
                    expirationTime: e.secondsUntilExpiration > 0 ? (0, b.HR)(e.secondsUntilExpiration) : 0
                }),
                ce = e => !(0, I.gB)(e, ["adsConfig", "experiments", "referralInfo", "trackingProperties"]);
            var de = a(18804);
            const ue = (e => {
                    const t = g.XP(e);
                    return (a = (0, u.from)({}), s) => t.reduce(((t, n) => (0, u.set)(t, n, e[n](a[n], s))), a)
                })({
                    achievementsV3: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "PLAYER_INIT":
                                e = (0, u.set)(e, "sessionStartAchievements", e.achievements);
                                break;
                            case "UPDATE_USER_ACHIEVEMENTS_V3":
                                {
                                    const a = (0, p.H2)(t.achievements);e = (0, u.set)(e, "achievements", a);
                                    break
                                }
                        }
                        return e
                    },
                    animations: (e = (0, u.from)([]), t) => {
                        switch (t.type) {
                            case "QUEUE_ANIMATIONS":
                                e = e.concat(t.animations);
                                break;
                            case "DEQUEUE_ANIMATION":
                                e = e.filter((e => e.id !== t.id))
                        }
                        return e
                    },
                    avatars: (e = (0, u.from)({
                        builderConfig: void 0,
                        canShowAvatarsIntro: !0
                    }), t) => {
                        switch (t.type) {
                            case "SET_AVATAR_BUILDER_CONFIG":
                                e = (0, u.set)(e, "builderConfig", t.payload);
                                break;
                            case "SET_BUILT_AVATAR_STATE":
                                e = (0, u.set)(e, "builtAvatar", t.payload);
                                break;
                            case "SET_CAN_SHOW_AVATARS_INTRO":
                                e = (0, u.set)(e, "canShowAvatarsIntro", t.isEligible)
                        }
                        return e
                    },
                    brb: (e = m, t) => {
                        switch (t.type) {
                            case "brb/DISABLED":
                                e = (0, u.setIn)(e, [t.mode, "resetAt"], void 0), e = (0, u.setIn)(e, [t.mode, "status"], "disabled");
                                break;
                            case "brb/ENABLED":
                                e = (0, u.setIn)(e, [t.mode, "resetAt"], t.resetAt), e = (0, u.setIn)(e, [t.mode, "status"], "enabled");
                                break;
                            case "brb/IGNORED":
                                e = (0, u.setIn)(e, [t.mode, "ignoreUntil"], t.ignoreUntil), e = (0, u.setIn)(e, [t.mode, "resetAt"], void 0), e = (0, u.setIn)(e, [t.mode, "status"], "disabled")
                        }
                        return e
                    },
                    browserSettings: (e = _, t) => {
                        switch (t.type) {
                            case "DARK_MODE":
                                e = (0, u.set)(e, "darkMode", t.value);
                                break;
                            case "DISABLE_LISTEN":
                                e = (0, u.set)(e, "listenDisabledUntil", t.listenDisabledUntil);
                                break;
                            case "DISABLE_SPEAK":
                                e = (0, u.set)(e, "speakDisabledUntil", t.speakDisabledUntil);
                                break;
                            case "ENABLE_LISTEN":
                                e = (0, u.set)(e, "listenDisabledUntil", 0);
                                break;
                            case "ENABLE_SPEAK":
                                e = (0, u.set)(e, "speakDisabledUntil", 0);
                                break;
                            case "TOGGLE_COACH":
                                e = (0, u.set)(e, "coachEnabled", !e.coachEnabled);
                                break;
                            case "TOGGLE_COMPLETE_REVERSE_TRANSLATION":
                                e = (0, u.set)(e, "completeReverseTranslationTypingEnabled", !e.completeReverseTranslationTypingEnabled);
                                break;
                            case "TOGGLE_TAP":
                                e = (0, u.set)(e, "typingEnabled", !e.typingEnabled);
                                break;
                            case "SET_TRANSLITERATIONS_SETTINGS":
                                e = (0, v.FL)(e, ["transliterationsSettings", (0, h.LP)(t.learningLanguage, t.fromLanguage)], t.setting)
                        }
                        return e
                    },
                    characters: (e = (0, u.from)(S), t) => {
                        var a;
                        switch (t.type) {
                            case "characters/UPDATE_CHARACTER_CHART":
                                return (0, u.setIn)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage), "characterChart"], t.characterChart);
                            case "characters/SET_CHARACTER_CHART":
                                {
                                    const a = (0, h.LP)(t.learningLanguage, t.fromLanguage),
                                        s = {},
                                        n = t.characterChart.alphabets.some((e => (0, f.HZ)(e.id)));
                                    return n && t.characterChart.alphabets.map((e => {
                                        (0, f.HZ)(e.id) && (s[e.id] = {}, e.groups.forEach((t => {
                                            s[e.id][t.id] = !0
                                        })))
                                    })),
                                    (0, v.$f)(e, ["characterState", a], {
                                        activeAlphabetId: t.activeAlphabetId,
                                        characterChart: t.characterChart,
                                        fromLanguage: t.fromLanguage,
                                        learningLanguage: t.learningLanguage,
                                        openGroups: n ? s : void 0,
                                        scrollOffsets: {}
                                    })
                                }
                            case "characters/SET_ACTIVE_TAB":
                                return (0, u.setIn)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage), "activeAlphabetId"], t.activeAlphabetId);
                            case "characters/STAGE_CHART_UPDATE":
                                return (0, v.$f)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage)], {
                                    changedCharacters: t.changedCharacters,
                                    stagedCharacterChart: t.stagedCharacterChart
                                });
                            case "characters/EXPAND_COLLAPSE_GROUP":
                                return (0, u.setIn)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage), "openGroups", t.activeAlphabetId, t.groupId], t.isOpen);
                            case "characters/SKIP_ALPHABET_GATE":
                                {
                                    const s = null !== (a = e.skippedAlphabetGateIds[t.courseId]) && void 0 !== a ? a : [];
                                    return (0, u.setIn)(e, ["skippedAlphabetGateIds", t.courseId], [...s, t.gateId])
                                }
                            case "characters/SCROLL":
                                return (0, u.setIn)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage), "scrollOffsets", t.activeAlphabetId], t.scrollOffset);
                            case "characters/SET_ACTIVE_GROUP":
                                return (0, u.setIn)(e, ["characterState", (0, h.LP)(t.learningLanguage, t.fromLanguage), "activeGroupId"], t.groupId)
                        }
                        return e
                    },
                    config: (e = (0, u.from)(y), t) => ("UPDATE_CONFIG" === t.type && (e = (0, E.gQ)("debugIpCountry") ? { ...t.config,
                        ipCountry: (0, E.ky)("debugIpCountry")
                    } : t.config), e),
                    courseHistories: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "QUIT_SESSION":
                            case "START_SESSION":
                            case "RECORDED_SESSION":
                                {
                                    const {
                                        courseId: a
                                    } = t;
                                    return (0, u.set)(e, a, L(e[a], t))
                                }
                            case "UPDATE_USER":
                                {
                                    const {
                                        user: a
                                    } = t;
                                    return a.courses && (e = g.Ry(a.courses.map((a => [a.id, L(e[a.id], t)])))),
                                    e
                                }
                            default:
                                return e
                        }
                    },
                    courses: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "UPDATE_USER":
                                {
                                    const {
                                        currentCourse: s,
                                        courses: n
                                    } = t.user;
                                    if (n && (e = (0, u.from)(g.Ry(n.map((e => [e.id, e]))))), s) {
                                        let t = 0;
                                        e = (0, u.set)(e, s.id, { ...s,
                                            path: s.path.map((e => ({ ...e,
                                                unitNumber: e.unitIndex + 1
                                            }))),
                                            pathSectioned: s.pathSectioned.map((e => {
                                                const a = { ...e,
                                                    status: (0, A.df)(e),
                                                    type: (0, A.U_)(e),
                                                    units: e.units.map((e => ({ ...e,
                                                        unitNumber: e.unitIndex - t + 1
                                                    })))
                                                };
                                                return t += e.units.length, a
                                            })),
                                            skills: (a = s.skills, a.reduce(((e, t) => (e.push(t.map((e => e.id))), e)), []))
                                        })
                                    }
                                    break
                                }
                        }
                        var a;
                        return e
                    },
                    debug: (e = (0, u.from)({
                        warnings: []
                    }), t) => {
                        switch (t.type) {
                            case "debug/ADD_UNIQUE_DEBUG_WARNING":
                                e.warnings.some((e => e.type === t.warning.type)) || (e = (0, u.update)(e, "warnings", (e => e.concat([t.warning]))));
                                break;
                            case "debug/PAGE_LOAD":
                                e = (0, u.set)(e, "pageLoadTime", t.timestamp)
                        }
                        return e
                    },
                    friends: (e = (0, u.from)({
                        assets: {},
                        drawer: null,
                        feed: null,
                        recommendationInfo: null
                    }), t) => {
                        switch (t.type) {
                            case "SET_FEED":
                                e = (0, u.set)(e, "feed", t.feed);
                                break;
                            case "SET_KUDOS_ASSETS":
                                e = (0, u.set)(e, "assets", t.assets);
                                break;
                            case "SET_KUDOS_DRAWER":
                                e = (0, u.set)(e, "drawer", t.drawer);
                                break;
                            case "SET_FOLLOW_SUGGESTIONS":
                                e = (0, u.set)(e, "recommendationInfo", t.recommendationInfo);
                                break;
                            case "UPDATE_FOLLOW_SUGGESTIONS":
                                {
                                    if (null === e.recommendationInfo) break;
                                    const a = { ...e.recommendationInfo,
                                        recommendations: P(e.recommendationInfo.recommendations, t.filteredIds, t.rotatedIds)
                                    };e = (0, u.set)(e, "recommendationInfo", a);
                                    break
                                }
                            case "DELETE_FOLLOW_SUGGESTION":
                                {
                                    if (null === e.recommendationInfo) break;
                                    const a = { ...e.recommendationInfo,
                                        recommendations: e.recommendationInfo.recommendations.filter((e => e.userId !== t.deletedId))
                                    };e = (0, u.set)(e, "recommendationInfo", a);
                                    break
                                }
                        }
                        return e
                    },
                    goals: (e = (0, u.from)({
                        badges: [],
                        coreQuest: void 0,
                        dailyQuest: void 0,
                        difficulty: 0,
                        earnedBadges: [],
                        friendsQuest: {
                            details: void 0,
                            lastSeenTotalProgress: 0
                        },
                        hardQuest: void 0,
                        lastSeenMonthlyChallengeId: "",
                        lastSeenNextFriendsQuestStart: 0,
                        lastUpdated: void 0,
                        monthlyChallengeProgressUpdate: 0,
                        monthlyQuest: void 0,
                        monthlyQuestTheme: void 0,
                        pendingRewards: [],
                        progress: void 0,
                        progressUpdate: void 0,
                        schema: []
                    }), t) => {
                        switch (t.type) {
                            case "ACKNOWLEDGE_FRIENDS_QUEST_COMPLETE":
                                e = (0, u.setIn)(e, ["friendsQuest", "details", "acknowledged"], !0);
                                break;
                            case "SET_FRIENDS_QUEST_DETAILS":
                                e = (0, u.setIn)(e, ["friendsQuest", "details"], t.payload);
                                break;
                            case "SET_FRIENDS_QUEST_HIGH_FIVE_TIMESTAMP":
                                e = (0, u.setIn)(e, ["friendsQuest", "highFiveTimestamp"], t.value);
                                break;
                            case "SET_FRIENDS_QUEST_PROGRESS":
                                e = (0, u.setIn)(e, ["friendsQuest", "details", "ownProgress"], t.ownProgress), e = (0, u.setIn)(e, ["friendsQuest", "details", "totalProgress"], t.totalProgress);
                                break;
                            case "SET_GOALS_SCHEMA":
                                e = (0, u.set)(e, "schema", t.payload);
                                break;
                            case "SET_GOALS_DIFFICULTY":
                                e = (0, u.set)(e, "difficulty", t.payload);
                                break;
                            case "SET_GOALS_PROGRESS":
                                e = (0, u.set)(e, "progress", t.payload);
                                break;
                            case "SET_GOALS_PROGRESS_UPDATE":
                                e = (0, u.set)(e, "progressUpdate", t.payload);
                                break;
                            case "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE":
                                e = (0, u.set)(e, "monthlyChallengeProgressUpdate", t.payload.updates);
                                break;
                            case "SET_LAST_SEEN_FRIENDS_QUEST_TOTAL_PROGRESS":
                                e.friendsQuest && (e = (0, u.setIn)(e, ["friendsQuest", "lastSeenTotalProgress"], t.lastSeenTotalProgress));
                                break;
                            case "SET_LAST_SENT_FRIENDS_QUEST_GIFT_TIMESTAMP":
                                e.friendsQuest && (e = (0, u.setIn)(e, ["friendsQuest", "lastSentGiftTimestamp"], t.timestamp));
                                break;
                            case "SET_LAST_SENT_FRIENDS_QUEST_NUDGE":
                                e.friendsQuest && (e = (0, u.setIn)(e, ["friendsQuest", "lastSentNudge"], {
                                    nudgeType: t.nudgeType,
                                    timestamp: t.timestamp
                                }));
                                break;
                            case "SET_LAST_SEEN_NEXT_FRIENDS_QUEST_START":
                                e = (0, u.set)(e, "lastSeenNextFriendsQuestStart", t.lastSeenNextFriendsQuestStart);
                                break;
                            case "SET_LAST_SEEN_MONTHLY_CHALLENGE_ID":
                                e = (0, u.set)(e, "lastSeenMonthlyChallengeId", t.monthlyChallengeId);
                                break;
                            case "SET_PENDING_DAILY_QUEST_REWARDS":
                                e = (0, u.set)(e, "pendingRewards", t.dailyQuestRewards);
                                break;
                            case "SET_DAILY_QUESTS":
                                e = (0, u.set)(e, "coreQuest", t.payload.coreQuest), e = (0, u.set)(e, "dailyQuest", t.payload.dailyQuest), e = (0, u.set)(e, "hardQuest", t.payload.hardQuest), e = (0, u.set)(e, "lastUpdated", t.payload.lastUpdated);
                                break;
                            case "SET_MONTHLY_QUEST":
                                e = (0, u.set)(e, "monthlyQuest", t.payload);
                                break;
                            case "SET_MONTHLY_QUEST_THEME":
                                e = (0, u.set)(e, "monthlyQuestTheme", t.monthlyQuestTheme);
                                break;
                            case "SET_QUEST_BADGES":
                                e = (0, u.set)(e, "badges", t.badges);
                                break;
                            case "SET_EARNED_BADGES":
                                e = (0, u.set)(e, "earnedBadges", t.earnedBadges)
                        }
                        return e
                    },
                    heartsState: (e = (0, u.from)({
                        eligibleForFreeRefill: !1,
                        healthEnabled: !1,
                        hearts: 5,
                        maxHearts: 5,
                        nextHeartRefillTimestampMs: void 0,
                        secondsPerHeartSegment: 18e3,
                        unlimitedHeartsAvailable: !1,
                        unlimitedHeartsShieldIsOff: !1
                    }), t) => {
                        switch (t.type) {
                            case "UPDATE_HEARTS_STATE":
                                {
                                    const a = t.heartsConfig.secondsUntilNextHeartSegment,
                                        s = { ...t.heartsConfig,
                                            nextHeartRefillTimestampMs: N(a, t.currentTimestampMs),
                                            unlimitedHeartsShieldIsOff: e.unlimitedHeartsShieldIsOff
                                        };e = (0, u.merge)(e, s);
                                    break
                                }
                            case "INCREMENT_HEARTS":
                                {
                                    const a = Math.min(e.hearts + t.amount, e.maxHearts),
                                        s = a === e.maxHearts ? void 0 : e.secondsUntilNextHeartSegment,
                                        n = void 0 === s ? void 0 : e.nextHeartRefillTimestampMs;e = (0, u.merge)(e, {
                                        hearts: a,
                                        nextHeartRefillTimestampMs: n,
                                        secondsUntilNextHeartSegment: s
                                    });
                                    break
                                }
                            case "DECREMENT_ONE_HEART":
                                {
                                    const a = e.hearts === e.maxHearts,
                                        s = Math.max(0, e.hearts - 1);e = (0, u.set)(e, "hearts", s),
                                    a && (e = (0, u.merge)(e, {
                                        nextHeartRefillTimestampMs: N(e.secondsPerHeartSegment, t.currentTimestampMs),
                                        secondsUntilNextHeartSegment: e.secondsPerHeartSegment
                                    }));
                                    break
                                }
                            case "HEARTS_REFILL":
                                e = (0, u.merge)(e, {
                                    hearts: e.maxHearts,
                                    nextHeartRefillTimestampMs: void 0,
                                    secondsUntilNextHeartSegment: void 0
                                });
                                break;
                            case "PURCHASE_ITEM":
                                {
                                    if ("SUCCESS" !== t.status) break;
                                    let a = 0;
                                    switch (t.item.itemName) {
                                        case "health_refill_reactive":
                                        case "health_refill_discounted":
                                        case "health_refill":
                                            a = e.maxHearts;
                                            break;
                                        case "health_refill_partial_1":
                                            a = 1;
                                            break;
                                        case "health_refill_partial_2":
                                            a = 2;
                                            break;
                                        case "health_refill_partial_3":
                                            a = 3;
                                            break;
                                        case "health_refill_partial_4":
                                            a = 4
                                    }
                                    if (a > 0) {
                                        const t = Math.min(e.maxHearts, e.hearts + a);
                                        e = (0, u.merge)(e, {
                                            hearts: t,
                                            nextHeartRefillTimestampMs: t === e.maxHearts ? void 0 : e.nextHeartRefillTimestampMs,
                                            secondsUntilNextHeartSegment: t === e.maxHearts ? void 0 : e.secondsUntilNextHeartSegment
                                        })
                                    }
                                    break
                                }
                            case "SET_UNLIMITED_HEARTS_SHIELD":
                                e = (0, u.merge)(e, {
                                    unlimitedHeartsShieldIsOff: "off" === t.status
                                })
                        }
                        return e
                    },
                    items: (e = (0, u.from)({
                        inventory: {},
                        shop: {
                            in_app_purchase: [],
                            isLoaded: !1,
                            misc: {}
                        },
                        subscriptions: {
                            currentPlan: void 0,
                            isLoaded: !1,
                            subscriptionPlans: void 0
                        }
                    }), t) => {
                        var a, s;
                        switch (t.type) {
                            case "PURCHASE_ITEM":
                                {
                                    if ("SUCCESS" !== t.status) break;
                                    const {
                                        item: a
                                    } = t;
                                    if (D.some((e => e === a.itemName))) break;
                                    "streak_freeze" !== a.itemName ? e = (0, u.setIn)(e, ["inventory", a.itemName], a) : t.purchaseQuantity && (e = (0, u.setIn)(e, ["inventory", "streak_freeze", "quantity"], e.inventory.streak_freeze ? e.inventory.streak_freeze.quantity + t.purchaseQuantity : t.purchaseQuantity));
                                    break
                                }
                            case "REFILL_SOCIETY_STREAK_FREEZES":
                                if (void 0 === e.inventory.society_streak_freeze_refill) {
                                    (0, n.Kp)("Tried to refill society streak freezes without the required item in inventory.", {
                                        data: e.inventory
                                    });
                                    break
                                }
                                e = void 0 === (e = void 0 === e.inventory.society_streak_freeze ? (0, u.merge)(e, {
                                    inventory: { ...e.inventory,
                                        society_streak_freeze: {
                                            itemName: "society_streak_freeze",
                                            purchaseDate: Date.now(),
                                            purchaseId: "",
                                            purchasePrice: 0,
                                            quantity: t.maxQuantity
                                        },
                                        society_streak_freeze_refill: void 0
                                    }
                                }) : (0, u.setIn)(e, ["inventory", "society_streak_freeze", "quantity"], t.maxQuantity)).inventory.streak_freeze ? (0, u.merge)(e, {
                                    inventory: { ...e.inventory,
                                        streak_freeze: {
                                            itemName: "streak_freeze",
                                            purchaseDate: Date.now(),
                                            purchaseId: "",
                                            purchasePrice: 0,
                                            quantity: O.SG
                                        }
                                    }
                                }) : (0, u.setIn)(e, ["inventory", "streak_freeze", "quantity"], O.SG);
                                break;
                            case "REFRESH_USER_ITEM":
                                {
                                    const a = t.item;e = (0, u.set)(e, "inventory", { ...e.inventory,
                                        [a.itemName]: a
                                    });
                                    break
                                }
                            case "SET_AVAILABLE_SUBSCRIPTION_PLANS":
                                e = (0, u.set)(e, "subscriptions", {
                                    currentPlan: t.currentPlan,
                                    isLoaded: !0,
                                    subscriptionPlans: t.subscriptionPlans
                                });
                                break;
                            case "SET_SHOP_ITEMS":
                                {
                                    const a = {
                                        in_app_purchase: [],
                                        isLoaded: !1,
                                        misc: {}
                                    };t.items.forEach((e => {
                                        switch (e.type) {
                                            case "misc":
                                                a[e.type][e.id] = e;
                                                break;
                                            case "in_app_purchase":
                                                a[e.type].push(e);
                                                break;
                                            default:
                                                (0, I.RJ)(e)
                                        }
                                    })),
                                    a.isLoaded = !0,
                                    e = (0, u.set)(e, "shop", a);
                                    break
                                }
                            case "UPDATE_INVENTORY":
                                e = (0, u.set)(e, "inventory", t.inventory);
                                break;
                            case "REMOVE_AN_AVAILABLE_SUBSCRIPTION_PLAN":
                                {
                                    const n = null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.filter((e => e.productId !== t.planProductId));e = (0, u.setIn)(e, ["subscriptions", "subscriptionPlans"], n);
                                    break
                                }
                        }
                        return e
                    },
                    notifications: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "MARK_NOTIFICATIONS_READ":
                                e = g.Xc(e, (e => ({ ...e,
                                    unseen: !1
                                })));
                                break;
                            case "SET_NOTIFICATIONS":
                                e = t.notifications;
                                break;
                            case "UPDATE_FOLLOW_NOTIFICATION":
                                e = g.Xc(e, (e => e.id === t.notificationId ? { ...e,
                                    is_following: t.isFollowing
                                } : e))
                        }
                        return e
                    },
                    paymentMethods: (e = (0, u.from)([]), t) => ("REFRESH_USER_PAYMENT_METHODS" === t.type && (e = t.paymentMethods), e),
                    player: (e = K, t) => {
                        var a, s, r, i, o, l, c;
                        switch (e = ((e, t) => {
                            switch (t.type) {
                                case "SET_SMART_TIP_TO_SHOW":
                                    e = (0, u.set)(e, "shownSmartTipIds", [t.smartTipResource.identifier, ...e.shownSmartTipIds]), e = (0, u.set)(e, "smartTipToShow", t.smartTipResource);
                                    break;
                                case "UPDATE_GRADED_SMART_TIP":
                                    e = (0, u.set)(e, "status", x.c.SmartTipBlaming), e = (0, u.setIn)(e, ["smartTipToShow", "gradingResult"], {
                                        correct: t.correct
                                    })
                            }
                            return e
                        })(e, t), t.type) {
                            case "PLAYER_INIT":
                                e = (0, u.set)(e, "via", t.via);
                                break;
                            case "PLAYER_REMOUNT":
                                e = (0, u.set)(e, "key", e.key + 1);
                                break;
                            case "PLAYER_RESET":
                                e = K;
                                break;
                            case "RECEIVE_GIFT":
                                e = (0, u.setIn)(e, ["receivedGifts", t.gift], !0), e = (0, u.setIn)(e, ["receivedGifts", "quantity"], e.receivedGifts.quantity + t.quantity), e = (0, u.setIn)(e, ["receivedGifts", "fromMilestone"], t.fromMilestone);
                                break;
                            case "CLEAR_IN_LESSON_TIP":
                                return (0, u.merge)(e, {
                                    inLessonTip: void 0,
                                    inLessonTipShowing: !1
                                });
                            case "CREATE_SESSION":
                                {
                                    const {
                                        challengeIdSections: s,
                                        levelData: n,
                                        session: r,
                                        sessionParams: i,
                                        sessionPrefetchedTimestamp: o,
                                        sessionRouteParams: l,
                                        speakIneligibleReasons: c
                                    } = t,
                                    d = !i.isFinalLevel && r.beginner ? 4 : 3,
                                    g = r.type,
                                    p = ("practice" === (null == l ? void 0 : l.type) || "path-level" === (null == l ? void 0 : l.type)) && !0 === (null == l ? void 0 : l.isEarnbackSession),
                                    m = ("placement" === (null == l ? void 0 : l.type) || "path-level" === (null == l ? void 0 : l.type)) && !0 === (null == l ? void 0 : l.isEasierLesson),
                                    h = (0, q.LJ)(g) && !(0, q.l$)(g),
                                    v = h ? "sessionHearts" : t.hasUserHearts ? "userHearts" : "unlimitedHearts";
                                    if (i.type === R.FF.Adventures) {
                                        e = (0, u.merge)(e, {
                                            heartsType: v,
                                            levelData: n,
                                            maxHearts: d,
                                            session: { ...r,
                                                heartsLeft: h ? d : 0
                                            },
                                            sessionParams: i,
                                            sessionPrefetchedTimestamp: o,
                                            sessionRouteParams: l,
                                            speakIneligibleReasons: c
                                        });
                                        break
                                    }
                                    const _ = r.challenges[e.currentIndex],
                                        f = (0, F.BY)({
                                            challenge: _
                                        }),
                                        S = null !== (a = (() => {
                                            var e, t, a, s, o, l, c;
                                            switch (i.type) {
                                                case R.FF.GlobalPractice:
                                                    return p ? x.c.EarnbackSplash : void 0;
                                                case R.FF.AlphabetLesson:
                                                case R.FF.AlphabetPractice:
                                                    return i.showAlphabetTipSplash ? x.c.AlphabetTipSplash : void 0;
                                                case R.FF.Lesson:
                                                    return i.showGrammarSkillSplash ? x.c.GrammarSkillSplash : m ? x.c.EasierPlacementSplash : void 0;
                                                case R.FF.Legendary:
                                                case R.FF.LegendaryLevel:
                                                case R.FF.LegendaryLexemePractice:
                                                    return x.c.LegendaryDuo;
                                                case R.FF.LevelReview:
                                                    return x.c.CapstoneReviewSplash;
                                                case R.FF.LexemePractice:
                                                    {
                                                        if (p) return x.c.EarnbackSplash;
                                                        const i = "lexeme" === (null === (e = r.sessionContext) || void 0 === e ? void 0 : e.contextType) && (null === (a = null === (t = r.sessionContext) || void 0 === t ? void 0 : t.focusedLexemes) || void 0 === a ? void 0 : a.length) > 0 && n && !(0, W.Wc)((0, W.xV)(n.level)),
                                                            d = "grammar" === (null === (s = r.sessionContext) || void 0 === s ? void 0 : s.contextType) && (null === (l = null === (o = r.sessionContext) || void 0 === o ? void 0 : o.exampleSentences) || void 0 === l ? void 0 : l.length) > 0 && void 0 !== (null === (c = r.sessionContext) || void 0 === c ? void 0 : c.grammarDescription) && n && !(0, W.Wc)((0, W.xV)(n.level));
                                                        return !0 === i || d ? x.c.VisiblePersonalizationSplash : n && (0, W.$)(n.level) ? x.c.CapstoneReviewSplash : void 0
                                                    }
                                                case R.FF.LexemeSkillLevelPractice:
                                                    return p ? x.c.EarnbackSplash : void 0;
                                                case R.FF.ListeningPractice:
                                                case R.FF.SpeakingPractice:
                                                case R.FF.SpecifiedMatchPractice:
                                                case R.FF.TargetPractice:
                                                case R.FF.UnitRewind:
                                                    return x.c.PracticeHubDuo;
                                                case R.FF.MistakesReview:
                                                    return x.c.MistakesReviewDuo;
                                                case R.FF.Placement:
                                                    return m ? x.c.EasierPlacementSplash : void 0;
                                                case R.FF.PlacementTest:
                                                    return x.c.PlacementSplash;
                                                case R.FF.SectionTest:
                                                    return x.c.SectionTestSplash;
                                                case R.FF.UnitReview:
                                                    return void 0 === (null == n ? void 0 : n.level.dailyRefreshInfo) ? x.c.UnitReviewSplash : void 0;
                                                case R.FF.UnitTest:
                                                    return x.c.UnitTestSplash;
                                                default:
                                                    return
                                            }
                                        })()) && void 0 !== a ? a : (0, $.ct)(_, f);e = (0, u.merge)(e, {
                                        challengeIdSections: s,
                                        challengeStates: [f],
                                        heartsType: v,
                                        levelData: n,
                                        maxHearts: d,
                                        session: { ...r,
                                            heartsLeft: h ? d : 0
                                        },
                                        sessionParams: i,
                                        sessionPrefetchedTimestamp: o,
                                        sessionRouteParams: l,
                                        speakIneligibleReasons: c,
                                        status: S
                                    });
                                    break
                                }
                            case "DISABLE_HINTS_ON_HOVER":
                                e = (0, u.set)(e, "canShowHintsOnHover", !1);
                                break;
                            case "EASIER_LESSON_NUDGE_SHOWN":
                                e = (0, u.set)(e, "hasShownEasierLessonNudge", !0);
                                break;
                            case "EXTEND_SESSION":
                                {
                                    e = (0, u.setIn)(e, ["session", "challenges"], [...e.session.challenges, ...t.challenges]),
                                    e = (0, u.setIn)(e, ["session", "ttsAnnotations"], { ...e.session.ttsAnnotations,
                                        ...t.ttsAnnotations
                                    });
                                    const a = (0, u.asMutable)(e.challengeIdSections, {
                                        deep: !0
                                    });a[a.length - 1].push(...t.challenges.map((e => e.id))),
                                    e = (0, u.merge)(e, {
                                        challengeIdSections: a,
                                        confidence: t.confidence,
                                        progressScore: t.progressScore,
                                        status: x.c.Blaming
                                    });
                                    break
                                }
                            case "CHALLENGE_GUESS_CHANGE":
                                e = e.status === x.c.SmartTip ? (0, u.setIn)(e, ["smartTipToShow", "guess"], t.value) : (0, u.setIn)(e, ["challengeStates", e.currentIndex, "guess"], t.value);
                                break;
                            case "CHALLENGE_HAS_BROKEN_TTS":
                                e = (0, u.setIn)(e, ["challengeStates", e.currentIndex, "hasBrokenTts"], !0);
                                break;
                            case "CHALLENGE_STARTED":
                                e = (e = (0, u.set)(e, "canShowHintsOnHover", !0)).status === x.c.SmartTip ? (0, u.setIn)(e, ["smartTipToShow", "startTime"], t.timestamp) : (0, u.setIn)(e, ["session", "challenges", e.currentIndex, "startTime"], t.timestamp);
                                break;
                            case "CHALLENGE_WORLD_CHARACTER_SHOWN":
                                e = (0, u.setIn)(e, ["session", "challenges", e.currentIndex, "worldCharacterShown"], t.wasShown);
                                break;
                            case "COACH_DUO_SHOWN":
                                e = (0, u.updateIn)(e, ["coachDuo", "allCharacters"], (e => [...e, t.model.template.character])), e = (0, u.updateIn)(e, ["coachDuo", "allShowReasons"], (e => [...e, t.model.showReason]));
                                break;
                            case "CONTINUE_CURRENT_CHALLENGE":
                                {
                                    const t = e.session.challenges[e.currentIndex],
                                        a = e.challengeStates[e.currentIndex],
                                        s = (0, F.uu)({
                                            challenge: t,
                                            challengeState: a
                                        });e = (0, u.setIn)(e, ["challengeStates", e.currentIndex], s),
                                    e = (0, u.set)(e, "status", (0, F.j4)({
                                        challenge: t,
                                        challengeState: s
                                    }) ? x.c.Guessing : x.c.Showing);
                                    break
                                }
                            case "REPLACE_WITH_ADAPTIVE_CHALLENGES":
                                {
                                    const a = (0, u.asMutable)(e.challengeIdSections, {
                                            deep: !0
                                        }),
                                        s = (0, u.asMutable)(e.session.challenges);
                                    let n = 0,
                                        r = 0;s.forEach(((i, o) => {
                                        const l = o - e.currentIndex - 1;
                                        if (l >= 0 && l < t.challenges.length) {
                                            const i = t.challenges[o - e.currentIndex - 1];
                                            s[o] = i, a[n][r] = i.id
                                        }
                                        r < e.challengeIdSections[n].length ? r++ : (n++, r = 0)
                                    })),
                                    e = (0, u.setIn)(e, ["session", "challenges"], s),
                                    e = (0, u.set)(e, "challengeIdSections", a);
                                    break
                                }
                            case "ADVANCE_SESSION":
                                {
                                    const t = e.currentIndex + 1;e = (0, u.setIn)(e, ["challengeStates", t], (0, F.BY)({
                                        challenge: e.session.challenges[t]
                                    })),
                                    e = (0, u.setIn)(e, ["coachDuo", "model"], void 0),
                                    e = (0, u.set)(e, "currentIndex", t),
                                    e = (0, u.set)(e, "smartTipToShow", void 0),
                                    e = (0, u.set)(e, "status", x.c.Sliding);
                                    break
                                }
                            case "DISABLE_LISTEN":
                            case "DISABLE_SPEAK":
                                {
                                    if (void 0 === e.session) return e;
                                    const a = "DISABLE_LISTEN" === t.type ? (0, q.tq)() : (0, q.bc)();e = (0, u.setIn)(e, ["session", "adaptiveChallenges"], null === (s = e.session.adaptiveChallenges) || void 0 === s ? void 0 : s.filter((e => !a.includes(e.type))));
                                    const n = [],
                                        r = [],
                                        i = [];
                                    (0, $.L1)(e, (({
                                        challenge: t,
                                        challengeIndex: s,
                                        sectionIndex: o
                                    }) => {
                                        var l, c, d;
                                        const u = null !== (c = null === (l = e.session.adaptiveInterleavedChallenges) || void 0 === l ? void 0 : l.speakOrListenReplacementIndices[s]) && void 0 !== c ? c : null;
                                        if ((s <= e.currentIndex || !a.includes(t.type)) && (n.push(t), r[o] = r[o] || [], r[o].push(t.id), i.push(null != u ? u : null)), s >= e.currentIndex && null !== u && a.includes(t.type)) {
                                            const t = null === (d = e.session.adaptiveInterleavedChallenges) || void 0 === d ? void 0 : d.challenges[u];
                                            t && (n.push(t), r[o] = r[o] || [], r[o].push(t.id), i.push(u))
                                        }
                                        return !1
                                    })),
                                    e = (0, u.setIn)(e, ["session", "challenges"], n),
                                    (e = (0, u.set)(e, "challengeIdSections", r)).session.adaptiveInterleavedChallenges && (e = (0, u.setIn)(e, ["session", "adaptiveInterleavedChallenges", "speakOrListenReplacementIndices"], i));
                                    break
                                }
                            case "ENABLE_BONUS_POINTS":
                                e = (0, u.set)(e, "enableBonusPoints", !0);
                                break;
                            case "END_SESSION":
                                {
                                    const {
                                        enableBonusPoints: a,
                                        endedEarly: s,
                                        maxInLessonStreak: n,
                                        progressScore: r,
                                        session: {
                                            heartsLeft: i
                                        },
                                        sessionParams: {
                                            isFinalLevel: o
                                        }
                                    } = e,
                                    l = "sessionHearts" === e.heartsType && i <= 0,
                                    c = !s && !l;e = (0, u.set)(e, "completedWithHeartsRemaining", c);
                                    const d = {
                                        enableBonusPoints: a,
                                        endTime: t.timestamp,
                                        failed: !e.partialXpGiven && l,
                                        maxInLessonStreak: n,
                                        progressScore: r,
                                        shouldLearnThings: !o || c,
                                        xpPromised: (0, Q.xc)(e, t.user, t.hasXpBoost)
                                    };e = (0, v.$f)(e, ["session"], d);
                                    break
                                }
                            case "END_SESSION_EARLY":
                                e = (0, u.set)(e, "endedEarly", !0);
                                break;
                            case "LOAD_IN_LESSON_TIP_RESOURCE":
                                return (0, u.setIn)(e, ["inLessonTipResources", t.url], t.explanationResource);
                            case "UPDATE_DUO_RADIO_SESSION":
                                {
                                    const {
                                        session: a
                                    } = t;e = (0, u.merge)(e, {
                                        session: { ...a,
                                            duoRadioChallengeStats: t.duoRadioChallengeStats,
                                            maxInLessonStreak: t.maxInLessonCorrectStreak
                                        }
                                    });
                                    break
                                }
                            case "QUIT_SESSION":
                                e = (0, u.set)(e, "numTimesTransliterationToggled", 0);
                                break;
                            case "SESSION_END_SLIDES":
                                e = (0, u.set)(e, "nativeAd", t.nativeAd), e = (0, u.set)(e, "sessionSubmitted", !0), e = (0, u.set)(e, "slideData", t.slideData);
                                break;
                            case "SESSION_SUBMIT_END":
                                e = (0, u.set)(e, "sessionSubmitting", !1);
                                break;
                            case "SESSION_SUBMIT_FAILED":
                                e = (0, u.set)(e, "sessionSubmitError", t.error);
                                break;
                            case "SESSION_SUBMIT_START":
                                e = (0, u.set)(e, "sessionSubmitting", !0);
                                break;
                            case "SESSION_SUBMITTED":
                                e = (0, u.set)(e, "sessionSubmitted", !0);
                                break;
                            case "SET_COACH_DUO_MODEL":
                                e = (0, u.setIn)(e, ["coachDuo", "model"], t.model);
                                break;
                            case "SET_IN_LESSON_TIP":
                                return (0, u.set)(e, "inLessonTip", t.explanationResource);
                            case "SET_PARTIAL_XP_GIVEN":
                                e = (0, u.set)(e, "partialXpGiven", t.xpGiven);
                                break;
                            case "SET_PLAYER_STATUS":
                                e = (0, u.set)(e, "status", t.status);
                                break;
                            case "SET_SELECTED_STREAK_GOAL":
                                {
                                    const a = e.slideData[t.slideIndex];
                                    "earlyStreakMilestonePrompt" === a.type && (e = (0, u.setIn)(e, ["slideData", t.slideIndex], { ...a,
                                        selectedStreakGoal: t.selectedStreakGoal
                                    }));
                                    break
                                }
                            case "SET_SESSION_TIME":
                                e = (0, u.set)(e, "sessionTime", t.sessionTime);
                                break;
                            case "SET_TRANSLITERATIONS_SETTINGS":
                                e = (0, u.set)(e, "numTimesTransliterationToggled", e.numTimesTransliterationToggled + 1);
                                break;
                            case "SHOW_HINT":
                                {
                                    if (void 0 === e.challengeStates[e.currentIndex]) break;
                                    const a = e.challengeStates[e.currentIndex].hintsShown;e = (0, u.setIn)(e, ["challengeStates", e.currentIndex, "hintsShown"], void 0 === a ? [t.token] : [...a, t.token]);
                                    break
                                }
                            case "SPEECH_RECOGNIZER_FAILED":
                                e = (0, u.setIn)(e, ["challengeStates", e.currentIndex, "recognizerFailed"], !0);
                                break;
                            case "START_SESSION":
                                {
                                    const {
                                        startTime: a
                                    } = t,
                                    {
                                        challengeStates: s,
                                        currentIndex: r,
                                        session: i,
                                        sessionParams: o,
                                        status: l
                                    } = e,
                                    c = i.challenges[r];
                                    (0, j.rK)(i.type) && i.challenges.length < 10 && (0, n.Kp)("Practice hub session has fewer than 10 exercises", {
                                        data: {
                                            session: i,
                                            sessionParams: o
                                        }
                                    }),
                                    e = (0, u.setIn)(e, ["coachDuo", "model"], void 0),
                                    e = (0, u.setIn)(e, ["session", "startTime"], a),
                                    e = (0, u.set)(e, "status", l === x.c.CoachDuoSplash ? x.c.Sliding : i.type === R.FF.Adventures ? x.c.Showing : (0, $.ct)(c, s[r]));
                                    break
                                }
                            case "RECORDED_SESSION":
                                e = (0, v.FL)(e, ["session"], t.responseSession);
                                break;
                            case "TOGGLE_IN_LESSON_TIP":
                                return (0, u.merge)(e, {
                                    inLessonTipShowing: t.shouldShow,
                                    numInLessonTipOpens: e.numInLessonTipOpens + (t.shouldShow ? 1 : 0)
                                });
                            case "UPDATE_GRADED_CHALLENGE":
                                {
                                    if (e.status === x.c.Grading && !(0, q.l$)(e.session.type)) {
                                        const a = null !== (i = null === (r = t.challenge.gradingResult) || void 0 === r ? void 0 : r.numRetriesLeft) && void 0 !== i ? i : 0,
                                            s = null !== (l = null === (o = t.challenge.gradingResult) || void 0 === o ? void 0 : o.numStrokesLeft) && void 0 !== l ? l : 0;
                                        e = (0, q.bc)().includes(t.challenge.type) && a > 0 ? (0, u.set)(e, "status", x.c.SpeakRetryBlaming) : t.challenge.type === R.Sm.CharacterWrite && s > 0 && !t.challenge.skipped ? (0, u.set)(e, "status", x.c.CharacterWriteRetryBlaming) : (0, u.set)(e, "status", x.c.Blaming)
                                    }
                                    e = (0, v.FL)(e, ["session", "challenges", e.currentIndex], t.challenge);
                                    const a = null === (c = t.challenge.gradingResult) || void 0 === c ? void 0 : c.correct,
                                        s = t.challenge.skipped,
                                        d = () => {
                                            s || (a ? (e = (0, u.setIn)(e, ["coachDuo", "currentCorrectStreak"], e.coachDuo.currentCorrectStreak + 1), e = (0, u.setIn)(e, ["coachDuo", "currentIncorrectStreak"], 0)) : (e = (0, u.setIn)(e, ["coachDuo", "currentCorrectStreak"], 0), e = (0, u.setIn)(e, ["coachDuo", "currentIncorrectStreak"], e.coachDuo.currentIncorrectStreak + 1)))
                                        },
                                        p = () => {
                                            s ? e = (0, u.set)(e, "numChallengesSkipped", e.numChallengesSkipped + 1) : (a && (e = (0, u.set)(e, "numChallengesCorrect", e.numChallengesCorrect + 1)), e = (0, u.set)(e, "numChallengesAnswered", e.numChallengesAnswered + 1)), e = (0, u.set)(e, "numChallengesTotal", e.numChallengesTotal + 1)
                                        };
                                    if ("sessionHearts" !== e.heartsType || a || (e = (0, u.setIn)(e, ["session", "heartsLeft"], e.session.heartsLeft - 1)), e.session.type === R.FF.PlacementTest || e.session.type === R.FF.SectionTest || e.session.type === R.FF.UnitTest || e.status === x.c.SpeakRetryBlaming) d(),
                                    p();
                                    else if (!(0, q.LJ)(e.session.type)) {
                                        const t = e.session.challenges[e.currentIndex],
                                            r = e.challengeStates[e.currentIndex],
                                            [i, o] = (0, $.Dk)(e);
                                        if (void 0 === i || void 0 === o) throw Error("Could not find current challenge in challengeIdSections; this is a bug.");
                                        if (!a && !r.hasBrokenTts) {
                                            const a = e.challengeIdSections[i].length,
                                                {
                                                    challengeIndex: s
                                                } = (0, $.L1)(e, (({
                                                    sectionChallengeIndex: e,
                                                    sectionIndex: t
                                                }) => t === i && e === a - 1));
                                            if (void 0 === s) throw Error("This should never happen.");
                                            const r = (() => {
                                                    if ((0, q.HI)(e.session.type) && "unlimitedHearts" === e.heartsType && void 0 !== e.session.mistakesReplacementChallenges) {
                                                        const a = e.session.mistakesReplacementChallenges[e.mistakesReplacementChallengeIndex];
                                                        return e = (0, u.setIn)(e, ["session", "mistakesReplacementChallenges", e.session.mistakesReplacementChallenges.length], t), e = (0, u.set)(e, "mistakesReplacementChallengeIndex", e.mistakesReplacementChallengeIndex + 1), a
                                                    }
                                                    return (0, q.HI)(e.session.type) && "unlimitedHearts" === e.heartsType && void 0 === e.session.mistakesReplacementChallenges && (0, n.Kp)("Legendary session with unlimited hearts has no mistakesReplacementChallenges"), G.includes(e.session.type) ? ((e, t) => {
                                                        const a = (() => {
                                                                switch (e.type) {
                                                                    case R.Sm.Listen:
                                                                        return (e => {
                                                                            var t;
                                                                            const a = (0, M.TK)(e.prompt, null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess, .6);
                                                                            if ("all" === a.rangeType) return e;
                                                                            if ("one" === a.rangeType) {
                                                                                const t = (0, H.w)(e.prompt);
                                                                                return B(t, e, a)
                                                                            }
                                                                            return V(e, a)
                                                                        })(e);
                                                                    case R.Sm.PartialReverseTranslate:
                                                                        return (e => {
                                                                            const t = e.displayTokens.map((e => e.text)).join(""),
                                                                                a = (0, H.w)(t),
                                                                                s = (e => {
                                                                                    var t, a;
                                                                                    const s = e.displayTokens,
                                                                                        n = null !== (a = null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess) && void 0 !== a ? a : "",
                                                                                        r = s[1].isBlank,
                                                                                        i = s[0].isBlank,
                                                                                        o = e.displayTokens.filter(((t, a) => !t.isBlank && a > 0 && a < e.displayTokens.length - 1)).map((e => e.text)).join(""),
                                                                                        l = r ? `${n}${o}` : `${o}${n}`;
                                                                                    return `${i?"":s[0].text}${l}${s[s.length-1].text}`
                                                                                })(e),
                                                                                n = (0, M.TK)(t, s, .6);
                                                                            return "one" === n.rangeType ? z(a, e, n) : e
                                                                        })(e);
                                                                    case R.Sm.Translate:
                                                                        return (0, U.Dw)(e, t) && !(0, U.vv)(e) ? (e => {
                                                                            var t;
                                                                            const a = (0, M.TK)(e.correctSolutions[0], null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess, .6);
                                                                            if ("all" === a.rangeType) return e;
                                                                            if ("one" === a.rangeType) {
                                                                                const t = (0, H.w)(e.correctSolutions[0]);
                                                                                return z(t, e, a)
                                                                            }
                                                                            return Z(e, a)
                                                                        })(e) : e;
                                                                    default:
                                                                        return e
                                                                }
                                                            })(),
                                                            s = g.CE((0, v.Xh)(a), "gradingResult", "skipped");
                                                        return s.indicatorType = R.A.PastMistake, s
                                                    })(t, e.sessionParams.learningLanguage) : t
                                                })(),
                                                o = g.CE(r, "gradingResult", "skipped"),
                                                l = (0, u.asMutable)(e.session.challenges, {
                                                    deep: !0
                                                });
                                            l.splice(s + 1, 0, o), e = (0, u.setIn)(e, ["recycledMistakeIndexToOriginalMistakeIndex", s + 1], e.currentIndex), e = (0, u.setIn)(e, ["session", "challenges"], l);
                                            const c = (0, u.asMutable)(e.challengeIdSections, {
                                                deep: !0
                                            });
                                            c[i].push(t.id), e = (0, u.set)(e, "challengeIdSections", c)
                                        }
                                        const l = e.challengeIdSections.length,
                                            c = a ? 1 : 1 === l ? .25 : 2 === l ? 0 : -.5,
                                            m = e.challengeIdSections[i].length,
                                            h = i + (o === m - 1 ? 1 : 0);
                                        let _ = e.strength;
                                        const f = c * ((i + 1) / l - _) / (m - o);
                                        _ = Math.max(h / l, e.strength + f), _ = Math.min(_, 1), e = (0, u.set)(e, "strength", _), d(), p();
                                        const S = s ? 0 : 1;
                                        e = (0, u.set)(e, "currentInLessonStreak", a ? e.currentInLessonStreak + S : 0), e = (0, u.set)(e, "maxInLessonStreak", Math.max(e.currentInLessonStreak, e.maxInLessonStreak))
                                    }
                                    break
                                }
                        }
                        return e
                    },
                    profile: (e = (0, u.from)({}), t) => {
                        var a;
                        switch (t.type) {
                            case "RESET_PROFILE":
                                e = {
                                    firstPersonSocialProfile: e.firstPersonSocialProfile
                                };
                                break;
                            case "LOAD_ACHIEVEMENTS":
                                {
                                    const {
                                        v2: a,
                                        v3: s
                                    } = t.achievements;e = (0, u.set)(e, "achievements", {
                                        v2: a,
                                        v3: (0, p.H2)(s)
                                    });
                                    break
                                }
                            case "LOAD_PROFILE_AVATAR":
                                e = (0, u.set)(e, "builtAvatar", t.builtAvatar);
                                break;
                            case "LOAD_PRIVATE_PROFILE_USER":
                                e = (0, u.set)(e, "privateProfile", t.user);
                                break;
                            case "LOAD_PROFILE_USER":
                                e = (0, u.set)(e, "user", t.user);
                                break;
                            case "LOAD_PROFILE_XP":
                                e = (0, u.set)(e, "xpEvents", t.summaries);
                                break;
                            case "LOAD_SOCIAL_PROFILE":
                                e = (0, u.set)(e, "socialProfile", t.socialProfile);
                                break;
                            case "LOAD_FIRST_PERSON_SOCIAL_PROFILE":
                                e = (0, u.set)(e, "firstPersonSocialProfile", t.socialProfile);
                                break;
                            case "UPDATE_USER":
                                try {
                                    if ((0, Y.Jb)() === (null === (a = e.user) || void 0 === a ? void 0 : a.id)) {
                                        const a = (0, u.merge)(e.user, t.user, {
                                            deep: !0
                                        });
                                        e = (0, u.set)(e, "user", a)
                                    }
                                } catch {}
                        }
                        return e
                    },
                    sessionCache: (e = J, t) => {
                        switch (t.type) {
                            case "sessionCache/INITIALIZE":
                                e = (0, u.set)(e, "keys", t.keys);
                                break;
                            case "sessionCache/ADD":
                                e = (0, u.set)(e, "keys", e.keys.concat(t.key));
                                break;
                            case "sessionCache/REMOVE":
                                e = (0, u.set)(e, "keys", e.keys.filter((e => e !== t.key)))
                        }
                        return e
                    },
                    sessionEnd: (e = (0, u.from)({
                        slides: []
                    }), t) => {
                        var a, s, n;
                        const r = e.slides.length - 1;
                        switch (t.type) {
                            case "sessionEnd/CTA_CLICK":
                                r > -1 && (e = (0, u.setIn)(e, ["slides", r, "action"], "cta"));
                                break;
                            case "sessionEnd/DISMISSED":
                                r > -1 && (e = (0, u.setIn)(e, ["slides", r, "action"], null !== (a = e.slides[r].action) && void 0 !== a ? a : "dismiss"));
                                break;
                            case "sessionEnd/READY":
                                e.nativeAd && (e = (0, u.setIn)(e, ["nativeAd", "status"], "can-track")), e.nativeAd && (e = (0, u.set)(e, "nativeAd", X(e.nativeAd, t.timestamp))), r > -1 && (e = (0, u.setIn)(e, ["slides", r, "status"], "can-track"), e = (0, u.setIn)(e, ["slides", r], X(e.slides[r], t.timestamp)));
                                break;
                            case "sessionEnd/RESET":
                                e = (0, u.set)(e, "nativeAd", void 0), e = (0, u.set)(e, "slides", []);
                                break;
                            case "sessionEnd/SLIDE_HIDDEN":
                                "nativeAd" === t.slide.type && e.nativeAd && (e = (0, u.set)(e, "nativeAd", X(e.nativeAd, t.timestamp)));
                                break;
                            case "sessionEnd/SLIDE_SHOWN":
                                "nativeAd" === t.slide.type ? e = (0, u.set)(e, "nativeAd", {
                                    slide: t.slide,
                                    status: "pending",
                                    time: [...null !== (n = null === (s = e.nativeAd) || void 0 === s ? void 0 : s.time) && void 0 !== n ? n : [],
                                        [t.timestamp]
                                    ],
                                    tracking: t.tracking
                                }) : (r > -1 && (e = (0, u.setIn)(e, ["slides", r, "status"], "can-track"), e = (0, u.setIn)(e, ["slides", r], X(e.slides[r], t.timestamp))), e = (0, u.set)(e, "slides", [...e.slides, {
                                    slide: t.slide,
                                    status: "pending",
                                    time: [
                                        [t.timestamp]
                                    ],
                                    tracking: t.tracking
                                }]));
                                break;
                            case "sessionEnd/TRACKED":
                                e.nativeAd && t.slides.some((e => "nativeAd" === e.type)) && (e = (0, u.setIn)(e, ["nativeAd", "status"], "tracked")), e.slides.forEach(((a, s) => {
                                    t.slides.includes(a.slide) && (e = (0, u.setIn)(e, ["slides", s, "status"], "tracked"))
                                }))
                        }
                        return e
                    },
                    skills: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "UPDATE_USER":
                                {
                                    const {
                                        currentCourse: a
                                    } = t.user;
                                    if (a) {
                                        const {
                                            fromLanguage: t,
                                            learningLanguage: s,
                                            skills: n
                                        } = a, r = n;
                                        e = g.Ry(r.map(((e, a) => e.map((e => [e.id, {
                                            accessible: !1,
                                            decayed: !1,
                                            finishedLessons: 0,
                                            finishedLevels: 0,
                                            indicatingNewContent: !1,
                                            levels: 0,
                                            strength: 0,
                                            ...e,
                                            fromLanguage: t,
                                            learningLanguage: s,
                                            row: a,
                                            urlName: encodeURIComponent(e.urlName)
                                        }])))).flat())
                                    }
                                    break
                                }
                        }
                        return e
                    },
                    stories: ee.I,
                    streakEarnback: (e = (0, u.from)({
                        earnbackMultiSessionStats: void 0
                    }), t) => {
                        switch (t.type) {
                            case "CREATE_SESSION":
                                {
                                    const a = t.sessionRouteParams,
                                        s = t.user,
                                        r = ("practice" === (null == a ? void 0 : a.type) || "path-level" === (null == a ? void 0 : a.type)) && !0 === (null == a ? void 0 : a.isEarnbackSession),
                                        i = (() => {
                                            if (r) {
                                                if (s.streakRepairOffer) return void 0 !== e.earnbackMultiSessionStats && (0, te.SZ)(e.earnbackMultiSessionStats) ? e.earnbackMultiSessionStats : {
                                                    numChallengesCorrect: 0,
                                                    sessionsCompleted: 0,
                                                    totalChallenges: 0,
                                                    totalSessions: (0, te.TT)(s.streakRepairOffer.length),
                                                    totalXp: 0
                                                };
                                                (0, n.vU)("Attempting earnback session without repairable streak", {
                                                    once: !0
                                                })
                                            }
                                        })();e = (0, u.set)(e, "earnbackMultiSessionStats", i);
                                    break
                                }
                            case "SET_EARNBACK_MULTI_SESSION_STATS":
                                e = (0, u.set)(e, "earnbackMultiSessionStats", t.stats)
                        }
                        return e
                    },
                    student: (e = (0, u.from)({
                        classrooms: [],
                        sessionActivities: []
                    }), t) => {
                        switch (t.type) {
                            case "JOIN_CLASSROOM":
                                if (-1 !== e.classrooms.findIndex((e => e.classroom_id === t.classroom.classroom_id))) break;
                                e = (0, u.set)(e, "classrooms", [...e.classrooms, t.classroom]);
                                break;
                            case "LEAVE_CLASSROOM":
                                e = (0, u.set)(e, "classrooms", e.classrooms.filter((e => e.classroom_id !== t.classroomId)));
                                break;
                            case "UPDATE_CLASSROOMS":
                                e = (0, u.set)(e, "classrooms", t.classrooms);
                                break;
                            case "UPDATE_SESSION_ACTIVITIES":
                                e = (0, u.set)(e, "sessionActivities", t.sessionActivities)
                        }
                        return e
                    },
                    subscriptions: (e = (0, u.from)({}), t) => {
                        switch (t.type) {
                            case "SET_SUBSCRIPTIONS":
                                e = (0, u.from)(t.subscriptions);
                                break;
                            case "ADD_SUBSCRIPTION":
                                e = (0, u.set)(e, `${t.followedUser.id}`, t.followedUser);
                                break;
                            case "REMOVE_SUBSCRIPTION":
                                {
                                    const a = g.XP(e).filter((e => e !== `${t.userId}`)).map((t => e[t]));e = (0, u.from)(g.HK(a, "id"));
                                    break
                                }
                        }
                        return e
                    },
                    ui: (e = se, t) => {
                        var a;
                        switch (t.type) {
                            case "APP_OFFSET":
                                e = (0, u.set)(e, "appOffset", t.value);
                                break;
                            case "CAN_SHOW_HOME_MESSAGE":
                                if (t.name && (!0 === e.canShowHomeMessage || Array.isArray(e.canShowHomeMessage) && e.canShowHomeMessage.includes(t.name))) break;
                                e = (0, u.set)(e, "canShowHomeMessage", !t.name || (Array.isArray(e.canShowHomeMessage) ? [...e.canShowHomeMessage, t.name] : [t.name]));
                                break;
                            case "COME_ONLINE":
                                e = (0, u.set)(e, "online", !0);
                                break;
                            case "CREATE_HOME_MESSAGE":
                                switch (t.name) {
                                    case "marketingOptIn":
                                    case "plusBadge":
                                    case "plusBadgeFamily":
                                        e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], !0);
                                        break;
                                    case "schoolsJoinedClassroom":
                                        e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], {
                                            observerName: t.observerName
                                        })
                                }
                                break;
                            case "DIMMED_OVERLAY_CLOSED":
                                e = (0, u.set)(e, "isDimmedOverlayOpen", !1);
                                break;
                            case "DIMMED_OVERLAY_OPENED":
                                e = (0, u.set)(e, "isDimmedOverlayOpen", !0);
                                break;
                            case "DISABLE_HOME_MESSAGE":
                            case "DISMISS_HOME_MESSAGE":
                                "DISMISS_HOME_MESSAGE" === t.type && ("dogfoodingPreview" !== t.name && (e = (0, u.set)(e, "canShowHomeMessage", !1)), e = (0, u.set)(e, "homeMessage", void 0), e = (0, u.set)(e, "homeMessageData", void 0)), e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], void 0);
                                break;
                            case "ENGAGEMENT_OVERRIDE":
                                e = (0, u.set)(e, "engagementOverride", t.value);
                                break;
                            case "SET_SWRL_ENGAGEMENT":
                                e = (0, u.set)(e, "swrlEngagement", t.value), t.storyModeSWRLEngagement && (e = (0, u.set)(e, "storyModeSWRLEngagement", t.storyModeSWRLEngagement));
                                break;
                            case "GO_OFFLINE":
                                e = (0, u.set)(e, "online", !1);
                                break;
                            case "LOGOUT":
                                e = (0, u.set)(e, "isLoggingOut", !0);
                                break;
                            case "MICROPHONE_PERMISSION":
                                e = (0, u.set)(e, "microphonePermission", t.value);
                                break;
                            case "MODAL_CLOSED":
                                e = (0, u.set)(e, "isModalReallyOpen", !1);
                                break;
                            case "MODAL_MOUNTED":
                                e = (0, u.set)(e, "availableModals", [...e.availableModals, t.name]);
                                break;
                            case "MODAL_OPENED":
                                e = (0, u.set)(e, "isModalReallyOpen", !0);
                                break;
                            case "MODAL_UNMOUNTED":
                                (null === (a = (e = (0, u.set)(e, "availableModals", e.availableModals.filter((e => e !== t.name)))).modal) || void 0 === a ? void 0 : a.name) === t.name && (e = (0, u.set)(e, "modal", void 0), e = (0, u.set)(e, "modalIsUhmManaged", !1), e = (0, u.set)(e, "isModalReallyOpen", !1));
                                break;
                            case "HOME_MESSAGE_MEETS_TIME_CRITERION":
                                e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], !0);
                                break;
                            case "PURCHASE_ITEM":
                                switch (t.status) {
                                    case "FAIL":
                                    case "SUCCESS":
                                        e = (0, u.set)(e, "purchasingItem", !1);
                                        break;
                                    case "START":
                                        e = (0, u.set)(e, "purchasingItem", !0)
                                }
                                break;
                            case "RESIZE_WINDOW":
                                e = (0, u.merge)(e, {
                                    viewportHeight: t.height,
                                    viewportWidth: t.width
                                });
                                break;
                            case "SET_CAN_SHOW_AGE_RESTRICTED_LEADERBOARDS_INTRO":
                                e = (0, u.set)(e, "canShowAgeRestrictedLeaderboardsIntro", t.isEligible);
                                break;
                            case "SET_HOME_MESSAGE":
                                e = (0, u.set)(e, "homeMessage", t.name), e = (0, u.set)(e, "homeMessageData", t.data);
                                break;
                            case "SET_IS_AVATAR_UPLOADING":
                                e = (0, u.set)(e, "isAvatarUploading", t.isUploading);
                                break;
                            case "SET_POPOVER":
                                e = (0, u.merge)(e, {
                                    popover: {
                                        popoverId: t.id,
                                        wordGroupId: t.wordGroupId
                                    }
                                });
                                break;
                            case "SET_HOME_PAGE_POPOVER":
                                e = (0, u.merge)(e, {
                                    homePagePopoverId: void 0 !== t.id && void 0 !== t.section ? `${t.section}/${t.id}` : void 0
                                });
                                break;
                            case "SET_SELECTED_PATH_SECTION":
                                e = (0, u.set)(e, "selectedPathSectionType", t.selectedPathSectionType);
                                break;
                            case "SET_SHOULD_RETURN_TO_SECTIONS":
                                e = (0, u.set)(e, "shouldReturnToSections", t.shouldReturnToSections);
                                break;
                            case "SET_SPOTLIGHT_FOR_MODAL":
                                e = (0, u.set)(e, "spotlightType", t.spotlightType);
                                break;
                            case "SET_VISIBLE_UNIT_INDEX":
                                e = (0, u.set)(e, "visibleUnitIndex", t.index);
                                break;
                            case "SETTING_SUBMIT_END":
                                e = (0, u.set)(e, "settingsSubmitting", e.settingsSubmitting.filter((e => e !== t.key)));
                                break;
                            case "SETTING_SUBMIT_START":
                                e = (0, u.set)(e, "didChangeSetting", !0), e = (0, u.setIn)(e, ["settingsSubmitting", e.settingsSubmitting.length], t.key);
                                break;
                            case "SETTINGS_OPENED":
                                e = (0, u.set)(e, "didChangeSetting", !1), e = (0, u.set)(e, "settingsOpenedAt", t.timestamp);
                                break;
                            case "RECORDED_SESSION":
                                e = (0, u.setIn)(e, ["homeMessagingClientState", "resurrectedWelcome"], void 0), e = (0, u.setIn)(e, ["homeMessagingClientState", "reactivatedWelcome"], void 0);
                                break;
                            case "SWITCH_COURSE":
                                e = (0, u.set)(e, "isSwitchingCourse", !0);
                                break;
                            case "SWITCH_COURSE_END":
                                e = (0, u.set)(e, "isSwitchingCourse", !1);
                                break;
                            case "TOGGLE_DRAWER":
                                t.options ? (e = (0, u.merge)(e, {
                                    drawer: t.options,
                                    drawerIsUhmManaged: !0 === t.isUhmManaged,
                                    secondaryModal: void 0,
                                    spotlightType: t.options.spotlightType,
                                    toast: void 0,
                                    toastIsUhmManaged: !1
                                }), t.keepFullscreenModal || (e = (0, u.merge)(e, {
                                    modal: void 0,
                                    modalIsUhmManaged: !1
                                }))) : e = (0, u.merge)(e, {
                                    drawer: void 0,
                                    drawerIsUhmManaged: !1,
                                    spotlightType: void 0
                                });
                                break;
                            case "TOGGLE_MODAL":
                                if (t.options) {
                                    if (!e.availableModals.includes(t.options.name) && t.options.name !== ae.t.HomeMessage) break;
                                    if (!1 === t.replaceExisting && e.modal) break;
                                    e = (0, u.merge)(e, {
                                        drawer: void 0,
                                        drawerIsUhmManaged: !1,
                                        modal: t.options,
                                        modalIsUhmManaged: !0 === t.isUhmManaged,
                                        modalShouldWaitForOverlay: !e.isDimmedOverlayOpen,
                                        secondaryModal: void 0,
                                        spotlightType: t.options.spotlightType,
                                        toast: void 0,
                                        toastIsUhmManaged: !1
                                    })
                                } else e = (0, u.merge)(e, {
                                    modal: void 0,
                                    modalIsUhmManaged: !1,
                                    secondaryModal: void 0,
                                    spotlightType: void 0
                                });
                                break;
                            case "TOGGLE_SECONDARY_MODAL":
                                if (void 0 === t.options) {
                                    e = (0, u.merge)(e, {
                                        secondaryModal: void 0
                                    });
                                    break
                                }
                                if (!e.availableModals.includes(t.options.name)) break;
                                e = (0, u.merge)(e, {
                                    drawer: void 0,
                                    drawerIsUhmManaged: !1,
                                    isDimmedOverlayOpen: !1,
                                    secondaryModal: t.options
                                });
                                break;
                            case "TOGGLE_REQUEST_NOTIFICATION_PERMISSION":
                                e = (0, u.set)(e, "isRequestingNotificationPermission", t.isVisible);
                                break;
                            case "TOGGLE_TOAST":
                                e = t.options ? (0, u.merge)(e, {
                                    drawer: void 0,
                                    drawerIsUhmManaged: !1,
                                    modal: void 0,
                                    modalIsUhmManaged: !1,
                                    toast: t.options,
                                    toastIsUhmManaged: !0 === t.isUhmManaged
                                }) : (0, u.merge)(e, {
                                    toast: void 0,
                                    toastIsUhmManaged: !1
                                });
                                break;
                            case "SET_SHOP_ITEMS":
                                e = (0, u.set)(e, "isShopItemsFresh", !0);
                                break;
                            case "UNMOUNT":
                                e = (0, u.set)(e, "shouldUnmount", !0);
                                break;
                            case "UPDATE_B2B_PRICING_DATA":
                                e = (0, u.set)(e, "b2bPricingData", t.b2bPricingData);
                                break;
                            case "UPDATE_INVENTORY":
                                e = (0, u.set)(e, "isInventoryFresh", !0);
                                break;
                            case "UPDATE_USER":
                                e = (0, u.set)(e, "isUserModelFresh", !0)
                        }
                        return e
                    },
                    uiPersisted: (e = (0, u.from)({
                        courseDailyRefreshShown: {},
                        homeMessagingClientState: {},
                        plusBannerShown: {
                            count: 0
                        },
                        reportedProfileUserIds: [],
                        sessionEndPlusAdShown: {
                            count: 0
                        },
                        streakExtendedTimesLastSevenDays: []
                    }), t) => {
                        var a, s, n, r, i, o, l, c, d, g, p, m, h, v, _, f, S, y, E, I, w, k, T, C;
                        switch (t.type) {
                            case "CREATE_HOME_MESSAGE":
                                re(t.name) && (e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], !0));
                                break;
                            case "DAILY_REFRESH_SHOWN":
                                e = (0, u.setIn)(e, ["courseDailyRefreshShown", t.course], t.timestamp);
                                break;
                            case "DISMISS_HOME_MESSAGE":
                                if (re(t.name)) e = (0, u.setIn)(e, ["homeMessagingClientState", t.name], !1);
                                else switch (t.name) {
                                    case "reactivatedWelcome":
                                    case "resurrectedWelcome":
                                    case "streakRepairOffer":
                                        e = (0, u.setIn)(e, ["homeMessagingClientState", t.name, "lastClosed"], t.timestamp);
                                        break;
                                    case "newYearsDiscount":
                                        e = (0, u.setIn)(e, ["homeMessagingClientState", "newYearsDiscount"], {
                                            lastShown: t.timestamp
                                        })
                                }
                                break;
                            case "HOME_MESSAGE_SHOWN":
                                switch (t.name) {
                                    case "mobileWebToAppConversion":
                                    case "pathChange":
                                    case "pathMigration":
                                    case "streakFreezeFromDuo":
                                        e = (0, u.setIn)(e, ["homeMessagingClientState", t.name, "lastShown"], t.timestamp);
                                        break;
                                    case "streakFreezeRecurringOffer":
                                    case "webToAppConversion":
                                    case "webToAppConversionAggressive":
                                        {
                                            const a = "webToAppConversionAggressive" === t.name ? "webToAppConversion" : t.name;e = (0, u.setIn)(e, ["homeMessagingClientState", a, "lastShown"], t.timestamp),
                                            e = (0, u.updateIn)(e, ["homeMessagingClientState", a, "shows"], (e => (null != e ? e : 0) + 1));
                                            break
                                        }
                                }
                                break;
                            case "PURCHASE_ITEM":
                                "SUCCESS" === t.status && "streak_freeze" === t.item.itemName && (e = (0, u.setIn)(e, ["homeMessagingClientState", "streakFreezeRecurringOffer"], {
                                    shows: 0
                                }));
                                break;
                            case "UPDATE_USER":
                                (null === (a = t.user.streakData) || void 0 === a ? void 0 : a.currentStreak) && t.user.streakData.currentStreak.length < 3 && (e = (0, u.setIn)(e, ["homeMessagingClientState", "streakFreezeRecurringOffer"], {
                                    shows: 0
                                }));
                                break;
                            case "USED_TYPE_TO_SELECT_TOKEN":
                                e = (0, u.setIn)(e, ["typeToSelect", "used"], !0);
                                break;
                            case "SET_LEADERBOARD_POSITION_STATE":
                                e = (0, u.set)(e, "leaderboardPositionState", t.leaderboardPositionState);
                                break;
                            case "PLUS_BANNER_SHOWN":
                                e = (0, u.set)(e, "plusBannerShown", {
                                    count: (null !== (n = null === (s = e.plusBannerShown) || void 0 === s ? void 0 : s.count) && void 0 !== n ? n : 0) + 1,
                                    lastShown: t.timestamp
                                });
                                break;
                            case "SAVE_REPORTED_PROFILE_USER_ID":
                                {
                                    const a = null !== (r = e.reportedProfileUserIds) && void 0 !== r ? r : [];e = (0, u.set)(e, "reportedProfileUserIds", [t.profileUserId, ...a.slice(0, 32)]);
                                    break
                                }
                            case "SESSION_END_PLUS_AD_SHOWN":
                                e = (0, u.set)(e, "sessionEndPlusAdShown", {
                                    count: (null !== (o = null === (i = e.sessionEndPlusAdShown) || void 0 === i ? void 0 : i.count) && void 0 !== o ? o : 0) + 1,
                                    lastShown: t.timestamp
                                });
                                break;
                            case "SET_STREAK_PANEL_LAST_STREAK_MESSAGE_SHOWN":
                                e = (0, u.set)(e, "streakPanelLastStreakMessageShown", {
                                    messageId: t.messageId,
                                    utcIsoDateString: t.utcIsoDateString
                                });
                                break;
                            case "SET_STREAK_SOCIETY_REWARD_CLAIMED":
                                e = (0, u.set)(e, "streakSocietyRewardClaimed", {
                                    reward: t.reward,
                                    timestamp: t.timestamp
                                });
                                break;
                            case "STREAK_EXPLAINER_ENTRY_POINT_SHOWN":
                                e = (0, u.set)(e, "streakExplainer", {
                                    count: null !== (c = null === (l = e.streakExplainer) || void 0 === l ? void 0 : l.count) && void 0 !== c ? c : 0,
                                    entryPointLastShown: t.timestamp
                                });
                                break;
                            case "STREAK_EXPLAINER_SHOWN":
                                e = (0, u.set)(e, "streakExplainer", {
                                    count: (null !== (g = null === (d = e.streakExplainer) || void 0 === d ? void 0 : d.count) && void 0 !== g ? g : 0) + 1,
                                    entryPointLastShown: null === (p = e.streakExplainer) || void 0 === p ? void 0 : p.entryPointLastShown
                                });
                                break;
                            case "STREAK_NUDGE_SHOWN":
                                e = (0, u.set)(e, "streakNudgeShown", {
                                    count: t.resurrectionTimestamp === (null === (m = e.streakNudgeShown) || void 0 === m ? void 0 : m.resurrectionTimestamp) ? (null !== (v = null === (h = e.streakNudgeShown) || void 0 === h ? void 0 : h.count) && void 0 !== v ? v : 0) + 1 : 1,
                                    lastShown: t.timestamp,
                                    resurrectionTimestamp: t.resurrectionTimestamp
                                });
                                break;
                            case "STREAK_SOCIETY_INDUCTION_SLIDE_SHOWN":
                                e = (0, u.set)(e, "streakSocietyInductionSlideShownTime", t.timestamp);
                                break;
                            case "SET_SKIPPED_LEVEL":
                                e = t.levelId || (null === (_ = e.skippedLevelInfo) || void 0 === _ ? void 0 : _.levelId) ? (0, u.set)(e, "skippedLevelInfo", {
                                    levelId: null !== (y = null !== (f = t.levelId) && void 0 !== f ? f : null === (S = e.skippedLevelInfo) || void 0 === S ? void 0 : S.levelId) && void 0 !== y ? y : ""
                                }) : (0, u.set)(e, "skippedLevelInfo", void 0);
                                break;
                            case "SUPER_PREVIEW_ENDING_CALLOUT_SHOWN":
                                e = (0, u.setIn)(e, ["homeMessagingClientState", "superPreviewEndingCallout"], {
                                    lastShown: t.shownTimestampInMs,
                                    lastShownPurchaseId: t.superPreviewPurchaseId
                                });
                                break;
                            case "SUPER_VIDEO_PROMO_SHOWN":
                                e = (0, u.set)(e, "superVideoPromoShown", {
                                    count: (null !== (I = null === (E = e.superVideoPromoShown) || void 0 === E ? void 0 : E.count) && void 0 !== I ? I : 0) + 1,
                                    hasSeenFamilyPlan: null !== (k = t.isFamilyPlan || (null === (w = e.superVideoPromoShown) || void 0 === w ? void 0 : w.hasSeenFamilyPlan)) && void 0 !== k && k,
                                    hasSeenNewYears: null !== (C = t.isNewYears || (null === (T = e.superVideoPromoShown) || void 0 === T ? void 0 : T.hasSeenNewYears)) && void 0 !== C && C,
                                    lastShownTimestamp: t.timestamp
                                });
                                break;
                            case "UPDATE_STREAKS_EXTENDED_TIMES":
                                {
                                    const a = [...e.streakExtendedTimesLastSevenDays, t.streakExtension],
                                        s = (0, ne.kD)(t.streakExtension, b.ee, a);e = (0, u.set)(e, "streakExtendedTimesLastSevenDays", s)
                                }
                        }
                        return e
                    },
                    user: (e = (0, u.from)({
                        coachRecords: {},
                        explanationsSeen: {},
                        gemsConfig: {
                            gems: 0,
                            gemsPerSkill: 0,
                            useGems: !0
                        },
                        lingots: 0,
                        recentlySeenSmartTips: {},
                        sessionsCompleted: 0,
                        streakData: {
                            currentStreak: null,
                            longestStreak: null,
                            previousStreak: null
                        }
                    }), t) => {
                        var a, s, n, r, i, o, l, c, d, p, m, h, _, f;
                        switch (t.type) {
                            case "MARK_NOTIFICATIONS_READ":
                                e = (0, u.set)(e, "webNotificationIds", []);
                                break;
                            case "DISABLE_HOME_MESSAGE":
                            case "DISMISS_HOME_MESSAGE":
                                ie.Qd[t.name] ? e = (0, u.set)(e, "persistentNotifications", g.zu(e.persistentNotifications, ie.Qd[t.name])) : ("DISABLE_HOME_MESSAGE" === t.type && "streakRepairOffer" === t.name && (e = (0, u.set)(e, "streakRepairOffer", void 0)), "DISMISS_HOME_MESSAGE" === t.type && "immersivePlusPromo" === t.name && (e = (0, u.set)(e, "premiumExpirationTimestampSeconds", void 0)));
                                break;
                            case "ACTIVATE_SUPER":
                                e = (0, u.set)(e, "premiumExpirationTimestampSeconds", t.premiumExpirationTimestampSeconds);
                                break;
                            case "ADD_SUPER_DISCOUNT":
                                e = (0, u.setIn)(e, ["plusDiscounts"], [le(t.apiDiscount), ...e.plusDiscounts]);
                                break;
                            case "REMOVE_SUPER_DISCOUNT":
                                e = (0, u.setIn)(e, ["plusDiscounts"], e.plusDiscounts.filter((e => e.discountType !== t.discountType)));
                                break;
                            case "EXPLANATION_SHOWN":
                                e = (0, u.setIn)(e, ["explanationsSeen", t.explanationSkillId], t.timestamp);
                                break;
                            case "PURCHASE_ITEM":
                                if ("SUCCESS" !== t.status) break;
                                e = e.gemsConfig.useGems ? (0, u.setIn)(e, ["gemsConfig", "gems"], e.gemsConfig.gems - t.item.purchasePrice * (null !== (a = t.purchaseQuantity) && void 0 !== a ? a : 1)) : (0, u.set)(e, "lingots", e.lingots - t.item.purchasePrice * (null !== (s = t.purchaseQuantity) && void 0 !== s ? s : 1));
                                break;
                            case "SET_STREAK_GOAL":
                                e = (0, u.set)(e, "selectedStreakGoal", t.streakGoal);
                                break;
                            case "UPDATE_EXPERIMENT_RECORD":
                                {
                                    const a = e.experiments[t.name];a && (e = (0, v.$f)(e, ["experiments", t.name], {
                                        condition: null !== (n = t.condition) && void 0 !== n ? n : a.condition,
                                        contexts: t.context && !a.contexts.includes(t.context) ? [...a.contexts, t.context].sort() : a.contexts,
                                        treated: t.treated
                                    }));
                                    break
                                }
                            case "REFRESH_PRACTICE_HUB":
                                e = (0, v.$f)(e, ["practiceHubInfo", t.courseId], t.practiceHubCourseInfo);
                                break;
                            case "COMPLETE_PRACTICE_HUB_FEATURED_STORY":
                                e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "featuredStory", "completed"], !0);
                                break;
                            case "COMPLETE_PRACTICE_HUB_SESSION":
                                if (void 0 === (null === (r = e.practiceHubInfo) || void 0 === r ? void 0 : r[t.courseId])) throw Error("Tried to update practice hub session completion status in redux without practice hub data.");
                                e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "sessions", t.sessionName, "completed"], !0);
                                break;
                            case "SET_PARENTAL_CONSENT_STATUS_FOR_SOCIAL":
                                e = (0, u.set)(e, "hasRequestedParentalConsentForSocial", t.hasRequestedParentalConsent);
                                break;
                            case "MISTAKES_VISITED":
                                if (void 0 === (null === (i = e.practiceHubInfo) || void 0 === i ? void 0 : i[t.courseId])) throw Error("Tried to update mistakes visited timestamp in redux without practice hub course info.");
                                e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "timestampMistakesLastVisited"], t.timestamp);
                                break;
                            case "PRACTICE_HUB_VISITED":
                                if (void 0 === (null === (o = e.practiceHubInfo) || void 0 === o ? void 0 : o[t.courseId])) throw Error("Tried to update practice hub tab visited timestamp in redux without practice hub course info.");
                                e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "timestampTabLastVisited"], t.timestamp);
                                break;
                            case "WORDS_LIST_VISITED":
                                {
                                    const a = null === (l = e.practiceHubInfo) || void 0 === l ? void 0 : l[t.courseId];
                                    (null == a ? void 0 : a.wordsList) && (e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "wordsList", "practiceHub" === t.location ? "lastVisitLexemeCountOnPracticeHub" : "lastVisitLexemeCountOnWordsList"], a.wordsList.currentLexemeCount));
                                    break
                                }
                            case "WORDS_LIST_UPDATE_CURRENT_COUNT":
                                (null === (c = e.practiceHubInfo) || void 0 === c ? void 0 : c[t.courseId]) && (e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "wordsList", "currentLexemeCount"], t.lexemeCount));
                                break;
                            case "WORDS_LIST_UPDATE_SESSION_LEXEMES":
                                (null === (d = e.practiceHubInfo) || void 0 === d ? void 0 : d[t.courseId]) && (e = (0, u.setIn)(e, ["practiceHubInfo", t.courseId, "wordsList", "sessionLexemePairs"], t.sessionLexemePairs));
                                break;
                            case "WORDS_LIST_COMPLETE_PRACTICE_SESSION":
                                e = (0, u.set)(e, "wordsListSessionCompleteTimeStampMs", t.sessionCompleteTimeStampMs);
                                break;
                            case "WORDS_LIST_UPDATE_SUPPORTED_COURSES":
                                e = (0, u.set)(e, "wordsListSupportedCourses", t.supportedCoursesData);
                                break;
                            case "RECORDED_SESSION":
                                e = (0, u.set)(e, "lastSessionFinished", t.timestamp / 1e3), e = (0, u.set)(e, "sessionCount", e.sessionCount + 1), e = (0, u.set)(e, "sessionsCompleted", e.sessionsCompleted + 1);
                                break;
                            case "UPDATE_USER_GEMS":
                                e = (0, u.setIn)(e, ["gemsConfig", "gems"], e.gemsConfig.gems + t.gems);
                                break;
                            case "CONSUME_DAILY_GOAL_REWARD":
                                {
                                    const t = (0, u.asMutable)(e.rewardBundles).map((e => "DAILY_GOAL_DOUBLE" === e.rewardBundleType ? (0, u.updateIn)(e, ["rewards", 0, "consumed"], (() => !0)) : e));e = (0, u.set)(e, "rewardBundles", t);
                                    break
                                }
                            case "CONSUME_DAILY_QUEST_REWARD":
                                {
                                    const a = e.rewardBundles.map((e => {
                                        const a = e.rewards.map((e => e.id === t.rewardId ? { ...e,
                                            consumed: !0
                                        } : e));
                                        return { ...e,
                                            rewards: a
                                        }
                                    }));e = (0, u.set)(e, "rewardBundles", a);
                                    break
                                }
                            case "CONSUME_FRIENDS_QUEST_GEMS":
                                {
                                    const t = (0, u.asMutable)(e.rewardBundles).map((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType ? (0, u.setIn)(e, ["rewards", 0, "consumed"], !0) : e));e = (0, u.set)(e, "rewardBundles", t);
                                    break
                                }
                            case "CONSUME_FRIENDS_QUEST_XP_BOOST":
                                {
                                    const t = (0, u.asMutable)(e.rewardBundles).map((e => "FRIENDS_QUEST_XP_BOOST" === e.rewardBundleType ? (0, u.setIn)(e, ["rewards", 0, "consumed"], !0) : e));e = (0, u.set)(e, "rewardBundles", t);
                                    break
                                }
                            case "COACH_DUO_SHOWN":
                                {
                                    const a = t.model.showReason,
                                        s = null === (p = e.coachRecords) || void 0 === p ? void 0 : p[a],
                                        n = void 0 === s ? 0 : (0, b.zk)((0, b.zM)(s.lastShown)) ? s.timesShownToday : 0,
                                        r = {
                                            lastShown: t.timestamp / 1e3,
                                            timesShownToday: n + 1
                                        };e = (0, u.setIn)(e, ["coachRecords", a], r);
                                    break
                                }
                            case "RESET_COACH":
                                e = (0, u.set)(e, "coachRecords", {});
                                break;
                            case "SET_MISTAKE_COUNT":
                                (void 0 === e.mistakeCountInfo || void 0 === t.mistakeCountInfo || t.mistakeCountInfo.expirationTime > e.mistakeCountInfo.expirationTime) && (e = (0, u.set)(e, "mistakeCountInfo", t.mistakeCountInfo));
                                break;
                            case "SET_SMART_TIP_TO_SHOW":
                                {
                                    const a = { ...e.recentlySeenSmartTips
                                    };g.XP(a).forEach((e => {
                                        a[e] < t.timestamp && delete a[e]
                                    })),
                                    e = (0, u.set)(e, "recentlySeenSmartTips", a);
                                    const s = t.smartTipResource,
                                        n = (0, oe.r8)(s),
                                        r = t.timestamp + (null !== (m = s.policy.minimumTimeBetweenShows) && void 0 !== m ? m : oe.U);e = (0, u.setIn)(e, ["recentlySeenSmartTips", n], r);
                                    break
                                }
                            case "SET_SHOULD_TRACK_FIRST_PATH":
                                e = (0, u.set)(e, "shouldTrackSeeFirstPath", !0);
                                break;
                            case "RESET_SHOULD_TRACK_FIRST_PATH":
                                e = (0, u.set)(e, "shouldTrackSeeFirstPath", void 0);
                                break;
                            case "LEAVE_CLASSROOM":
                                e = (0, u.set)(e, "classroomLeaderboardsEnabled", !1);
                                break;
                            case "SET_XP_SUMMARIES":
                                e = (0, u.set)(e, "xpSummaries", t.xpSummaries);
                                break;
                            case "SET_FAMILY_PLAN_INVITE":
                                e = (0, u.set)(e, "familyPlanInviteReceived", t.familyPlanInviteInfo);
                                break;
                            case "UPDATE_STREAK_REPAIR_OFFER":
                                {
                                    const a = null === (h = t.streakData) || void 0 === h ? void 0 : h.previousStreak;
                                    if (!a) {
                                        e = (0, u.set)(e, "streakRepairOffer", void 0);
                                        break
                                    }
                                    const s = void 0 !== (0, Q.W0)(2 * b.ee, e.xpSummaries).find((e => e.repaired && !e.streakExtended)),
                                        n = (0, te.zg)(t.items) && a.length >= te.xY && !s;n && !(null == e ? void 0 : e.streakRepairOffer) ? e = (0, u.set)(e, "streakRepairOffer", {
                                        expirationTime: Date.parse(a.endDate) - (0, b.Rw)(e.timezoneOffset) * b.zq + 4 * b.Mb,
                                        length: a.length
                                    }) : n || (e = (0, u.set)(e, "streakRepairOffer", void 0));
                                    break
                                }
                            case "UPDATE_USER":
                                {
                                    const {
                                        currentCourse: a,
                                        courses: s,
                                        health: n,
                                        plusDiscounts: r,
                                        ...i
                                    } = t.user,
                                    o = (0, v.Xh)(i);
                                    if (s && (o.courses = s.map((e => e.id))), a && (o.currentCourseId = a.id), r) {
                                        const t = Date.now();
                                        o.plusDiscounts = [...null !== (f = null === (_ = e.plusDiscounts) || void 0 === _ ? void 0 : _.filter((e => e.expirationTime > t && (0, I.gB)(e.discountType, R.y1)))) && void 0 !== f ? f : [], ...r.map((e => le(e)))]
                                    }
                                    e = ((e, t) => {
                                        for (const [a, s] of Object.entries(t)) {
                                            const t = "object" == typeof s && null != s && !Array.isArray(s) && void 0 !== e[a] && ce(a) ? (0, u.merge)(e[a], s, {
                                                deep: !0
                                            }) : s;
                                            e = (0, u.set)(e, a, t)
                                        }
                                        return e
                                    })(e, o),
                                    o.adsConfig && (e = (0, u.set)(e, "adsConfig", o.adsConfig));
                                    break
                                }
                        }
                        return e
                    }
                }),
                ge = (e = (0, de.Gl)(), t) => ("RESET_STATE" === t.type && (e = (0, de.Gl)()), ue(e, t));
            var pe = a(24938),
                me = a(54412),
                he = a(80388);
            var ve = a(50548),
                _e = a(53229),
                fe = a(43633),
                Se = a(28818),
                ye = a(89803),
                Ee = a(71371),
                be = a(2064),
                Ie = a(88868),
                we = a(79465),
                ke = a(3800),
                Te = a(20028);
            let Ce;
            ke.h && console.log("Showing only plain info"), document.documentElement.lang = window.duo.uiLanguage, "true" !== (0, me.ej)(me.Vj.RedirectToPreview) || window.location.host === Ie.Vb || window.location.host === Ie.a_ || E.NY() || (0, Ie.Zs)((0, Ie.gg)(window.location.href), !0), ["join.duolingo.com", "www-internal.duolingo.com"].includes(window.location.host) && (0, Ie.Zs)(window.location.href.replace(window.location.host, Ie.Z2));
            try {
                Ce = (0, Y.Jb)()
            } catch {}(async () => {
                await be.q.initialize((() => ({
                    jotai: {},
                    redux: (0, de.Gl)()
                })), (e => void 0 === Ce ? "No user credentials found" : e.redux.user.id !== Ce ? "User credentials mismatch" : void 0));
                const e = (0, de.xC)({
                    persister: be.q.bindSubstate("redux"),
                    rootReducer: ge
                });
                (0, fe.gh)({
                    persister: be.q.bindSubstate("jotai"),
                    reduxStore: e
                }), (0, Te.Go)(e.getState().user) && E.R(), (() => {
                    const e = (0, me.ej)(me.Vj.JWT);
                    e && ((0, me.nJ)(me.Vj.JWT), (0, me.d8)(me.Vj.JWT, e, !0, !(0, he.J9)()))
                })(), (0, ye.vi)();
                const t = ["/", "/learn"].includes(window.location.pathname);
                if (Ce) console.log("User is logged in"), t && Ee.Z.start("splash_to_home", {
                    startTime: window.duo.timeOrigin
                });
                else {
                    console.log("User is not logged in"), t && Ee.Z.start("splash_to_intro", {
                        startTime: window.duo.timeOrigin
                    });
                    const e = (0, me.ej)(me.Vj.LoggedOutUUID);
                    e && we.setDistinctId(e), (0, r.dl)()
                }
                const a = (0, _e.Lm)();
                we.canSetCampaignInfo(a) && we.setCampaignInfo(a), we.track("app_open", {}), we.trackUserActive2022({
                    activity_trigger: "app_foregrounded"
                }), (0, me.ej)(me.Vj.ShouldTrackWelcome) && (we.track("welcome", {}), (0, me.nJ)(me.Vj.ShouldTrackWelcome)), (0, o.render)(i.createElement(c.zt, {
                    store: e
                }, i.createElement(Se.wq, null, i.createElement(d.F0, {
                    history: ve.m8
                }, i.createElement(l.B6, null, i.createElement(pe.xq, null))))), document.getElementById("root"))
            })()
        },
        69098: () => {
            "use strict";
            window.duo.timeOrigin = window.performance.now()
        },
        24938: (e, t, a) => {
            "use strict";
            a.d(t, {
                xq: () => wi,
                vH: () => Yr,
                HL: () => _n,
                dr: () => Kr
            });
            var s = a(27378),
                n = a(3620),
                r = a(40412),
                i = a(80254),
                o = a(91374),
                l = a(36099),
                c = a(27272),
                d = a(60410),
                u = a(59815),
                g = a(58576),
                p = a(30839),
                m = a(18804),
                h = a(79465);
            class v extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        hasError: !1
                    }
                }
                static getDerivedStateFromError() {
                    return {
                        hasError: !0
                    }
                }
                async componentDidCatch(e, t) {
                    if (console.warn("RedirectingErrorBoundary caught an error"), !(0, u.Wp)(e)) {
                        const a = (0, g.vU)(e, {
                            data: { ...t,
                                isFromRedirectingErrorBoundary: !0
                            }
                        });
                        await (0, h.track)("app_crash", {
                            crash_message: e.message,
                            crash_type: e.name,
                            sentry_event_id: a
                        }, !1)
                    }(0, u.Wp)(e) || ((0, p.cl)(p.Qt.State), this.props.dispatch({
                        type: "UNMOUNT"
                    }))
                }
                render() {
                    return this.state.hasError ? null : this.props.children
                }
            }
            const _ = e => {
                const t = (0, m.tX)();
                return s.createElement(v, {
                    dispatch: t,
                    ...e
                })
            };
            var f = a(76320),
                S = a(36011);
            const y = e => {
                    switch (e) {
                        case "heartsInSession":
                            return 25;
                        case "gemsInHomepage":
                            return 30;
                        default:
                            return 0
                    }
                },
                E = ({
                    spotlightType: e
                }) => {
                    const t = s.useContext(S.Mk),
                        [a, n] = s.useState(),
                        r = s.useCallback((() => {
                            const a = (() => {
                                var a, s, n, r;
                                switch (e) {
                                    case "heartsInSession":
                                        return null === (s = null === (a = null == t ? void 0 : t.getHeartsStatInLessonRef) || void 0 === a ? void 0 : a.call(t)) || void 0 === s ? void 0 : s.getBoundingClientRect();
                                    case "gemsInHomepage":
                                        return null === (r = null === (n = null == t ? void 0 : t.getGemsHomepageRef) || void 0 === n ? void 0 : n.call(t)) || void 0 === r ? void 0 : r.getBoundingClientRect();
                                    default:
                                        return
                                }
                            })();
                            if (a) return {
                                cx: a.x + a.width / 2,
                                cy: a.y + a.height / 2,
                                height: window.innerHeight,
                                r: Math.max(a.width, a.height) / 2 + y(e),
                                width: window.innerWidth
                            }
                        }), [e, t]),
                        i = s.useCallback((() => {
                            n(r())
                        }), [n, r]);
                    return s.useLayoutEffect((() => {
                        n(r())
                    }), []), s.useEffect((() => (null == t || t.addCallback(e, r), () => {
                        null == t || t.removeCallback(e, r)
                    })), [r, t, e]), s.useEffect((() => (window.addEventListener("resize", i), () => window.removeEventListener("resize", i))), [i]), a ? s.createElement(f.Z, {
                        direction: "down",
                        isVisible: !0,
                        zIndex: 300,
                        ...a
                    }) : null
                };
            var b = a(23831),
                I = a(68744);
            const w = ({
                children: e,
                style: t,
                theme: a
            }) => (s.useInsertionEffect((() => (document.documentElement.setAttribute("data-duo-theme", a), Object.entries(t).forEach((([e, t]) => document.documentElement.style.setProperty(e, t))), () => {
                document.documentElement.removeAttribute("data-duo-theme"), Object.keys(t).forEach((e => document.documentElement.style.removeProperty(e)))
            })), [t, a]), s.createElement(s.Fragment, null, e));
            var k = a(42659),
                T = a(8765),
                C = a(64115),
                R = a(81149),
                L = a(28818),
                A = a(56366);
            const P = ({
                children: e
            }) => {
                const t = (0, m.Fx)((e => e.browserSettings.darkMode)),
                    a = (0, m.Fx)(k.Lm),
                    n = (0, L.Dv)(A.H_),
                    r = a && "experiment" === (0, R.j6)("web_delight_sync_settings", void 0) ? n : t;
                return s.createElement(I.Z, {
                    colors: T.D,
                    theme: (0, C.gQ)("darkMode") || "on" === r ? "dark" : "off" === r ? "light" : void 0
                }, (t => s.createElement(w, { ...t
                }, e)))
            };
            var D = a(3731),
                N = a(50548),
                O = a(88868);
            const x = () => {
                const e = (0, N.k6)(),
                    t = (0, N.TH)(),
                    a = s.useRef(),
                    n = [O.B6, "/leaderboard", "/shop", "/characters"].includes(t.pathname) ? "manual" : "auto";
                return s.useLayoutEffect((() => {
                    window.history.scrollRestoration = n
                }), [n]), s.useLayoutEffect((() => {
                    if (t.pathname !== a.current) {
                        const a = [O.B6, "/leaderboard"].includes(t.pathname),
                            s = "POP" === e.action;
                        a || s || D.O.scrollTo(0, 0)
                    }
                    a.current = t.pathname
                })), null
            };
            var F = a(44451),
                M = a(35160);
            var U = a(97544),
                H = a(80388),
                G = a(17135);
            const V = e => {
                const t = (0, m.tX)(),
                    a = (0, m.Fx)((t => t.brb[e].ignoreUntil)),
                    n = (0, m.Fx)((t => t.brb[e].resetAt)),
                    r = (0, m.Fx)((t => t.brb[e].status)),
                    o = s.useRef(),
                    l = s.useRef(r);
                o.current = async s => {
                    if (void 0 !== a && Date.now() < a) return;
                    if ("enabled" === r && "visible" !== document.visibilityState) return;
                    const o = (0, H.J9)() || (0, p.rV)(p.Qt.DisableBigRedButton) ? "disabled" : "brb" === e ? await U.bG.getBrbStatus() : await U.bG.getZombieStatus();
                    s.aborted || (r !== o ? "enabled" === o ? (console.warn(`Enabling ${"brb"===e?"maintenance":"Zombie"} mode.`), t({
                        mode: e,
                        resetAt: Date.now() + 1e3 * (0, G.dz)({
                            hours: 5,
                            minutes: i.MX(0, 5)
                        }),
                        type: "brb/ENABLED"
                    })) : (console.warn(`Disabling ${"brb"===e?"maintenance":"Zombie"} mode.`), t({
                        mode: e,
                        type: "brb/DISABLED"
                    })) : void 0 !== n && Date.now() >= n && (console.warn(`Disabling ${"brb"===e?"maintenance":"Zombie"} mode automatically after 5 hours.`), t({
                        ignoreUntil: Date.now() + 1e3 * (0, G.dz)({
                            hours: 12
                        }),
                        mode: e,
                        type: "brb/IGNORED"
                    })))
                }, l.current = r, s.useEffect((() => {
                    const e = new AbortController,
                        t = e.signal,
                        a = async () => {
                            var e;
                            t.aborted || (await (null === (e = o.current) || void 0 === e ? void 0 : e.call(o, t)), setTimeout(a, 1e3 * i.MX(30, "enabled" === l.current ? 300 : 60)))
                        };
                    return a(), () => e.abort()
                }), [])
            };
            var B = a(58034),
                z = a(15746),
                Z = a(54174),
                W = a(88787);
            var $ = a(27429);
            let j = Date.now();
            var q = a(16086);
            const Q = 3e5,
                K = ["mousedown", "keydown", "touchstart"];
            var Y = a(50791),
                J = a(15879),
                X = a(86518);
            var ee = a(36666),
                te = a(31809);
            var ae = a(8654);
            const se = () => s.createElement(te.Z, {
                className: "_2qzZD",
                closeStyle: "hidden",
                customStyle: M.W.Custom,
                modalName: M.t.ChangeUiLanguage
            }, (({
                onDismiss: e,
                modalOptions: {
                    languageName: t,
                    onSwitchLanguage: a
                }
            }) => s.createElement(s.Fragment, null, s.createElement("div", {
                className: "opacv"
            }, (0, ae._i)(18428, {
                language_name: t
            })), s.createElement("div", {
                className: "_118N9"
            }, (0, ae._i)(21141, {
                language_name: t
            })), s.createElement(ee.Z, {
                className: "ctsS0",
                color: "macaw",
                onClick: () => {
                    e(), a()
                },
                variant: "solid"
            }, (0, ae._i)(30820, {
                language_name: t
            })), s.createElement(ee.Z, {
                className: "QCwEC",
                color: "macaw",
                onClick: e,
                variant: "text"
            }, (0, ae._i)(23427)))));
            var ne = a(64502),
                re = a(47725),
                ie = a(10141),
                oe = a(60042),
                le = a.n(oe),
                ce = a(89046);
            var de = a(30033);
            const ue = ({
                [de.m5]: e,
                autoComplete: t,
                autoFocus: a,
                disabled: n,
                error: r,
                linkComponent: i,
                onBlur: o,
                onChange: l,
                onResetError: c,
                placeholder: d,
                suggestedUsernames: u,
                tooltip: g,
                type: p,
                value: m
            }) => {
                const v = s.useRef(null),
                    _ = r ? (null == u ? void 0 : u.length) ? s.createElement("span", null, r, u.map((e => s.createElement("span", {
                        key: e
                    }, " ", s.createElement(ee.Z, {
                        className: "_7nkQ6",
                        onClick: () => {
                            l(e), null == c || c()
                        },
                        type: "button"
                    }, e))))) : r : s.createElement("span", {
                        className: "_6uMOe"
                    }, g);
                return s.useEffect((() => {
                    var e;
                    a && (null === (e = v.current) || void 0 === e || e.focus())
                }), []), s.createElement(ce.Z, { ...(0, de._q)(e),
                    autoComplete: t,
                    className: le()("_-_ei", h.FULL_STORY_EXCLUDE),
                    hasError: void 0 !== r,
                    helperText: _,
                    linkComponent: i,
                    onBlur: o,
                    onChange: e => l(e.target.value),
                    placeholder: d,
                    ref: v,
                    state: n ? "disabled" : "enabled",
                    type: p,
                    value: m
                })
            };
            var ge = a(67173);
            const pe = ({
                    children: e
                }) => e ? s.createElement("div", { ...(0, de._q)(ge.V.InvalidFormField),
                    className: "_3_sm4 y2XzX"
                }, e) : null,
                me = ({
                    children: e
                }) => {
                    const t = s.Children.toArray(e).filter((e => !!e)).map(((e, t) => s.createElement(pe, {
                        key: t
                    }, e)));
                    return t.length ? s.createElement("div", {
                        className: "_3ETIn y2XzX"
                    }, t) : null
                };
            var he = a(27147),
                ve = a(14649);
            const _e = a.p + "images/ded9ca9461387f30221b67f627227388.svg";
            var fe = a(90778),
                Se = a(45437),
                ye = a(20750),
                Ee = a(9115),
                be = a(13567);
            const Ie = {
                "modal-wrapper": "_3shDK",
                "right-controls": "_3MPka",
                modal: "_2zDup",
                table: "_2dCRU",
                "link-container": "_7Cej2",
                "link-container-stacked": "_2eFEB _7Cej2",
                "account-icon": "_1f5DO",
                button: "_1QN-w",
                header: "_1txIz",
                title: "_3U467",
                "signin-error-message": "m-9SI",
                "last-login-name": "VvkZl",
                "blue-link": "Dd4kg _1WLlV _1KSsU _2Rt1l",
                "blue-link-body": "_3fKH5 _1WLlV _1KSsU _2Rt1l",
                "created-with-social-title": "_2FwN2 _3U467",
                "created-with-social-body": "LFQTx",
                google: "_1bbxJ _3xNUg",
                facebook: "_2RcAK _3yIBb",
                "require-google-button": "oqqD3 _3xNUg",
                footer: "_1zS0t",
                "terms-and-privacy": "_8Lfek",
                "no-account": "_2t5Dr",
                "no-account-link": "_319hG",
                hr: "_2Iy6P",
                "hr-bar": "_2GfD7",
                "hr-text": "_3-wlz _2Rt1l",
                "google-sign-in-up-header": "_24S8P",
                "google-sign-in-up-title": "_3BLqs",
                "google-sign-in-up-subtitle": "_3_wqF"
            };
            var we = a(42985),
                ke = a(70326),
                Te = a(41679),
                Ce = a(8649),
                Re = a(67574),
                Le = a(67899),
                Ae = a(33124),
                Pe = a(71371),
                De = a(6986),
                Ne = a(81621),
                Oe = a(20028);
            const xe = ({
                    dispatch: e,
                    errors: t,
                    focusPasswordField: a = !1,
                    identifier: n,
                    onIdentifierChange: r,
                    onPasswordChange: i,
                    password: o,
                    showEmailField: l,
                    submitting: c,
                    via: d
                }) => s.createElement("div", {
                    className: Ie.table
                }, l ? s.createElement(ue, {
                    autoComplete: "email",
                    disabled: !!c,
                    error: t.identifier,
                    onChange: r,
                    placeholder: (0, ae.H8)(14299),
                    type: "text",
                    value: n,
                    ...(0, de._q)(ge.V.EmailInput)
                }) : null, s.createElement(ue, {
                    autoComplete: "current-password",
                    autoFocus: a,
                    disabled: !!c,
                    error: t.password,
                    linkComponent: s.createElement(re.ZP, { ...(0, de._q)(ge.V.ForgotPassword),
                        href: "/forgot_password",
                        onClick: () => {
                            (0, h.track)("sign_in_tap", {
                                target: "forgot_password",
                                via: d
                            }), e({
                                options: void 0,
                                type: "TOGGLE_MODAL"
                            })
                        },
                        tabIndex: -1
                    }, (0, ae._i)(18857)),
                    onChange: i,
                    placeholder: (0, ae.H8)(18716),
                    type: "password",
                    value: o,
                    ...(0, de._q)(ge.V.PasswordInput)
                })),
                Fe = ({
                    age: e,
                    ageRestricted: t,
                    hideAge: a,
                    isUGCDisabled: n,
                    email: r,
                    errors: i,
                    name: o,
                    onAgeBlur: l,
                    onAgeChange: c,
                    onEmailChange: d,
                    onNameChange: u,
                    onPasswordChange: g,
                    onResetError: p,
                    onUsernameBlur: m,
                    onUsernameChange: h,
                    password: v,
                    submitting: _,
                    username: f
                }) => s.createElement("div", {
                    className: Ie.table
                }, a ? null : s.createElement(ue, {
                    disabled: !!_,
                    error: i.age,
                    onBlur: l,
                    onChange: c,
                    placeholder: (0, ae.H8)(15038),
                    tooltip: (0, ae._i)(19089),
                    type: "text",
                    value: e,
                    ...(0, de._q)(ge.V.AgeInput)
                }), n ? null : t ? s.createElement(ue, {
                    autoComplete: "username",
                    disabled: !!_,
                    error: i.username,
                    onBlur: m,
                    onChange: h,
                    onResetError: p,
                    placeholder: (0, ae.H8)(17475),
                    suggestedUsernames: i.suggestedUsernames,
                    type: "text",
                    value: f,
                    ...(0, de._q)(ge.V.UsernameInput)
                }) : s.createElement(ue, {
                    autoComplete: "name",
                    disabled: !!_,
                    error: i.name,
                    onChange: u,
                    placeholder: (0, ae.H8)(6101),
                    type: "text",
                    value: o,
                    ...(0, de._q)(ge.V.FullNameInput)
                }), s.createElement(ue, {
                    autoComplete: "email",
                    disabled: !!_,
                    error: i.email,
                    onChange: d,
                    placeholder: t ? (0, ae.H8)(24103) : (0, ae.H8)(2928),
                    type: "email",
                    value: r,
                    ...(0, de._q)(ge.V.EmailInput)
                }), s.createElement(ue, {
                    autoComplete: "new-password",
                    disabled: !!_,
                    error: i.password,
                    onChange: g,
                    placeholder: (0, ae.H8)(18716),
                    type: "password",
                    value: v,
                    ...(0, de._q)(ge.V.PasswordInput)
                })),
                Me = ({
                    onClick: e,
                    platform: t,
                    submitting: a
                }) => s.createElement(ee.Z, {
                    className: Ie[t],
                    disabled: !1 !== a && a !== t,
                    onClick: "google" === t ? void 0 : e,
                    submitting: a === t,
                    type: "button",
                    unstyledDisabled: !0,
                    variant: "stroke",
                    ..."facebook" === t ? (0, de._q)(ge.V.LoginWithFacebook) : (0, de._q)(ge.V.LoginWithGoogle)
                }, s.createElement("img", {
                    className: Ie["account-icon"],
                    src: "facebook" === t ? _e : ye
                }), (0, ae._i)("facebook" === t ? 17511 : 11701), "google" === t ? s.createElement(he.Z, {
                    onClick: e
                }) : null),
                Ue = ({
                    errors: e,
                    header: t,
                    lastLoginType: a,
                    name: n = "",
                    onFacebookClick: r,
                    onGoogleClick: i,
                    onUseAnotherAccount: o,
                    picture: l = Ne.tU,
                    registerButton: c,
                    signInErrors: d,
                    submitting: u,
                    title: g,
                    via: p,
                    ...m
                }) => s.createElement("div", null, s.createElement("div", null, t ? s.createElement("div", {
                    className: Ie.header
                }, t) : null, s.createElement("h1", {
                    className: Ie.title
                }, g), s.createElement(ie.Z, {
                    size: "medium",
                    user: {
                        id: 0,
                        name: n,
                        picture: l
                    }
                }), s.createElement("div", {
                    className: Ie["last-login-name"]
                }, n), s.createElement("div", { ...(0, de._q)(ge.V.UseAnotherAccount),
                    className: Ie["blue-link"],
                    onClick: o
                }, s.createElement("span", null, (0, ae._i)(2745)))), "email" === a ? s.createElement("div", null, s.createElement(xe, {
                    errors: d ? {} : e,
                    showEmailField: !1,
                    submitting: u,
                    via: p,
                    ...m
                }), d, c) : "social" === a ? s.createElement("p", {
                    className: Ie["link-container-stacked"]
                }, s.createElement(Me, {
                    onClick: r,
                    platform: "facebook",
                    submitting: u
                }), s.createElement(Me, {
                    onClick: i,
                    platform: "google",
                    submitting: u
                })) : null),
                He = ({
                    isSignIn: e,
                    onGoogleClick: t,
                    renderHeader: a,
                    renderSubtitle: n,
                    renderTitle: r,
                    submitting: i
                }) => {
                    var o;
                    return s.createElement("div", null, s.createElement("div", {
                        className: Ie["google-sign-in-up-header"]
                    }, void 0 === a ? null : s.createElement("div", {
                        className: Ie["google-sign-in-up-header"]
                    }, a(e)), s.createElement("h1", {
                        className: Ie["google-sign-in-up-title"]
                    }, null !== (o = null == r ? void 0 : r(e)) && void 0 !== o ? o : (0, ae._i)(43395)), n ? s.createElement("p", {
                        className: Ie["google-sign-in-up-subtitle"]
                    }, n(e)) : null), s.createElement(ee.Z, {
                        className: Ie["require-google-button"],
                        submitting: "google" === i,
                        type: "button",
                        variant: "stroke"
                    }, s.createElement("img", {
                        className: we.Z["account-icon"],
                        src: ye
                    }), s.createElement("span", {
                        className: we.Z["account-text"]
                    }, (0, ae._i)(1327)), s.createElement(he.Z, {
                        onClick: t
                    })))
                },
                Ge = ({
                    name: e,
                    picture: t,
                    platform: a,
                    onFacebookClick: n,
                    onGoogleClick: r,
                    onUseAnotherAccount: i,
                    submitting: o
                }) => {
                    const l = "dark" === (0, ne.Fg)();
                    return s.createElement("div", null, s.createElement("div", null, s.createElement("h1", {
                        className: Ie["created-with-social-title"]
                    }, (0, ae._i)("facebook" === a ? 23083 : 693)), s.createElement(ie.Z, {
                        size: "large",
                        user: {
                            id: 0,
                            name: e,
                            picture: t
                        }
                    }), s.createElement("div", {
                        className: Ie["last-login-name"]
                    }, e)), s.createElement("div", {
                        className: Ie["created-with-social-body"]
                    }, s.createElement(ee.Z, { ..."facebook" === a ? (0, de._q)(ge.V.ContinueWithFacebook) : (0, de._q)(ge.V.ContinueWithGoogle),
                        className: we.Z[`${a}-solid`],
                        onClick: "facebook" === a ? n : void 0,
                        submitting: o === a,
                        type: "button",
                        variant: "solid"
                    }, s.createElement("img", {
                        className: we.Z["account-icon"],
                        src: "facebook" === a ? l ? fe : Se : l ? Ee : be
                    }), s.createElement("span", {
                        className: we.Z["account-text"]
                    }, (0, ae._i)("facebook" === a ? 15620 : 1327)), "google" === a ? s.createElement(he.Z, {
                        onClick: r
                    }) : null), s.createElement("div", {
                        className: Ie["blue-link-body"],
                        onClick: i
                    }, s.createElement("span", null, (0, ae._i)(2745)))))
                },
                Ve = ({
                    errors: e,
                    isFamilyPlan: t,
                    isSignIn: a,
                    onFacebookClick: n,
                    onGoogleClick: r,
                    renderHeader: i,
                    renderTitle: o,
                    registerButton: l,
                    signInErrors: c,
                    submitting: d,
                    ...u
                }) => {
                    var g;
                    return s.createElement("div", null, void 0 === i ? null : s.createElement("div", {
                        className: Ie.header
                    }, i(a)), s.createElement("h1", {
                        className: Ie.title
                    }, null !== (g = null == o ? void 0 : o(a)) && void 0 !== g ? g : a ? (0, ae._i)(43395) : (0, ae._i)(14145)), a ? s.createElement(xe, {
                        errors: c ? {} : e,
                        submitting: d,
                        ...u
                    }) : s.createElement(Fe, {
                        errors: e,
                        submitting: d,
                        ...u
                    }), c, l, s.createElement("div", {
                        className: Ie.hr
                    }, s.createElement("div", {
                        className: Ie["hr-bar"]
                    }), s.createElement("div", {
                        className: Ie["hr-text"]
                    }, (0, ae._i)(18747)), s.createElement("div", {
                        className: Ie["hr-bar"]
                    })), s.createElement("p", {
                        className: a ? Ie["link-container"] : Ie["link-container-stacked"]
                    }, s.createElement(Me, {
                        onClick: n,
                        platform: "facebook",
                        submitting: d
                    }), a ? s.createElement(Me, {
                        onClick: r,
                        platform: "google",
                        submitting: d
                    }) : null))
                };
            class Be extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        ageRestricted: !1,
                        alternateView: null,
                        errors: {},
                        fields: {
                            age: "",
                            email: "",
                            identifier: "",
                            name: "",
                            password: "",
                            username: ""
                        },
                        isUsernameVerified: !1,
                        loginAttempts: {
                            count: 0,
                            emailSent: !1,
                            lastEmailUsed: "",
                            showEmailSentNotification: !1
                        },
                        submitting: !1,
                        useImprovedErrorMessages: !1
                    }, this.memoizeUsernameValidate = i.HP(ke.rV), this.mounted = !1, this.emailSignup = async (e, t) => {
                        const {
                            dispatch: a,
                            modalOptions: {
                                allowLanguagelessUser: s
                            }
                        } = this.props, {
                            ageRestricted: n
                        } = this.state, r = {};
                        if (e.email.trim() || (r.email = (0, ae.H8)(11696)), e.password.trim() || (r.password = (0, ae.H8)(5030)), t || e.age.trim() || (r.age = (0, ae.H8)(15012)), !i.xb(r)) return Promise.reject(new ke.Wj(!1, r));
                        const o = { ...e,
                            age: e.age,
                            name: n ? null : e.name,
                            username: n ? e.username : null
                        };
                        if ((0, q.Pc)()) try {
                            await a((0, X.DZ)(o, !1, !0)), this.trackSuccessfulSignUp()
                        } catch (e) {
                            this.handleSignUpFail(e)
                        } else {
                            s || (0, g.Kp)("Forced to create languageless user account despite being asked not to.");
                            try {
                                await (0, ke.$C)(o), await a((0, X.eY)()), this.trackSuccessfulSignUp()
                            } catch (e) {
                                this.handleSignUpFail(e)
                            }
                        }
                    }, this.trackSuccessfulSignUp = () => {
                        const {
                            dispatch: e,
                            dispatchAtom: t,
                            modalOptions: {
                                limitRedirect: a,
                                via: s
                            }
                        } = this.props;
                        (0, h.track)("register", {
                            successful: !0,
                            through: "email",
                            via: s
                        }), (0, Le.SX)({
                            event: "sign_up"
                        }), this.handleGeneralSuccess(!1, a), (async () => {
                            await e(ve._()), t(Ae.PD)
                        })()
                    }, this.handleUseAnotherAccount = () => {
                        const {
                            modalOptions: {
                                via: e
                            }
                        } = this.props;
                        (0, h.track)("sign_in_tap", {
                            target: "use_another_account",
                            via: e
                        }), this.clearAlternateView()
                    }, this.handleSignUpFail = e => {
                        var t, a;
                        const {
                            modalOptions: {
                                via: s
                            }
                        } = this.props;
                        if ((0, h.track)("register", {
                                successful: !1,
                                through: "email",
                                via: s
                            }), e instanceof ke.Wj) throw e;
                        const n = (0, U.Hx)(e) && (null === (a = null === (t = e.response) || void 0 === t ? void 0 : t.data) || void 0 === a ? void 0 : a.details);
                        throw n ? (0, ke.lV)(n) : new ke.Wj(!1, {})
                    }, this.facebookSignup = async () => {
                        const {
                            dispatch: e,
                            history: t,
                            modalOptions: {
                                allowLanguagelessUser: a,
                                isSignIn: s,
                                limitRedirect: n,
                                redirectPath: r = O.B6,
                                trackingProps: i,
                                via: o
                            }
                        } = this.props;
                        this.setState({
                            errors: {},
                            submitting: "facebook"
                        });
                        try {
                            (0, h.track)(s ? "sign_in_tap" : "registration_tap", {
                                target: "facebook",
                                via: o,
                                ...i
                            });
                            const l = await (0, Te.k3)({
                                allowLanguagelessUser: a,
                                dispatch: e,
                                history: t,
                                onLoginSuccess: this.handleLoginSuccess,
                                redirectPath: r,
                                via: o
                            });
                            this.handleGeneralSuccess(l, n)
                        } catch {
                            this.setState({
                                submitting: !1
                            }), s || this.handleRegisterFailure("facebook")
                        }
                    }, this.clearAlternateView = () => {
                        this.setState({
                            alternateView: null
                        }), (0, De.ub)()
                    }, this.isCoppaRequired = () => {
                        const e = this.props.config.ipCountry;
                        return void 0 === e || (0, ae.KJ)(e)
                    }, this.googleSignup = async () => {
                        var e, t;
                        const {
                            dispatch: a,
                            modalOptions: {
                                allowLanguagelessUser: s,
                                isSignIn: n,
                                limitRedirect: r,
                                redirectPath: i = O.B6,
                                trackingProps: o,
                                via: l
                            },
                            history: c
                        } = this.props;
                        this.setState({
                            errors: {},
                            submitting: !1
                        });
                        try {
                            (0, h.track)(n ? "sign_in_tap" : "registration_tap", {
                                target: "google",
                                via: l,
                                ...o
                            });
                            const e = await (0, Re.F)({
                                allowLanguagelessUser: s,
                                disallowAutomaticRegister: this.isCoppaRequired(),
                                dispatch: a,
                                history: c,
                                onLoginSuccess: this.handleLoginSuccess,
                                redirectPath: i,
                                setSubmitting: () => this.setState({
                                    submitting: "google"
                                }),
                                via: l
                            });
                            this.handleGeneralSuccess(e, r)
                        } catch (a) {
                            this.setState({
                                errors: {
                                    social: !(0, U.Hx)(a) || 401 !== (null === (e = a.response) || void 0 === e ? void 0 : e.status) && 403 !== (null === (t = a.response) || void 0 === t ? void 0 : t.status) ? (0, ae.H8)(19737) : (0, ae.H8)(24701)
                                },
                                submitting: !1,
                                useImprovedErrorMessages: !0
                            }), n || this.handleRegisterFailure("google")
                        }
                    }, this.handleAgeChange = () => {
                        this.setState({
                            ageRestricted: parseInt(this.state.fields.age, 10) < this.props.config.ageRestrictionLimit
                        })
                    }, this.validateUsername = async () => {
                        if (!this.state.fields.username || !this.state.ageRestricted) return !0;
                        const e = this.state.fields.username;
                        try {
                            if (await this.memoizeUsernameValidate(e), this.mounted) return this.setState((t => {
                                if (e === t.fields.username) {
                                    const {
                                        errors: {
                                            username: e,
                                            ...a
                                        }
                                    } = t;
                                    return {
                                        errors: a,
                                        isUsernameVerified: !0
                                    }
                                }
                                return null
                            })), !0
                        } catch (t) {
                            if (t instanceof ke.Wj) return this.mounted && this.setState((a => e === a.fields.username ? {
                                errors: t.errorFields,
                                useImprovedErrorMessages: t.useImprovedErrorMessages
                            } : null)), !1;
                            throw t
                        }
                    }, this.handleResetUsernameError = () => {
                        this.setState((e => {
                            const {
                                errors: {
                                    username: t,
                                    ...a
                                }
                            } = e;
                            return {
                                errors: a,
                                isUsernameVerified: !0
                            }
                        }))
                    }, this.handleFieldChange = (e, t) => {
                        this.setState((a => ({
                            fields: { ...a.fields,
                                [e]: t
                            },
                            isUsernameVerified: "username" !== e && a.isUsernameVerified
                        })))
                    }, this.handleGeneralSuccess = (e, t) => {
                        const {
                            history: a,
                            modalOptions: {
                                closeModalOnLogin: s = !0,
                                goBack: n,
                                isSignIn: r
                            }
                        } = this.props;
                        r || (0, h.track)("registration_tap", {}), this.mounted && !r && s && this.finishSignInOrSignUp(), r && (e || t || a.push("/welcome")), (!e || "no-redirects" !== t && "no-update" !== t) && (null == n || n(s ? void 0 : () => this.finishSignInOrSignUp()))
                    }, this.finishSignInOrSignUp = () => {
                        const {
                            dispatch: e
                        } = this.props;
                        e({
                            options: void 0,
                            type: "TOGGLE_MODAL"
                        })
                    }, this.handleLogin = async e => {
                        const {
                            dispatch: t,
                            history: a,
                            isOnline: s,
                            modalOptions: {
                                closeModalOnLogin: n = !0,
                                goBack: r,
                                redirectPath: i = O.B6,
                                trackingProps: o,
                                via: l,
                                limitRedirect: c
                            }
                        } = this.props, {
                            alternateView: d
                        } = this.state, u = d && "welcomeBack" === d.type && this.prefilledLoginData && this.prefilledLoginData.email ? {
                            identifier: this.prefilledLoginData.email,
                            password: e.password
                        } : e;
                        this.setState({
                            loginAttempts: { ...this.state.loginAttempts,
                                showEmailSentNotification: !1
                            }
                        }), await (0, h.track)("sign_in_tap", {
                            target: "sign_in",
                            via: l,
                            ...o
                        });
                        try {
                            await (0, ke.IS)(u, s), await t((0, X.eY)({
                                onUserRetrieved: e => {
                                    (0, De.oV)("email", e)
                                }
                            })), n && t({
                                options: void 0,
                                type: "TOGGLE_MODAL"
                            }), c || (0, O.KE)(window.location.pathname) || a.push(i), null == r || r(n ? void 0 : () => {
                                t({
                                    options: void 0,
                                    type: "TOGGLE_MODAL"
                                })
                            })
                        } catch (e) {
                            if (s && u.identifier.trim()) {
                                const e = await (0, De.gT)(u.identifier);
                                if (e && (e.hasFacebook || e.hasGoogle)) {
                                    const t = e.hasGoogle ? "google" : "facebook";
                                    return (0, h.track)("sign_in_load", {
                                        screen: `sign_in_with_${t}`,
                                        via: l,
                                        ...o
                                    }), void this.setState({
                                        alternateView: {
                                            name: e.name,
                                            picture: e.picture,
                                            platform: t,
                                            type: "createdWithSocial"
                                        },
                                        submitting: !1
                                    })
                                }
                            }
                            throw e
                        }
                    }, this.handleLoginSuccess = () => {
                        const {
                            dispatch: e,
                            history: t,
                            modalOptions: {
                                closeModalOnLogin: a = !0,
                                limitRedirect: s,
                                redirectPath: n = O.B6
                            }
                        } = this.props;
                        a && e({
                            options: void 0,
                            type: "TOGGLE_MODAL"
                        }), s || (0, O.KE)(window.location.pathname) || t.push(n)
                    }, this.handleRegisterFailure = e => {
                        const {
                            modalOptions: {
                                via: t
                            }
                        } = this.props;
                        (0, h.track)("registration_tap", {
                            target: "create_account"
                        }), (0, h.track)("register", {
                            successful: !1,
                            through: e,
                            via: t
                        })
                    }, this.handleSubmit = async e => {
                        const {
                            modalOptions: {
                                hideAge: t,
                                isSignIn: a
                            }
                        } = this.props;
                        if (e.preventDefault(), !this.state.ageRestricted || this.state.isUsernameVerified || await this.validateUsername()) {
                            this.setState({
                                errors: {},
                                submitting: "email"
                            });
                            try {
                                a ? (Pe.Z.start("login_success_or_fail"), await this.handleLogin(this.state.fields)) : (Pe.Z.start("registration_success_or_fail"), (0, h.track)("registration_tap", {
                                    target: "create_account"
                                }), await this.emailSignup(this.state.fields, !0 === t))
                            } catch (e) {
                                if (this.setState({
                                        submitting: !1
                                    }), !(e instanceof ke.Wj)) throw e;
                                this.setState({
                                    errors: e.errorFields,
                                    useImprovedErrorMessages: e.useImprovedErrorMessages
                                })
                            } finally {
                                a ? Pe.Z.finish("login_success_or_fail") : Pe.Z.finish("registration_success_or_fail")
                            }
                        }
                    }, this.handleToggleForm = () => {
                        const {
                            dispatch: e,
                            modalOptions: t
                        } = this.props, {
                            isSignIn: a,
                            trackingProps: s,
                            via: n
                        } = t;
                        a ? (0, h.track)("sign_in_tap", {
                            target: "sign_up",
                            via: n,
                            ...s
                        }) : (0, h.track)("registration_tap", {
                            target: "sign_in"
                        }), e({
                            options: { ...t,
                                isSignIn: !a
                            },
                            type: "TOGGLE_MODAL"
                        })
                    }
                }
                componentDidMount() {
                    (0, Te.L8)();
                    const {
                        modalOptions: {
                            disableWelcomeBack: e,
                            isFamilyPlan: t,
                            isSignIn: a,
                            trackingProps: s,
                            via: n
                        }
                    } = this.props;
                    if (this.mounted = !0, a) {
                        this.prefilledLoginData = (0, De.MG)();
                        const r = !e && a && !t && !!this.prefilledLoginData;
                        if (r) {
                            if ("email" === this.prefilledLoginData.type)(0, h.track)("sign_in_load", {
                                screen: "email_prefilled",
                                via: n,
                                ...s
                            });
                            else if ("social" === this.prefilledLoginData.type) {
                                const e = this.prefilledLoginData.hasGoogle && this.prefilledLoginData.hasFacebook ? "google_and_facebook" : this.prefilledLoginData.hasGoogle ? "google" : "facebook";
                                (0, h.track)("sign_in_load", {
                                    screen: `sign_in_with_${e}`,
                                    via: n,
                                    ...s
                                })
                            }
                        } else(0, h.track)("sign_in_load", {
                            screen: "sign_in_modal",
                            via: n,
                            ...s
                        });
                        this.setState({
                            alternateView: r ? {
                                title: (0, ae.H8)(1086),
                                type: "welcomeBack"
                            } : null
                        })
                    } else(0, h.track)("registration_load", {
                        screen: "sign_in_modal"
                    })
                }
                componentWillUnmount() {
                    this.mounted = !1;
                    const {
                        modalOptions: {
                            isSignIn: e,
                            onBeforeClose: t,
                            via: a
                        }
                    } = this.props;
                    e ? (0, h.track)("sign_in_tap", {
                        target: "dismiss",
                        via: a
                    }) : (0, h.track)("registration_tap", {
                        target: "dismiss"
                    }), null == t || t()
                }
                render() {
                    const {
                        dispatch: e,
                        isDesktop: t,
                        modalOptions: {
                            allowLanguagelessUser: a,
                            closeModalOnLogin: n = !0,
                            goBack: r,
                            hideAge: i = !1,
                            isFamilyPlan: o,
                            isSignIn: l,
                            limitRedirect: c,
                            redirectPath: d,
                            removeSignUp: u,
                            renderHeader: g,
                            renderSubtitle: p,
                            renderTitle: m,
                            requireGoogle: v,
                            trackingProps: _,
                            via: f
                        }
                    } = this.props, {
                        ageRestricted: S,
                        alternateView: y,
                        errors: E,
                        fields: b,
                        submitting: I,
                        useImprovedErrorMessages: w
                    } = this.state, k = (0, Ne.P_)(this.props.config), T = l && null !== y && "welcomeBack" === y.type, C = T ? y.title : "", R = l && y && "createdWithSocial" === y.type, L = R && y, A = T ? 1032 : l ? 35497 : 11927, P = s.createElement(ee.Z, { ...(0, de._q)(ge.V.RegisterButton),
                        className: Ie.button,
                        disabled: T ? void 0 : !1 !== I && "email" !== I,
                        key: A,
                        submitting: "email" === I,
                        type: "submit",
                        unstyledDisabled: !T,
                        variant: "solid"
                    }, (0, ae._i)(A)), D = l && w && (E.password || E.identifier || E.connectivity || E.social) ? s.createElement(me, null, E.identifier, E.password, E.connectivity, E.social) : null, N = (() => v ? s.createElement(He, {
                        isSignIn: l,
                        onGoogleClick: this.googleSignup,
                        renderHeader: g,
                        renderSubtitle: p,
                        renderTitle: m,
                        submitting: I
                    }) : T && this.prefilledLoginData ? s.createElement(Ue, {
                        dispatch: e,
                        errors: E,
                        header: null == g ? void 0 : g(!0),
                        identifier: b.identifier,
                        lastLoginType: this.prefilledLoginData.type,
                        name: this.prefilledLoginData.name,
                        onFacebookClick: this.facebookSignup,
                        onGoogleClick: this.googleSignup,
                        onIdentifierChange: e => this.handleFieldChange("identifier", e),
                        onPasswordChange: e => this.handleFieldChange("password", e),
                        onUseAnotherAccount: this.handleUseAnotherAccount,
                        password: b.password,
                        picture: this.prefilledLoginData.picture,
                        registerButton: P,
                        signInErrors: D,
                        submitting: I,
                        title: C,
                        via: f
                    }) : R ? s.createElement(Ge, {
                        name: L.name,
                        onFacebookClick: this.facebookSignup,
                        onGoogleClick: this.googleSignup,
                        onUseAnotherAccount: this.handleUseAnotherAccount,
                        picture: L.picture,
                        platform: L.platform,
                        submitting: I
                    }) : s.createElement(Ve, {
                        age: b.age,
                        ageRestricted: S,
                        dispatch: e,
                        email: b.email,
                        errors: E,
                        focusPasswordField: !1,
                        hideAge: i,
                        identifier: b.identifier,
                        isFamilyPlan: o,
                        isSignIn: l,
                        isUGCDisabled: k,
                        name: b.name,
                        onAgeBlur: this.handleAgeChange,
                        onAgeChange: e => this.handleFieldChange("age", e),
                        onEmailChange: e => this.handleFieldChange("email", e),
                        onFacebookClick: this.facebookSignup,
                        onGoogleClick: this.googleSignup,
                        onIdentifierChange: e => this.handleFieldChange("identifier", e),
                        onNameChange: e => this.handleFieldChange("name", e),
                        onPasswordChange: e => this.handleFieldChange("password", e),
                        onResetError: this.handleResetUsernameError,
                        onUsernameBlur: this.validateUsername,
                        onUsernameChange: e => this.handleFieldChange("username", e),
                        password: b.password,
                        registerButton: P,
                        renderHeader: g,
                        renderTitle: m,
                        showEmailField: !0,
                        signInErrors: D,
                        submitting: I,
                        username: b.username,
                        via: f
                    }))(), O = l ? (0, ae._i)(19234) : (0, ae._i)(9109);
                    return s.createElement(s.Fragment, null, t ? s.createElement("div", {
                        className: Ie["right-controls"]
                    }, u ? null : s.createElement(ee.Z, { ...(0, de._q)(ge.V.SignUpButton),
                        color: "macaw",
                        onClick: this.handleToggleForm,
                        variant: "stroke"
                    }, O)) : null, s.createElement("form", {
                        className: Ie.modal,
                        method: "POST",
                        noValidate: !0,
                        onSubmit: this.handleSubmit
                    }, N, s.createElement("div", {
                        className: Ie.footer
                    }, s.createElement("div", {
                        className: Ie["terms-and-privacy"]
                    }, (0, ae._i)(18519)), s.createElement("div", {
                        className: Ie["terms-and-privacy"]
                    }, (0, ae._i)(42488)), t ? null : l ? s.createElement("div", {
                        className: Ie["no-account"]
                    }, (0, ae._i)(11114), s.createElement("span", { ...(0, de._q)(ge.V.SignUpLink),
                        className: Ie["no-account-link"],
                        onClick: () => {
                            (0, h.track)("sign_in_tap", {
                                target: "sign_up",
                                via: f,
                                ..._
                            }), e({
                                options: {
                                    allowLanguagelessUser: a,
                                    closeModalOnLogin: n,
                                    goBack: r,
                                    isSignIn: !1,
                                    limitRedirect: c,
                                    name: M.t.SignInUp,
                                    redirectPath: d,
                                    renderHeader: g,
                                    renderSubtitle: p,
                                    renderTitle: m,
                                    via: f
                                },
                                type: "TOGGLE_MODAL"
                            })
                        }
                    }, (0, ae._i)(19234))) : s.createElement("div", {
                        className: Ie["no-account"]
                    }, (0, ae._i)(6220), s.createElement("span", {
                        className: Ie["no-account-link"],
                        onClick: () => {
                            (0, h.track)("registration_tap", {
                                target: "sign_in"
                            }), e({
                                options: {
                                    allowLanguagelessUser: a,
                                    closeModalOnLogin: n,
                                    goBack: r,
                                    isSignIn: !0,
                                    limitRedirect: c,
                                    name: M.t.SignInUp,
                                    redirectPath: d,
                                    renderHeader: g,
                                    renderSubtitle: p,
                                    renderTitle: m,
                                    via: f
                                },
                                type: "TOGGLE_MODAL"
                            })
                        }
                    }, (0, ae._i)(3830))))))
                }
            }
            const ze = () => {
                const e = (0, m.Fx)(k.Mb),
                    t = (0, m.Fx)(k.$4),
                    a = (0, m.Fx)(k.YW),
                    n = (0, m.Fx)(k.np),
                    r = (0, m.tX)(),
                    i = (0, L.YV)(),
                    o = (0, N.k6)();
                return s.useEffect((() => {
                    (0, q.Pc)() && !(0, Oe.pN)(n) || (0, Ce.dH)()
                }), [n]), s.createElement(te.Z, {
                    className: Ie["modal-wrapper"],
                    isFullscreen: !0,
                    modalName: M.t.SignInUp,
                    onDismiss: ({
                        modalOptions: e
                    }) => {
                        var t;
                        null === (t = e.onCloseButtonClick) || void 0 === t || t.call(e), r({
                            options: void 0,
                            type: "TOGGLE_MODAL"
                        })
                    }
                }, (({
                    modalOptions: n,
                    onDismiss: l
                }) => s.createElement(Be, {
                    config: e,
                    dispatch: r,
                    dispatchAtom: i,
                    history: o,
                    isDesktop: t,
                    isOnline: a,
                    modalOptions: n,
                    onDismiss: l
                })))
            };
            var Ze = a(98071),
                We = a(9979),
                $e = a(68903),
                je = a(1398);
            const qe = (0, je.Z)((() => a.e(8507).then(a.bind(a, 30512)))),
                Qe = (0, je.Z)((() => a.e(9178).then(a.bind(a, 68879)))),
                Ke = (0, je.Z)((() => a.e(6162).then(a.bind(a, 88964)))),
                Ye = (0, je.Z)((() => a.e(9849).then(a.bind(a, 51526)))),
                Je = (0, je.Z)((() => a.e(6798).then(a.bind(a, 91295)))),
                Xe = (0, je.Z)((() => Promise.all([a.e(1773), a.e(6336)]).then(a.bind(a, 17709)))),
                et = (0, je.Z)((() => Promise.all([a.e(1773), a.e(7367)]).then(a.bind(a, 21272)))),
                tt = (0, je.Z)((() => a.e(9018).then(a.bind(a, 16307)))),
                at = (0, je.Z)((() => Promise.all([a.e(1773), a.e(8010)]).then(a.bind(a, 92463)))),
                st = (0, je.Z)((() => a.e(1570).then(a.bind(a, 39555)))),
                nt = (0, je.Z)((() => a.e(1977).then(a.bind(a, 22095)))),
                rt = (0, je.Z)((() => a.e(7250).then(a.bind(a, 95414)))),
                it = (0, je.Z)((() => Promise.all([a.e(8470), a.e(9946)]).then(a.bind(a, 96867)))),
                ot = (0, je.Z)((() => Promise.all([a.e(8470), a.e(9210)]).then(a.bind(a, 62379)))),
                lt = (0, je.Z)((() => Promise.all([a.e(1773), a.e(3708)]).then(a.bind(a, 98730)))),
                ct = (0, je.Z)((() => a.e(1345).then(a.bind(a, 48497)))),
                dt = ({
                    modal: e
                }) => {
                    const [, t] = s.useState(0), a = s.useRef(), n = (e => {
                        switch (e) {
                            case "kudosOffer":
                            case "kudosReceive":
                                return rt;
                            case "legendaryRebrandGoldColor":
                                return Ke;
                            case "marketingOptIn":
                                return Je;
                            case "pathChange":
                                return Ye;
                            case "plusBottomSheetFamilyFollowUp":
                                return Qe;
                            case "reactivatedWelcome":
                                return lt;
                            case "resurrectedWelcome":
                                return et;
                            case "streakFreezeFromDuo":
                                return tt;
                            case "streakFreezeRecurringOffer":
                                return at;
                            case "streakFreezeUsed":
                                return st;
                            case "streakRepairOffer":
                                return nt;
                            case "turningNotificationsOn":
                                return Xe;
                            case "webToAppConversion":
                                return it;
                            case "webToAppConversionAggressive":
                                return ot;
                            case "newYearsDiscount":
                                return ct;
                            case "superFamilyPlanInvite":
                                return qe;
                            case void 0:
                                return;
                            default:
                                throw (0, $e.RJ)(e), Error()
                        }
                    })(null != e ? e : a.current);
                    return s.useEffect((() => {
                        if (void 0 === e && void 0 !== a.current) {
                            const e = setTimeout((() => {
                                a.current = void 0, t((e => e + 1))
                            }), We.nN);
                            return () => clearTimeout(e)
                        }
                        void 0 !== e && (a.current = e)
                    }), [e]), n ? s.createElement(Ze.Z, null, s.createElement(n, {
                        isModal: !0
                    })) : null
                };
            var ut = a(18201);
            const gt = ({
                    drawer: e
                }) => {
                    const [t, a] = s.useState(0), n = s.useRef(), r = s.useRef(), i = (0, ut.Z)(null != e ? e : n.current);
                    return s.useEffect((() => {
                        void 0 !== e && e === n.current && void 0 === r.current && a((e => e + 1)), n.current = null != e ? e : n.current, r.current = e
                    })), i ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(i, {
                        key: t
                    })) : null
                },
                pt = (0, je.Z)((() => a.e(7839).then(a.bind(a, 29169)))),
                mt = ({
                    toast: e
                }) => {
                    const [t, a] = s.useState(0), n = s.useRef(), r = s.useRef(), i = (e => {
                        switch (e) {
                            case "emailVerified":
                                return pt;
                            case void 0:
                                return;
                            default:
                                throw (0, $e.RJ)(e), Error()
                        }
                    })(null != e ? e : n.current);
                    return s.useEffect((() => {
                        void 0 !== e && e === n.current && void 0 === r.current && a((e => e + 1)), n.current = null != e ? e : n.current, r.current = e
                    })), i ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(i, {
                        isToast: !0,
                        key: t
                    })) : null
                };
            var ht = a(77888),
                vt = a(93890),
                _t = a(4060),
                ft = a(43633),
                St = a(10300),
                yt = a(89803);
            const Et = (0, je.Z)((() => a.e(8988).then(a.bind(a, 73906)))),
                bt = {
                    getConditionAndTreat: R.j6
                },
                It = ({
                    children: e
                }) => {
                    const t = (0, m.tX)(),
                        a = (0, m.Fx)((e => e.ui.appOffset)),
                        n = (0, m.Fx)((e => e.ui.drawer)),
                        r = (0, m.Fx)(Z.d),
                        u = (0, m.Fx)(_t.av),
                        g = (0, m.Fx)((e => e.ui.spotlightType)),
                        p = (0, m.Fx)((e => e.ui.toast)),
                        v = (0, m.Fx)(k.Lm),
                        f = (0, m.Fx)((e => e.ui.viewportHeight)),
                        y = (0, m.Fx)((e => "enabled" === e.brb.brb.status)),
                        I = (0, m.Fx)((e => (0, k.Sg)(e))),
                        w = (0, m.Fx)((e => (0, k.ep)(e))),
                        T = (0, m.Fx)((e => e.ui.isModalReallyOpen && (I || w))),
                        R = (0, m.Fx)((e => void 0 !== e.ui.drawer || void 0 !== e.ui.modal && e.ui.isModalReallyOpen || e.ui.isRequestingNotificationPermission)),
                        L = (0, ht.Z)(),
                        D = (0, z.Z)();
                    (0, F.Z)(), (() => {
                        const e = (0, m.Fx)(k.rF),
                            t = (0, N.k6)(),
                            a = (0, N.TH)(),
                            n = (null == e ? void 0 : e.name) === M.t.SignInUp;
                        s.useEffect((() => {
                            const e = new URLSearchParams(t.location.search);
                            n && !e.has("isLoggingIn") ? (e.set("isLoggingIn", "true"), t.replace({
                                pathname: t.location.pathname,
                                search: e.toString()
                            })) : !n && e.has("isLoggingIn") && (e.delete("isLoggingIn"), t.replace({
                                pathname: t.location.pathname,
                                search: e.toString()
                            }))
                        }), [n, a])
                    })(), V("brb"), V("zombie"), (0, B.Z)(), (() => {
                        const e = (0, m.Fx)(Z.d),
                            [t] = s.useState((() => new AbortController));
                        s.useEffect((() => {
                            let e = !1;
                            return "serviceWorker" in navigator && (async () => {
                                if (await navigator.serviceWorker.register("/gcm-service-worker.js"), !e && !t.signal.aborted) try {
                                    await W.S1(t.signal)
                                } catch (e) {
                                    console.warn(e)
                                }
                            })(), () => {
                                e = !0
                            }
                        }), []), s.useEffect((() => {
                            e && t.abort("Zombie mode activated")
                        }), [e])
                    })(), (({
                        disabled: e
                    }) => {
                        const t = s.useRef(),
                            a = s.useRef(),
                            n = (0, N.TH)(),
                            r = (0, m.Fx)((e => e.ui.engagementOverride)),
                            o = (0, m.Fx)(k.nW),
                            l = (0, m.Fx)((e => (0, $.ek)(e, {
                                location: n
                            })));
                        s.useEffect((() => {
                            const s = () => {
                                    var s, n;
                                    if (!e) {
                                        const e = Date.now(),
                                            r = e - j;
                                        j = e, h.accumulateTime(r, t.current, l), (null !== (s = t.current) && void 0 !== s ? s : "learning" === (0, h.getEngagementType)()) && (null === (n = a.current) || void 0 === n || n.forEach((e => h.accumulateTime(r, e, l))))
                                    }
                                },
                                n = i.P2(s, 1e3, {
                                    trailing: !0
                                });
                            return r !== t.current && (s(), t.current = r), o !== a.current && (s(), a.current = o), document.addEventListener("mousedown", n), document.addEventListener("keydown", n), document.addEventListener("touchstart", n), () => {
                                document.removeEventListener("mousedown", n), document.removeEventListener("keydown", n), document.removeEventListener("touchstart", n)
                            }
                        }), [e, r, l, o]), s.useEffect((() => {
                            const t = i.P2((() => {
                                if (!e) {
                                    const e = {};
                                    let t = 0;
                                    Object.entries(h.totalTimes).forEach((([a, s]) => {
                                        "deepest_node_learning" !== a && (t += s), e[`engagement_type_${a}`] = Math.floor(s / 1e3)
                                    })), e.total_time_spent = Math.floor(t / 1e3), h.track("time_spent", e), h.resetTime()
                                }
                            }), 6e4, {
                                trailing: !0
                            });
                            return document.addEventListener("mousedown", t), document.addEventListener("keydown", t), document.addEventListener("touchstart", t), () => {
                                document.removeEventListener("mousedown", t), document.removeEventListener("keydown", t), document.removeEventListener("touchstart", t)
                            }
                        }), [e])
                    })({
                        disabled: y || r && !v
                    }), (() => {
                        const e = s.useRef((0, G.Ml)()),
                            t = s.useRef((0, G.Ml)()),
                            [a, n] = s.useState((0, q.Pc)()),
                            [r, o] = s.useState((0, q.Pc)());
                        s.useEffect((() => {
                            const t = () => {
                                    setTimeout((() => {
                                        h.trackUserActive2022({
                                            activity_trigger: "user_interaction"
                                        }) && (e.current = (0, G.Ml)())
                                    }), 500)
                                },
                                s = i.P2(t, Q, {
                                    trailing: !1
                                }),
                                r = () => {
                                    (0, G.Ml)() !== e.current && t()
                                },
                                o = () => {
                                    a !== (0, q.Pc)() && (n((0, q.Pc)()), t())
                                };
                            return K.forEach((e => {
                                document.addEventListener(e, s), document.addEventListener(e, r), document.addEventListener(e, o)
                            })), () => {
                                K.forEach((e => {
                                    document.removeEventListener(e, s), document.removeEventListener(e, r), document.removeEventListener(e, o)
                                }))
                            }
                        }), [a]), s.useEffect((() => {
                            const e = () => {
                                    setTimeout((() => {
                                        h.trackUserActive2022({
                                            activity_trigger: "app_foregrounded"
                                        }) && (t.current = (0, G.Ml)())
                                    }), 500)
                                },
                                a = i.P2(e, Q, {
                                    trailing: !1
                                }),
                                s = () => {
                                    (0, G.Ml)() !== t.current && e()
                                },
                                n = () => {
                                    r !== (0, q.Pc)() && (o((0, q.Pc)()), s())
                                };
                            return document.addEventListener("visibilitychange", s), document.addEventListener("visibilitychange", a), document.addEventListener("visibilitychange", n), () => {
                                document.removeEventListener("visibilitychange", s), document.removeEventListener("visibilitychange", a), document.removeEventListener("visibilitychange", n)
                            }
                        }), [r])
                    })(), (({
                        disabled: e
                    }) => {
                        const t = (0, m.tX)(),
                            a = (0, m.CC)();
                        s.useEffect((() => {
                            if (!e) {
                                const e = (0, H.nC)((() => {
                                    try {
                                        (0, q.Jb)()
                                    } catch {
                                        return void clearInterval(e)
                                    }
                                    const s = a.getState();
                                    (0, k.eI)(s) || void 0 !== J.SL || (t((0, X.eY)()), t((0, Y.i)()))
                                }), 36e5);
                                return () => clearInterval(e)
                            }
                        }), [e])
                    })({
                        disabled: y || r
                    });
                    const [U, ee] = s.useState(y || r && !v), te = s.useRef(null), ae = s.useRef(null);
                    return (0, o.Z)(te, {
                        animateOnMount: R,
                        isVisible: R
                    }), (0, o.Z)(ae, {
                        animateOnMount: T,
                        isVisible: T
                    }), s.useLayoutEffect((() => {
                        if (void 0 !== a) return document.documentElement.style.setProperty("--app-offset", `${a}px`), () => {
                            document.documentElement.style.removeProperty("--app-offset")
                        }
                    }), [a]), s.useLayoutEffect((() => {
                        if (D) return document.documentElement.setAttribute("reduced-motion", ""), () => document.documentElement.removeAttribute("reduced-motion")
                    }), [D]), s.useLayoutEffect((() => {
                        if (void 0 !== f && !CSS.supports("(width: 1dvh)")) return document.documentElement.style.setProperty("--viewport-height", `${f}px`), () => {
                            document.documentElement.style.removeProperty("--viewport-height")
                        }
                    }), [f]), s.useEffect((() => {
                        if ((0, q.Pc)() && !r) {
                            const e = new AbortController;
                            return t((0, J.SC)(e.signal)), t((0, J.Vw)(e.signal)), () => {
                                e.abort("Zombie mode activated")
                            }
                        }(0, h.startTracking)()
                    }), [r]), s.useEffect((() => {
                        y || r || t((0, Y.i)())
                    }), [y, r]), s.useEffect((() => {
                        r && v && t(((e, t) => {
                            const a = (0, k.__)(t()),
                                s = (0, k.np)(t()),
                                n = (0, G.Zo)(),
                                r = (0, vt.zK)(n, a, s),
                                i = (0, vt.KA)(n, r, s),
                                o = (0, vt.ul)(r, a, s);
                            e({
                                type: "UPDATE_USER",
                                user: {
                                    streakData: i.streakData
                                }
                            }), e({
                                type: "SET_XP_SUMMARIES",
                                xpSummaries: i.xpSummaries
                            });
                            for (const t of o) e({
                                item: t,
                                type: "REFRESH_USER_ITEM"
                            })
                        }))
                    }), []), s.useEffect((() => {
                        (0, h.track)("web_supported_features", {
                            web_features: window.duo.supportedFeatures
                        })
                    }), []), s.useEffect((() => {
                        if (y || r && !v) return ee(!0), () => {
                            (0, O.Zs)()
                        }
                    }), [y, r, v]), s.useEffect((() => {
                        r && (0, h.track)("zombie_mode_activated", {
                            num_offline_lessons_available: L
                        })
                    }), [r]), s.useEffect((() => {
                        if (R) return t({
                            type: "DIMMED_OVERLAY_OPENED"
                        }), () => {
                            t({
                                type: "DIMMED_OVERLAY_CLOSED"
                            })
                        }
                    }), [R]), s.useEffect((() => {
                        const e = () => t({
                                type: "GO_OFFLINE"
                            }),
                            a = () => t({
                                type: "COME_ONLINE"
                            });
                        return window.addEventListener("offline", e), window.addEventListener("online", a), () => {
                            window.removeEventListener("offline", e), window.removeEventListener("online", a)
                        }
                    }), []), s.useEffect((() => {
                        const e = i.Ds((() => t({
                            height: window.innerHeight,
                            type: "RESIZE_WINDOW",
                            width: window.innerWidth
                        })), 250);
                        return window.addEventListener("resize", e), () => window.removeEventListener("resize", e)
                    }), []), s.useEffect((() => (window.addEventListener("beforeunload", yt.u6), window.addEventListener("unload", yt.u6), () => {
                        window.removeEventListener("beforeunload", yt.u6), window.removeEventListener("unload", yt.u6)
                    })), []), s.useEffect((() => {
                        const e = (0, ft.h0)(),
                            t = [...St.br, d.m].map((t => t.mount(e)));
                        return () => {
                            t.forEach((e => null == e ? void 0 : e()))
                        }
                    }), []), s.useEffect((() => {
                        if (!v) return;
                        const e = (0, ft.h0)(),
                            t = [A.Sf].map((t => t.mount(e)));
                        return () => {
                            t.forEach((e => null == e ? void 0 : e()))
                        }
                    }), [v]), s.useEffect((() => {
                        Pe.Z.track("pre_init", window.duo.timeOrigin), U || Pe.Z.track("first_render", window.performance.now() - window.duo.timeOrigin)
                    }), []), U ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(Et, null)) : s.createElement(_, null, s.createElement(C.vU, null), s.createElement(l.Z.Provider, {
                        value: bt
                    }, s.createElement(c.Z.Provider, {
                        value: D
                    }, s.createElement(P, null, s.createElement(S.ZP, null, s.createElement(x, null), e, void 0 === g ? s.createElement(b.Z, {
                        disablePointerEvents: !R,
                        ref: te,
                        ...(0, de._q)(ge.V.DrawerBackdrop)
                    }) : s.createElement(E, {
                        spotlightType: g
                    }), s.createElement(b.Z, {
                        disablePointerEvents: !T,
                        portalToOverlays: !0,
                        ref: ae,
                        secondaryOverlayType: I ? "drawer" : "modal"
                    }), s.createElement(se, null), s.createElement(ze, null), s.createElement(gt, {
                        drawer: null == n ? void 0 : n.name
                    }), s.createElement(dt, {
                        modal: u
                    }), s.createElement(mt, {
                        toast: p
                    }))))))
                };
            var wt = a(36914);
            var kt = a(31801);
            const Tt = ({
                    data: e
                }) => (e["@context"] = e["@context"] || "http://schema.org", s.createElement("script", {
                    type: "application/ld+json"
                }, JSON.stringify(e, null, "\t"))),
                Ct = ({
                    crumbs: e
                }) => {
                    const t = {
                        "@type": "BreadcrumbList",
                        itemListElement: e.map(((e, t) => ({
                            "@type": "ListItem",
                            item: {
                                "@id": e.url.toString(),
                                name: e.label
                            },
                            position: t + 1
                        })))
                    };
                    return s.createElement(Tt, {
                        data: t
                    })
                };
            var Rt = a(92883),
                Lt = a(75025),
                At = a(17791);
            const Pt = e => {
                const {
                    dispatch: t,
                    trackingScreen: a = "unknown",
                    via: n
                } = e;
                return s.createElement(ee.Z, { ...(0, de._q)(ge.V.HaveAccount),
                    className: "_1C_1G _18wI-",
                    onClick: () => {
                        (0, h.track)("click", {
                            screen: a,
                            target: "has_account"
                        }), (0, h.track)("splash_tap", {
                            target: "has_account"
                        }), t({
                            options: {
                                allowLanguagelessUser: !0,
                                isSignIn: !0,
                                name: M.t.SignInUp,
                                via: n
                            },
                            type: "TOGGLE_MODAL"
                        })
                    },
                    variant: "stroke"
                }, (0, ae._i)(20690))
            };
            var Dt = a(2559);
            const Nt = ({
                    learningLanguageId: e
                }) => {
                    const t = e ? s.createElement(Dt.Z, {
                        className: "_3dENR",
                        lang: e,
                        size: 88
                    }) : null;
                    return s.createElement("div", {
                        className: "sz8BU"
                    }, s.createElement("div", {
                        className: "CDYo9"
                    }), t)
                },
                Ot = "_2WwK_ _3QH1l _29LnD _2sNVM _2LoNU VzbUl _1AgKJ _1w2Ut _3wPHf _2Rt1l _1saKQ _1Lt8-",
                xt = {
                    body: "_1-9fg",
                    footer: "H0_LR",
                    "_space-background": "_2LOeC",
                    "splash-wrap-inner": "_3dWxG",
                    "_splash-header-base": "_3UsPY",
                    "splash-header": "_1rTQ3",
                    "splash-header-wrap-space": "_3v8hc _2LOeC _3UsPY",
                    "splash-header-wrap": "_25k2b _3UsPY",
                    "cta-container": "_29r-g",
                    tagline: "_1T9k7",
                    "splash-cta": "MM354 _3u1lX",
                    "login-panel-wrap": "_3z-ZU",
                    "enter-details": "_3H89P",
                    "content-section": "_2OtbL",
                    "content-section-divider": "_1O_yM",
                    "_content-wrap": "_1as8J",
                    "_content-wrap-row": "_2NMwR _1as8J",
                    "content-wrap-row-left": "_1pT-8 _2NMwR _1as8J",
                    "content-wrap-row-right": "_1S3bh _2NMwR _1as8J",
                    "content-wrap-column": "_1GhRq _1as8J",
                    "_content-img": "_15nbx",
                    "_content-img-left": "_3QncZ",
                    "_content-img-right": "_7E8vy",
                    h2: "_2r_9O",
                    h3: "_1dOxi",
                    "duo-img": "_3OWY6 _15nbx _3QncZ",
                    "efficacy-img": "_2xTQ8 _15nbx _3QncZ _1Ai11",
                    "plus-duo-img": "_3lfeq _15nbx _3QncZ _1Ai11",
                    "super-duo-img": "_65rkx _15nbx _3QncZ _1Ai11",
                    "travel-img": "_2zOxe _15nbx _7E8vy _1Ai11",
                    "school-img": "_11gIl _15nbx _3QncZ _1Ai11",
                    "english-test-img": "_3bvsW _15nbx _7E8vy _1Ai11",
                    "content-description": "DVREO",
                    "content-description-small": "_3ISkq",
                    link: "_2t5vx",
                    "play-video-icon": "gPa7_",
                    "gamification-columns": "_2rvEj",
                    "gamification-column": "_1laNF",
                    "gamification-img": "_2EMwE",
                    "gamification-img-top": "_2THBR _2EMwE",
                    "small-content-wrap": "_2F_ij",
                    "small-content-text-wrap": "_1uhFJ",
                    _icon: "_24WLc",
                    "check-icon": "VX6ES _24WLc",
                    "crown-icon": "_1qlPY _24WLc",
                    "streak-icon": "_3Whio _24WLc",
                    "profile-icon": "_2LdMG _24WLc",
                    "app-button-container": "v00vK",
                    "app-button": "_23uvc",
                    "blue-link": "_1B-3f _1WLlV _1KSsU _2Rt1l",
                    "footer-wrap": "_3xxHO _2LOeC",
                    "footer-header": "pQMGa",
                    "footer-tagline": "_1OWib",
                    "footer-cta": "_2Rrwr _3u1lX",
                    "hidden-on-mobile": "_1zJKQ",
                    "splash-bottom": "_2pVjP",
                    arrow: "_1zZNz _1NBL7 I8qpS",
                    "language-carousel": "_1XKMS",
                    "logged-out-logo": "YNLKC"
                };
            class Ft extends s.Component {
                constructor() {
                    super(...arguments), this.renderCourseHatchingForm = () => {
                        const {
                            course: e,
                            email: t,
                            isEmailInputVisible: a,
                            errorString: n,
                            newlySubscribed: r,
                            onEmailChange: i,
                            onNotifyMeClick: o,
                            onSubscribeClick: l
                        } = this.props, {
                            learningLanguageName: c,
                            subscriberCount: d,
                            userSubscribed: u
                        } = e, g = u || r;
                        return a ? s.createElement("div", {
                            className: "_3DVOQ"
                        }, s.createElement("div", {
                            className: "_1nATL"
                        }, s.createElement("input", {
                            className: "UdHns",
                            onChange: e => i(e.target.value),
                            placeholder: (0, ae.H8)(3980),
                            value: t
                        }), s.createElement("button", {
                            className: "_2AqiQ _2WwK_ _3QH1l _29LnD _2sNVM _2LoNU VzbUl _1AgKJ _1w2Ut _3wPHf _2Rt1l _1saKQ _1Lt8-",
                            onClick: l
                        }, (0, ae._i)(19532))), s.createElement("div", {
                            className: "_2C-90"
                        }, n)) : s.createElement("div", null, g ? s.createElement("span", {
                            className: Ot
                        }, (0, ae._i)(11141)) : s.createElement("button", {
                            className: Ot,
                            onClick: o
                        }, (0, ae._i)(9753)), s.createElement("div", {
                            className: "_3zvaa pCjvg"
                        }, (0, ae._i)(12826, {
                            learning_language_name: c,
                            num_users: d.toLocaleString()
                        })))
                    }, this.renderHatchedForm = () => {
                        const {
                            dispatch: e,
                            isRegistering: t,
                            onStartLearningClick: a,
                            topElementRef: n
                        } = this.props;
                        return s.createElement("div", null, s.createElement("div", {
                            className: "_2UMS4",
                            ref: n
                        }, s.createElement(ee.Z, {
                            className: xt["splash-cta"],
                            color: "owl",
                            disabled: t,
                            onClick: a,
                            variant: "solid"
                        }, (0, ae._i)(7709))), s.createElement("div", null, s.createElement(Pt, {
                            dispatch: e,
                            via: "course_page"
                        })))
                    }, this.renderCTA = () => {
                        const {
                            course: e,
                            courseHatching: t,
                            isDesktop: a
                        } = this.props, {
                            fromLanguageName: n,
                            learningLanguageName: r
                        } = e, i = t ? (0, ae._i)(8291, {
                            from_language_name: n,
                            learning_language_name: r
                        }) : (0, ae._i)(a ? 18929 : 13834, {
                            learning_language_name: r
                        });
                        return s.createElement("div", {
                            className: xt["cta-container"],
                            key: "cta-container"
                        }, s.createElement("div", {
                            className: xt.headings
                        }, s.createElement("h1", {
                            className: xt.tagline
                        }, i)), s.createElement("div", {
                            className: "_2Yj_f",
                            onClick: e => e.stopPropagation()
                        }, t ? this.renderCourseHatchingForm() : this.renderHatchedForm()))
                    }, this.renderHeroElement = () => s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(Nt, {
                        learningLanguageId: this.props.course.learningLanguageId
                    }))
                }
                render() {
                    return s.createElement("div", {
                        className: xt["splash-header-wrap-space"]
                    }, s.createElement("div", {
                        className: xt["splash-header"]
                    }, this.renderHeroElement(), this.renderCTA()))
                }
            }
            const Mt = Ft;
            var Ut = a(93746);
            class Ht extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        email: "",
                        errorString: "",
                        isEmailInputVisible: !1,
                        isRegistering: !1,
                        newlySubscribed: !1
                    }, this.onSubscribeClick = async () => {
                        const {
                            course: e
                        } = this.props, {
                            learningLanguageId: t,
                            fromLanguageId: a
                        } = e;
                        try {
                            await (async (e, t, a, s) => {
                                await U._s.courseSubscribe(t, a, s);
                                const n = (0, Ut.D3)(null != a ? a : Ut.h9);
                                (0, h.track)("course subscribe", {
                                    from_language: n,
                                    learning_language: (0, Ut.D3)(t),
                                    logged_in: !1
                                })
                            })(0, t, a, this.state.email), this.setState({
                                isEmailInputVisible: !1,
                                newlySubscribed: !0
                            })
                        } catch {
                            this.setState({
                                errorString: (0, ae.H8)(11696)
                            })
                        }
                    }, this.onStartLearningClick = async () => {
                        const {
                            course: e,
                            dispatch: t
                        } = this.props, {
                            learningLanguageId: a,
                            fromLanguageId: s
                        } = e;
                        Pe.Z.start("trial_user_creation"), this.setState({
                            isRegistering: !0
                        }), await Promise.all([(0, h.track)("click", {
                            screen: "course_splash",
                            target: "get_started"
                        }), (0, h.track)("course_splash_tap", {
                            target: "get_started"
                        })]), t((0, X.Kb)(a, s))
                    }
                }
                render() {
                    const {
                        clientExperiments: e,
                        course: t,
                        courseHatching: a,
                        dispatch: n,
                        isDesktop: r,
                        topElementRef: i
                    } = this.props, {
                        email: o,
                        errorString: l,
                        isEmailInputVisible: c,
                        isRegistering: d,
                        newlySubscribed: u
                    } = this.state;
                    return s.createElement(Mt, {
                        clientExperiments: e,
                        course: t,
                        courseHatching: a,
                        dispatch: n,
                        email: o,
                        errorString: l,
                        isDesktop: r,
                        isEmailInputVisible: c,
                        isRegistering: d,
                        newlySubscribed: u,
                        onEmailChange: e => this.setState({
                            email: e
                        }),
                        onNotifyMeClick: () => this.setState({
                            isEmailInputVisible: !0
                        }),
                        onStartLearningClick: this.onStartLearningClick,
                        onSubscribeClick: this.onSubscribeClick,
                        topElementRef: i
                    })
                }
            }
            const Gt = Ht,
                Vt = ({
                    children: e
                }) => {
                    const t = s.createElement("div", {
                            className: xt["content-section-divider"]
                        }),
                        a = s.Children.toArray(e),
                        n = (a.length, a.filter((e => !!e)).map(((e, a) => s.createElement(s.Fragment, {
                            key: a
                        }, 0 !== a ? t : null, e, null))));
                    return s.createElement("div", {
                        className: xt["splash-content-wrap"]
                    }, n)
                };
            var Bt = a(47449);
            const zt = {
                    "footer-language-wrap": "-Dahb",
                    "footer-site-language-header": "_1LLyK",
                    "footer-ui-language-item": "yu122",
                    "footer-ui-language-link": "FXHbm"
                },
                Zt = {
                    "footer-language-wrap": "_13UWe",
                    "footer-site-language-header": "_1HGJj",
                    "footer-ui-language": "_2-ln3",
                    "footer-ui-language-item": "_3ZLw-",
                    "footer-ui-language-link": "_3px_u"
                },
                Wt = i.ZP.keys(Ut.Jl),
                $t = ({
                    isRedesign: e
                }) => {
                    const t = e ? Zt : zt;
                    return s.createElement("div", {
                        className: t["footer-language-wrap"]
                    }, s.createElement("div", {
                        className: t["footer-site-language-header"]
                    }, (0, ae._i)(18889)), s.createElement("ul", {
                        className: t["footer-ui-language"]
                    }, Wt.map((e => s.createElement("li", {
                        className: t["footer-ui-language-item"],
                        key: e
                    }, s.createElement(re.ZP, {
                        className: t["footer-ui-language-link"],
                        href: `//${(0,Ut.D3)(e)}.duolingo.com`
                    }, (0, Ut.lx)(e)))))))
                };
            var jt = a(81928);
            const qt = {
                    "site-map-wrap": "gd_5w",
                    "site-map": "_1Nk9J",
                    "column-header": "_11guX",
                    column: "_3G8SN",
                    spacer: "_3FzPR"
                },
                Qt = {
                    "width-desktop": "1080px",
                    "width-tablet": "768px",
                    column: "_2zjY4",
                    "column-header": "_30Vi6",
                    "site-map": "kWIKU"
                },
                Kt = () => {
                    const e = (() => {
                        switch (window.duo.uiLanguage) {
                            case "zh-CN":
                                return "zs";
                            case "zh-TW":
                                return "zt";
                            default:
                                return (0, Ut.D3)(Ut.h9)
                        }
                    })();
                    return Yt(e) ? e : void 0
                },
                Yt = (0, $e.p)(["de", "en", "es", "fr", "hi", "hu", "id", "it", "ja", "ko", "pt", "ru", "th", "tr", "uk", "vi", "zs", "zt"]);
            var Jt = a(64865),
                Xt = a(77747);
            const ea = (0, a(419).Q)(window.duo.uiLanguage),
                ta = parseFloat(Qt["width-desktop"]),
                aa = parseFloat(Qt["width-tablet"]),
                sa = ({
                    isRedesign: e
                }) => {
                    const t = (0, m.Fx)((e => e.ui.viewportWidth)),
                        a = e ? Qt : qt,
                        n = Kt(),
                        r = "en" === window.duo.uiLanguage,
                        {
                            featureFlags: i
                        } = (0, m.Fx)(k.Mb);
                    s.useEffect((() => {
                        (0, h.track)("web_to_app_store_load", {
                            via: "site_map"
                        })
                    }), []);
                    const o = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(29912)), s.createElement("ul", null, s.createElement("li", null, s.createElement(re.ZP, { ...(0, de._q)(ge.V.CoursesLink),
                            href: "/courses"
                        }, (0, ae._i)(20631))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/info"
                        }, (0, ae._i)(17103))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/approach"
                        }, (0, ae._i)(6695))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/efficacy"
                        }, (0, ae._i)(29913))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://careers.duolingo.com/about"
                        }, (0, ae._i)(11435))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://research.duolingo.com"
                        }, (0, ae._i)(6746))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://careers.duolingo.com"
                        }, (0, ae._i)(5919))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://design.duolingo.com"
                        }, (0, ae._i)(29914))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://store.duolingo.com/"
                        }, (0, ae._i)(15428))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://press.duolingo.com"
                        }, (0, ae._i)(18072))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://investors.duolingo.com"
                        }, (0, ae._i)(30107))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/contact"
                        }, (0, ae._i)(23037))))),
                        l = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(17225)), s.createElement("ul", null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/"
                        }, (0, ae._i)(23227))), (0, H.J9)() ? null : s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://schools.duolingo.com"
                        }, (0, ae._i)(13199))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: `https://englishtest.duolingo.com/${null!=n?n:""}`
                        }, "Duolingo English Test")), "en" === window.duo.uiLanguage ? s.createElement(s.Fragment, null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://www.duolingo.com/abc",
                            isRoutableUrl: () => !1
                        }, "Duolingo ABC")), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://blog.duolingo.com/duolingo-launches-math-app"
                        }, "Duolingo Math"))) : null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://podcast.duolingo.com"
                        }, (0, ae._i)(3735))), (0, Xt.Ak)(i) ? s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/business",
                            onClick: () => (0, h.trackRedirection)(window.location.href, "/business", "soft")
                        }, "Duolingo for Business")) : null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/super"
                        }, (0, ae._i)(36712))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/gift"
                        }, (0, ae._i)(41073))))),
                        c = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(18971)), s.createElement("ul", null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: (0, Jt.Ir)({
                                via: "site_map"
                            }),
                            onClick: () => {
                                (0, h.track)("web_to_app_store_tap", {
                                    target: "google_or_China",
                                    via: "site_map"
                                })
                            }
                        }, (0, ae._i)(7946))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: (0, Jt.fy)({
                                via: "site_map"
                            }),
                            onClick: () => {
                                (0, h.track)("web_to_app_store_tap", {
                                    target: "apple",
                                    via: "site_map"
                                })
                            }
                        }, (0, ae._i)(24192))), "en" === window.duo.uiLanguage ? s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://apps.apple.com/app/duolingo-abc-learn-to-read/id1440502568?pt=1374442&ct=Site%20map&mt=8"
                        }, "Duolingo ABC (iOS)")) : null)),
                        d = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(29915)), s.createElement("ul", null, s.createElement("li", null, s.createElement(jt.Z, { ...(0, de._q)(ge.V.FaqLink)
                        }, (0, ae._i)(12338))), (0, H.J9)() ? null : s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://duolingoschools.zendesk.com/hc/en-us"
                        }, (0, ae._i)(6932))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://englishtest.duolingo.com/faq"
                        }, (0, ae._i)(20482, {
                            test_name: "Duolingo English Test"
                        }))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://status.duolingo.com/"
                        }, (0, ae._i)(12464))))),
                        u = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(29916)), s.createElement("ul", null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/guidelines"
                        }, (0, ae._i)(29917))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/terms"
                        }, (0, ae._i)(22838))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/privacy"
                        }, (0, ae._i)(19704))), r ? s.createElement("li", null, s.createElement(re.ZP, {
                            href: "/privacy#california"
                        }, 'Respecting your "do not sell my personal information" rights')) : null)),
                        g = s.createElement("div", null, s.createElement("div", {
                            className: a["column-header"]
                        }, (0, ae._i)(16166)), s.createElement("ul", null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: null !== O.Ql && void 0 !== O.Ql ? O.Ql : "https://blog.duolingo.com"
                        }, (0, ae._i)(14615))), (0, H.J9)() ? null : s.createElement(s.Fragment, null, s.createElement("li", null, s.createElement(re.ZP, {
                            href: ea.instagram.link
                        }, (0, ae._i)(616))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: ea.facebook.link
                        }, (0, ae._i)(17511))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: ea.twitter.link
                        }, (0, ae._i)(5061))), s.createElement("li", null, s.createElement(re.ZP, {
                            href: "https://www.youtube.com/user/duolingo"
                        }, "YouTube")))));
                    return e ? t >= ta ? s.createElement("div", {
                        className: Qt["site-map"]
                    }, s.createElement("div", {
                        className: Qt.column
                    }, o), s.createElement("div", {
                        className: Qt.column
                    }, l), s.createElement("div", {
                        className: Qt.column
                    }, c), s.createElement("div", {
                        className: Qt.column
                    }, d), s.createElement("div", {
                        className: Qt.column
                    }, u, g)) : t >= aa ? s.createElement("div", {
                        className: Qt["site-map"]
                    }, s.createElement("div", {
                        className: Qt.column
                    }, o, d), s.createElement("div", {
                        className: Qt.column
                    }, l, u), s.createElement("div", {
                        className: Qt.column
                    }, c, g)) : s.createElement("div", {
                        className: Qt["site-map"]
                    }, s.createElement("div", {
                        className: Qt.column
                    }, o, l, c, d, u, g)) : s.createElement("div", {
                        className: qt["site-map-wrap"]
                    }, s.createElement("div", {
                        className: qt["site-map"]
                    }, s.createElement("div", {
                        className: qt.column
                    }, o), s.createElement("div", {
                        className: qt.column
                    }, l), s.createElement("div", {
                        className: qt.column
                    }, c), s.createElement("div", {
                        className: qt.column
                    }, d), s.createElement("div", {
                        className: qt.column
                    }, u, s.createElement("div", {
                        className: qt.spacer
                    }), g)))
                },
                na = () => s.createElement("div", {
                    className: xt["footer-wrap"]
                }, s.createElement("div", {
                    className: xt.footer
                }, s.createElement(sa, null), s.createElement($t, null), (0, H.J9)() ? s.createElement(Bt.Z, null) : null)),
                ra = e => {
                    const {
                        className: t,
                        dispatch: a,
                        fromLanguageId: n,
                        isRegistering: r,
                        learningLanguageId: i,
                        label: o = 7709
                    } = e;
                    return s.createElement(ee.Z, {
                        className: le()(t, "_3y8ko _3u1lX _42WO0"),
                        color: "owl",
                        disabled: r,
                        onClick: async () => {
                            Pe.Z.start("trial_user_creation"), await Promise.all([(0, h.track)("click", {
                                which: "course splash page get started topbar"
                            }), (0, h.track)("course_splash_tap", {
                                target: "get_started"
                            })]), a((0, X.Kb)(i, n))
                        },
                        variant: "solid"
                    }, (0, ae._i)(o))
                };
            var ia = a(56252),
                oa = a(74597);
            const la = ({
                    headingResource: e,
                    trackingScreen: t,
                    via: a
                }) => s.createElement("section", {
                    className: xt["content-section"]
                }, s.createElement("div", {
                    className: xt["content-wrap-row-right"]
                }, s.createElement("div", {
                    className: xt["content-text"]
                }, s.createElement("h2", {
                    className: xt.h2
                }, (0, ae._i)(e)), s.createElement("div", {
                    className: xt["content-description"]
                }, (0, ae._i)(12387)), s.createElement("div", {
                    className: xt["app-button-container"]
                }, s.createElement(ia.Z, {
                    className: xt["app-button"],
                    href: oa.Z.desktop ? (0, ae.H8)(22504, void 0, {
                        addRightToLeftMark: !1
                    }) : (0, Jt.fy)({
                        via: a
                    }),
                    onClick: () => {
                        (0, h.track)("click", {
                            screen: t,
                            target: "mobile_download_ios"
                        }), (0, h.track)("click", {
                            which: "mobile download ios"
                        }), (0, h.track)("web_to_app_store_tap", {
                            target: "apple",
                            via: a
                        })
                    },
                    style: "snow-always-light",
                    type: "apple",
                    via: a
                }), s.createElement(ia.Z, {
                    className: xt["app-button"],
                    href: oa.Z.desktop ? (0, Jt.A)({
                        utmCampaign: "splash",
                        utmContent: "download_button"
                    }) : (0, Jt.Ir)({
                        via: a
                    }),
                    onClick: () => {
                        (0, h.track)("click", {
                            screen: t,
                            target: "mobile_download_android"
                        }), (0, h.track)("click", {
                            which: "mobile download android"
                        }), (0, h.track)("web_to_app_store_tap", {
                            target: "google_or_China",
                            via: a
                        })
                    },
                    style: "snow-always-light",
                    type: (0, H.J9)() ? "china" : "google"
                }))), s.createElement("div", {
                    className: xt["travel-img"]
                }))),
                ca = ({
                    description: e,
                    iconClassName: t,
                    onClick: a,
                    title: n
                }) => s.createElement("div", {
                    className: xt["small-content-wrap"],
                    onClick: a
                }, s.createElement("div", {
                    className: t
                }), s.createElement("div", {
                    className: xt["small-content-text-wrap"]
                }, s.createElement("h3", {
                    className: xt.h3
                }, n), s.createElement("div", {
                    className: xt["content-description-small"]
                }, e))),
                da = ({
                    learningLanguageName: e
                }) => s.createElement("section", {
                    className: xt["content-section"]
                }, s.createElement("div", {
                    className: xt["content-wrap-column"]
                }, s.createElement("div", {
                    className: xt["gamification-img-top"]
                }), s.createElement("h2", {
                    className: xt.h2
                }, (0, ae._i)(17123, {
                    learning_language_name: e
                })), s.createElement("div", {
                    className: xt["gamification-columns"]
                }, s.createElement("div", {
                    className: xt["gamification-column"]
                }, s.createElement(ca, {
                    description: (0, ae._i)(32749, {
                        href: "/efficacy"
                    }, {
                        preprocess: e => (0, ae.to)(e, xt.link)
                    }),
                    iconClassName: xt["streak-icon"],
                    onClick: e => {
                        var t;
                        "a" === (null === (t = e.target.tagName) || void 0 === t ? void 0 : t.toLowerCase()) && (0, h.track)("duolingo_landing_efficacy_cta", {})
                    },
                    title: (0, ae._i)(32748)
                }), s.createElement(ca, {
                    description: (0, ae._i)(29907),
                    iconClassName: xt["check-icon"],
                    title: (0, ae._i)(29906)
                })), s.createElement("div", {
                    className: xt["gamification-img"]
                }), s.createElement("div", {
                    className: xt["gamification-column"]
                }, s.createElement(ca, {
                    description: (0, ae._i)(29909),
                    iconClassName: xt["crown-icon"],
                    title: (0, ae._i)(29908)
                }), s.createElement(ca, {
                    description: (0, ae._i)(29911),
                    iconClassName: xt["profile-icon"],
                    title: (0, ae._i)(29910)
                }))))),
                ua = ({
                    learningLanguageName: e,
                    trackingScreen: t
                }) => s.createElement("section", {
                    className: xt["content-section"]
                }, s.createElement("div", {
                    className: xt["content-wrap-row-left"]
                }, s.createElement("div", {
                    className: xt["duo-img"]
                }), s.createElement("div", {
                    className: xt["content-text"]
                }, s.createElement("h2", {
                    className: xt.h2
                }, (0, ae._i)(3721, {
                    learning_language_name: e
                })), s.createElement("div", {
                    className: xt["content-description"]
                }, s.createElement(re.PK, {
                    trackingScreen: t,
                    trackingTarget: "proof"
                }, (0, ae._i)(20266, {
                    learning_language_name: e
                }), " ", (0, ae._i)(17300)))))),
                ga = ({
                    trackingScreen: e
                }) => s.createElement("section", {
                    className: xt["content-section"]
                }, s.createElement("div", {
                    className: xt["content-wrap-row-left"]
                }, s.createElement("div", {
                    className: xt["school-img"]
                }), s.createElement("div", {
                    className: xt["content-text"]
                }, s.createElement("h2", {
                    className: xt.h2
                }, (0, ae._i)(13199)), s.createElement("div", {
                    className: xt["content-description"]
                }, (0, ae._i)(29898)), s.createElement(re.ZP, {
                    className: xt["blue-link"],
                    href: "https://schools.duolingo.com",
                    onClick: () => (0, h.track)("click", {
                        which: "web splash schools"
                    }),
                    trackingScreen: e,
                    trackingTarget: "schools"
                }, (0, ae._i)(14816)))));
            var pa = a(480);
            const ma = () => s.createElement("section", {
                className: xt["content-section"]
            }, s.createElement("div", {
                className: xt["content-wrap-row-left"]
            }, s.createElement("img", {
                className: xt["super-duo-img"],
                src: pa
            }), s.createElement("div", {
                className: xt["content-text"]
            }, s.createElement("h2", {
                className: xt.h2
            }, (0, ae._i)(38674)), s.createElement("div", {
                className: xt["content-description"]
            }, (0, ae._i)(38675)), s.createElement(re.ZP, { ...(0, de._q)(ge.V.LearnWithPlus),
                className: xt["blue-link"],
                href: O.wl
            }, (0, ae._i)(38676)))));
            var ha = a(83936),
                va = a(43628);
            const _a = ({
                course: e,
                courseHatching: t,
                dispatch: a,
                isDesktop: n,
                showTopbarButtons: r,
                topElementRef: i
            }) => {
                const {
                    fromLanguageId: o,
                    learningLanguageId: l,
                    learningLanguageName: c
                } = e, d = (0, m.Fx)(ha.WM), u = s.createElement(Vt, null, s.createElement(ua, {
                    dispatch: a,
                    learningLanguageName: c,
                    trackingScreen: "course_splash"
                }), s.createElement(da, {
                    learningLanguageName: c
                }), s.createElement(ma, null), s.createElement(la, {
                    headingResource: 1150,
                    trackingScreen: "course_splash",
                    via: "course_splash"
                }), (0, H.J9)() ? null : s.createElement(ga, {
                    trackingScreen: "course_splash"
                }));
                return s.createElement(s.Fragment, null, s.createElement(Lt.Z, {
                    content: (0, ae.H8)(6807, {
                        learning_language_name: c
                    })
                }), s.createElement(Rt.ql, null, s.createElement("title", null, `${(0,ae.H8)(3053,{learning_language_name:c})} - ${(0,ae.H8)(23227)}`), s.createElement("body", {
                    className: xt.body
                })), s.createElement(At.Z, {
                    dispatch: a,
                    isSplashPage: !0,
                    showButtons: r,
                    trackingScreen: "course_splash",
                    via: "course_splash"
                }, s.createElement(ra, {
                    className: le()(r ? va.Z["hidden-on-mobile"] : va.Z["hidden-everywhere"]),
                    dispatch: a,
                    fromLanguageId: o,
                    isRegistering: !1,
                    label: 18550,
                    learningLanguageId: l
                })), s.createElement(Gt, {
                    clientExperiments: d,
                    course: e,
                    courseHatching: t,
                    dispatch: a,
                    isDesktop: n,
                    topElementRef: i
                }), u, s.createElement(na, null))
            };
            var fa = a(26886);
            const Sa = () => {
                const e = (0, m.tX)(),
                    t = (0, m.Fx)(k.Mb),
                    a = (0, m.Fx)(k.$4),
                    r = (0, N.k6)(),
                    i = (0, N.TH)(),
                    o = (0, n.UO)(),
                    [l, c] = s.useState(),
                    [d, u] = (0, kt.Z)();
                if (s.useEffect((() => {
                        let e = !0;
                        (0, yt.Bf)(i, "course_splash");
                        const {
                            fromLanguageId: t = Ut.h9,
                            learningLanguageId: a
                        } = o;
                        (async () => {
                            const s = await U._s.courseShow(a, t);
                            e && (c(s), (0, h.track)("course splash", {
                                course_id: `${s.learningLanguageId}<-${s.fromLanguageId}`,
                                logged_in: !1
                            }))
                        })();
                        const s = (0, fa.og)(a, t);
                        return i.pathname !== s && r.push({
                            pathname: s,
                            search: i.search
                        }), () => {
                            e = !1
                        }
                    }), []), !l) return null;
                const {
                    fromLanguageId: g,
                    learningLanguageId: p,
                    phase: v
                } = l, _ = v === Ut.AP.Active && !(0, fa.s7)(t, g, !1, p, v);
                return s.createElement(s.Fragment, null, s.createElement(_a, {
                    course: l,
                    courseHatching: _,
                    dispatch: e,
                    isDesktop: a,
                    showTopbarButtons: !d,
                    topElementRef: u
                }), s.createElement(Ct, {
                    crumbs: [{
                        label: (0, ae.H8)(23227),
                        url: new URL(`${window.location.protocol}//${window.location.host}`)
                    }, {
                        label: (0, ae.H8)(20631),
                        url: new URL(`${window.location.protocol}//${window.location.host}/courses`)
                    }]
                }))
            };
            var ya = a(22498),
                Ea = a(75671);
            const ba = "_3yPGy _1PXqH _39lPs",
                Ia = () => {
                    const [e, t] = s.useState(!0);
                    return s.useEffect((() => {
                        e && ((0, h.track)("android_banner_load", {}), (0, h.track)("web_to_app_store_load", {
                            via: "Android_banner"
                        }))
                    }), [e]), e ? s.createElement("div", {
                        className: "_3CwWq"
                    }, s.createElement("div", {
                        className: "_2dgxN _23rWI _1QHN7 _1Ai11"
                    }), s.createElement("div", {
                        className: "zKVv4"
                    }, s.createElement("div", null, s.createElement("div", {
                        className: "_2Ln8R"
                    }, (0, ae._i)(20861)), s.createElement("span", {
                        className: "_2PsOB"
                    }, "4.5"), s.createElement("span", {
                        className: ba
                    }), s.createElement("span", {
                        className: ba
                    }), s.createElement("span", {
                        className: ba
                    }), s.createElement("span", {
                        className: ba
                    }), s.createElement("span", {
                        className: "_2L5q4 _1PXqH _39lPs"
                    }, s.createElement("span", {
                        className: "_3dC8A _3yPGy _1PXqH _39lPs",
                        style: {
                            width: "50%"
                        }
                    })), s.createElement("span", {
                        className: "_2j2iy"
                    }, "15,300,000+")), s.createElement("div", {
                        className: "_3mp0T"
                    }, s.createElement("span", {
                        className: "AHzpP _39lPs"
                    }), s.createElement(re.ZP, {
                        className: "_4FsVb",
                        href: (0, Jt.A)({
                            isAndroidBanner: !0,
                            utmCampaign: "splash_mobile_banner",
                            utmContent: "mobile_banner"
                        }),
                        onClick: () => {
                            (0, h.track)("click", {
                                which: "mobile banner android"
                            }), (0, h.track)("android_banner_tap", {
                                target: "install"
                            }), (0, h.track)("web_to_app_store_tap", {
                                target: "google_or_China",
                                via: "Android_banner"
                            })
                        },
                        target: "_blank"
                    }, (0, ae._i)(4441))), s.createElement("button", {
                        className: "_38iBE bafGS _2LoNU VzbUl _1saKQ _1AgKJ _39lPs",
                        onClick: () => {
                            (0, h.track)("android_banner_tap", {
                                target: "dismiss"
                            }), t(!1)
                        }
                    }))) : null
                };
            var wa = a(42158);
            var ka = a(53229);
            const Ta = () => {
                    const e = (0, ka.vl)().via;
                    return s.useEffect((() => {
                        (0, h.track)("china_apk_banner_load", {})
                    }), []), s.createElement("div", {
                        className: "_3yEI4"
                    }, s.createElement("img", {
                        className: "_2iTYM",
                        src: wa
                    }), s.createElement("div", null, s.createElement("div", {
                        className: "_21pJL"
                    }, "下载多邻国 APP 开始免费学习")), s.createElement("div", {
                        className: "_6GPYQ",
                        onClick: () => {
                            oa.Z.android ? (0, Jt.ci)(`splash-banner-${e}`) : (0, O.Zs)(`${Jt.JN}?adjust_label=${e}`, !0)
                        }
                    }, "去下载"))
                },
                Ca = ({
                    logo: e,
                    name: t,
                    sameAs: a,
                    url: n
                }) => {
                    const r = {
                        "@type": "Organization",
                        logo: e,
                        name: t,
                        sameAs: a,
                        url: n
                    };
                    return s.createElement(Tt, {
                        data: r
                    })
                },
                Ra = a.p + "images/f2a2e608c854822ad2563a09595e7827.png",
                La = ({
                    sameAs: e
                }) => s.createElement(Ca, {
                    logo: Ra,
                    name: "Duolingo",
                    sameAs: e,
                    url: "https://www.duolingo.com/"
                });
            var Aa = a(83544);
            var Pa = a(18728),
                Da = a(76578);
            const Na = s.createContext(void 0),
                Oa = s.createContext((() => {})),
                xa = ({
                    children: e
                }) => {
                    const [t, a] = s.useState({}), n = s.useCallback(((e, t) => a((a => ({ ...a,
                        [e]: t
                    })))), []), r = (() => {
                        let e, a;
                        for (const [s, n] of Object.entries(t))(void 0 === e || n <= e) && (e = n, a = s);
                        return a
                    })();
                    return s.createElement(Oa.Provider, {
                        value: n
                    }, s.createElement(Na.Provider, {
                        value: r
                    }, e))
                },
                Fa = a.p + "images/splash/lottie/23ab11cb1e1a9aff54facdf57833373d.svg",
                Ma = a.p + "images/splash/lottie/08ec8d0260c55c054e1b97bcbc96ea0f.svg",
                Ua = a.p + "images/splash/lottie/833a22b2834050d139f266a29899bb00.svg",
                Ha = a.p + "images/splash/lottie/9d3c2c99dd19996319a372f79b2ed3c1.svg",
                Ga = a.p + "lottie/splash/aea5aff1143a9410b81448245ad7c839.json",
                Va = a.p + "lottie/splash/71b01cd301b53ec9879f2d06eb85f5db.json",
                Ba = a.p + "lottie/splash/82f26795696242931a7b905b4918eb1e.json",
                za = a.p + "lottie/splash/e97b1cde32a58c629a0193eea36ddaab.json",
                Za = "_127Ia _1Ai11";
            var Wa = a(29134);
            const $a = () => {
                    const e = s.useRef(null),
                        [t, a] = s.useState(!1),
                        n = s.useCallback((() => {
                            var s;
                            t || (null === (s = e.current) || void 0 === s || s.style.setProperty("visibility", "hidden"), a(!0))
                        }), []);
                    return {
                        hidePlaceholder: t,
                        onEnterFrame: n,
                        ref: e
                    }
                },
                ja = e => {
                    const [t, a] = s.useState(e);
                    return e && !t && a(!0), t
                },
                qa = (e, {
                    onCleanup: t,
                    onInvisible: a
                } = {}) => {
                    const n = s.useRef(),
                        r = s.useRef(null),
                        [i, o] = (0, kt.Z)();
                    return s.useLayoutEffect((() => {
                        n.current = e
                    })), s.useLayoutEffect((() => {
                        if (!i) return;
                        const e = () => {
                            var e, t;
                            const a = null === (e = r.current) || void 0 === e ? void 0 : e.getBoundingClientRect();
                            if (a) {
                                const e = new DOMRect(0, 0, window.innerWidth, window.innerHeight);
                                null === (t = n.current) || void 0 === t || t.call(n, {
                                    rootBounds: e,
                                    targetRect: a
                                })
                            }
                        };
                        return e(), D.O.addEventListener("scroll", e), () => {
                            D.O.removeEventListener("scroll", e), null == t || t()
                        }
                    }), [i]), s.useLayoutEffect((() => {
                        !1 === i && (null == a || a())
                    }), [i]), s.useCallback((e => {
                        r.current = e, o(e)
                    }), [])
                },
                Qa = (e, t = !0) => {
                    const a = s.useContext(Na),
                        n = s.useContext(Oa),
                        [r, i] = (0, kt.Z)(),
                        o = qa((t => {
                            const a = t.rootBounds.height / 2,
                                s = t.targetRect.top < a && t.targetRect.bottom > a ? 0 : Math.min(Math.abs(t.targetRect.top - a), Math.abs(t.targetRect.bottom - a));
                            n(e, s)
                        })),
                        l = s.useCallback((e => {
                            o(e), i(e)
                        }), []),
                        c = a === e && !0 === r && t;
                    return {
                        isPlaying: c,
                        ref: l,
                        shouldRender: ja(c)
                    }
                },
                Ka = ({
                    animation: e,
                    cta: t,
                    flip: a,
                    loopSegment: n,
                    placeholder: r,
                    text: i,
                    title: o
                }) => {
                    const l = (0, z.Z)(),
                        {
                            hidePlaceholder: c,
                            onEnterFrame: d,
                            ref: u
                        } = $a(),
                        g = (0, Wa.Z)(void 0, (() => l ? Promise.resolve(void 0) : U.bG.getLottieAnimation(e)), [e, l]),
                        {
                            isPlaying: p,
                            ref: m,
                            shouldRender: h
                        } = Qa(e);
                    return s.createElement("section", {
                        className: a ? "_36L7f _3k9io" : "_3k9io"
                    }, s.createElement("div", {
                        className: "_2Yq-n"
                    }, s.createElement("h2", {
                        className: "_3X-2C"
                    }, o), s.createElement("p", {
                        className: "KsAV5"
                    }, i), t), s.createElement("div", {
                        className: "_1RIBh",
                        ref: m
                    }, s.createElement("img", {
                        alt: "",
                        className: Za,
                        ref: u,
                        src: r,
                        style: {
                            visibility: c ? "hidden" : "visible"
                        }
                    }), g && h ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: g,
                        className: Za,
                        isPlaying: p,
                        loop: !0,
                        loopSegment: n,
                        onEnterFrame: d,
                        renderSubframes: !1
                    })) : null))
                },
                Ya = () => s.createElement("section", {
                    className: "uU0-M"
                }, s.createElement(Ka, {
                    animation: Ga,
                    loopSegment: [291, 450],
                    placeholder: Fa,
                    text: (0, ae._i)(43079, {
                        url: "/efficacy"
                    }, {
                        preprocess: e => (0, ae.to)(e, "_1F7oE")
                    }),
                    title: (0, ae._i)(43080)
                }), s.createElement(Ka, {
                    animation: Va,
                    flip: !0,
                    loopSegment: [190, 532],
                    placeholder: Ma,
                    text: (0, ae._i)(43082),
                    title: (0, ae._i)(43081)
                }), s.createElement(Ka, {
                    animation: Ba,
                    loopSegment: [200, 300],
                    placeholder: Ua,
                    text: (0, ae._i)(43087),
                    title: (0, ae._i)(43086)
                }), s.createElement(Ka, {
                    animation: za,
                    flip: !0,
                    loopSegment: [188, 376],
                    placeholder: Ha,
                    text: (0, ae._i)(43085),
                    title: (0, ae._i)(43084)
                }));
            var Ja = a(95931);
            const Xa = ({
                    children: e,
                    className: t
                }) => s.createElement("span", {
                    className: le()("_2NRlK", t)
                }, e),
                es = a.p + "images/splash/lottie/41a326f8a1a43ee68ef5ea35988fd87b.svg",
                ts = a.p + "images/splash/lottie/9f63957bf97d10730813cbb715a0baa0.svg",
                as = a.p + "images/splash/lottie/268877aef1bcca8a53f24b746483346c.svg",
                ss = a.p + "images/splash/lottie/1dacb3e2a288440001755c6a30e5ec60.svg",
                ns = a.p + "lottie/splash/44a604a8b57fe256f299aee33fa976a1.json",
                rs = a.p + "lottie/splash/d69c05e332d40f318009fefd85bfcd43.json",
                is = a.p + "lottie/splash/76f61a943cfc8aa61dd79aea33db7a62.json",
                os = a.p + "lottie/splash/6ffec1cd2fa38b8106598e250d1b990b.json",
                ls = ({
                    children: e,
                    ...t
                }) => s.createElement(re.ZP, {
                    className: le()((0, Ja.yO)({
                        variant: "stroke"
                    }), "_1L3MW _2Ccfj"),
                    ...t
                }, s.createElement(Xa, null, e)),
                cs = () => {
                    const e = Kt();
                    return s.createElement("section", {
                        className: "_3dG3I"
                    }, s.createElement(Ka, {
                        animation: ns,
                        cta: s.createElement(ls, {
                            href: `https://englishtest.duolingo.com/${null!=e?e:""}`,
                            onClick: () => (0, h.track)("click", {
                                which: "web splash det"
                            }),
                            trackingScreen: "splash",
                            trackingTarget: "det"
                        }, (0, ae._i)(43090)),
                        loopSegment: [0, 115],
                        placeholder: es,
                        text: (0, ae._i)(43091),
                        title: (0, ae._i)(43092)
                    }), s.createElement(Ka, {
                        animation: rs,
                        cta: s.createElement(ls, {
                            href: "https://schools.duolingo.com",
                            onClick: () => (0, h.track)("click", {
                                which: "web splash schools"
                            }),
                            trackingScreen: "splash",
                            trackingTarget: "schools"
                        }, (0, ae._i)(43097)),
                        flip: !0,
                        loopSegment: [0, 308],
                        placeholder: ts,
                        text: (0, ae._i)(43098),
                        title: (0, ae._i)(43099)
                    }), s.createElement(Ka, {
                        animation: is,
                        cta: s.createElement(ls, {
                            href: "/abc",
                            onClick: () => (0, h.track)("click", {
                                which: "web splash abc"
                            }),
                            trackingScreen: "splash",
                            trackingTarget: "abc"
                        }, (0, ae._i)(43093)),
                        loopSegment: [240, 480],
                        placeholder: as,
                        text: (0, ae._i)(43094),
                        title: (0, ae._i)(43095)
                    }), s.createElement(Ka, {
                        animation: os,
                        cta: s.createElement(ls, {
                            href: "https://blog.duolingo.com/duolingo-launches-math-app",
                            onClick: () => (0, h.track)("click", {
                                which: "web splash math"
                            }),
                            trackingScreen: "splash",
                            trackingTarget: "math"
                        }, (0, ae._i)(43101)),
                        flip: !0,
                        loopSegment: [0, 360],
                        placeholder: ss,
                        text: (0, ae._i)(43102),
                        title: (0, ae._i)(43103)
                    }))
                },
                ds = a.p + "images/splash/lottie/890eb76de9a395b182c1c28322721405.svg",
                us = a.p + "lottie/splash/9b9c41cb3a201cad24a2f18f90f4d564.json",
                gs = a.p + "lottie/splash/98fa4e2fa26d365936333da24aba7e36.json",
                ps = "_3Wy9F _3u1lX",
                ms = "_3zmWG",
                hs = "_1JR3d",
                vs = ({
                    course: e,
                    isHoveringGetStarted: t,
                    isRegistering: a,
                    onRegisterClick: n
                }) => {
                    const r = s.useRef(null),
                        [i, o] = s.useState(0),
                        [l, c] = s.useState(!1),
                        [d, u] = s.useState(!1),
                        g = s.useContext(Na),
                        p = s.useContext(Oa),
                        m = (0, z.Z)(),
                        h = ja(g === gs),
                        {
                            hidePlaceholder: v,
                            onEnterFrame: _,
                            ref: f
                        } = $a(),
                        S = (0, Wa.Z)(void 0, (() => U.bG.getLottieAnimation(gs)), []),
                        y = (0, Wa.Z)(void 0, (() => m ? Promise.resolve(void 0) : U.bG.getLottieAnimation(us)), [m]),
                        E = qa((e => {
                            const t = (0, Da.bA)(e.targetRect.top, e.rootBounds.bottom, e.rootBounds.bottom - e.targetRect.height, 0, 45, !0);
                            b.isAnimating() ? b.update(t) : b.start(i, t), p(gs, e.targetRect.top > e.rootBounds.bottom ? 1 / 0 : -1)
                        }), {
                            onCleanup: () => p(gs, 1 / 0)
                        }),
                        b = (0, Ea.Z)((e => o(e.done ? e.target : e.current)), {
                            clamp: !0
                        });
                    return s.useEffect((() => {
                        if ((l || t) && !m) {
                            const e = setTimeout((() => u(!0)), 100);
                            return () => {
                                clearTimeout(e), u(!1)
                            }
                        }
                    }), [l, t, m]), s.createElement("section", {
                        className: "F71XF"
                    }, s.createElement("div", {
                        className: ms
                    }), s.createElement("div", {
                        className: "_1fSpL"
                    }, s.createElement("div", {
                        className: "_3qFL2"
                    }, s.createElement("h1", {
                        className: "_1FmL9"
                    }, e ? (0, ae._i)(52800, {
                        language_name: e.learningLanguageName
                    }) : (0, ae._i)(43100)), e ? s.createElement(ee.Z, {
                        className: ps,
                        onClick: n,
                        onMouseEnter: () => c(!0),
                        onMouseLeave: () => c(!1),
                        ref: r,
                        submitting: a,
                        variant: "solid"
                    }, s.createElement(Xa, null, (0, ae._i)(18550))) : s.createElement(re.ZP, {
                        className: le()((0, Ja.yO)({
                            variant: "solid"
                        }), ps),
                        href: "/register",
                        onClick: n,
                        onMouseEnter: () => c(!0),
                        onMouseLeave: () => c(!1),
                        ref: r
                    }, s.createElement(Xa, null, (0, ae._i)(18550)))), s.createElement("div", {
                        className: "dPoY0"
                    }, s.createElement("span", {
                        className: hs,
                        ref: f,
                        style: {
                            visibility: v ? "hidden" : "visible"
                        }
                    }, s.createElement("img", {
                        alt: "",
                        className: "_19iXk",
                        src: ds
                    })), y && h ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: y,
                        className: hs,
                        isPlaying: g === gs,
                        loop: !0,
                        onEnterFrame: _,
                        renderSubframes: !1
                    })) : null, S ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: S,
                        className: hs,
                        isPlaying: !0,
                        loop: d,
                        mainSegment: d ? [46, 62] : [i, i + 1],
                        renderSubframes: !1
                    })) : null, s.createElement("div", {
                        className: "_1IFT9"
                    }), s.createElement("div", {
                        className: "dVgS_",
                        ref: E
                    }))), s.createElement("div", {
                        className: ms
                    }))
                },
                _s = () => s.createElement("footer", {
                    className: "_1nNuk"
                }, s.createElement(sa, {
                    isRedesign: !0
                }), s.createElement("hr", {
                    className: "c-sxz"
                }), s.createElement($t, {
                    isRedesign: !0
                }), (0, H.J9)() ? s.createElement(Bt.Z, {
                    inSplash: !0
                }) : null);
            var fs = a(40635),
                Ss = a(69755),
                ys = a(9343);
            const Es = a.p + "images/china/apkDownload/5ef61d69c243695da18ce19c73f94070.svg",
                bs = a.p + "images/china/21b33a54c8c2740c65ee912c85192032.png",
                Is = a.p + "images/china/9848d6e63324acbd351ada20dc172d48.png",
                ws = a.p + "images/china/af0b5b34d654273593e11499dc7bc3fa.png",
                ks = a.p + "images/splash/f92d5f2f7d56636846861c458c0d0b6c.svg",
                Ts = a.p + "images/splash/lottie/a774fe14d71e450d59a9bc4ed5d210c9.png",
                Cs = a.p + "images/splash/lottie/ded26f174e26ad19d0a35cad7747c28c.png",
                Rs = a.p + "images/splash/lottie/a02afa2792b8778d69101554fa0fbadd.png",
                Ls = a.p + "images/splash/lottie/56afa7d9803ab5e57d99b4e4e0cd8932.png",
                As = a.p + "lottie/splash/50bda50231c0bce1584e982cebfe8f33.json",
                Ps = "_2skPy _3u1lX",
                Ds = "_1Bvko _2mBtL _1Ai11",
                Ns = "768px",
                Os = s.forwardRef((({
                    className: e,
                    style: t
                }, a) => s.createElement("svg", {
                    className: e,
                    ref: a,
                    style: t,
                    viewBox: "0 0 1080 1080",
                    xmlns: "http://www.w3.org/2000/svg",
                    xmlnsXlink: "http://www.w3.org/1999/xlink"
                }, s.createElement("defs", null, s.createElement("mask", {
                    id: "splash/HeroImage_cn",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_a"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_cl",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_b)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_c"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_ck",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_d"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_cj",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_e"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_ch",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_f)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_g"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_cf",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_h"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_cd",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_i)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_j"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_cc",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_k"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_cb",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_l"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bZ",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_m)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_n"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_bX",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_o"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bV",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_p)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_q"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_bU",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_r"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bT",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_s"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bR",
                    "mask-type": "alpha"
                }, s.createElement("g", {
                    filter: "url(#splash/HeroImage_t)"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_u"
                }))), s.createElement("mask", {
                    id: "splash/HeroImage_bH",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_v"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bG",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_w"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bE",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_x"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bD",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_y"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bB",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_z"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bA",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_A"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_by",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_B"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bx",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_C"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bu",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_D"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bv",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_E"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_br",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_F"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bs",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_G"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bo",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_H"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bp",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_I"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bl",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_J"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bm",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_K"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bh",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_L"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_bd",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_M"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aZ",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_N"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aX",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_O"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aW",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_P"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aV",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_Q"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aT",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_R"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aS",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_S"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aR",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_T"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aP",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_U"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aO",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_V"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aN",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_W"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aL",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_X"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aK",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_Y"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aJ",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_Z"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aG",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_aa"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aF",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ab"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aE",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ac"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aC",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ad"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_az",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ae"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_ay",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_af"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_ax",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ag"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_av",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ah"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_as",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ai"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_ar",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_aj"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_aq",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_ak"
                })), s.createElement("mask", {
                    id: "splash/HeroImage_ao",
                    "mask-type": "alpha"
                }, s.createElement("use", {
                    xlinkHref: "#splash/HeroImage_al"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_am"
                }, s.createElement("path", {
                    d: "M0 0h1080v1080H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_cg"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_cm"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_ci"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bY"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_ce"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_ca"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bQ"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bW"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bS"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bP"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bO"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bN"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bM"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bL"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bK"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bJ"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bI"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bF"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bC"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bz"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bw"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bt"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bq"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bn"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bk"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bg"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bi"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_bc"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_be"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aY"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_ba"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aU"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aQ"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aM"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aI"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aB"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aH"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aD"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_au"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aA"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_aw"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_an"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_at"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("clipPath", {
                    id: "splash/HeroImage_ap"
                }, s.createElement("path", {
                    d: "M0 0h1920v1079H0z"
                })), s.createElement("path", {
                    fill: "#FFF",
                    d: "M417.282-239.018c9.82 103.73 232.12-521.78 246.127-392.97 2.29 21.056-1.03 35.089-25.598 34.308C579.475-599.534-474.306-352.811-542.757-356c-19.992-.931-32.638-5.554-41.553-20.711-57.369-97.54 273.023 350.483 372.968 190.244 6.619-10.613 112.579-70.911 115.818-79.402 5.292-13.87 22.173-23.063 48.437-23.234 104.499-.682 314.125-10.343 409.022-13.477 30.279-1 52.529 33.796 55.347 63.562z",
                    transform: "matrix(-.5494 -.086 .086 -.5494 1622.22 780.829)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_q"
                }), s.createElement("path", {
                    fill: "#DB8D74",
                    d: "M431.079 338.492c3.758 36.37-5.144 49.227-17.954 80.525-12.513 30.467-2.174 59.613 23.296 67.222 31.828 9.736 59.328-3.404 73.764-46.726 13.09-38.962 18.125-69.661 11.792-114.595-11.209-78.484-96.913-44.208-90.898 13.574z",
                    transform: "rotate(22.5 -131.847 3549.945)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_o"
                }), s.createElement("path", {
                    fill: "#FFCBA3",
                    d: "M214.911-406.123c-15.719-8.703-43.885-4.032-56.858 18.506-12.413 21.56-5.358 48.218 16.487 61.532 3.993 2.525 9.48 5.777 14.104 8.034 10.375-14.704 50.055-68.302 41.022-79.374-3.887-2.632-14.755-8.698-14.755-8.698z",
                    transform: "rotate(11.503 -2472.413 5637.844) scale(1.08627)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_B"
                }), s.createElement("path", {
                    fill: "#B23232",
                    d: "m193.505-387.295.753 1.713c1.624 3.285.26 7.256-3.048 8.869-3.307 1.613-7.306.258-8.93-3.027l-.753-1.714c-1.624-3.285-.259-7.255 3.048-8.869 3.308-1.613 7.305-.257 8.93 3.028z",
                    transform: "rotate(11.503 -2556.067 5682.86) scale(1.08627)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_C"
                }), s.createElement("path", {
                    fill: "#50C800",
                    d: "M-33.852-109.247H99.656c34.191 0 59.6 37.853 53.498 65.49-7.182 32.531-25.38 89.14-34.27 121.621-9.079 33.172-29.752 47.586-59.572 47.586-29.82 0-103.203-.074-132.006-.074-48.143 0-64.347-41.105-54.652-78.558 8.428-32.56 21.554-73.657 30.392-103.537 8.412-28.439 33.749-52.528 63.102-52.528z",
                    transform: "rotate(-1 33645.183 -81234.865) scale(1.08)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_J"
                }), s.createElement("path", {
                    fill: "#FFC7B8",
                    d: "M663.878-74.736c-15.712-9.442-22.917-13.352-38.271-16.411-38.11-7.593-88.912 7.908-135.03 34.11-14.809 8.414-17.146 16.657-16.116 28.315 1.835 20.775 2.533 25.712 4.202 47.463.713 9.292 10.388 17.692 21.305 27.403 17.895 15.918 49.393 36.287 71.847 49.786 14.447 8.685 24.747-7.705 35.576-16.302 11.976-9.507 23.382-23.529 44.664-28.959 6.523-1.664 13.248-.917 18.267-5.161 21.003-17.763 36.226-38.226 45.549-58.626 5.74-12.561.103-23.389-10.439-31.393-21.023-15.962-32.09-24.538-41.554-30.225z",
                    transform: "rotate(-44.75 1759.676 -945.154) scale(.77853)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_N"
                }), s.createElement("path", {
                    fill: "#CC348D",
                    d: "M745.232-224.137c-.304-28.44 22.505-51.741 50.945-52.045 28.44-.304 51.741 22.506 52.045 50.946.304 28.44-22.505 51.74-50.945 52.044-28.44.304-51.741-22.505-52.045-50.945z",
                    transform: "rotate(-155 1413.888 80.768) scale(1.2)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_X"
                }), s.createElement("path", {
                    fill: "#0084C2",
                    d: "M732.862-124.382c4.759-25.473 29.266-42.264 54.739-37.505s42.265 29.265 37.506 54.738-29.266 42.265-54.739 37.506-42.265-29.266-37.506-54.739z",
                    transform: "matrix(1.15 0 0 1.15 829.652 633.365)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_Y"
                }), s.createElement("path", {
                    fill: "#FFF",
                    d: "M412.599 78.212c-6.132 3.04-7.257 9.111-7.45 10.036l-2.078 9.955c-.804 3.852 1.678 7.626 5.543 8.43l7.348 1.528c7.924 1.648 15.683-3.417 17.331-11.313.495-2.371 3.308-16.424 3.308-16.424s-16.193-6.083-24.002-2.212zm-14.702-3.734c3.902 5.915 3.593 9.268 3.279 11.761-.411 3.262-1.961 10.655-1.961 10.655-.863 4.124-4.939 6.767-9.102 5.904l-7.271-1.508c-8.179-1.696-13.434-9.638-11.738-17.74.661-3.158 3.897-16.189 3.897-16.189s19.186 1.492 22.896 7.117z",
                    transform: "matrix(0 0 -.03402 .6491 1636.956 664.083)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_aj"
                }), s.createElement("path", {
                    fill: "#FFF",
                    d: "M412.599 78.212c-6.132 3.04-7.257 9.111-7.45 10.036l-2.078 9.955c-.804 3.852 1.678 7.626 5.543 8.43l7.348 1.528c7.924 1.648 15.683-3.417 17.331-11.313.495-2.371 3.308-16.424 3.308-16.424s-16.193-6.083-24.002-2.212zm-14.702-3.734c3.902 5.915 3.593 9.268 3.279 11.761-.411 3.262-1.961 10.655-1.961 10.655-.863 4.124-4.939 6.767-9.102 5.904l-7.271-1.508c-8.179-1.696-13.434-9.638-11.738-17.74.661-3.158 3.897-16.189 3.897-16.189s19.186 1.492 22.896 7.117z",
                    transform: "matrix(0 0 -.03402 .6491 1636.956 664.083)",
                    style: {
                        display: "block"
                    },
                    id: "splash/HeroImage_ak"
                }), s.createElement("filter", {
                    id: "splash/HeroImage_b",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("filter", {
                    id: "splash/HeroImage_f",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("filter", {
                    id: "splash/HeroImage_i",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("filter", {
                    id: "splash/HeroImage_m",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("filter", {
                    id: "splash/HeroImage_p",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("filter", {
                    id: "splash/HeroImage_t",
                    filterUnits: "objectBoundingBox",
                    x: "0%",
                    y: "0%",
                    width: "100%",
                    height: "100%"
                }, s.createElement("feComponentTransfer", { in: "SourceGraphic"
                }, s.createElement("feFuncA", {
                    type: "table",
                    tableValues: "1.0 0.0"
                }))), s.createElement("linearGradient", {
                    id: "splash/HeroImage_bj",
                    spreadMethod: "pad",
                    gradientUnits: "userSpaceOnUse"
                }, s.createElement("stop", null), s.createElement("stop", null), s.createElement("stop", null)), s.createElement("linearGradient", {
                    id: "splash/HeroImage_bf",
                    spreadMethod: "pad",
                    gradientUnits: "userSpaceOnUse"
                }, s.createElement("stop", null), s.createElement("stop", null), s.createElement("stop", null)), s.createElement("linearGradient", {
                    id: "splash/HeroImage_bb",
                    spreadMethod: "pad",
                    gradientUnits: "userSpaceOnUse",
                    x1: "542.181",
                    y1: "38.77",
                    x2: "594.279",
                    y2: "167.238"
                }, s.createElement("stop", {
                    offset: "0%",
                    stopColor: "#FFA75F"
                }), s.createElement("stop", {
                    offset: "50%",
                    stopColor: "#FFB78B"
                }), s.createElement("stop", {
                    offset: "100%",
                    stopColor: "#FFC7B8"
                }))), s.createElement("g", {
                    clipPath: "url(#splash/HeroImage_am)"
                }, s.createElement("g", {
                    clipPath: "url(#splash/HeroImage_an)",
                    transform: "matrix(-1 0 0 1 1916 -23.5)",
                    style: {
                        display: "block"
                    }
                }, s.createElement("g", {
                    style: {
                        display: "block"
                    }
                }, s.createElement("path", {
                    fill: "#58CC02",
                    d: "M1681.457 320.208c-12.538 54.456-106.878 481.498-125.468 564.221-1.022 4.548-2.148 9.037-3.462 13.395-3.404 11.291-8.068 21.697-15.445 29.926-9.958 11.108-24.858 18.25-48.274 18.25-36.776 0-292.497-6.849-327.725-6.849-12.383 0-22.016-6.309-27.946-16.038-.378-.621-21.615-38.648-21.921-39.316-4.748-10.373-6.57-22.86-2.947-37.253 24.84-98.693 119.597-486.725 137.44-565.604 1.885-8.335 4.816-16.412 8.7-23.828 4.404-8.409 10.033-15.969 16.751-22.095 10.802-9.849 24.42-15.99 40.293-15.99h287.02c14.334 0 25.578 5.972 33.13 15.054.879 1.057 41.935 44.299 42.713 45.436 7.746 11.319 10.439 26.367 7.141 40.691z"
                }), s.createElement("path", {
                    stroke: "#58CC02",
                    strokeWidth: 13,
                    d: "M1681.457 320.208c-12.538 54.456-106.878 481.498-125.468 564.221-1.022 4.548-2.148 9.037-3.462 13.395-3.404 11.291-8.068 21.697-15.445 29.926-9.958 11.108-24.858 18.25-48.274 18.25-36.776 0-292.497-6.849-327.725-6.849-12.383 0-22.016-6.309-27.946-16.038-.378-.621-21.615-38.648-21.921-39.316-4.748-10.373-6.57-22.86-2.947-37.253 24.84-98.693 119.597-486.725 137.44-565.604 1.885-8.335 4.816-16.412 8.7-23.828 4.404-8.409 10.033-15.969 16.751-22.095 10.802-9.849 24.42-15.99 40.293-15.99h287.02c14.334 0 25.578 5.972 33.13 15.054.879 1.057 41.935 44.299 42.713 45.436 7.746 11.319 10.439 26.367 7.141 40.691z",
                    fill: "none"
                }), s.createElement("path", {
                    fill: "#FFF",
                    d: "M1641.23 278.067c-12.538 54.456-110.709 481.142-129.299 563.865-7.243 32.232-19.721 61.572-67.181 61.572-36.776 0-268.552.149-303.78.149-26.121 0-40.009-28.074-32.701-57.109 24.84-98.693 119.597-486.725 137.44-565.604 7.46-32.977 31.29-61.913 65.744-61.913h287.02c32.614 0 49.232 30.916 42.757 59.04z"
                }), s.createElement("path", {
                    stroke: "#9DEEC7",
                    strokeWidth: 13,
                    d: "M1641.23 278.067c-12.538 54.456-110.709 481.142-129.299 563.865-7.243 32.232-19.721 61.572-67.181 61.572-36.776 0-268.552.149-303.78.149-26.121 0-40.009-28.074-32.701-57.109 24.84-98.693 119.597-486.725 137.44-565.604 7.46-32.977 31.29-61.913 65.744-61.913h287.02c32.614 0 49.232 30.916 42.757 59.04z",
                    fill: "none"
                }))), s.createElement("g", {
                    clipPath: "url(#splash/HeroImage_bk)",
                    transform: "matrix(-1 0 0 1 1976 -43.5)",
                    style: {
                        display: "block"
                    }
                }, s.createElement("g", {
                    mask: "url(#splash/HeroImage_bl)",
                    style: {
                        display: "block"
                    }
                }, s.createElement("path", {
                    fill: "#50C800",
                    d: "m1384.254 457.488 144.166-2.516c36.921-.645 65.072 39.751 59.004 69.71-7.142 35.263-25.726 96.735-34.714 131.976-9.178 35.992-31.23 51.946-63.43 52.508-32.201.562-111.444 1.865-142.547 2.408-51.986.908-70.259-43.173-60.496-83.8 8.487-35.318 21.887-79.943 30.867-112.375 8.548-30.868 35.453-57.358 67.15-57.911z"
                }), s.createElement("path", {
                    fill: "#8EE000",
                    d: "M1561.288 610.003c5.14-18.424 9.149-32.246 12.886-49.66 3.568-16.632-8.951-34.893-14.28-40.087 2.625-9.372 5.548-28.175-2.12-30.679-7.667-2.503-19.31 12.632-19.36 12.608 6.479-26.997-4.97-29.835-14.024-22.352-11.258 9.304-31.789 30.28-50.203 45.6-18.414 15.319-44.513 9.774-56.255-3.465-12.569-14.171-21.69-33.818-30.832-44.844-9.141-11.025-22.11 12.33-22.073 26.459-.074.026-2.176-2.997-6.706-8.786-6.639-8.486-17.043-2.969-20.442 18.304-22.656 11.602-30.359 28.738-33.886 39.968 0 0-9.316 26.5-10.08 52.761-.697 23.909 23.058 47.663 49.675 47.198 25.124-.438 51.666-11.467 60.284-31.583 8.62-.2 34.442-.72 39.136-.802 2.71 17.3 23.039 35.96 53.251 35.433 42.027-.733 60.884-31.21 65.029-46.073z"
                }), s.createElement("path", {
                    fill: "#FFF",
                    d: "M1372.718 525.2c25.155-.44 36.313 18.16 32.401 40.82-1.734 10.045-3.06 16.729-5.032 24.966-5.905 24.68-27.477 41.984-50.74 42.39-22.946.4-38.26-18.48-33.444-40.92 1.942-9.048 4.616-20.095 6.057-25.906 5.61-22.632 25.603-40.911 50.758-41.35zm148.365 3.654c25.205-.44 36.386 18.197 32.466 40.901-1.738 10.066-3.067 16.764-5.043 25.017-5.917 24.73-27.53 42.067-50.84 42.474-22.991.401-38.337-18.516-33.511-41.001 1.946-9.066 4.626-20.134 6.07-25.958 5.622-22.676 25.652-40.993 50.858-41.433z"
                }), s.createElement("path", {
                    fill: "#4B4B4B",
                    d: "M1501.191 552.847c-9.21-3.833-19.202.694-21.317 11.598-2.336 12.036-4.934 21.96-5.068 27.345-.182 7.335 2.82 20.21 16.097 20.09 11.704-.106 17.471-5.756 19.785-13.142 2.508-8.011 4.222-19.361 4.774-22.707-6.088.219-11.338-1.782-14.592-6.448-3.87-5.55-1.08-12.408.321-16.736zm-122.218-5.06c-9.273-3.672-18.7 1.455-21.175 12.386-2.423 10.702-2.986 15.003-4.032 20.338-2.1 10.716-2.713 21.548 10.482 26.06 11.126 3.803 22.15-3.99 24.507-12.703 2.213-8.18 4.573-19.732 5.078-23.116-5.015.842-11.4-.346-15.448-5.795-4.044-5.445-2.76-13.456.588-17.17z"
                }), s.createElement("path", {
                    fill: "#8EE000",
                    d: "M1374.367 518.17c-46.003.302-51.565 25.403-51.565 25.403s.191-.262.57-.73c3.306-4.086 20.945-23.892 51.038-22.174 33.54 1.915 38.932 24.324 67.462 25.827 28.531 1.502 56.552-23.993 79.113-22.884 24.801 1.219 36.595 19.378 39.95 25.665.709 1.326 1.041 2.124 1.041 2.124s-5.55-31.408-42.043-30.771c-36.495.637-40.12 22.203-77.623 22.357-37.503.155-21.941-25.12-67.943-24.818zm50.085 93.108c28.684-.5 39.004 35.908 67.64 37.825 29.993 2.008 50.2-6.908 51.193-22.537-7.9 5.811-13.687 19.882-45.727 16.957-32.04-2.926-46.163-32.112-73.13-33.483-29.699-1.51-43.898 32.04-77.925 31.666-27.488-.304-35.18-18.03-35.18-18.03s-1.428 23.779 33.582 23.168c36.698-.64 50.865-35.065 79.547-35.566z"
                }), s.createElement("path", {
                    fill: "#F48000",
                    d: "M1446.278 622.454c-2.659 15.765-12.302 23.187-25.182 23.412-11.825.207-20.343-10.41-18.023-22.273.367-1.877.88-3.494 1.523-4.89 3.474-7.533 10.76-8.598 19.511-9.183 9.31-.622 22.015-3.035 22.504 8.439.055 1.309-.047 2.8-.333 4.495z"
                }), s.createElement("path", {
                    fill: "#B16900",
                    d: "M1444.562 608.13c-2.334 12.411-10.725 18.268-21.918 18.464-10.277.18-17.664-8.165-15.631-17.505.322-1.478-.033 1.388.528.29 3.03-5.936 9.364-6.785 16.97-7.258 8.09-.503 19.136-2.418 19.544 6.611.046 1.031.758-1.937.507-.603z"
                }), s.createElement("path", {
                    fill: "#FFB8D1",
                    d: "M1444.562 608.13c-2.334 12.411-10.725 18.268-21.918 18.464-5.961.104-10.949-2.659-13.69-6.82-1.987-3.014 35.859-12.979 35.608-11.645z"
                }), s.createElement("path", {
                    fill: "#FFC200",
                    d: "M1396.101 618.567c3.998-15.708 15.795-21.4 31.136-21.668 13.956-.244 27.466 7.88 27.52 22.206a2.72 2.72 0 0 1-1.98 2.635c-1.153.318-29.522 6.193-29.522 6.193s-24.016-6.636-25.272-6.825c-1.257-.188-2.414-.451-1.882-2.54z"
                }), s.createElement("path", {
                    fill: "#FFE747",
                    d: "M1421.383 599.647c4.944-1.021 10.276-.84 14.98.377 3.205.83 4.884 3.374 3.977 5.511-.862 2.028-3.51 3.386-6.361 2.373-4.062-1.445-9.936-1.342-13.753-.596-3.006.587-4.986-1.652-4.767-3.381.362-2.847 3.47-3.776 5.924-4.284z"
                }))))))),
                xs = [130, 290],
                Fs = `(min-width: ${Ns})`,
                Ms = ({
                    animateTopbar: e,
                    hideTopbar: t,
                    isGetStartedVisible: a,
                    isTopbarScrolled: n,
                    onGetStartedMouseEnter: r,
                    onGetStartedMouseLeave: i,
                    onRegisterClick: o
                }) => s.createElement("div", {
                    className: le()("_3L2FE", {
                        _1JEFf: e,
                        _2t_Vq: t,
                        _1R8d1: n
                    })
                }, s.createElement("nav", {
                    className: a ? "lZqWH" : "_3xnN3 lZqWH"
                }, s.createElement(re.ZP, {
                    href: "/"
                }, s.createElement("img", {
                    alt: "Duolingo",
                    className: "_1KFhV",
                    src: ks
                })), a ? s.createElement(fs.Z, {
                    className: "_1-AxT",
                    style: "hare-always-light",
                    trackingScreen: "splash"
                }) : s.createElement(re.ZP, {
                    className: le()((0, Ja.yO)({
                        variant: "solid"
                    }), "_2DV0M _3u1lX _42WO0"),
                    href: "/register",
                    onClick: () => o("topbar"),
                    onMouseEnter: r,
                    onMouseLeave: i
                }, s.createElement(Xa, null, (0, ae._i)(18550))))),
                Us = ({
                    animateTopbar: e,
                    canShowAndroidBanner: t,
                    course: a,
                    hideTopbar: n,
                    isRegistering: r,
                    onGetStartedMouseEnter: i,
                    onGetStartedMouseLeave: o,
                    onLogInClick: l,
                    onRegisterClick: c
                }) => {
                    const d = (0, m.Fx)(k.$4),
                        u = (0, Ss.Z)(),
                        g = (0, z.Z)(),
                        p = (0, Wa.Z)(void 0, (() => g ? Promise.resolve(void 0) : U.bG.getLottieAnimation(As)), [g]),
                        {
                            hidePlaceholder: v,
                            onEnterFrame: _,
                            ref: f
                        } = $a(),
                        {
                            isPlaying: S,
                            ref: y,
                            shouldRender: E
                        } = Qa(As, d),
                        [b, I] = (0, kt.Z)({
                            rootMargin: "-72px 0px 0px 0px"
                        }),
                        w = (0, ka.vl)().via,
                        T = "WeChat" === w ? Is : "DET" === w ? bs : ws;
                    return s.createElement("header", {
                        className: le()("_39290", {
                            _3N2g2: t
                        })
                    }, s.createElement(Ms, {
                        animateTopbar: e,
                        hideTopbar: n,
                        isGetStartedVisible: b,
                        isTopbarScrolled: u,
                        onGetStartedMouseEnter: i,
                        onGetStartedMouseLeave: o,
                        onRegisterClick: c
                    }), s.createElement("div", {
                        className: "_15kfC"
                    }, s.createElement("div", {
                        className: "_1ybpv",
                        ref: y
                    }, d && !g ? s.createElement(Os, {
                        className: Ds,
                        ref: f,
                        style: {
                            visibility: v ? "hidden" : "visible"
                        }
                    }) : s.createElement("picture", {
                        className: Ds,
                        ref: f,
                        style: {
                            visibility: v ? "hidden" : "visible"
                        }
                    }, s.createElement("source", {
                        media: Fs,
                        srcSet: `${Rs}, ${Ls} 2x`
                    }), s.createElement("source", {
                        srcSet: `${Ts}, ${Cs} 2x`
                    }), s.createElement("img", {
                        alt: "",
                        src: Ts
                    })), p && E ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: p,
                        className: "ILWe4 _2mBtL _1Ai11",
                        isPlaying: S,
                        loop: !0,
                        loopSegment: xs,
                        onEnterFrame: _,
                        renderSubframes: !1,
                        renderer: "svg"
                    })) : null), s.createElement("div", {
                        className: "_28m3G"
                    }, s.createElement("h1", {
                        className: "L93Ok"
                    }, a ? (0, ae._i)(18929, {
                        learning_language_name: a.learningLanguageName
                    }) : (0, ae._i)(29896)), s.createElement("div", {
                        className: "_1-0oK"
                    }, a ? s.createElement(ee.Z, {
                        className: Ps,
                        onClick: () => c("top"),
                        onMouseEnter: i,
                        onMouseLeave: o,
                        ref: I,
                        submitting: r,
                        variant: "solid"
                    }, s.createElement(Xa, null, (0, ae._i)(18550))) : s.createElement(re.ZP, { ...(0, de._q)(ge.V.GetStartedTop),
                        className: le()((0, Ja.yO)({
                            variant: "solid"
                        }), Ps),
                        href: "/register",
                        onClick: () => c("top"),
                        onMouseEnter: i,
                        onMouseLeave: o,
                        ref: I
                    }, s.createElement(Xa, null, (0, ae._i)(18550))), s.createElement(ee.Z, { ...(0, de._q)(ge.V.HaveAccount),
                        className: "-TeUZ _2Ccfj",
                        onClick: () => l("top"),
                        variant: "stroke"
                    }, s.createElement(Xa, null, (0, ae._i)(20690)))), ["zh", "zh-CN"].includes(window.duo.uiLanguage) && oa.Z.desktop && (0, H.J9)() ? s.createElement("div", {
                        className: "LCY-S"
                    }, s.createElement("img", {
                        className: "inyZH",
                        src: T
                    }), s.createElement(ee.Z, {
                        className: "_1A2gx",
                        onClick: () => (0, Jt.ci)("splash-page")
                    }, s.createElement("span", {
                        className: "_1xLl1"
                    }, s.createElement("span", {
                        className: "_3U62n"
                    }, "扫一扫下载 APP"), s.createElement("img", {
                        src: Es
                    })))) : null)), s.createElement("div", {
                        className: "_3XjUp"
                    }, a ? s.createElement("div", {
                        className: "RkWjh"
                    }, s.createElement(Dt.Z, {
                        lang: a.learningLanguageId,
                        size: 64
                    }), s.createElement("h3", {
                        className: "_1o8Df"
                    }, (0, ae._i)(3721, {
                        learning_language_name: a.learningLanguageName
                    }))) : s.createElement(ys.Z, {
                        className: "_3isJn",
                        onCarouselItemClick: () => (0, h.track)("click", {
                            which: "splash page flag"
                        }),
                        trackingScreen: "splash"
                    })))
                },
                Hs = a.p + "images/splash/lottie/229d5f88cc9df2eb0b68f39466500911.svg",
                Gs = a.p + "lottie/splash/c16e90b93e35750c893be4b58720cef2.json",
                Vs = a.p + "lottie/splash/c02b5f75d9ec48815e6a964f641a9fe2.json",
                Bs = "_2coJk",
                zs = s.forwardRef((({}, e) => {
                    const t = s.useRef(),
                        a = s.useRef(null),
                        n = s.useContext(Na),
                        r = s.useContext(Oa),
                        i = (0, z.Z)(),
                        o = ja(n === Gs),
                        {
                            hidePlaceholder: l,
                            onEnterFrame: c,
                            ref: d
                        } = $a(),
                        u = (0, Wa.Z)(void 0, (() => U.bG.getLottieAnimation(Gs)), []),
                        g = (0, Wa.Z)(void 0, (() => i ? Promise.resolve(void 0) : U.bG.getLottieAnimation(Vs)), [i]),
                        p = qa((e => {
                            var a;
                            let s = (0, Da.bA)(e.targetRect.top, e.rootBounds.bottom, -e.targetRect.height, 0, 450);
                            r(Gs, s >= 0 && s <= 450 ? -1 : 1 / 0), s = Math.min(Math.max(s, 0), 450), m.isAnimating() ? m.update(s) : m.start(null !== (a = t.current) && void 0 !== a ? a : s, s)
                        }), {
                            onCleanup: () => r(Gs, 1 / 0)
                        }),
                        m = (0, Ea.Z)((e => {
                            var s;
                            const n = e.done ? e.target : e.current;
                            t.current = n, (null === (s = a.current) || void 0 === s ? void 0 : s.animation) && a.current.animation.goToAndStop(n, !0)
                        }), {
                            clamp: !0
                        });
                    return s.createElement("section", {
                        className: "Gijhh",
                        ref: e
                    }, s.createElement("div", {
                        className: "_3pwPw"
                    }, s.createElement("div", {
                        className: "_16Yyp"
                    }, s.createElement("h1", {
                        className: "QO0Sm"
                    }, (0, ae._i)(43096)), s.createElement("div", {
                        className: "_1CMLi"
                    }, s.createElement(ia.Z, {
                        href: oa.Z.desktop ? (0, ae.H8)(22504, void 0, {
                            addRightToLeftMark: !1
                        }) : (0, Jt.fy)({
                            via: "splash_page"
                        }),
                        onClick: () => {
                            (0, h.track)("click", {
                                screen: "splash",
                                target: "mobile_download_ios"
                            }), (0, h.track)("click", {
                                which: "mobile download ios"
                            }), (0, h.track)("web_to_app_store_tap", {
                                target: "apple",
                                via: "splash_page"
                            })
                        },
                        size: "medium",
                        style: "snow-always-light",
                        type: "apple",
                        via: "splash_page"
                    }), s.createElement(ia.Z, {
                        href: oa.Z.desktop ? (0, Jt.A)({
                            utmCampaign: "splash",
                            utmContent: "download_button"
                        }) : (0, Jt.Ir)({
                            via: "splash_page"
                        }),
                        onClick: () => {
                            (0, h.track)("click", {
                                screen: "splash",
                                target: "mobile_download_android"
                            }), (0, h.track)("click", {
                                which: "mobile download android"
                            }), (0, h.track)("web_to_app_store_tap", {
                                target: "google_or_China",
                                via: "splash_page"
                            })
                        },
                        size: "medium",
                        style: "snow-always-light",
                        type: (0, H.J9)() ? "china" : "google"
                    }))), s.createElement("div", {
                        className: "_3IKl2"
                    }, s.createElement("img", {
                        alt: "",
                        className: Bs,
                        ref: d,
                        src: Hs,
                        style: {
                            visibility: l ? "hidden" : "visible"
                        }
                    }), g && o ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: g,
                        className: Bs,
                        isPlaying: n === Gs,
                        loop: !0,
                        onEnterFrame: c,
                        renderSubframes: !1
                    })) : null, u ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: u,
                        className: Bs,
                        isPlaying: !1,
                        ref: a,
                        renderSubframes: !1
                    })) : null, s.createElement("div", {
                        className: "Hlz_a",
                        ref: p
                    }))))
                }));
            var Zs = a(98683);
            const Ws = a.p + "images/splash/3a733db6d6873e1a915f70cf72554ce3.svg",
                $s = a.p + "images/splash/dd7453522d3192d4df06d4652508b8bc.svg",
                js = a.p + "images/splash/lottie/22fce01f6df43e0472d7585afad9a43a.svg",
                qs = a.p + "images/splash/lottie/43ea369cfa70f093c3edad4d75ea6009.svg",
                Qs = a.p + "lottie/splash/904f242fe2ab5477e3b97928d3e1cb89.json",
                Ks = "_2KG9p _1Ai11",
                Ys = [35, 156],
                Js = `(min-width: ${Ns})`,
                Xs = s.forwardRef((({}, e) => {
                    const t = (0, z.Z)(),
                        a = (0, Wa.Z)(void 0, (() => t ? Promise.resolve(void 0) : U.bG.getLottieAnimation(Qs)), [t]),
                        {
                            hidePlaceholder: n,
                            onEnterFrame: r,
                            ref: i
                        } = $a(),
                        {
                            isPlaying: o,
                            ref: l,
                            shouldRender: c
                        } = Qa(Qs),
                        d = (0, Zs.Q)({
                            iapContext: "splash"
                        });
                    return s.createElement("section", {
                        className: "LlPOq",
                        ref: e
                    }, s.createElement("div", {
                        className: "_35MAo"
                    }, s.createElement("div", {
                        className: "_2VZpU",
                        ref: l
                    }, s.createElement("img", {
                        alt: "",
                        className: Ks,
                        ref: i,
                        src: t ? qs : js,
                        style: {
                            visibility: n ? "hidden" : "visible"
                        }
                    }), a && c ? s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(ya.Z, {
                        animationData: a,
                        className: Ks,
                        isPlaying: o,
                        loop: !0,
                        loopSegment: Ys,
                        onEnterFrame: r,
                        renderSubframes: !1
                    })) : null), s.createElement("div", {
                        className: "A6fCq"
                    }, s.createElement("picture", null, s.createElement("source", {
                        height: 91,
                        media: Js,
                        srcSet: Ws,
                        width: 605
                    }), s.createElement("img", {
                        alt: (0, ae.H8)(36712),
                        className: "_26IYs",
                        height: 55,
                        src: $s,
                        width: 339
                    })), s.createElement(ee.Z, {
                        className: "_1aASh _19taU",
                        onClick: d,
                        variant: "solid"
                    }, s.createElement(Xa, null, (0, ae._i)(43088))))))
                })),
                en = ({
                    course: e
                }) => {
                    const t = (0, m.tX)(),
                        a = (0, N.TH)(),
                        n = s.useRef(),
                        r = s.useRef(null),
                        i = s.useRef(null),
                        o = s.useRef(null),
                        [l, c] = s.useState(!1),
                        [d, u] = s.useState(!1),
                        [g, p] = s.useState(!1),
                        [v, _] = s.useState(!1),
                        [f, S] = s.useState(!1);
                    (0, F.Z)("SplashPageRedesign"), (0, Pa.lQ)(Aa.t, void 0 === e ? "" : void 0);
                    const y = !oa.Z.silk && (0, H.J9)() && !e,
                        E = oa.Z.android && !y && !e,
                        b = "/" === a.pathname,
                        [I, w] = s.useMemo((() => e ? [`${(0,ae.H8)(3053,{learning_language_name:e.learningLanguageName})} - ${(0,ae.H8)(23227)}`, (0, ae.H8)(6807, {
                            learning_language_name: e.learningLanguageName
                        })] : "/log-in" === a.pathname ? [`${(0,ae.H8)(18855)} - ${(0,ae.H8)(23227)}`, (0, ae.H8)(28228)] : [`${(0,ae.H8)(23227)} - ${(0,ae.H8)(10751)}`, (0, ae.H8)(19956)]), [e, a.pathname]),
                        k = (0, Ea.Z)((e => {
                            const t = e.done ? e.target : e.current;
                            if (n.current = t, r.current) {
                                const e = (0, Da.bA)(t, 0, 100, 0, 1, !0);
                                r.current.style.setProperty("opacity", `${e}`)
                            }
                        }), {
                            clamp: !0
                        }),
                        T = qa((e => {
                            var t, a;
                            const s = null === (t = i.current) || void 0 === t ? void 0 : t.getBoundingClientRect();
                            if (!s) return;
                            (e => {
                                var t;
                                k.isAnimating() ? k.update(e) : k.start(null !== (t = n.current) && void 0 !== t ? t : e, e)
                            })((0, Da.bA)(s.top, e.rootBounds.bottom, e.rootBounds.top, 0, 100, !0));
                            const r = null === (a = o.current) || void 0 === a ? void 0 : a.getBoundingClientRect();
                            r && (u(s.top - 96 < e.rootBounds.top && r.bottom > e.rootBounds.top), S(!0))
                        }), {
                            onInvisible: () => S(!0)
                        }),
                        C = async a => {
                            e ? (Pe.Z.start("trial_user_creation"), _(!0), await Promise.all([(0, h.track)("click", "topbar" === a ? {
                                which: "course splash page get started topbar"
                            } : {
                                screen: "course_splash",
                                target: "get_started"
                            }), (0, h.track)("course_splash_tap", {
                                target: "get_started"
                            })]), await t((0, X.Kb)(e.learningLanguageId, e.fromLanguageId))) : ((0, h.track)("click", {
                                screen: "splash",
                                target: "get_started"
                            }), (0, h.track)("splash_tap", {
                                target: "get_started"
                            }), (0, h.track)("click", {
                                which: `splash page get started ${a}`
                            }))
                        };
                    return s.useEffect((() => {
                        f && c(!0)
                    })), s.useEffect((() => {
                        ya.Z.preload()
                    }), []), s.useEffect((() => {
                        Pe.Z.finishOptional("splash_to_intro")
                    }), []), s.useEffect((() => {
                        e ? (0, h.track)("course splash", {
                            course_id: `${e.learningLanguageId}<-${e.fromLanguageId}`,
                            logged_in: !1
                        }) : ((0, h.track)("screen_load", {
                            screen: "splash"
                        }), b && (0, yt.Bf)(a, "splash"))
                    }), [e, b]), s.useEffect((() => {
                        window.location.host.startsWith("join") && t({
                            options: {
                                goBack: () => (0, O.Zs)(void 0, !0),
                                isSignIn: !0,
                                name: M.t.SignInUp,
                                via: "onboarding"
                            },
                            type: "TOGGLE_MODAL"
                        })
                    }), []), s.useEffect((() => {
                        "/log-in" === a.pathname && ((0, h.track)("sign_in_load", {
                            screen: "splash_login_page",
                            via: "onboarding"
                        }), t({
                            options: {
                                allowLanguagelessUser: !0,
                                isSignIn: !0,
                                name: M.t.SignInUp,
                                via: "onboarding"
                            },
                            type: "TOGGLE_MODAL"
                        }))
                    }), [a.pathname]), s.createElement("div", {
                        className: "qO_UG",
                        ref: T
                    }, s.createElement(Lt.Z, {
                        content: w
                    }), s.createElement(Rt.ql, null, s.createElement("title", null, I)), e ? s.createElement(Ct, {
                        crumbs: [{
                            label: (0, ae.H8)(23227),
                            url: new URL(`${window.location.protocol}//${window.location.host}`)
                        }, {
                            label: (0, ae.H8)(20631),
                            url: new URL(`${window.location.protocol}//${window.location.host}/courses`)
                        }]
                    }) : s.createElement(La, {
                        sameAs: ["https://www.youtube.com/duolingo", "https://twitter.com/duolingo", "https://www.facebook.com/duolingo", "https://www.linkedin.com/company/duolingo/", "https://www.instagram.com/duolingo/", "https://www.twitch.tv/Duolingo"]
                    }), s.createElement(Rt.ql, null, s.createElement("body", {
                        className: "_2j8ko"
                    })), s.createElement(xa, null, s.createElement(Us, {
                        animateTopbar: l,
                        canShowAndroidBanner: E,
                        course: e,
                        hideTopbar: d,
                        isRegistering: v,
                        onGetStartedMouseEnter: () => p(!0),
                        onGetStartedMouseLeave: () => p(!1),
                        onLogInClick: () => {
                            (0, h.track)("click", {
                                screen: e ? "unknown" : "splash",
                                target: "has_account"
                            }), (0, h.track)("splash_tap", {
                                target: "has_account"
                            }), t({
                                options: {
                                    allowLanguagelessUser: !0,
                                    isSignIn: !0,
                                    name: M.t.SignInUp,
                                    via: e ? "course_splash" : "onboarding"
                                },
                                type: "TOGGLE_MODAL"
                            })
                        },
                        onRegisterClick: C
                    }), e ? s.createElement("main", null, s.createElement(Ya, null), s.createElement(vs, {
                        course: e,
                        isHoveringGetStarted: g,
                        isRegistering: v,
                        onRegisterClick: () => C("bottom")
                    })) : s.createElement("main", null, s.createElement("div", {
                        className: "_2huhH"
                    }, s.createElement("div", {
                        className: "_1NJUB _1Txiq",
                        ref: r
                    }), s.createElement(Ya, null), s.createElement(zs, {
                        ref: i
                    })), s.createElement(Xs, {
                        ref: o
                    }), s.createElement(cs, null), s.createElement(vs, {
                        isHoveringGetStarted: g,
                        isRegistering: v,
                        onRegisterClick: () => C("bottom")
                    })), s.createElement(_s, null)), y ? s.createElement(Ta, null) : E ? s.createElement(Ia, null) : null)
                },
                tn = () => {
                    const e = (0, N.TH)(),
                        {
                            fromLanguageId: t = Ut.h9,
                            learningLanguageId: a
                        } = (0, n.UO)(),
                        r = (0, Wa.Z)(void 0, (() => U._s.courseShow(a, t)), [t, a]);
                    s.useEffect((() => {
                        (0, yt.Bf)(e, "course_splash")
                    }), []);
                    const i = (0, fa.og)(a, t);
                    return e.pathname !== i ? s.createElement(n.l_, {
                        to: {
                            pathname: i,
                            search: e.search
                        }
                    }) : r ? s.createElement(en, {
                        course: r
                    }) : null
                };
            var an = a(93030),
                sn = a(80715),
                nn = a(57104),
                rn = a(99961);
            const on = a.p + "images/borderlessFlags/425faf06f82ca39d0e6b61b747910528.svg";
            var ln = a(90028);
            const cn = {
                    wrap: "_1x7fC",
                    "language-chooser-header": "_3P7Od",
                    "from-language-chooser-list": "_2LRin",
                    "from-language-item": "_3DrtT",
                    "from-language-flag": "_27Vth",
                    "from-language-bottom": "_3g32J",
                    "white-stroke-transparent": "_34mAO _3QH1l _29LnD _2sNVM _2LoNU VzbUl _1AgKJ _1w2Ut _3wPHf _2Rt1l _1saKQ _1Lt8-",
                    "loading-container": "rbh8g"
                },
                dn = {
                    de: 4,
                    es: 0,
                    fr: 3,
                    pt: 1,
                    ru: 2
                },
                un = ({
                    availableCourses: e,
                    isNavigating: t,
                    isSelectingFromLanguage: a,
                    onChooseAnotherCourseClick: n,
                    onFromLanguageClick: r,
                    onSelectCourse: o,
                    selectedLearningLanguage: l,
                    uiLanguageId: c
                }) => {
                    let d = !1;
                    const u = (0, m.Fx)(ha.WM),
                        g = void 0 !== u && "experiment" === (0, R.cu)("path_web_smec_new_users", null, u),
                        p = e.filter((e => {
                            const {
                                fromLanguageId: t,
                                learningLanguageId: a
                            } = e;
                            return t === c || "en" === c && "en" === a && !d && (d = !0, !0)
                        })).map((e => {
                            const {
                                learningLanguageId: t
                            } = e;
                            return "en" === c && "en" === t ? { ...e,
                                numLearners: 479e4,
                                numLearnersString: `${4.79.toPrecision(3)}M`
                            } : e
                        })),
                        h = (0, m.Fx)((e => (0, k.Mb)(e).ipCountry));
                    return s.createElement("div", {
                        className: cn.wrap
                    }, s.createElement("h1", {
                        className: cn["language-chooser-header"]
                    }, a ? l ? "What language do you speak?" : (0, ae._i)(16916) : (0, ae._i)(13091)), t ? s.createElement("div", {
                        className: cn["loading-container"]
                    }, s.createElement(an.Z, {
                        theme: "light",
                        type: "screen-white"
                    })) : s.createElement(s.Fragment, null, a ? s.createElement("ul", {
                        className: cn["from-language-chooser-list"]
                    }, i.MR(e.filter((({
                        learningLanguage: e
                    }) => !l || e === l)), (e => h && h in ae.WQ && e.fromLanguage === ae.WQ[h] && g ? -1 : e.fromLanguage in dn ? dn[e.fromLanguage] : 1 / 0)).map((({
                        fromLanguageId: e
                    }) => s.createElement("li", {
                        className: cn["from-language-item"],
                        key: e,
                        onClick: t => r(t, e)
                    }, s.createElement(Dt.Z, {
                        className: cn["from-language-flag"],
                        lang: e,
                        size: 40
                    }), (0, Ut.lx)(e)))), g ? s.createElement("li", {
                        className: cn["from-language-item"],
                        key: "en",
                        onClick: e => r(e, "en")
                    }, s.createElement("img", {
                        className: cn["from-language-flag"],
                        src: on,
                        width: 40
                    }), "I can't find my language") : null) : s.createElement("ul", {
                        className: ln.Z["course-card-container"]
                    }, i.MR(p, (e => -e.numLearners)).map((e => {
                        const t = "en" === c && "en" === e.learningLanguageId;
                        return s.createElement(rn.Z, {
                            className: cn["choose-language"],
                            course: e,
                            "data-language": (0, Ut.D3)(e.learningLanguageId),
                            headingTag: "h2",
                            key: "en" === c && "en" === e.learningLanguageId ? "english-placeholder" : e.learningLanguageId,
                            onSelectCourse: a => {
                                o(e, t, a)
                            },
                            style: "snow-always-light"
                        })
                    }))), a && !g ? s.createElement("div", {
                        className: cn["from-language-bottom"]
                    }, s.createElement("p", null, "Don’t see the language you speak? We’re still working on an English course for you. Coming soon!"), s.createElement(nn.Z, {
                        onClick: n
                    }, "Choose another course")) : null))
                };
            class gn extends s.Component {
                constructor() {
                    super(...arguments), this.state = {
                        isNavigating: !1,
                        isSelectingFromLanguage: !1
                    }, this.onFromLanguageClick = async ({}, e) => {
                        const {
                            dispatch: t,
                            location: a
                        } = this.props, s = window.performance.now();
                        if (this.state.selectedLearningLanguage)(0, h.track)("course_picker_tap", {
                            from_language: (0, Ut.D3)(e),
                            learning_language: "en",
                            target: "course",
                            via: "onboarding"
                        }), D.O.scrollTo(0, 0), this.setState({
                            isNavigating: !0
                        }), (0, ka.vl)(a.search).short ? await (0, O.Zs)(`//${e}.duolingo.com/welcome/${this.state.selectedLearningLanguage}?short=1`) : (Pe.Z.start("trial_user_creation", {
                            startTime: s
                        }), t((0, X.Kb)(this.state.selectedLearningLanguage, e)));
                        else {
                            await (0, h.track)("ui_picker_screen_tap", {});
                            const t = `//${"zh"===e?"zh-CN":e}.duolingo.com/register`;
                            await (0, O.Zs)(t)
                        }
                    }, this.onChooseAnotherCourseClick = () => {
                        this.setState({
                            isSelectingFromLanguage: !1,
                            selectedLearningLanguage: void 0
                        })
                    }, this.onSelectCourse = (e, t) => {
                        const {
                            dispatch: a,
                            history: s,
                            location: n,
                            trackingScreen: r
                        } = this.props, i = window.performance.now();
                        (0, h.track)("click", {
                            screen: r,
                            target: "flag"
                        }), (0, h.track)("course_selected", {
                            learning_language: (0, Ut.D3)(e.learningLanguageId),
                            ui_language: (0, Ut.D3)(Ut.h9)
                        }), a({
                            type: "SET_SHOULD_TRACK_FIRST_PATH"
                        }), (0, h.track)("course_picker_tap", {
                            from_language: (0, Ut.D3)(Ut.h9),
                            learning_language: (0, Ut.D3)(e.learningLanguageId),
                            target: "course",
                            via: "onboarding"
                        }), t ? this.setState({
                            isSelectingFromLanguage: !0,
                            selectedLearningLanguage: e.learningLanguageId
                        }) : (D.O.scrollTo(0, 0), this.setState({
                            isNavigating: !0,
                            selectedLearningLanguage: e.learningLanguageId
                        }), (0, ka.vl)(n.search).short ? s.push(`/welcome/${e.learningLanguageId}?short=1`) : (Pe.Z.start("trial_user_creation", {
                            startTime: i
                        }), this.props.dispatch((0, X.Kb)(e.learningLanguageId))))
                    }
                }
                componentDidMount() {
                    (0, h.track)("course_picker_load", {
                        ui_language: Ut.h9,
                        via: "onboarding"
                    })
                }
                render() {
                    const {
                        availableCourses: e
                    } = this.props, {
                        isNavigating: t,
                        isSelectingFromLanguage: a,
                        selectedLearningLanguage: n
                    } = this.state;
                    return s.createElement(un, {
                        availableCourses: e,
                        isNavigating: t,
                        isSelectingFromLanguage: a,
                        onChooseAnotherCourseClick: this.onChooseAnotherCourseClick,
                        onFromLanguageClick: this.onFromLanguageClick,
                        onSelectCourse: this.onSelectCourse,
                        selectedLearningLanguage: n,
                        uiLanguageId: Ut.h9
                    })
                }
            }
            const pn = (0, sn.$j)()(gn),
                mn = () => {
                    var e;
                    const t = (0, N.k6)(),
                        a = (0, N.TH)(),
                        n = null !== (e = (0, Pa.lQ)(Aa.t, "")) && void 0 !== e ? e : [],
                        r = s.useMemo((() => n.filter((({
                            phase: e
                        }) => e > Ut.AP.Active))), [n]);
                    s.useEffect((() => {
                        (0, h.track)("screen_load", {
                            screen: "course_picker"
                        })
                    }), []);
                    const i = (0, Ss.Z)();
                    return s.createElement("div", {
                        className: xt["splash-wrap"]
                    }, s.createElement("div", {
                        className: xt["splash-wrap-inner"]
                    }, s.createElement(Lt.Z, {
                        content: (0, ae.H8)(1100)
                    }), s.createElement(Rt.ql, null, s.createElement("title", null, `${(0,ae.H8)(15785)} - ${(0,ae.H8)(23227)}`), s.createElement("body", {
                        className: xt.body
                    })), s.createElement(Ms, {
                        animateTopbar: !1,
                        hideTopbar: !1,
                        isGetStartedVisible: !0,
                        isTopbarScrolled: i,
                        onGetStartedMouseEnter: () => {},
                        onGetStartedMouseLeave: () => {},
                        onRegisterClick: () => {}
                    }), s.createElement("div", {
                        className: xt["splash-header-wrap"]
                    }, s.createElement("div", {
                        className: xt["splash-header"]
                    }, s.createElement(pn, {
                        availableCourses: r,
                        history: t,
                        location: a,
                        trackingScreen: "course_picker"
                    })))))
                },
                hn = () => {
                    const e = (0, m.tX)(),
                        t = (0, N.k6)(),
                        a = (0, N.TH)(),
                        r = (0, q.Pc)();
                    s.useEffect((() => {
                        const e = (0, ka.vl)(a.search);
                        if ("/referred" === a.pathname)
                            if (r) {
                                const a = e.inviter_id;
                                a ? t.replace(`/u/${a}?via=referral`) : t.replace(O.B6)
                            } else {
                                (0, h.track)("referral click", {});
                                const t = e.user_invite;
                                t && (async () => {
                                    await U.xr.trackSplashLoad(t), (0, p.LS)(p.Qt.InviteCode, t)
                                })()
                            }
                        else r && ((0, h.trackRedirection)(window.location.href, "/welcome", "soft"), t.replace({
                            pathname: "/welcome",
                            search: a.search
                        }))
                    }), [r]);
                    const i = (0, n.$B)("/register/:languageId"),
                        o = !r && null !== i;
                    return s.useEffect((() => {
                        if (o) {
                            const {
                                params: {
                                    languageId: a
                                }
                            } = i;
                            (0, Ut.jO)(a) ? e((0, X.Kb)(a)): t.replace("/")
                        }
                    }), [o]), r ? null : o ? s.createElement(an.Z, {
                        type: "screen-white"
                    }) : s.createElement(mn, null)
                },
                vn = e => "string" == typeof e ? e : [e.pathname, e.search, e.hash].join(""),
                _n = ({
                    to: e
                }) => {
                    const t = (0, N.TH)(),
                        a = (0, n.UO)();
                    return s.useEffect((() => {
                        (0, h.trackRedirection)(vn(t), vn(e), "soft")
                    }), []), s.createElement(n.l_, {
                        to: "string" == typeof e ? (0, n.Gn)(e, a) : e
                    })
                },
                fn = (...e) => e,
                Sn = ({
                    children: e
                }) => {
                    const t = (0, N.TH)(),
                        a = (0, n.UO)();
                    return (0, q.Pc)() ? s.createElement(_n, {
                        to: {
                            pathname: (r = ["/enroll", a.learningLanguageId, a.fromLanguageId, a.slug], r.reduceRight(((e, t) => t ? e ? `${t}/${e}` : t : ""), "")),
                            search: t.search
                        }
                    }) : s.createElement(s.Fragment, null, e);
                    var r
                },
                yn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(5931), a.e(5314), a.e(8106), a.e(6243), a.e(5101), a.e(7937), a.e(5298), a.e(274), a.e(7888), a.e(6480), a.e(7672), a.e(9518), a.e(3932), a.e(8247)]).then(a.bind(a, 84032)))),
                En = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5314), a.e(8106), a.e(7581), a.e(3537), a.e(8102), a.e(3925), a.e(7888), a.e(7358), a.e(9705), a.e(2039), a.e(6480), a.e(7981), a.e(9031), a.e(1789), a.e(7672), a.e(582), a.e(7507)]).then(a.bind(a, 4293)))),
                bn = (0, je.Z)((() => a.e(1436).then(a.bind(a, 61436)))),
                In = (0, je.Z)((() => a.e(1032).then(a.bind(a, 51032)))),
                wn = (0, je.Z)((() => a.e(7341).then(a.bind(a, 37341)))),
                kn = (0, je.Z)((() => a.e(8319).then(a.bind(a, 28319)))),
                Tn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(4095), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7358), a.e(9705), a.e(835)]).then(a.bind(a, 80306)))),
                Cn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(4095), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7358), a.e(9705), a.e(1504)]).then(a.bind(a, 98968)))),
                Rn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7424)]).then(a.bind(a, 98256)))),
                Ln = (0, je.Z)((() => Promise.all([a.e(219), a.e(7660)]).then(a.bind(a, 58941)))),
                An = (0, je.Z)((() => Promise.all([a.e(5931), a.e(7888), a.e(8252), a.e(9579)]).then(a.bind(a, 97457)))),
                Pn = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5314), a.e(8106), a.e(7581), a.e(3537), a.e(8102), a.e(3925), a.e(7888), a.e(7358), a.e(9705), a.e(2039), a.e(6480), a.e(7981), a.e(9031), a.e(1789), a.e(7672), a.e(582), a.e(7507)]).then(a.bind(a, 43763)))),
                Dn = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5314), a.e(8106), a.e(7581), a.e(407), a.e(7493), a.e(3537), a.e(8102), a.e(3925), a.e(7888), a.e(7358), a.e(9705), a.e(2039), a.e(6480), a.e(7981), a.e(3860), a.e(9031), a.e(1789), a.e(7672), a.e(1012), a.e(582), a.e(818), a.e(5993)]).then(a.bind(a, 45993)))),
                Nn = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5314), a.e(8106), a.e(7581), a.e(3537), a.e(8102), a.e(3925), a.e(7888), a.e(7358), a.e(9705), a.e(2039), a.e(6480), a.e(7981), a.e(9031), a.e(1789), a.e(7672), a.e(582), a.e(7507)]).then(a.bind(a, 65637)))),
                On = (0, je.Z)((() => a.e(9199).then(a.bind(a, 69199)))),
                xn = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5314), a.e(8106), a.e(7581), a.e(3537), a.e(8102), a.e(3925), a.e(7888), a.e(7358), a.e(9705), a.e(2039), a.e(6480), a.e(7981), a.e(9031), a.e(1789), a.e(7672), a.e(582), a.e(7507)]).then(a.bind(a, 50565)))),
                Fn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7350)]).then(a.bind(a, 51057)))),
                Mn = (0, je.Z)((() => a.e(6150).then(a.bind(a, 47370)))),
                Un = (0, je.Z)((() => a.e(300).then(a.bind(a, 11233)))),
                Hn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(2780)]).then(a.bind(a, 73413)))),
                Gn = (0, je.Z)((() => Promise.all([a.e(6243), a.e(8487)]).then(a.bind(a, 87827)))),
                Vn = (0, je.Z)((() => Promise.all([a.e(8751), a.e(8102), a.e(5298), a.e(4317), a.e(3779)]).then(a.bind(a, 3307)))),
                Bn = (0, je.Z)((() => Promise.all([a.e(5314), a.e(8106), a.e(3932), a.e(5590)]).then(a.bind(a, 72384)))),
                zn = (0, je.Z)((() => a.e(6292).then(a.bind(a, 66292)))),
                Zn = (0, je.Z)((() => a.e(4130).then(a.bind(a, 65813)))),
                Wn = (0, je.Z)((() => a.e(4930).then(a.bind(a, 24930)))),
                $n = (0, je.Z)((() => a.e(5919).then(a.bind(a, 19600)))),
                jn = (0, je.Z)((() => a.e(6491).then(a.bind(a, 6491)))),
                qn = (0, je.Z)((() => a.e(7591).then(a.bind(a, 7706)))),
                Qn = (0, je.Z)((() => a.e(7476).then(a.bind(a, 97476)))),
                Kn = (0, je.Z)((() => a.e(5417).then(a.bind(a, 65417)))),
                Yn = (0, je.Z)((() => Promise.all([a.e(6243), a.e(6779)]).then(a.bind(a, 73149)))),
                Jn = (0, je.Z)((() => a.e(4555).then(a.bind(a, 46048)))),
                Xn = (0, je.Z)((() => a.e(3012).then(a.bind(a, 79873)))),
                er = (0, je.Z)((() => Promise.all([a.e(6632), a.e(9703)]).then(a.bind(a, 67188)))),
                tr = (0, je.Z)((() => Promise.all([a.e(6632), a.e(3157)]).then(a.bind(a, 74215)))),
                ar = (0, je.Z)((() => Promise.all([a.e(6632), a.e(4243), a.e(8600)]).then(a.bind(a, 43170)))),
                sr = (0, je.Z)((() => Promise.all([a.e(5931), a.e(5655), a.e(2349)]).then(a.bind(a, 25194)))),
                nr = (0, je.Z)((() => a.e(4819).then(a.bind(a, 77696)))),
                rr = (0, je.Z)((() => a.e(7182).then(a.bind(a, 97182)))),
                ir = (0, je.Z)((() => a.e(4001).then(a.bind(a, 4001)))),
                or = (0, je.Z)((() => a.e(4702).then(a.bind(a, 24702)))),
                lr = (0, je.Z)((() => a.e(6202).then(a.bind(a, 56202)))),
                cr = (0, je.Z)((() => a.e(1855).then(a.bind(a, 61855)))),
                dr = (0, je.Z)((() => a.e(7957).then(a.bind(a, 97957)))),
                ur = (0, je.Z)((() => a.e(944).then(a.bind(a, 40944)))),
                gr = (0, je.Z)((() => a.e(1328).then(a.bind(a, 11328)))),
                pr = (0, je.Z)((() => a.e(6019).then(a.bind(a, 36019)))),
                mr = (0, je.Z)((() => Promise.resolve().then(a.bind(a, 82023)))),
                hr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(7581), a.e(2988), a.e(8028), a.e(8102), a.e(5298), a.e(4317), a.e(274), a.e(7713), a.e(3693)]).then(a.bind(a, 84304)))),
                vr = (0, je.Z)((() => Promise.all([a.e(274), a.e(9439)]).then(a.bind(a, 91380)))),
                _r = (0, je.Z)((() => Promise.all([a.e(274), a.e(2596)]).then(a.bind(a, 97555)))),
                fr = (0, je.Z)((() => a.e(5713).then(a.bind(a, 79393)))),
                Sr = (0, je.Z)((() => a.e(5258).then(a.bind(a, 5793)))),
                yr = (0, je.Z)((() => Promise.all([a.e(274), a.e(1361)]).then(a.bind(a, 85106)))),
                Er = (0, je.Z)((() => a.e(2016).then(a.bind(a, 91277)))),
                br = (0, je.Z)((() => Promise.all([a.e(274), a.e(4050)]).then(a.bind(a, 16848)))),
                Ir = (0, je.Z)((() => Promise.all([a.e(274), a.e(8109)]).then(a.bind(a, 15390)))),
                wr = (0, je.Z)((() => Promise.all([a.e(5931), a.e(7581), a.e(9004), a.e(274), a.e(7888), a.e(8252), a.e(411)]).then(a.bind(a, 99090)))),
                kr = (0, je.Z)((() => a.e(7606).then(a.bind(a, 67606)))),
                Tr = (0, je.Z)((() => Promise.all([a.e(5314), a.e(8106), a.e(7581), a.e(407), a.e(7493), a.e(8102), a.e(7358), a.e(2039), a.e(6480), a.e(7981), a.e(3860), a.e(9031), a.e(1789), a.e(1012), a.e(818), a.e(3052)]).then(a.bind(a, 91561)))),
                Cr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(2585)]).then(a.bind(a, 96613)))),
                Rr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(5676), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7358), a.e(9705), a.e(4459)]).then(a.bind(a, 76400)))),
                Lr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(2449)]).then(a.bind(a, 44545)))),
                Ar = (0, je.Z)((() => a.e(3594).then(a.bind(a, 73766)))),
                Pr = (0, je.Z)((() => a.e(9088).then(a.bind(a, 70203)))),
                Dr = (0, je.Z)((() => a.e(7731).then(a.bind(a, 51006)))),
                Nr = (0, je.Z)((() => a.e(983).then(a.bind(a, 36993)))),
                Or = (0, je.Z)((() => Promise.all([a.e(5931), a.e(7888), a.e(2176)]).then(a.bind(a, 38647)))),
                xr = (0, je.Z)((() => a.e(940).then(a.bind(a, 90940)))),
                Fr = (0, je.Z)((() => a.e(8946).then(a.bind(a, 80993)))),
                Mr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(8102), a.e(5298), a.e(4317), a.e(703), a.e(274), a.e(7713), a.e(42)]).then(a.bind(a, 54295)))),
                Ur = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(7170), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7358), a.e(9705), a.e(8833)]).then(a.bind(a, 96286)))),
                Hr = (0, je.Z)((() => Promise.all([a.e(8751), a.e(4e3), a.e(7170), a.e(8102), a.e(5298), a.e(4317), a.e(3925), a.e(703), a.e(6244), a.e(7358), a.e(9705), a.e(8833)]).then(a.bind(a, 10443)))),
                Gr = e => {
                    const t = ({
                        children: t
                    }) => s.createElement(Fr, {
                        feature: e
                    }, t);
                    return t.displayName = `UnavailableInZombieMode feature="${e}"`, t
                },
                Vr = e => e.flatMap((e => {
                    if (void 0 === e.subroutes) return e;
                    const {
                        components: t = [],
                        exact: a = !1,
                        path: s = "",
                        props: n = {}
                    } = e;
                    return Vr(e.subroutes).map((({
                        components: e = [],
                        exact: r = !1,
                        path: i = "",
                        props: o = {}
                    }) => ({
                        components: [...t, ...e],
                        exact: a || r,
                        path: `${s}${i}`,
                        props: { ...n,
                            ...o
                        }
                    })))
                })),
                Br = !0,
                zr = !0,
                Zr = {
                    noMobileTabbar: Br,
                    noMobileTopbar: zr
                },
                Wr = {
                    noDesktopTopbar: !0,
                    noMobileTabbar: Br,
                    noMobileTopbar: zr
                },
                $r = {
                    noContainer: !0,
                    noDesktopTopbar: !0,
                    noMobileTabbar: Br,
                    noMobileTopbar: zr
                },
                jr = ({
                    appProps: e,
                    components: t
                }) => {
                    const a = s.useMemo((() => {
                            const e = [yn, ...t].filter(je.N).filter((e => !e.hasLoaded()));
                            return 0 === e.length ? void 0 : Promise.all(e.map((e => e.preload())))
                        }), [t]),
                        r = (0, Wa.Z)([], (async () => (await a, t)), [a]),
                        i = void 0 === a ? t : r,
                        o = (() => {
                            if (t === i) return t;
                            const e = t.findIndex(((e, t) => e !== i[t]));
                            return 0 !== i.length && -1 === e ? t : t.slice(0, e)
                        })(),
                        l = (0, N.k6)(),
                        c = (0, N.TH)(),
                        d = (0, n.$B)();
                    return s.createElement(yn, { ...e
                    }, o.reduceRight(((e, t) => s.createElement(t, {
                        history: l,
                        location: c,
                        match: d
                    }, e)), null))
                },
                qr = (0, je.Z)((() => Promise.all([a.e(6243), a.e(5101), a.e(1701), a.e(3468)]).then(a.bind(a, 58345)))),
                Qr = "/business/admin",
                Kr = e => `${Qr}/${e}`,
                Yr = Kr("learners"),
                Jr = [s.createElement(n.AW, {
                    exact: !0,
                    key: "route",
                    path: Qr
                }, s.createElement(_n, {
                    to: Yr
                })), s.createElement(n.AW, {
                    key: "route",
                    path: `${Qr}/:page`
                }, s.createElement(qr, null))],
                Xr = ({
                    target: e
                }) => (s.useLayoutEffect((() => {
                    (0, O.Zs)(e, !0)
                }), []), null),
                ei = [s.createElement(n.AW, {
                    key: "route",
                    path: "/404"
                }, s.createElement(Xr, {
                    target: O.Oy
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/blog"
                }, s.createElement(Xr, {
                    target: null !== O.Ql && void 0 !== O.Ql ? O.Ql : "https://blog.duolingo.com"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: ["/careers", "/jobs"]
                }, s.createElement(Xr, {
                    target: "https://careers.duolingo.com"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/design"
                }, s.createElement(Xr, {
                    target: "https://design.duolingo.com/"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/events"
                }, s.createElement(Xr, {
                    target: "https://events.duolingo.com?source=main"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/press"
                }, s.createElement(Xr, {
                    target: "https://press.duolingo.com"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: ["/effectiveness-study", "/research"]
                }, s.createElement(Xr, {
                    target: "https://research.duolingo.com"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: ["/school", "/schools"]
                }, s.createElement(Xr, {
                    target: "https://schools.duolingo.com?source=main"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/team"
                }, s.createElement(Xr, {
                    target: "https://careers.duolingo.com/about"
                })), s.createElement(n.AW, {
                    key: "route",
                    path: "/abc"
                }, s.createElement(Xr, {
                    target: `https://abc.duolingo.com${window.location.search}`
                }))],
                ti = (0, je.Z)((() => Promise.all([a.e(4243), a.e(1002)]).then(a.bind(a, 59668)))),
                ai = (0, je.Z)((() => Promise.all([a.e(5655), a.e(132)]).then(a.bind(a, 9834)))),
                si = (0, je.Z)((() => a.e(1144).then(a.bind(a, 24328)))),
                ni = (0, je.Z)((() => Promise.all([a.e(6267), a.e(1607)]).then(a.bind(a, 35906)))),
                ri = (0, je.Z)((() => Promise.all([a.e(6267), a.e(2944)]).then(a.bind(a, 87159)))),
                ii = (0, je.Z)((() => a.e(229).then(a.bind(a, 70964)))),
                oi = (0, je.Z)((() => a.e(2129).then(a.bind(a, 20624)))),
                li = (0, je.Z)((() => a.e(8471).then(a.bind(a, 33908)))),
                ci = (0, je.Z)((() => a.e(4125).then(a.bind(a, 4258)))),
                di = (0, je.Z)((() => a.e(6342).then(a.bind(a, 34946)))),
                ui = (0, je.Z)((() => a.e(6734).then(a.bind(a, 89945)))),
                gi = (0, je.Z)((() => a.e(1190).then(a.bind(a, 58504)))),
                pi = (0, je.Z)((() => a.e(7054).then(a.bind(a, 1668)))),
                mi = (0, je.Z)((() => Promise.all([a.e(961), a.e(2988), a.e(639)]).then(a.bind(a, 25588)))),
                hi = (0, je.Z)((() => Promise.all([a.e(961), a.e(8222)]).then(a.bind(a, 97477)))),
                vi = [s.createElement(n.AW, {
                    key: "route",
                    path: "/2022-campaigns"
                }, s.createElement(ui, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/apk-download"
                }, s.createElement(si, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/business/checkout"
                }, s.createElement(ai, null)), s.createElement(n.AW, {
                    exact: !0,
                    key: "route",
                    path: "/business"
                }, s.createElement(ti, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duocon"
                }, s.createElement(li, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duocon2019"
                }, s.createElement(ni, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duocon2020"
                }, s.createElement(ri, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duocon2021"
                }, s.createElement(ii, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duocon2022"
                }, s.createElement(oi, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/duoversary"
                }, s.createElement(ci, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/efficacy/:tab?"
                }, s.createElement(di, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/share/sm"
                }, s.createElement(pi, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/share-direct/sm"
                }, s.createElement(pi, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/valyriansteel"
                }, s.createElement(gi, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/weekly-report"
                }, s.createElement(mi, null)), s.createElement(n.AW, {
                    key: "route",
                    path: "/year-in-review/2023"
                }, s.createElement(hi, null))],
                _i = () => {
                    var e;
                    return null !== (e = (0, p.rV)(p.Qt.LastAppCrashes, {
                        useSessionStorage: !0
                    })) && void 0 !== e ? e : []
                },
                fi = (0, je.Z)((() => Promise.all([a.e(6243), a.e(4270)]).then(a.bind(a, 75873)))),
                Si = (0, je.Z)((() => a.e(6557).then(a.bind(a, 36557)))),
                yi = (0, je.Z)((() => a.e(6710).then(a.bind(a, 56710)))),
                Ei = (0, je.Z)((() => a.e(7017).then(a.bind(a, 57017)))),
                bi = e => e ? fn("/p") : fn("/p", "/leaderboard"),
                Ii = fn("/", "/log-in", "/register_user"),
                wi = () => {
                    const e = (0, N.TH)(),
                        t = (() => {
                            const e = (0, m.Fx)(k.iH),
                                t = (0, m.Fx)(k.Lm),
                                a = (0, N.TH)(),
                                [n, r] = s.useState(!1),
                                [i, o] = s.useState();
                            if (i !== a) {
                                if (i && (0, g.si)(i, a), window.performance.now() / G.zq > 72) return console.log("Window too old; refreshing"), void(0, O.Zs)();
                                o(a)
                            }
                            if (!n) {
                                const e = (0, O.o_)(a);
                                if (e.pathname !== a.pathname || e.search !== a.search) return e;
                                r(!0)
                            }
                            if (t && !e && !(0, O.v$)(a.pathname)) return console.log(`Redirecting "${a.pathname}" to "/welcome" to select learning language`), `/welcome?${wt.lE}=coursePicker`
                        })(),
                        a = (() => {
                            const e = (0, m.Fx)((e => e.ui.shouldUnmount));
                            return s.useEffect((() => {
                                if (!e) return;
                                (() => {
                                    const e = _i();
                                    e.push(Date.now()), (0, p.LS)(p.Qt.LastAppCrashes, e.slice(-3), {
                                        useSessionStorage: !0
                                    })
                                })();
                                const t = async e => {
                                    await (0, h.trackRedirection)(window.location.href, e, "hard", !1), await (0, O.Zs)(e)
                                };
                                if ((() => {
                                        const e = Date.now() - 6e4;
                                        return 3 === _i().filter((t => t > e)).length
                                    })()) return (0, p.cl)(p.Qt.LastAppCrashes, {
                                    useSessionStorage: !0
                                }), void t("/errors/500.html");
                                if ("visible" === document.visibilityState) return void t((0, O.cd)());
                                const a = () => {
                                    "visible" === document.visibilityState && t((0, O.cd)())
                                };
                                return document.addEventListener("visibilitychange", a), () => document.removeEventListener("visibilitychange", a)
                            }), [e]), e
                        })(),
                        o = (0, q.Pc)(),
                        l = s.useMemo((() => (e => Vr((e => [...e ? [{
                            components: [({
                                location: e
                            }) => s.createElement(_n, {
                                to: {
                                    pathname: O.B6,
                                    search: e.search
                                }
                            })],
                            exact: !0,
                            path: "/"
                        }] : [], {
                            props: {
                                userMustBeLoggedIn: !0
                            },
                            subroutes: [{
                                components: [Rn],
                                subroutes: [{
                                    components: [Ln],
                                    path: O.B6
                                }, {
                                    components: [Gr("shop"), An],
                                    path: "/shop"
                                }]
                            }, {
                                components: [Lr],
                                exact: !0,
                                path: "/alphabets/:languageAbbrev/tips",
                                props: Zr
                            }, {
                                components: [Rr],
                                path: "/alphabets/:languageAbbrev/tips/:groupIndex/:tipIndex",
                                props: Zr
                            }, {
                                components: [Rr],
                                props: Wr,
                                subroutes: [{
                                    path: "/alphabets/:languageAbbrev/:alphabetSessionId/group/:groupId/tips"
                                }, {
                                    path: "/alphabets/:languageAbbrev/:alphabetSessionId/tips"
                                }]
                            }, {
                                components: [Gr("alphabet-lessons"), Cr],
                                path: "/characters"
                            }, {
                                components: [Gr("mistakes"), Hn, Mn],
                                exact: !0,
                                path: "/practice-hub/mistakes"
                            }, {
                                components: [Gr("practice-hub"), Hn, Un],
                                exact: !0,
                                path: "/practice-hub/stories"
                            }, {
                                components: [Gr("practice-hub"), Hn, Gn],
                                exact: !0,
                                path: O.$R
                            }, {
                                components: [Nn, Pn],
                                props: Wr,
                                subroutes: [{
                                    path: "/alphabets/:languageAbbrev/:alphabetSessionId/group/:groupId"
                                }, {
                                    path: "/alphabets/:languageAbbrev/:alphabetSessionId"
                                }, {
                                    path: "/onboarding/placement/:pathSectionNumber"
                                }, {
                                    path: "/placement/:languageAbbrev"
                                }, {
                                    path: "/practice"
                                }, {
                                    path: "/preview/:skillId/:lesson"
                                }]
                            }, {
                                components: [xn, Nn, Pn],
                                props: Wr,
                                subroutes: [{
                                    path: "/practice-hub/:practiceType"
                                }, {
                                    path: "/practice-hub/words/practice"
                                }]
                            }, {
                                components: [En, Dn],
                                props: Wr,
                                subroutes: [{
                                    exact: !0,
                                    path: "/lesson"
                                }, {
                                    path: "/lesson/section/:pathSectionNumber/test"
                                }, {
                                    path: "/lesson/unit/:pathUnitNumber/level/:pathLevelNumber"
                                }, {
                                    path: "/lesson/unit/:pathUnitNumber/legendary/:pathLevelNumber"
                                }, {
                                    path: "/lesson/unit/:pathUnitNumber/test"
                                }]
                            }, {
                                components: [Tn],
                                exact: !0,
                                path: "/guidebook/:languageAbbrev/:unitNumber",
                                props: Zr
                            }, {
                                components: [Hr],
                                exact: !0,
                                path: "/sections/details/:pathSectionNumber",
                                props: Zr
                            }, {
                                components: [Cn],
                                path: "/guidebook/preview/:fromLanguageAbbrev/:learningLanguageAbbrev/:unitNumber",
                                props: Zr
                            }, {
                                components: [xn, Pn],
                                path: "/mistakes-review",
                                props: Wr
                            }, {
                                components: [Gr("practice-hub"), Fn],
                                path: "/practice-hub"
                            }, {
                                components: [xr, wr],
                                path: "/settings",
                                props: Zr
                            }, {
                                components: [jn],
                                path: "/admin_tools"
                            }, {
                                components: [Gr("profiles"), yr],
                                path: "/user-search",
                                props: Zr
                            }, {
                                components: [Er],
                                exact: !0,
                                path: "/friend-updates"
                            }, {
                                components: [br],
                                path: "/friend-updates/:kudosFilter"
                            }, {
                                components: [Bn],
                                path: "/welcome/:linkCode?",
                                props: $r
                            }, {
                                components: [Gr("leaderboards"), Vn],
                                path: "/leaderboard",
                                props: {
                                    noMobileTopbar: zr
                                }
                            }, {
                                components: [Gr("quests"), Mr],
                                path: "/quests",
                                props: {
                                    noMobileTopbar: zr
                                }
                            }, {
                                components: [Ur],
                                exact: !0,
                                path: "/sections"
                            }]
                        }, {
                            components: [zn],
                            subroutes: [{
                                components: [Zn],
                                path: "/approach"
                            }, {
                                components: [Wn],
                                path: "/contact"
                            }, {
                                components: [$n],
                                path: "/info"
                            }]
                        }, {
                            components: [bn],
                            path: "/login-page",
                            props: $r
                        }, {
                            components: [dr],
                            path: "/abc-privacy"
                        }, {
                            components: [Gr("courses"), Qn],
                            path: "/courses/:fromLanguageId?"
                        }, {
                            components: [wn],
                            path: "/forgot_password"
                        }, {
                            components: [ur],
                            path: "/remove/:token/:email"
                        }, {
                            components: [gr],
                            path: "/confirm/:tokenType/:token",
                            props: $r
                        }, {
                            components: [pr],
                            path: "/confirm/error",
                            props: $r
                        }, {
                            components: [Kn],
                            path: "/guidelines"
                        }, {
                            components: [Yn],
                            path: "/help",
                            props: $r
                        }, {
                            components: [qn],
                            path: "/join-beta"
                        }, {
                            components: [Jn],
                            path: "/mobile"
                        }, {
                            components: [Xn],
                            path: "/participation"
                        }, ...O.a9.map((e => ({
                            components: [er],
                            path: e,
                            props: $r
                        }))), {
                            components: [sr],
                            path: "/gift/checkout",
                            props: $r
                        }, {
                            components: [ar],
                            path: "/gift",
                            props: $r
                        }, {
                            components: [tr],
                            path: "/redeem",
                            props: $r
                        }, {
                            components: [kn],
                            path: "/reset_password/:client_abbrev?"
                        }, {
                            components: [nr],
                            path: "/attribution",
                            props: {
                                noMobileTabbar: Br
                            }
                        }, {
                            components: [or],
                            path: "/privacy"
                        }, {
                            components: [lr],
                            path: "/terms"
                        }, {
                            components: [rr],
                            path: "/auto-renewal-agreement"
                        }, {
                            components: [ir],
                            path: "/cross-border-data-transfer-agreement"
                        }, {
                            components: [cr],
                            path: "/cookies"
                        }, {
                            components: [mr],
                            path: "/verify/:token"
                        }, {
                            components: [kr],
                            exact: !0,
                            path: "/stories"
                        }, {
                            components: [On, Tr],
                            path: "/stories/:storyId",
                            props: Wr
                        }, {
                            components: [Gr("profiles"), vr],
                            path: "/profile/:username",
                            subroutes: [{
                                path: "/followers"
                            }, {
                                path: "/following"
                            }]
                        }, {
                            components: [Gr("profiles"), fr],
                            path: "/profile/:username/achievements"
                        }, {
                            components: [Gr("profiles"), Ir],
                            path: "/profile/:username/friends-in-common"
                        }, {
                            components: [Gr("profiles"), _r],
                            path: "/friend-suggestions"
                        }, {
                            components: [Sr],
                            path: "/profile/:username/courses"
                        }, {
                            components: [Gr("courses"), In],
                            path: "/enroll/:learningLanguageId/:fromLanguageId?/:slug?"
                        }, {
                            components: [Ar],
                            path: "/family",
                            props: $r
                        }, {
                            components: [Pr],
                            props: $r,
                            subroutes: [{
                                path: "/family-plan"
                            }, {
                                path: "/share-family-plan"
                            }, {
                                path: "/family-plan-user-invite"
                            }]
                        }, {
                            components: [Dr],
                            exact: !0,
                            props: $r,
                            subroutes: [{
                                path: "/classroom"
                            }, {
                                path: "/classroom/:classroomCode"
                            }]
                        }, {
                            components: [Nr],
                            path: "/bango/:reseller/:token",
                            props: $r
                        }, {
                            components: [Or],
                            path: "/purchase",
                            props: $r
                        }, {
                            props: {
                                noMobileTopbar: e
                            },
                            subroutes: [{
                                components: [Gr("profiles"), hr],
                                path: "/profile/:username"
                            }, {
                                components: [Gr("profiles"), hr],
                                path: "/u/:userId"
                            }]
                        }])(e)).map((({
                            exact: e,
                            path: t,
                            props: a,
                            components: r = []
                        }) => s.createElement(n.AW, {
                            exact: e,
                            key: "route",
                            path: t
                        }, s.createElement(jr, {
                            appProps: null != a ? a : {},
                            components: r
                        })))))(o)), [o]),
                        c = s.useMemo((() => (e => i.ZP.keys(Ut.Jl).map((e => `/${(0,Ut.D3)(e)}`)).map((t => s.createElement(n.AW, {
                            exact: !0,
                            key: "route",
                            path: t
                        }, s.createElement(_n, {
                            to: (0, O.cd)(e)
                        })))))(o)), [o]);
                    if (a) return null;
                    const d = (0, O.cd)(o);
                    return t ? s.createElement(_n, {
                        to: t
                    }) : s.createElement(It, null, s.createElement(s.Suspense, {
                        fallback: null
                    }, s.createElement(n.rs, null, s.createElement(n.AW, {
                        path: "/comment"
                    }, s.createElement(_n, {
                        to: "/"
                    })), s.createElement(n.AW, {
                        path: "/discussion"
                    }, s.createElement(_n, {
                        to: "/"
                    })), s.createElement(n.AW, {
                        path: "/topic"
                    }, s.createElement(_n, {
                        to: "/"
                    })), s.createElement(n.AW, {
                        path: "/Luis"
                    }, s.createElement(_n, {
                        to: "/profile/Luis"
                    })), s.createElement(n.AW, {
                        path: "/beta-app"
                    }, s.createElement(_n, {
                        to: "/join-beta"
                    })), s.createElement(n.AW, {
                        path: "/c"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/download"
                    }, s.createElement(_n, {
                        to: "/mobile"
                    })), s.createElement(n.AW, {
                        path: "/words"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/english"
                    }, s.createElement(_n, {
                        to: "/course/en"
                    })), s.createElement(n.AW, {
                        path: "/french"
                    }, s.createElement(_n, {
                        to: "/course/fr"
                    })), s.createElement(n.AW, {
                        path: "/home"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/italian"
                    }, s.createElement(_n, {
                        to: "/course/it"
                    })), s.createElement(n.AW, {
                        path: "/join"
                    }, s.createElement(_n, {
                        to: "/classroom"
                    })), s.createElement(n.AW, {
                        path: "/kids"
                    }, s.createElement(_n, {
                        to: "/abc"
                    })), s.createElement(n.AW, {
                        path: "/labs"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/learningseason"
                    }, s.createElement(_n, {
                        to: "/2022-campaigns"
                    })), s.createElement(n.AW, {
                        path: "/learning-season"
                    }, s.createElement(_n, {
                        to: "/2022-campaigns"
                    })), s.createElement(n.AW, {
                        path: "/login"
                    }, s.createElement(_n, {
                        to: "/log-in"
                    })), s.createElement(n.AW, {
                        path: "/mm"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/mm-early-access"
                    }, s.createElement(_n, {
                        to: d
                    })), s.createElement(n.AW, {
                        path: "/nocuesta"
                    }, s.createElement(_n, {
                        to: "/2022-campaigns"
                    })), s.createElement(n.AW, {
                        path: "/o/:classroomCode"
                    }, s.createElement(_n, {
                        to: "/classroom/:classroomCode"
                    })), s.createElement(n.AW, {
                        path: "/o"
                    }, s.createElement(_n, {
                        to: "/classroom"
                    })), s.createElement(n.AW, {
                        path: "/plus"
                    }, s.createElement(_n, {
                        to: O.wl
                    })), s.createElement(n.AW, {
                        path: "/plus_view"
                    }, s.createElement(_n, {
                        to: "/settings/super"
                    })), s.createElement(n.AW, {
                        path: "/reddem"
                    }, s.createElement(_n, {
                        to: {
                            pathname: "/redeem",
                            search: e.search
                        }
                    })), s.createElement(n.AW, {
                        path: "/redem"
                    }, s.createElement(_n, {
                        to: {
                            pathname: "/redeem",
                            search: e.search
                        }
                    })), s.createElement(n.AW, {
                        path: "/reedeem"
                    }, s.createElement(_n, {
                        to: {
                            pathname: "/redeem",
                            search: e.search
                        }
                    })), s.createElement(n.AW, {
                        path: "/reedem"
                    }, s.createElement(_n, {
                        to: {
                            pathname: "/redeem",
                            search: e.search
                        }
                    })), s.createElement(n.AW, {
                        path: "/show_store"
                    }, s.createElement(_n, {
                        to: "/shop"
                    })), s.createElement(n.AW, {
                        path: "/sign-up"
                    }, s.createElement(_n, {
                        to: "/register"
                    })), s.createElement(n.AW, {
                        path: "/signup"
                    }, s.createElement(_n, {
                        to: "/register"
                    })), s.createElement(n.AW, {
                        path: "/spanish"
                    }, s.createElement(_n, {
                        to: "/course/es"
                    })), s.createElement(n.AW, {
                        path: "/start"
                    }, s.createElement(_n, {
                        to: "/register"
                    })), s.createElement(n.AW, {
                        path: "/summer2020"
                    }, s.createElement(_n, {
                        to: "/2022-campaigns"
                    })), s.createElement(n.AW, {
                        path: "/troubleshooting"
                    }, s.createElement(_n, {
                        to: "/help"
                    })), o ? Ii.filter((e => "/" !== e)).map((t => s.createElement(n.AW, {
                        key: "route",
                        path: t
                    }, s.createElement(_n, {
                        to: {
                            pathname: O.B6,
                            search: e.search
                        }
                    })))) : s.createElement(n.AW, {
                        path: O.B6
                    }, s.createElement(_n, {
                        to: {
                            pathname: "/",
                            search: e.search
                        }
                    })), ...ei, ...c, ...vi, ...Jr, (0, C.Au)() ? s.createElement(n.AW, {
                        path: "/lottie"
                    }, s.createElement(n.l_, {
                        to: "/debug/components/controls/LottieAnimationLazy"
                    })) : null, (0, C.Au)() ? s.createElement(n.AW, {
                        path: "/archSample"
                    }, s.createElement(fi, null)) : null, (0, C.Au)() ? s.createElement(n.AW, {
                        path: "/debug/:splat*"
                    }, s.createElement(Si, null)) : null, s.createElement(n.AW, {
                        path: bi(o)
                    }, s.createElement(yi, null)), s.createElement(n.AW, {
                        path: "/course/:learningLanguageId/:fromLanguageId?/:slug?"
                    }, s.createElement(Sn, null, window.duo.courseSplashRedesign ? s.createElement(tn, null) : s.createElement(Sa, null))), s.createElement(n.AW, {
                        path: "/logout"
                    }, s.createElement(Ei, null)), s.createElement(n.AW, {
                        exact: !0,
                        path: ["/referred", "/register", "/register/:languageId"]
                    }, s.createElement(hn, null)), ...l, s.createElement(n.AW, {
                        exact: !0,
                        path: Ii
                    }, s.createElement(en, null)), s.createElement(n.AW, null, s.createElement(r.Z, null)))))
                }
        },
        83544: (e, t, a) => {
            "use strict";
            a.d(t, {
                t: () => n
            });
            var s = a(97544);
            const n = (0, a(18728).md)("courseList", (() => s._s.courseList()))
        },
        3731: (e, t, a) => {
            "use strict";
            a.d(t, {
                O: () => l,
                H: () => o
            });
            var s = a(27378);
            const n = "_1E9Dt".split(" "),
                r = () => document.getElementById("root"),
                i = () => ({
                    x: window.scrollX,
                    y: window.scrollY
                }),
                o = (e, t) => {
                    s.useLayoutEffect((() => {
                        if (e) {
                            const e = l.lock();
                            return () => {
                                t || l.scrollTo(0, 0), e.release()
                            }
                        }
                    }), [e])
                },
                l = new class {
                    constructor() {
                        this.locks = new Set, this.addEventListener = (e, t) => {
                            document.addEventListener("scroll", t), r().addEventListener("scroll", t)
                        }, this.clampY = e => Math.min(Math.max(e, this.minY), this.maxY), this.lock = () => {
                            const e = {
                                release: () => {
                                    this.locks.delete(e), 0 === this.locks.size && (() => {
                                        const e = r(),
                                            {
                                                scrollLeft: t,
                                                scrollTop: a
                                            } = e;
                                        e.classList.remove(...n), window.scrollTo(t, a)
                                    })()
                                }
                            };
                            return this.locks.add(e), 1 === this.locks.size && (() => {
                                const e = r(),
                                    {
                                        x: t,
                                        y: a
                                    } = i();
                                e.classList.add(...n), e.scrollLeft = t, e.scrollTop = a, window.scrollTo(0, 0)
                            })(), e
                        }, this.removeEventListener = (e, t) => {
                            document.removeEventListener("scroll", t), r().removeEventListener("scroll", t)
                        }, this.scrollTo = (e, t) => {
                            if (this.isLocked) {
                                const a = r();
                                a.scrollLeft = e, a.scrollTop = t
                            } else window.scrollTo(e, t)
                        }, this.scrollToY = e => {
                            this.scrollTo(this.x, e)
                        }, this.getCurrentOffset = () => {
                            if (this.isLocked) {
                                const e = r();
                                return {
                                    x: e.scrollLeft,
                                    y: e.scrollTop
                                }
                            }
                            return i()
                        }
                    }
                    get isLocked() {
                        return this.locks.size > 0
                    }
                    get isScrollable() {
                        return this.scrollHeight > window.innerHeight
                    }
                    get maxY() {
                        return this.scrollHeight - window.innerHeight
                    }
                    get minY() {
                        return 0
                    }
                    get scrollHeight() {
                        return this.isLocked ? r().scrollHeight : document.documentElement.scrollHeight
                    }
                    get x() {
                        return this.getCurrentOffset().x
                    }
                    get y() {
                        return this.getCurrentOffset().y
                    }
                }
        },
        60106: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(80254);
            class n {
                constructor(e) {
                    this.listeners = [], this.subscribe = e => (this.listeners.push(e), () => {
                        this.listeners = this.listeners.filter((t => t !== e))
                    }), this.get = () => this.value(), this.set = e => {
                        this.value = s.IH(e), this.notifyListeners()
                    }, this.notifyListeners = () => {
                        this.listeners.forEach((e => e()))
                    }, this.value = s.IH(e)
                }
            }
            class r {
                constructor(e) {
                    this.listeners = [], this.substate = e => {
                        var t;
                        return null !== (t = this.substates[e]) && void 0 !== t ? t : this.makeSubstate(e, (() => {}))
                    }, this.subscribe = e => (this.listeners.push(e), () => {
                        this.listeners = this.listeners.filter((t => t !== e))
                    }), this.get = e => this.substate(e).get(), this.getAll = () => Object.fromEntries(Object.entries(this.substates).map((([e, t]) => [e, t.get()]))), this.set = (e, t) => {
                        this.substate(e).set(t)
                    }, this.makeSubstate = (e, t) => {
                        const a = new n(t);
                        return a.subscribe(this.notifyListeners), this.substates[e] = a, a
                    }, this.notifyListeners = () => {
                        this.listeners.forEach((e => e()))
                    }, this.substates = {};
                    for (const [t, a] of Object.entries(e)) this.makeSubstate(t, (() => a))
                }
            }
            r.fromSimplePersister = (e, t) => {
                var a;
                const s = new r(null !== (a = e.get()) && void 0 !== a ? a : t());
                return s.subscribe((() => {
                    e.set((() => s.getAll()))
                })), s
            };
            const i = r
        },
        40472: (e, t, a) => {
            "use strict";
            a.d(t, {
                M: () => p,
                y: () => i
            });
            const s = [
                    ["...", "…"]
                ],
                n = ["ca", "cs", "cy", "da", "de", "en", "eo", "es", "fi", "fr", "ga", "gd", "ht", "hu", "hv", "hw", "id", "it", "la", "mi", "nl-NL", "no-BO", "pl", "pt", "ro", "sv", "sw", "tl", "tr", "vi", "xx-ZB", "yu"],
                r = (e, t) => {
                    for (let a = 0; a < e.length; a++)
                        if (e[a] !== t[a]) return a;
                    return e.length
                },
                i = e => n.includes(e),
                o = [
                    ['[’\\"´‘`′ʻ́̀´]', "'"],
                    ["¡", "!"],
                    ["¿", "?"]
                ];
            class l {
                constructor(e, t = {}) {
                    this.match = (e, t) => {
                        e = this.normalize(e);
                        const a = null != t ? t : this.originalTokens,
                            s = t ? t.map((e => this.normalize(e))) : this.tokens;
                        let n, r = 0;
                        return {
                            highlights: s.map(((t, s) => {
                                const i = this.matchToken(t, e);
                                return i.index > 0 && (i.isComposing ? n = -1 : void 0 === n ? n = s : n > -1 && this.normalizeWithoutAccents(a[n]) !== this.normalizeWithoutAccents(a[s]) && (n = -1), r++), i
                            })),
                            match: null != n ? n : -1,
                            partialMatches: r
                        }
                    }, this.matchAlias = (e, t) => {
                        var a, s;
                        const n = null !== (s = null === (a = this.options.aliases) || void 0 === a ? void 0 : a.filter((([, t]) => t === e))) && void 0 !== s ? s : [];
                        let i;
                        for (const [e] of n) {
                            const a = r(e, t);
                            a > 0 && (!i || a > i.length) && (i = {
                                isComposing: a < e.length,
                                length: a
                            })
                        }
                        return i
                    }, this.matchToken = (e, t) => {
                        const a = {
                            index: 0,
                            isComposing: !1
                        };
                        for (let s = 0, n = 0; s < t.length; s++, n++) {
                            if (t[s] === e[n]) {
                                a.index++;
                                continue
                            }
                            const r = this.matchAlias(e[n], t.slice(s));
                            if (!r || r.isComposing && r.length !== t.length - s) return {
                                index: 0,
                                isComposing: !1
                            };
                            a.index++, a.isComposing = r.isComposing, s += r.length - 1
                        }
                        return a
                    }, this.normalize = e => (e = this.normalizeAccents(e), e = this.normalizeCase(e), this.normalizePatterns(e)), this.normalizeAccents = e => {
                        const {
                            accentedCharacterMap: t
                        } = this.options;
                        return t && (e = e.split("").map((e => {
                            var a;
                            return null !== (a = t[e]) && void 0 !== a ? a : e
                        })).join("")), e
                    }, this.normalizeCase = e => {
                        const {
                            ignoreCase: t
                        } = this.options;
                        return t ? e.toLowerCase() : e
                    }, this.normalizePatterns = e => {
                        const {
                            normalizationData: t
                        } = this.options;
                        return null == t || t.forEach((([t, a]) => {
                            e = e.replace(new RegExp(t, "g"), a)
                        })), e
                    }, this.normalizeWithoutAccents = e => (e = this.normalizeCase(e), this.normalizePatterns(e)), this.options = {
                        normalizationData: o,
                        ...t
                    }, this.originalTokens = e, this.tokens = e.map((e => this.normalize(e)))
                }
            }
            class c extends l {
                constructor(e, t = {}) {
                    var a;
                    super(e, { ...t,
                        aliases: [
                            ["ae", "æ"], ...null !== (a = t.aliases) && void 0 !== a ? a : s
                        ]
                    })
                }
            }
            class d extends l {
                constructor(e, t = {}) {
                    var a;
                    super(e, { ...t,
                        aliases: null !== (a = t.aliases) && void 0 !== a ? a : s
                    })
                }
            }
            class u extends l {
                constructor(e, t = {}) {
                    var a;
                    super(e, { ...t,
                        aliases: [
                            ["ae", "æ"],
                            ["oe", "œ"], ...null !== (a = t.aliases) && void 0 !== a ? a : s
                        ]
                    })
                }
            }
            class g extends l {
                constructor(e, t = {}) {
                    var a;
                    super(e, { ...t,
                        aliases: [
                            ["ss", "ß"], ...null !== (a = t.aliases) && void 0 !== a ? a : s
                        ]
                    })
                }
            }
            const p = e => {
                switch (e) {
                    case "da":
                    case "no-BO":
                        return (...e) => new c(...e);
                    case "de":
                        return (...e) => new g(...e);
                    case "fr":
                        return (...e) => new u(...e);
                    default:
                        return (...e) => new d(...e)
                }
            }
        },
        70220: (e, t, a) => {
            "use strict";
            a.d(t, {
                H: () => n,
                w: () => s
            });
            const s = e => t => {
                    " " !== t.key && "Enter" !== t.key || (e(), t.preventDefault())
                },
                n = matchMedia("(prefers-reduced-motion: reduce)").matches
        },
        84389: (e, t, a) => {
            "use strict";
            a.d(t, {
                $9: () => v,
                A9: () => d,
                ET: () => h,
                H2: () => c,
                Kv: () => u,
                Mw: () => g,
                an: () => p,
                vO: () => m
            });
            var s = a(99369),
                n = a(97544),
                r = a(8654),
                i = a(95941),
                o = a(35160);
            const l = {
                    champion: {
                        displayString: 7018,
                        getCompletedDescription: (e, t, a) => {
                            const s = e - 1;
                            if (0 === s) return (0, r.H8)(t ? 27195 : 15352, {
                                name: a
                            });
                            const n = (0, r.H8)(i.Vq[s]);
                            return (0, r.H8)(t ? 27196 : 5667, {
                                league: n,
                                name: a
                            })
                        },
                        getDescription: e => {
                            const t = e - 1;
                            if (0 === t) return (0, r.H8)(18931);
                            const a = (0, r.H8)(i.Vq[t]);
                            return (0, r.H8)(9836, {
                                league: a
                            })
                        },
                        position: 4
                    },
                    conqueror: {
                        displayString: 6676,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27197 : 17870, {
                            name: a,
                            number: e
                        }),
                        getDescription: e => (0, r.H8)(24339, {
                            number: e
                        }),
                        position: 6
                    },
                    friendly: {
                        displayString: 2148,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27198 : 21686, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(6105),
                        position: 10
                    },
                    legendary: {
                        displayString: 31855,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27199 : 7181, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(13781),
                        position: 8
                    },
                    overtime: {
                        displayString: 19748,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27200 : 11321, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(10191),
                        position: 11
                    },
                    photogenic: {
                        displayString: 20036,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27201 : 22947, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(19790),
                        position: 12
                    },
                    regal: {
                        displayString: 9220,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27202 : 4438, {
                            name: a,
                            number_1: e
                        }),
                        getDescription: e => (0, r.H8)(15694, {
                            number_1: e
                        }),
                        position: 3
                    },
                    sage: {
                        displayString: 20797,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27203 : 21311, {
                            name: a,
                            number_1: e
                        }),
                        getDescription: e => (0, r.H8)(20170, {
                            number_1: e
                        }),
                        position: 1
                    },
                    scholar: {
                        displayString: 7357,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27204 : 1301, {
                            name: a,
                            number_of_words: e
                        }),
                        getDescription: e => (0, r.H8)(22639, {
                            number_of_words: e
                        }),
                        position: 2
                    },
                    sharpshooter: {
                        displayString: 2932,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27205 : 17946, {
                            name: a,
                            number_1: e
                        }),
                        getDescription: e => (0, r.H8)(19943, {
                            number_1: e
                        }),
                        position: 5
                    },
                    strategist: {
                        displayString: 7441,
                        earn: e => {
                            n.I7.earnTipsAchievement(e)
                        },
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27206 : 18657, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(8963),
                        position: 9
                    },
                    wildfire: {
                        displayString: 6641,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27207 : 20666, {
                            name: a,
                            number_1: e
                        }),
                        getDescription: e => (0, r.H8)(5551, {
                            number_1: e
                        }),
                        position: 0
                    },
                    winner: {
                        displayString: 14814,
                        getCompletedDescription: (e, t, a) => (0, r.H8)(t ? 27208 : 19806, {
                            name: a
                        }),
                        getDescription: () => (0, r.H8)(14009),
                        position: 7
                    }
                },
                c = e => (0, s.from)((0, s.asMutable)(e).sort(((e, t) => l[e.name].position - l[t.name].position))),
                d = (e, t, a, s) => {
                    const n = t ? Math.max(0, e.tier - 1) : e.tier,
                        r = l[e.name],
                        i = e.tierCounts[n];
                    return t ? r.getCompletedDescription(i, a, s) : r.getDescription(i)
                },
                u = e => {
                    const t = l[e.name];
                    return (0, r.H8)(t.displayString)
                },
                g = e => e.tierCounts[e.tier] || 0,
                p = e => Math.max(1, e.tier < e.tierCounts.length ? e.tier + 1 : e.tier),
                m = e => e.count >= g(e),
                h = e => e.reduce(((e, t) => (e[t.name] = t, e)), {}),
                v = (e, t, a, s) => {
                    e({
                        options: {
                            achievement: t,
                            achieverName: s,
                            name: o.t.Achievement,
                            thirdPerson: a
                        },
                        replaceExisting: !1,
                        type: "TOGGLE_MODAL"
                    })
                }
        },
        51827: (e, t, a) => {
            "use strict";
            a.d(t, {
                BY: () => A,
                N1: () => b,
                Nq: () => P,
                OE: () => C,
                Ph: () => H,
                Tu: () => k,
                UG: () => G,
                XT: () => U,
                Z7: () => w,
                ZD: () => s,
                _H: () => L,
                as: () => M,
                eu: () => R,
                j2: () => T,
                kN: () => V,
                nc: () => I,
                qc: () => B,
                sb: () => O
            });
            var s, n = a(80254),
                r = a(17135),
                i = a(64115),
                o = a(53229),
                l = a(37825),
                c = a(58576),
                d = a(74971),
                u = a(84401),
                g = a(67280),
                p = a(32499),
                m = a(30839),
                h = a(79465),
                v = a(16086),
                _ = a(20028);
            ! function(e) {
                e.SessionEnd = "SESSION_END", e.Tree = "TREE"
            }(s || (s = {}));
            const f = n.IH((() => (0, o.lh)("//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js")));
            let S, y = !0;
            const E = new Promise((e => {
                    S = e
                })),
                b = e => {
                    y = e.privacySettings.includes("DISABLE_PERSONALIZED_ADS"), S()
                },
                I = async () => {
                    await f(), await E;
                    const e = (0, v.Pc)() ? y : !(0, d.Xb)("targeting");
                    (window.adsbygoogle = window.adsbygoogle || []).requestNonPersonalizedAds = e ? 1 : 0, console.log((e ? "Disable" : "Enable") + " personalized ads"), (window.adsbygoogle = window.adsbygoogle || []).push({})
                },
                w = (e, t) => {
                    var a, s;
                    if ((0, i.gQ)("disableAds") || (s = window.location.href, decodeURIComponent(s).includes("@")) || (0, _.pN)(e)) return null;
                    if (void 0 === (null === (a = e.adsConfig) || void 0 === a ? void 0 : a.units)) return null;
                    const n = e.adsConfig.units[t];
                    if (void 0 === n || "" === n.id) return null;
                    if (e.hasPlus) return (0, c.Kp)(`Premium user was inappropriately provided ads unit for placement '${t}'`), null;
                    if ((e => (0, _.jq)(e) || (0, _.dE)(e))(e) && !n.familySafe) return (0, c.Kp)(`User was inappropriately provided non-family safe ads unit (id='${n.id}') for placement '${t}'`, {
                        once: !0
                    }), null;
                    const [r, o] = n.id.split("/");
                    return {
                        client: r,
                        familySafe: n.familySafe,
                        slot: o
                    }
                },
                k = (e, t) => `${e.toLowerCase()}_ad${"showing"===t?"":`_${t}`}`,
                T = e => void 0 !== e && ["session_end_ad", "session_end_ad_blocked", "session_end_ad_showing", "tree_ad", "tree_ad_blocked", "tree_ad_showing"].includes(e),
                C = (e, t, a, s) => {
                    (0, h.track)(e, {
                        ad_network: "adsense",
                        ad_placement: t.toLowerCase(),
                        ad_type: "banner",
                        ad_unit: a,
                        family_safe: s
                    })
                },
                R = e => {
                    var t, a, s;
                    return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.some((e => e.isFreeTrial && !e.isNewYears)) : void 0
                },
                L = e => {
                    var t, a;
                    return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? null === (a = e.subscriptions.subscriptionPlans) || void 0 === a ? void 0 : a.some((e => e.isWinback)) : void 0
                },
                A = e => {
                    var t, a, s;
                    if (!(null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded)) return;
                    const n = null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.find((e => (0, p.kY)(e)));
                    return void 0 === n ? "USD" : n.planCurrency
                },
                P = (e, t) => e && t,
                D = {
                    "practice-hub-promo": "duo.internalAds.sessionEnd.practiceHubPromo",
                    standard: "duo.internalAds.sessionEnd.plus",
                    "super-video": "duo.internalAds.sessionEnd.superVideo"
                },
                N = e => (0, m.rV)(D[e]),
                O = (e, t) => {
                    let a;
                    return (0, m.No)(D[e]) ? a = N(e) : (a = null != t ? t : {
                        lastShowTimestamp: 0,
                        showCount: 0
                    }, x(e, a)), a
                },
                x = (e, t) => {
                    (0, m.LS)(D[e], t)
                },
                F = ({
                    isDesktop: e,
                    items: t,
                    user: a
                }) => !(!(0, p.X0)(t, a) || !e || (0, _.pN)(a) || 1e3 * a.creationDate > Date.now() - 1728e5),
                M = ({
                    isDesktop: e,
                    items: t,
                    user: a
                }) => {
                    if (!F({
                            isDesktop: e,
                            items: t,
                            user: a
                        })) return !1;
                    const s = O("standard", {
                            lastSessionCount: a.sessionCount,
                            lastShowTimestamp: 0,
                            showCount: 0
                        }),
                        n = Math.min(s.showCount, 7) * (0, r.dz)({
                            days: 1
                        }) * 1e3;
                    return 0 === s.showCount || Date.now() > s.lastShowTimestamp + n
                },
                U = ({
                    isDesktop: e,
                    items: t,
                    user: a
                }) => {
                    const s = (0, g.Ay)(a.plusDiscounts);
                    if (!F({
                            isDesktop: e,
                            items: t,
                            user: a
                        })) return !1;
                    if (1e3 * a.creationDate > Date.now() - 1728e5) return !1;
                    if (s) return Math.random() < .5;
                    if (O("super-video", {
                            lastSessionCount: a.sessionCount,
                            lastShowTimestamp: 0,
                            showCount: 0
                        }).lastSessionCount === a.sessionCount - 1) return !1;
                    const n = N("standard"),
                        r = void 0 === (null == n ? void 0 : n.lastSessionCount) ? void 0 : a.sessionCount - n.lastSessionCount;
                    return 2 === r || void 0 !== r && r >= 5 && Math.random() < .1
                },
                H = (e, t = "standard", a) => {
                    var s;
                    const n = O(t);
                    x(t, {
                        lastSessionCount: e,
                        lastShowTimestamp: Date.now(),
                        showCount: n.showCount + 1,
                        subtypesShown: a ? [a].concat(null !== (s = n.subtypesShown) && void 0 !== s ? s : []) : void 0
                    })
                },
                G = ({
                    isDesktop: e,
                    items: t,
                    user: a
                }) => {
                    var s, n;
                    if (!(0, p.X0)(t, a) || !(e => {
                            var t, a;
                            return e.shop.isLoaded ? null === (a = null === (t = e.shop) || void 0 === t ? void 0 : t.in_app_purchase) || void 0 === a ? void 0 : a.some((({
                                productId: e
                            }) => (0, p.RD)(e))) : void 0
                        })(t) || !e || (0, _.pN)(a)) return !1;
                    const r = null !== (n = null === (s = a.streakData.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== n ? n : 0;
                    return 7 === r || r > 0 && r % 50 == 0
                },
                V = ({
                    items: e,
                    path: t,
                    user: a
                }) => {
                    const s = (0, p.X0)(e, a),
                        n = (0, u.Hk)(t, (0, u.yi)(t, s, a));
                    if (!s || !n) return !1;
                    const i = O("practice-hub-promo", {
                            lastShowTimestamp: 0,
                            showCount: 0,
                            subtypesShown: []
                        }),
                        o = 1e3 * (0, r.dz)({
                            days: 5
                        }),
                        l = Date.now() > i.lastShowTimestamp + o,
                        c = i.subtypesShown,
                        d = !!c && c.length < 4;
                    return 0 === i.showCount || l && d
                },
                B = ({
                    levelData: e
                }) => void 0 !== e && (0, l.d)(e.level.type) && "passed" === e.level.state
        },
        40387: (e, t, a) => {
            "use strict";
            a.d(t, {
                IF: () => o,
                hM: () => r,
                jJ: () => i,
                qz: () => l
            });
            var s = a(80254),
                n = a(11811);
            const r = e => {
                    const {
                        currentIndex: t,
                        session: a,
                        session: {
                            adaptiveChallenges: r,
                            challenges: o
                        }
                    } = e;
                    if (!r) return;
                    if (i(a)) return;
                    const l = o.slice(0, t + 1),
                        c = o.slice(t + 1),
                        d = l.every((e => {
                            var t;
                            return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
                        })) && c.length === r.length,
                        u = s.jj(o, !1, (e => e.id)),
                        g = u[u.length - 1],
                        p = 1 === l.filter((e => {
                            var t;
                            return !1 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
                        })).length && t + 1 === o.indexOf(g) && g.type !== n.Sm.Speak;
                    switch (a.type) {
                        case n.FF.GlobalPractice:
                            return d ? r : p ? [r[0]] : void 0;
                        case n.FF.Lesson:
                            return d ? r : void 0;
                        default:
                            return
                    }
                },
                i = ({
                    adaptiveChallenges: e,
                    challenges: t
                }) => e && s.jV(t.map((e => e.id)), e.map((e => e.id))).length > 0,
                o = e => {
                    const {
                        currentIndex: t,
                        session: {
                            adaptiveChallenges: a,
                            challenges: n
                        }
                    } = e;
                    if (void 0 === a) return !1;
                    const r = a.map((e => e.id)),
                        i = n.slice(0, t + 1).map((e => e.id)),
                        o = n[t + 1];
                    return 0 === s.jV(i, r).length && r.includes(null == o ? void 0 : o.id)
                },
                l = (e, t) => {
                    var a, s, n, r, i;
                    e.adaptiveChallenges = null === (a = e.adaptiveChallenges) || void 0 === a ? void 0 : a.filter((e => !t.includes(e.type))), e.mistakesReplacementChallenges = null === (s = e.mistakesReplacementChallenges) || void 0 === s ? void 0 : s.filter((e => !t.includes(e.type)));
                    const o = [],
                        l = [];
                    for (let a = 0; a < e.challenges.length; a++) {
                        const s = e.challenges[a],
                            c = null !== (r = null === (n = e.adaptiveInterleavedChallenges) || void 0 === n ? void 0 : n.speakOrListenReplacementIndices[a]) && void 0 !== r ? r : null;
                        if (t.includes(s.type)) {
                            const t = null === (i = e.adaptiveInterleavedChallenges) || void 0 === i ? void 0 : i.challenges[null != c ? c : -1];
                            t && (o.push(t), l.push(null))
                        } else o.push(s), l.push(c)
                    }
                    return e.challenges = o, e.adaptiveInterleavedChallenges && (e.adaptiveInterleavedChallenges.speakOrListenReplacementIndices = l), e
                }
        },
        9979: (e, t, a) => {
            "use strict";
            a.d(t, {
                AX: () => i,
                Gg: () => c,
                Vv: () => o,
                jt: () => u,
                nN: () => l,
                q8: () => d
            });
            var s = a(4368),
                n = a(50498),
                r = a(59815);
            const i = "cubic-bezier(0.32, 0, 0.67, 0)",
                o = "cubic-bezier(0.5, 1, 0.89, 1)",
                l = 1e3 * parseFloat(s.Z["duration-fade"]),
                c = () => new Promise((e => {
                    requestAnimationFrame((() => requestAnimationFrame(e)))
                })),
                d = {
                    EaseInOutCubic: e => e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1,
                    EaseInOutQuad: e => e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1,
                    EaseInOutQuart: e => e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e,
                    EaseInOutQuint: e => e < .5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e,
                    EaseInQuad: e => e * e,
                    EaseInQuart: e => e * e * e * e,
                    EaseInQuint: e => e * e * e * e * e,
                    EaseOutCubic: e => --e * e * e + 1,
                    EaseOutExpo: e => 1 - Math.pow(2, -10 * e),
                    EaseOutQuad: e => e * (2 - e),
                    EaseOutQuart: e => 1 - --e * e * e * e,
                    EaseOutQuint: e => 1 + --e * e * e * e * e,
                    Linear: e => e
                },
                u = async ({
                    animationDelay: e = 0,
                    animationDuration: t,
                    easingFunction: a = d.Linear,
                    onAnimate: s,
                    signal: i
                }) => {
                    if (e > 0 && await (0, n._v)(e), null == i ? void 0 : i.aborted) throw new r.$K;
                    const o = Date.now(),
                        l = o + t;
                    return new Promise(((e, t) => {
                        const n = async () => {
                            await new Promise((e => {
                                requestAnimationFrame(e)
                            })), (null == i ? void 0 : i.aborted) && t(new r.$K);
                            const c = Date.now();
                            if (c < l) {
                                const e = a((c - o) / (l - o));
                                s(e), n()
                            } else s(1), e()
                        };
                        n()
                    }))
                }
        },
        56043: (e, t, a) => {
            "use strict";
            a.d(t, {
                SK: () => c,
                TK: () => d
            });
            var s = a(76986),
                n = a(78939),
                r = a(58576),
                i = a(43006),
                o = a(7113);
            const l = s,
                c = (e, t, a) => {
                    const s = (0, o.J)(e),
                        n = (0, o.J)(t),
                        r = u(s.map((e => e.word)), n.map((e => e.word)));
                    if (void 0 === r) return;
                    const {
                        firstIncorrectIndex: i,
                        lastIncorrectIndex: l
                    } = r;
                    return s.map(((e, t) => t >= i && t <= l ? e.word.length : 0)).reduce(((e, t) => e + t)) > a * e.length || !s[i] || !s[l] ? void 0 : [s[i].startIndexWithinSentence, s[l].endIndexWithinSentence]
                },
                d = (e, t, a) => {
                    const s = (0, o.J)(e),
                        n = (0, o.J)(t),
                        r = u(s.map((e => e.word)), n.map((e => e.word)));
                    if (void 0 === r) return {
                        rangeType: "all"
                    };
                    const {
                        firstIncorrectIndex: i,
                        lastIncorrectIndex: l
                    } = r, c = m(s[0].word) ? 0 : 1, d = m(s[s.length - 1].word) ? s.length - 1 : s.length - 2, g = Math.max(i, c), p = Math.min(l, d);
                    if (g === p) return {
                        blankIndex: g,
                        highlightEndIndex: s[g].endIndexWithinSentence,
                        highlightStartIndex: s[g].startIndexWithinSentence,
                        rangeType: "one"
                    };
                    const h = {
                            blankEndIndex: p + 1,
                            blankStartIndex: c
                        },
                        v = {
                            blankEndIndex: d + 1,
                            blankStartIndex: g
                        },
                        _ = s.map(((e, t) => t >= h.blankStartIndex && t < h.blankEndIndex ? e.word.length : 0)).reduce(((e, t) => e + t)),
                        f = s.map(((e, t) => t >= v.blankStartIndex && t < v.blankEndIndex ? e.word.length : 0)).reduce(((e, t) => e + t));
                    return Math.min(_, f) > a * s.map((e => e.word)).join("").length ? {
                        rangeType: "all"
                    } : _ < f ? { ...h,
                        highlightEndIndex: s[h.blankEndIndex].endIndexWithinSentence,
                        highlightStartIndex: s[h.blankStartIndex].startIndexWithinSentence,
                        rangeType: "partial"
                    } : { ...v,
                        highlightEndIndex: s[v.blankEndIndex].endIndexWithinSentence,
                        highlightStartIndex: s[v.blankStartIndex].startIndexWithinSentence,
                        rangeType: "partial"
                    }
                },
                u = (e, t) => {
                    const a = g(e, t),
                        s = p(e, t);
                    if (void 0 === a || void 0 === s) return;
                    const n = s < a,
                        i = n ? s : a,
                        o = n ? a : s;
                    if (i <= o) return {
                        firstIncorrectIndex: i,
                        lastIncorrectIndex: o
                    };
                    (0, r.Kp)("Something went wrong trying to determine the guess's incorrect range.", {
                        data: {
                            bestSolutionTokens: e,
                            detectedRange: {
                                firstDivergenceMaybeReversed: i,
                                lastDivergenceMaybeReversed: o
                            },
                            guessTokens: t
                        }
                    })
                },
                g = (e, t) => {
                    const a = h(e),
                        s = h(t);
                    for (let e = 0; e < a.length; e++)
                        if (void 0 === s[e] || (0, n.GS)((0, n.lG)(l, a[e].element)) !== (0, n.GS)((0, n.lG)(l, s[e].element))) return a[e].index;
                    if (a.length !== s.length) return a.length < s.length ? e.length : a[s.length].index
                },
                p = (e, t) => {
                    const a = h(e).reverse(),
                        s = h(t).reverse();
                    for (let e = 0; e < a.length; e++)
                        if (void 0 === s[e] || (0, n.GS)((0, n.lG)(l, a[e].element)) !== (0, n.GS)((0, n.lG)(l, s[e].element))) return a[e].index;
                    if (a.length !== s.length) return a.length < s.length ? -1 : a[a.length - s.length - 1].index
                },
                m = e => !(0 === (0, i.Dg)(e).length),
                h = e => e.map(((e, t) => m(e) ? {
                    element: e,
                    index: t
                } : {
                    element: "",
                    index: t
                })).filter((e => 0 !== e.element.length))
        },
        97544: (e, t, a) => {
            "use strict";
            a.d(t, {
                Sl: () => Y,
                eN: () => Q,
                I7: () => s,
                Wm: () => n,
                d0: () => k,
                _s: () => T,
                Vi: () => C,
                Kz: () => r,
                XY: () => o,
                zQ: () => l,
                ub: () => se,
                bG: () => c,
                Np: () => te,
                jk: () => R,
                tX: () => d,
                mJ: () => u,
                i_: () => g,
                JV: () => p,
                lB: () => m,
                Hx: () => ne,
                qF: () => h,
                dQ: () => v,
                zi: () => _,
                wO: () => f,
                xr: () => S,
                s3: () => c,
                bu: () => y,
                PA: () => E,
                uf: () => b,
                yG: () => I,
                Mw: () => w,
                a1: () => i,
                w1: () => L,
                pz: () => A,
                eB: () => P,
                AL: () => D
            });
            var s = {};
            a.r(s), a.d(s, {
                claimAchievement: () => le,
                earnTipsAchievement: () => ce,
                getAchievementsV3: () => oe,
                migrateToV3: () => de
            });
            var n = {};
            a.r(n), a.d(n, {
                getAdventuresData: () => he,
                getAdventuresSession: () => ve
            });
            var r = {};
            a.r(r), a.d(r, {
                getAvatarBuilderConfig: () => fe,
                getUserBuiltAvatar: () => Se,
                updateUserBuiltAvatar: () => ye
            });
            var i = {};
            a.r(i), a.d(i, {
                createInvoice: () => Ie,
                getB2BPricingData: () => be,
                submitInvoice: () => ke,
                updateInvoice: () => we
            });
            var o = {};
            a.r(o), a.d(o, {
                B2B_UNIVERSAL_CLOCK_CODE_PREFIX: () => Ce,
                downloadCodes: () => Fe,
                getCodes: () => Pe,
                getDownloadReportUrl: () => Ge,
                getOrganizations: () => Re,
                getPurchases: () => Ae,
                getReports: () => He,
                getSubscriptions: () => De,
                redeemCode: () => Ue,
                removeCode: () => Ne,
                removeSubscription: () => Oe,
                sendCodes: () => xe,
                updateOrganization: () => Le,
                validateCode: () => Me
            });
            var l = {};
            a.r(l), a.d(l, {
                getCharacterChart: () => ze,
                getExpandedViewInfo: () => $e,
                sessionCreate: () => We,
                sessionSubmit: () => Ze
            });
            var c = {};
            a.r(c), a.d(c, {
                getBrbStatus: () => Qe,
                getCefrContent: () => Je,
                getExplanation: () => Ke,
                getGrammarConcept: () => Xe,
                getGuidebook: () => Ye,
                getLottieAnimation: () => et,
                getSmartTip: () => at,
                getZombieStatus: () => st,
                requestGradingConfig: () => nt
            });
            var d = {};
            a.r(d), a.d(d, {
                deleteFeedReaction: () => dt,
                getFeedReactions: () => it,
                markFeedSeen: () => ut,
                sendFeedReactions: () => ct
            });
            var u = {};
            a.r(u), a.d(u, {
                addModerator: () => ft,
                isSpecialForumTopic: () => mt,
                listAllMods: () => _t,
                listMods: () => vt,
                listTopics: () => ht,
                removeModerator: () => St,
                undeleteComment: () => pt
            });
            var g = {};
            a.r(g), a.d(g, {
                NUDGE_TRACKING_NAMES: () => bt,
                block: () => Gt,
                blockUserWithToken: () => Bt,
                deleteFriendRecommendation: () => Dt,
                facebookToDuolingo: () => Wt,
                follow: () => Ut,
                getFeedV2: () => wt,
                getFollowers: () => Ft,
                getFollowing: () => xt,
                getFriendRecommendations: () => At,
                getFriendsInCommon: () => Mt,
                getKudosAssets: () => Tt,
                getKudosDrawerV2: () => Ct,
                getSocialProfile: () => Ot,
                markDrawerSeen: () => Lt,
                postFriendsQuestNudge: () => $t,
                requestParentalConsentForSocial: () => zt,
                searchUsers: () => Nt,
                sendTriggeredKudos: () => Rt,
                unblock: () => Vt,
                unfollow: () => Ht,
                updateFriendRecommendations: () => Pt,
                updateSocialSettingWithToken: () => Zt
            });
            var p = {};
            a.r(p), a.d(p, {
                getQuestProgress: () => Qt,
                getQuestsData: () => Kt,
                getQuestsSchema: () => qt,
                postQuestComplete: () => Yt,
                sendBatchUpdate: () => Jt
            });
            var m = {};
            a.r(m), a.d(m, {
                submitDuoconForm: () => ea,
                submitHighValyrianForm: () => ta
            });
            var h = {};
            a.r(h), a.d(h, {
                lV: () => sa,
                Y4: () => ra,
                LE: () => na
            });
            var v = {};
            a.r(v), a.d(v, {
                LEAGUES_DOGFOODING_LEADERBOARD_ID: () => da,
                LEAGUES_ID: () => ca,
                SCHOOLS_CLASSROOM_LEADERBOARD_ID: () => pa,
                TOURNAMENT_DOGFOODING_LEADERBOARD_ID: () => ua,
                TOURNAMENT_LEADERBOARD_ID: () => ga,
                get: () => wa,
                getLeaguesLeaderboardId: () => ha,
                getReactionUncohorted: () => La,
                getTournamentLeaderboardId: () => ma,
                patch: () => Ta,
                post: () => ka,
                setReactionCohorted: () => Ra,
                setReactionUncohorted: () => Aa
            });
            var _ = {};
            a.r(_), a.d(_, {
                ackHomeMessage: () => Da,
                ackSessionEndMessages: () => Na,
                getHomeMessages: () => Oa,
                getSessionEndMessages: () => xa
            });
            var f = {};
            a.r(f), a.d(f, {
                clearUngeneratableMistakes: () => Ga,
                getMistakeCount: () => Ua,
                getMistakes: () => Ha
            });
            var S = {};
            a.r(S), a.d(S, {
                trackSplashLoad: () => Ba
            });
            var y = {};
            a.r(y), a.d(y, {
                AssignmentType: () => za,
                CONTENT_SPECIFIC_ASSIGNMENT_TYPES: () => Za,
                autoFollowClassmates: () => Ja,
                getClassroomByCode: () => qa,
                getSessionActivitiesByUser: () => Xa,
                getUserClassroomLeaderboardInfo: () => Ya,
                getUserClassrooms: () => ja,
                joinClassroom: () => Qa,
                leaveClassroom: () => Ka
            });
            var E = {};
            a.r(E), a.d(E, {
                detectDuplicates: () => ts,
                fullyConnectDuplicates: () => as,
                getFeatures: () => ss,
                getSlackReportTypes: () => ns,
                getSuggestedFeatures: () => rs,
                reportIssue: () => is
            });
            var b = {};
            a.r(b), a.d(b, {
                sendDownloadSMS: () => ls
            });
            var I = {};
            a.r(I), a.d(I, {
                ReportReason: () => us,
                reportProfileUser: () => gs
            });
            var w = {};
            a.r(w), a.d(w, {
                getPracticeHubStories: () => Ss,
                getStory: () => ms,
                postStoryComplete: () => hs,
                recordUserReply: () => vs
            });
            var k = {};
            a.r(k), a.d(k, {
                dismissNotification: () => ws,
                getDeleteModLog: () => ks,
                getNotifications: () => bs,
                getShadowbannedUsers: () => Ts,
                getSocialCurrencyStats: () => Ls,
                logout: () => Es,
                shadowbanUser: () => Cs,
                unshadowbanUser: () => Rs,
                uploadAvatar: () => Is
            });
            var T = {};
            a.r(T), a.d(T, {
                convertRemoteLanguageId: () => Os,
                courseList: () => Ms,
                courseShow: () => Us,
                courseSubscribe: () => Bs,
                courseUnsubscribe: () => zs,
                getLanguageTokens: () => Hs,
                legacyLanguageId: () => xs,
                registerDevice: () => Gs,
                unregisterDevice: () => Vs,
                userBan: () => Ns
            });
            var C = {};
            a.r(C), a.d(C, {
                ChallengeReports: () => Rn,
                EventType: () => tn,
                PasswordContext: () => rn,
                addUserStripePaymentMethod: () => Mn,
                anonymousValidatePromoCode: () => Zn,
                attachUserStripePaymentMethod: () => Hn,
                challengeCreate: () => Cn,
                checkPasswordQuality: () => ln,
                consumeReward: () => tr,
                createPaymentMethodSetup: () => Un,
                createUserSuperDiscount: () => sr,
                crossgradePreview: () => Vn,
                emailVerificationSend: () => mn,
                emailVerificationUpdate: () => hn,
                forgotPassword: () => Xn,
                getConfig: () => Qn,
                getCustomAcquisitionSurveyResponses: () => ar,
                getPackageNameFromPromoCodeRaw: () => an,
                getShopItems: () => An,
                getSubscriptionPlans: () => Pn,
                getUnfilteredPrivacySettings: () => Yn,
                getUnitOfTimeFromPromoCodeRaw: () => sn,
                getUserInventory: () => Fn,
                getUserPaymentMethods: () => xn,
                getUserShopItem: () => Dn,
                getUserVocabSummary: () => ir,
                getUserXPSummaries: () => En,
                login: () => nn,
                patchUserShopItem: () => Nn,
                purchaseShopItemGift: () => zn,
                purchaseUserShopItem: () => Bn,
                registerTrackingStatus: () => er,
                removeEmailUpdate: () => vn,
                removeHeart: () => rr,
                reportSentence: () => Ln,
                resetPassword: () => cn,
                sessionCreate: () => kn,
                sessionSubmit: () => Tn,
                subscribeToBangoPlan: () => qn,
                subscriptionOrderCreate: () => Gn,
                treatUser: () => nr,
                updatePrivacySettings: () => Jn,
                updateUserStripePaymentMethod: () => On,
                useUserShopItem: () => Kn,
                userCreate: () => dn,
                userDeleteCourse: () => wn,
                userIdsByUsername: () => fn,
                userInfo: () => un,
                userInfoPartial: () => pn,
                userMessage: () => In,
                userModeratedEvents: () => bn,
                userProfileInfo: () => gn,
                userSearchByEmail: () => Sn,
                userUpdate: () => yn,
                usernameValidate: () => _n,
                validateBangoToken: () => jn,
                validatePromoCode: () => Wn
            });
            var R = {};
            a.r(R), a.d(R, {
                acceptFamilyPlanDirectInvite: () => pr,
                acceptFamilyPlanInviteCode: () => cr,
                getFamilyPlanUserInvite: () => gr,
                rejectFamilyPlanDirectInvite: () => mr,
                removeUserFromFamilyPlan: () => hr,
                sendFamilyPlanDirectInvite: () => dr,
                validateFamilyInviteToken: () => lr,
                withdrawFamilyPlanDirectInvite: () => ur
            });
            var L = {};
            a.r(L), a.d(L, {
                getReport: () => _r
            });
            var A = {};
            a.r(A), a.d(A, {
                getLearnedLexemes: () => Sr,
                getLearnedLexemesCount: () => yr,
                getPracticeLexemes: () => Er,
                getSupportedCourses: () => br
            });
            var P = {};
            a.r(P), a.d(P, {
                getReport: () => Tr,
                getReportId: () => kr,
                openReport: () => Cr
            });
            var D = {};
            a.r(D), a.d(D, {
                postRequest: () => Pr,
                postUploadFile: () => Ar
            });
            var N = a(54174),
                O = a(54412),
                x = a(58576),
                F = a(18804),
                M = a(16086),
                U = a(20028),
                H = a(80254),
                G = a(59815),
                V = a(53229),
                B = a(79465);
            const z = e => encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
            class Z extends G.pY {
                constructor(e, {
                    duration: t,
                    request: a,
                    response: s
                }) {
                    super(e), this.duration = t, this.request = a, this.response = s
                }
                get name() {
                    return "HttpClientError"
                }
            }
            const W = Z;
            class $ extends G.pY {
                static from(e, t) {
                    if (e instanceof $) return e;
                    const a = new $("string" == typeof e ? e : e.message);
                    return a.response = t, a
                }
            }
            const j = H.P2((e => {
                    var t, a;
                    Math.random() < (null !== (a = null === (t = (0, F.globalGetState)()) || void 0 === t ? void 0 : t.config.featureFlags.web_api_rate_limited_sampling_rate) && void 0 !== a ? a : 0) && (0, B.track)("api_rate_limited", {
                        host: e
                    })
                }), 6e4),
                q = H.P2((e => {
                    var t, a;
                    Math.random() < (null !== (a = null === (t = (0, F.globalGetState)()) || void 0 === t ? void 0 : t.config.featureFlags.web_api_not_acceptable_sampling_rate) && void 0 !== a ? a : 0) && (0, B.track)("api_request_not_acceptable", {
                        host: e
                    })
                }), 6e4),
                Q = class {
                    constructor(e) {
                        this.addCacheBuster = !1, this.errorInterceptors = [], this.interceptors = [], this.throwsOnError = !0, this.useFormEncoding = !1, this.withCredentials = !1, this.getAdditionalHeaders = e => ({}), this.mapResponse = (e, t) => ({
                            data: t,
                            headers: Object.fromEntries(e.headers.entries()),
                            status: e.status,
                            statusText: e.statusText
                        }), this.parseJsonResponse = e => e.text().then((t => {
                            try {
                                return t ? JSON.parse(t) : void 0
                            } catch (a) {
                                throw $.from(a, this.mapResponse(e, t))
                            }
                        })), this.baseUrl = (null == e ? void 0 : e.startsWith("/")) ? `${window.location.origin}${e}` : null != e ? e : ""
                    }
                    addErrorInterceptor(e) {
                        return this.errorInterceptors.push(e), this
                    }
                    addResponseInterceptor(e) {
                        return this.interceptors.push(e), this
                    }
                    delete(e, t, a) {
                        return this.request("DELETE", e, t, a)
                    }
                    dontThrowOnError() {
                        return this.throwsOnError = !1, this
                    }
                    enableCacheBuster() {
                        return this.addCacheBuster = !0, this
                    }
                    enableCredentials() {
                        return this.withCredentials = !0, this
                    }
                    enableFormEncoding() {
                        return this.useFormEncoding = !0, this
                    }
                    get(e, t) {
                        return this.request("GET", e, void 0, t)
                    }
                    getBlob(e, t) {
                        return this.request("GET", e, void 0, t, "blob")
                    }
                    download(e, t, a, s) {
                        return this.request(e, t, a, s, "blob").then((e => {
                            const t = window.URL.createObjectURL(e.data);
                            window.location.assign(t)
                        }))
                    }
                    getBuffer(e, t) {
                        return this.request("GET", e, void 0, t, "arraybuffer")
                    }
                    getText(e, t) {
                        return this.request("GET", e, void 0, t, "text")
                    }
                    patch(e, t, a) {
                        return this.request("PATCH", e, t, a)
                    }
                    post(e, t, a) {
                        return this.request("POST", e, t, a)
                    }
                    put(e, t, a) {
                        return this.request("PUT", e, t, a)
                    }
                    buildUrl(e, t, a = {}) {
                        const s = a.params instanceof URLSearchParams ? new URLSearchParams(a.params) : { ...a.params
                        };
                        this.addCacheBuster && "GET" === e && (s instanceof URLSearchParams ? s.set("_", `${Date.now()}`) : s._ = Date.now());
                        let n = ((e, t) => {
                            let a;
                            if (t instanceof URLSearchParams) a = t.toString();
                            else {
                                const e = [];
                                for (const [a, s] of Object.entries(t)) {
                                    if (null == s) continue;
                                    const t = Array.isArray(s) ? `${a}[]` : a,
                                        n = Array.isArray(s) ? s : [s];
                                    for (const a of n) {
                                        const s = a instanceof Date ? a.toISOString() : "object" == typeof a && null !== a ? JSON.stringify(a) : a;
                                        e.push(`${z(t)}=${z(s)}`)
                                    }
                                }
                                a = e.join("&")
                            }
                            return a && (e += (e.includes("?") ? "&" : "?") + a), e
                        })(t, s);
                        return n = (0, V.qy)(n.startsWith("//") ? n : n.startsWith("/") ? `${this.baseUrl}${n}` : n), n
                    }
                    async request(e, t, a, s = {}, n = "json") {
                        const r = (() => {
                                const e = window.performance.now();
                                return () => 100 * Math.pow(2, Math.round(Math.log2((window.performance.now() - e) / 100)))
                            })(),
                            i = { ...s.headers,
                                ...this.getAdditionalHeaders(t)
                            },
                            o = this.buildUrl(e, t, s);
                        !this.useFormEncoding || !a || a instanceof FormData || (a = (0, V.Vp)(a), i["Content-Type"] = "application/x-www-form-urlencoded; charset=UTF-8"), "json" === n && (i.Accept = "application/json; charset=UTF-8");
                        const l = (async () => {
                            var t;
                            void 0 === a || a instanceof FormData || (null == i ? void 0 : i["Content-Type"]) || (i["Content-Type"] = "application/json; charset=UTF-8");
                            const r = new AbortController;
                            void 0 !== s.timeout && setTimeout((() => r.abort()), s.timeout);
                            const l = await fetch(o, {
                                    body: a instanceof FormData || this.useFormEncoding ? a : JSON.stringify(a),
                                    credentials: this.withCredentials ? "include" : "same-origin",
                                    headers: i,
                                    method: e,
                                    signal: r.signal
                                }).catch((e => {
                                    throw $.from(e, void 0)
                                })),
                                c = !0 === s.forceJsonDecoding || (null === (t = l.headers.get("content-type")) || void 0 === t ? void 0 : t.split(";").some((e => "application/json" === e.trim())));
                            406 === l.status ? q((0, V.Fo)(l.url)) : 429 === l.status && j((0, V.Fo)(l.url));
                            const d = ("arraybuffer" === n ? l.arrayBuffer() : "blob" === n ? l.blob() : "text" === n ? l.text() : c ? this.parseJsonResponse(l) : Promise.resolve(void 0)).catch((e => {
                                    throw $.from(e, this.mapResponse(l, void 0))
                                })),
                                u = this.mapResponse(l, await d);
                            if (this.throwsOnError && !l.ok) throw $.from(`Request failed with status code ${l.status}`, u);
                            return u
                        })();
                        try {
                            const e = await l;
                            return this.interceptors.forEach((t => t(e))), e
                        } catch (s) {
                            const n = new W(s.message, {
                                duration: r(),
                                request: {
                                    body: a,
                                    headers: i,
                                    method: e,
                                    url: o
                                },
                                response: s.response
                            });
                            throw this.errorInterceptors.forEach((e => e(t, n))), n
                        }
                    }
                },
                K = e => new Array(e).fill(null).map((() => Math.floor(16 * Math.random()).toString(16))).join(""),
                Y = class extends Q {
                    constructor(e) {
                        super(e), this.addBearer = !1, this.addTraceHeaders = !1, this.serviceMap = {}, this.getAdditionalHeaders = e => {
                            var t, a, s;
                            const n = {},
                                r = (0, O.ej)(O.Vj.JWT);
                            if (this.addBearer && r && (n.Authorization = `Bearer ${r}`), this.addTraceHeaders) {
                                if (r) {
                                    const e = null !== (t = (0, M.MJ)(r)) && void 0 !== t ? t : 0;
                                    n["X-Amzn-Trace-Id"] = `User=${e}`
                                } else n["X-Amzn-Trace-Id"] = "User=0";
                                const i = null === (a = null === F.globalGetState || void 0 === F.globalGetState ? void 0 : (0, F.globalGetState)()) || void 0 === a ? void 0 : a.config,
                                    o = null === (s = null === F.globalGetState || void 0 === F.globalGetState ? void 0 : (0, F.globalGetState)()) || void 0 === s ? void 0 : s.user;
                                (null == i ? void 0 : i.featureFlags.web_send_jaeger_debug_id_in_admin_requests) && void 0 !== o && (0, U.Sk)(o) && (n.traceparent = `00-${K(32)}-${K(16)}-01`), "/deactivate" !== e && "/logout" !== e && (n["X-Requested-With"] = "XMLHttpRequest")
                            }
                            const i = Object.entries(this.serviceMap);
                            return i.length && (n["x-duolingo-service-map"] = i.map((([e, t]) => `${e}=${t}`)).join(";")), n
                        }, super.enableCredentials()
                    }
                    enableBearer() {
                        return this.addBearer = !0, this
                    }
                    enableTraceHeaders() {
                        return this.addTraceHeaders = !0, this
                    }
                    setServiceEnvironment(e, t) {
                        return t ? this.serviceMap[e] = t : delete this.serviceMap[e], this
                    }
                    async request(e, t, a, s = {}, n = "json") {
                        const r = (0, F.globalGetState)();
                        return r && (0, N.d)(r) && !t.startsWith("/admin_tools") && ((0, x.Kp)("Performing backend request while Zombie mode is enabled", {
                            data: {
                                method: e,
                                url: t
                            }
                        }), console.trace()), super.request(e, t, a, s, n)
                    }
                };
            var J = a(64115),
                X = a(30839);
            const ee = (e, t = !0) => {
                    const a = e && (0, J.gQ)("edgeGatewayStaging") ? e.replace("www.duolingo", "www-stage.duolingo") : e,
                        s = new Y(a).addErrorInterceptor(((e, {
                            response: t
                        }) => {})).addResponseInterceptor((e => {})).enableCacheBuster().enableTraceHeaders();
                    return t && s.enableBearer(), s
                },
                te = (e = "") => {
                    const t = (0, J.pL)();
                    return void 0 !== t ? ee(`https://www.duolingo.com${e}`).setServiceEnvironment("monolith", `next-${t}`) : /[^.]*api[^.]*.duolingo.(com|cn)/.test(window.location.host) ? ee(`https://www.duolingo.com${e}`) : ee(e)
                },
                ae = e => ee(e).enableFormEncoding(),
                se = () => {
                    H.VO(O.Vj).forEach((e => (0, O.nJ)(e))), (0, X.cl)(X.Qt.State);
                    try {
                        new Promise((e => {
                            window.FB ? window.FB.logout((() => e())) : e()
                        }))
                    } catch {}
                },
                ne = e => e instanceof W || null != e && "HttpClientError" === e.name,
                re = ["champion", "conqueror", "friendly", "legendary", "overtime", "photogenic", "regal", "sage", "scholar", "sharpshooter", "strategist", "wildfire", "winner"],
                ie = ee("https://duolingo-achievements-prod.duolingo.com"),
                oe = async (e, t, a, s, n, r, i) => {
                    const o = `/users/${e}/achievements`;
                    if (!t || !a) return [];
                    const l = {
                        fromLanguage: t,
                        hasPlus: i ? 1 : 0,
                        isAgeRestricted: s ? 1 : 0,
                        isProfilePublic: n ? 1 : 0,
                        isSchools: r ? 1 : 0,
                        learningLanguage: a
                    };
                    return (c = (await ie.get(o, {
                        params: l
                    })).data, null !== (d = c.achievements) && void 0 !== d ? d : []).filter((({
                        name: e
                    }) => re.includes(e)));
                    var c, d
                },
                le = async (e, t) => {
                    const a = `/users/${t}/${e.name}/${e.tier}/claim`;
                    await ie.post(a, {})
                },
                ce = async e => {
                    const t = `/users/${e}/update`;
                    await ie.post(t, {
                        tip_read: !0
                    })
                },
                de = async (e, t = !0) => {
                    const a = `/users/${e}/migrate`;
                    await ie.post(a, {
                        async: t,
                        dryRun: !1
                    })
                };
            var ue = a(11811),
                ge = a(97106);
            const pe = "https://d2se1kx5o10dcw.cloudfront.net",
                me = ee(pe),
                he = async e => (await me.getBuffer(e.split(pe)[1])).data,
                ve = (e, t, a) => Promise.resolve({
                    beginner: !1,
                    challengeTimeTakenCutoff: 0,
                    challenges: [],
                    confidence: 0,
                    enableBonusPoints: !1,
                    endTime: 0,
                    episodeUrl: a,
                    failed: !1,
                    fromLanguage: e,
                    heartBonus: 0,
                    heartsLeft: 5,
                    id: Math.random().toString(36),
                    learnedSkills: [],
                    learningLanguage: t,
                    metadata: {},
                    startTime: Date.now(),
                    trackingProperties: {},
                    type: ue.FF.Adventures,
                    xpGain: ge.on
                }),
                _e = te(""),
                fe = async (e, t) => (await _e.get(`/users/${e}/avatar-builder-config`, {
                    params: {
                        uiLanguage: t
                    }
                })).data.avatarBuilderConfig,
                Se = async e => (await _e.get(`/users/${e}/built-avatar-states`)).data.builtAvatarStates[0],
                ye = async (e, t) => {
                    const a = `/users/${e}/built-avatar-states`,
                        s = {
                            builtAvatarStates: [t]
                        };
                    await _e.patch(a, s)
                },
                Ee = ee("https://www.duolingo.com", !1),
                be = async e => (await Ee.get("/b2b/pricing/", {
                    params: {
                        country_code: e
                    }
                })).data,
                Ie = async e => (await Ee.post("/subscription-codes/invoices/", e)).data,
                we = async (e, t) => (await Ee.patch(`/subscription-codes/invoices/${e}/`, t)).data,
                ke = async e => (await Ee.post(`/subscription-codes/invoices/${e}/finalize/`)).data,
                Te = te(),
                Ce = "B_",
                Re = async () => (await Te.get(`/b2b/users/${(0,M.Jb)()}/organizations`)).data,
                Le = async (e, t) => {
                    await Te.put(`/b2b/organizations/${e}`, t)
                },
                Ae = async e => (await Te.get(`/b2b/organizations/${e}/purchases`)).data,
                Pe = async e => (await Te.get(`/b2b/purchases/${e}/codes`)).data,
                De = async e => (await Te.get(`/b2b/purchases/${e}/subscriptions`)).data,
                Ne = async e => 200 === (await Te.delete(`/b2b/codes/${e}`)).status,
                Oe = async e => 200 === (await Te.delete(`/b2b/subscriptions/${e}`)).status,
                xe = async (e, t) => (await Te.post(`/b2b/purchases/${e}/codes/send`, t)).data,
                Fe = e => Te.download("POST", `/b2b/purchases/${e}/codes/download`),
                Me = async e => (await Te.get(`/b2b/codes/${e}`)).data,
                Ue = async e => {
                    await Te.post(`/b2b/codes/${e}/redeem`)
                },
                He = async e => Te.get(`/b2b/organizations/${e}/reports`).then((({
                    data: e
                }) => e)),
                Ge = (e, t) => Te.buildUrl("GET", `/b2b/organizations/${e}/reports/${t}`);
            var Ve = a(88868);
            ee(`https://${window.location.host===Ve.a_?Ve.a_:"www.duolingo.com"}/2017-06-30/beta-program`);
            const Be = ee("https://www-prod.duolingo.com/2017-06-30/alphabets"),
                ze = async (e, t, a) => {
                    const s = {
                        params: {
                            alphabetsPathProgressKey: a
                        }
                    };
                    return (await Be.get(`/courses/${e}/${t}`, s)).data
                },
                Ze = async e => Be.put(`/sessions/${e.learningLanguage}/${e.fromLanguage}/${e.id}`, e),
                We = async (e, t, a) => Be.post(`/sessions/${e}/${t}`, a),
                $e = async e => (await Be.get(`/courses/${e.learningLanguage}/${e.fromLanguage}/expandedViewInfo/${e.expandedViewId}`, {
                    params: e
                })).data;
            var je = a(17135);
            const qe = new Q,
                Qe = async () => void 0 === (await tt("brb")).brb_version ? "disabled" : "enabled",
                Ke = async e => (await qe.get(e)).data,
                Ye = async e => (await qe.get(e)).data,
                Je = async e => (await qe.get(e)).data,
                Xe = async e => (await qe.get(e)).data,
                et = async e => (await qe.get(e)).data,
                tt = async e => {
                    let t;
                    try {
                        t = (0, M.Jb)()
                    } catch {
                        t = 0
                    }
                    const a = t % 100;
                    try {
                        return (await qe.get(`https://${e}.duolingo.com/${a}/web.json?user=${t}&ts=${(0,je.Zo)()}&tzoffset=${(0,je.pQ)()/-60}`, {
                            forceJsonDecoding: !0,
                            timeout: 1e4
                        })).data
                    } catch {
                        return {}
                    }
                },
                at = async e => (await qe.get(e)).data,
                st = async () => !0 === (await tt("zombie")).enforce_offline ? "enabled" : "disabled",
                nt = async () => (await qe.get("https://d3kwyfyztuo0xs.cloudfront.net/config/latest/0.9.6", {
                    forceJsonDecoding: !0
                })).data,
                rt = (ee("https://explanations.duolingo.com"), te("")),
                it = async (e, t, a, s, n) => {
                    var r;
                    if (null === (r = null == a ? void 0 : a.featureFlags) || void 0 === r ? void 0 : r.feed_microservice_web_client) {
                        const a = void 0 === n ? {
                                limit: s
                            } : {
                                limit: s,
                                start: n
                            },
                            r = (await rt.get(`/card/${e}/reactions/${t}`, {
                                params: a
                            })).data;
                        return ot(r)
                    }
                    return {
                        cursor: null,
                        userReactions: []
                    }
                },
                ot = e => {
                    const t = e.userReactions.map((e => ({ ...e,
                        reactionType: e.reactionType.toLowerCase()
                    })));
                    return { ...e,
                        userReactions: t
                    }
                },
                lt = async (e, t, a) => {
                    await Promise.all(e.map((e => {
                        var s;
                        const n = {
                            groupId: e,
                            reaction: null !== (s = null == t ? void 0 : t.toUpperCase()) && void 0 !== s ? s : "NONE",
                            reactionTimestamp: Date.now(),
                            trackingProperties: a ? {
                                screen: a
                            } : void 0,
                            userId: (0, M.Jb)()
                        };
                        rt.post("/card/reaction", n)
                    })))
                },
                ct = async (e, t, a) => {
                    await lt(e, t, a)
                },
                dt = async e => {
                    await lt([e])
                },
                ut = async (e, t, a) => {
                    const s = {
                        application: "LEARNING",
                        timestamp: Date.now()
                    };
                    await rt.post(`/users/${e}/feed/seen`, {
                        trackingProperties: t.map((e => ({
                            eventId: e.eventId,
                            kudosTrigger: null == e ? void 0 : e.triggerType,
                            kudosType: null == e ? void 0 : e.cardType,
                            screen: a
                        })))
                    }, {
                        params: s
                    })
                },
                gt = ae("https://forum-api.duolingo.com"),
                pt = e => gt.post(`/comments/${e}/undelete`),
                mt = e => null === e.learning_language,
                ht = async () => (await gt.post("/diagnostics/topic_moderators/list_topics")).data,
                vt = async e => (await gt.post("/diagnostics/topic_moderators/list_mods", {
                    topic_id: e
                })).data,
                _t = async () => (await gt.post("/diagnostics/topic_moderators/list_mods")).data,
                ft = async (e, t) => (await gt.post("/diagnostics/topic_moderators/add", {
                    topic_id: e,
                    user_id: t
                })).data,
                St = async (e, t) => (await gt.post("/diagnostics/topic_moderators/remove", {
                    topic_id: e,
                    user_id: t
                })).data,
                yt = {
                    LESSONS: "lessons",
                    NINETY_ACCURACY_LESSONS: "ninetyPercentLessons",
                    PERFECT_LESSONS: "perfectLessons",
                    XP: "xp"
                },
                Et = ["KUDOS_MILESTONE", "KUDOS_OFFER", "NUDGE"],
                bt = {
                    hiAllStar: "hi_all_star",
                    hiDreamTeam: "hi_dream_team",
                    hiFlex: "hi_flex",
                    hiHighFive: "hi_high_five",
                    nudgeClaws: "nudge_claws",
                    nudgeFlex: "nudge_flex",
                    nudgeHighFive: "nudge_high_five",
                    nudgeSadDuo: "nudge_sad_duo"
                },
                It = te("/2017-06-30/friends"),
                wt = async (e, t, a, s) => {
                    var n;
                    if (null === (n = null == a ? void 0 : a.featureFlags) || void 0 === n ? void 0 : n.friends_microservice_web_client) {
                        const a = (await It.get(`/users/${e}/feed/v2`, {
                            params: {
                                uiLanguage: t,
                                ...void 0 === s ? {} : {
                                    after: s
                                }
                            }
                        })).data;
                        return kt(a)
                    }
                    return {
                        feed: [],
                        kudosConfig: {
                            reactions: [],
                            shareLabel: ""
                        }
                    }
                },
                kt = e => {
                    const t = e.feed.map((e => {
                        const t = e.feedCards.filter((e => Et.includes(e.cardType)));
                        return { ...e,
                            feedCards: t
                        }
                    }));
                    return { ...e,
                        feed: t
                    }
                },
                Tt = async e => {
                    var t;
                    if (null === (t = null == e ? void 0 : e.featureFlags) || void 0 === t ? void 0 : t.friends_microservice_web_client) {
                        const e = (await It.get("/kudos/assets")).data;
                        return { ...e.kudosFeedAssets,
                            ...e.kudosDrawerAssets
                        }
                    }
                    return {}
                },
                Ct = async (e, t, a) => {
                    var s;
                    if (null === (s = null == a ? void 0 : a.featureFlags) || void 0 === s ? void 0 : s.friends_microservice_web_client) {
                        const a = (await It.get(`/kudos/${e}/drawer/v2`, {
                            params: {
                                uiLanguage: t
                            }
                        })).data.kudosDrawer;
                        return null != a ? a : null
                    }
                    return null
                },
                Rt = async (e, t) => {
                    await It.post("/kudos", {
                        triggerTypes: e,
                        triggerUserIds: t
                    })
                },
                Lt = async (e, t, a) => {
                    await It.patch(`/kudos/${e}/drawer`, {
                        eventIds: t,
                        notificationType: a
                    })
                },
                At = async (e, t) => {
                    const a = {
                        filterUsers: !0,
                        pageSize: 50,
                        uiLanguage: t
                    };
                    return (await It.get(`/users/${e}/recommendations`, {
                        params: a
                    })).data
                },
                Pt = async (e, t) => (await It.patch(`/users/${e}/recommendations`, {
                    userIds: t
                })).data,
                Dt = async (e, t) => {
                    await It.delete(`/users/${e}/recommendations/${t}`)
                },
                Nt = async (e, t, a) => {
                    const s = {
                        cursor: a,
                        pageSize: e,
                        query: t,
                        searchType: "QUERY"
                    };
                    return (await It.get("/users", {
                        params: s
                    })).data
                },
                Ot = async (e, t) => (await It.get(`/users/${e}/profile`, {
                    params: {
                        pageSize: t
                    }
                })).data,
                xt = async (e, t, a) => (await It.get(`/users/${e}/following`, {
                    params: {
                        pageSize: t,
                        ...a ? {
                            pageAfter: a
                        } : void 0,
                        viewerId: (0, M.Jb)()
                    }
                })).data.following,
                Ft = async (e, t, a) => (await It.get(`/users/${e}/followers`, {
                    params: {
                        pageSize: t,
                        ...a ? {
                            pageAfter: a
                        } : void 0,
                        viewerId: (0, M.Jb)()
                    }
                })).data.followers,
                Mt = async (e, t, a) => (await It.get(`/users/${e}/friends-in-common`, {
                    params: {
                        pageSize: t,
                        ...a ? {
                            pageAfter: a
                        } : void 0
                    }
                })).data.friendsInCommon,
                Ut = async (e, t, a, s, n) => {
                    const r = {
                        component: t,
                        follow_reason: a,
                        follow_suggestion_score: n,
                        suggested_reason: s
                    };
                    await It.post(`/users/${(0,M.Jb)()}/follow/${e}`, r)
                },
                Ht = async e => {
                    await It.delete(`/users/${(0,M.Jb)()}/follow/${e}`)
                },
                Gt = async e => {
                    await It.post(`/users/${(0,M.Jb)()}/block/${e}`)
                },
                Vt = async e => {
                    await It.delete(`/users/${(0,M.Jb)()}/block/${e}`)
                },
                Bt = async (e, t, a) => (await It.post(`/users/${t}/block/${a}/token/${e}`)).data,
                zt = async () => (await It.post(`/users/${(0,M.Jb)()}/request-parental-consent-for-social`, {
                    action: "enableSocial"
                })).data,
                Zt = async (e, t, a) => (await It.patch(`/users/${t}/update-social-settings/token/${e}`, {
                    action: a
                })).data,
                Wt = async (e, t) => (await It.post("/facebook-connect", {
                    facebookFriends: JSON.stringify(t.map((e => ({
                        id: e
                    })))),
                    facebookId: e
                })).data.users,
                $t = async ({
                    eventType: e,
                    expirationTime: t,
                    nudgeType: a,
                    recipientId: s,
                    remainingEvents: n,
                    shouldSendPush: r,
                    userId: i,
                    winStreak: o
                }) => {
                    await It.post(`/users/${i}/friends-quests/${s}/nudge`, {
                        eventType: yt[e],
                        expirationTime: t,
                        nudgeType: a,
                        remainingEvents: n,
                        shouldSendPush: r,
                        winStreak: o
                    })
                },
                jt = ee("https://goals-api.duolingo.com"),
                qt = async e => (await jt.get(`/schema?ui_language=${e}`)).data,
                Qt = async ({
                    timezone: e,
                    uiLanguage: t,
                    userId: a
                }) => (await jt.get(`/users/${a}/progress`, {
                    params: {
                        timezone: e,
                        ui_language: t
                    }
                })).data,
                Kt = async e => (await jt.get(`/users/${e}/quests`)).data,
                Yt = async ({
                    goalId: e,
                    questId: t,
                    questSlot: a,
                    timestamp: s,
                    timezone: n,
                    userId: r
                }) => {
                    await jt.post(`/users/${r}/quest`, {
                        goal_id: e,
                        quest_id: t,
                        quest_slot: a,
                        timestamp: s.toISOString(),
                        timezone: n
                    })
                },
                Jt = async (e, t, a, s) => {
                    await jt.post(`/users/${e}/progress/batch`, {
                        metric_updates: t.metricUpdates,
                        timestamp: null == a ? void 0 : a.toISOString(),
                        timezone: s
                    })
                },
                Xt = new Q("https://api.hsforms.com"),
                ea = e => aa("42546705", "ba5f77b7-5cd8-4ac1-bbb3-0c93011e0d78", [{
                    name: "email",
                    value: e
                }]),
                ta = (e, t) => aa("22404983", "48a49871-198d-470d-a32f-a959d7b72c44", [{
                    name: "email",
                    value: e
                }, {
                    name: "username",
                    value: t
                }]),
                aa = (e, t, a) => Xt.post(`/submissions/v3/integration/submit/${e}/${t}`, {
                    context: {
                        pageUri: window.location.href
                    },
                    fields: a
                });
            var sa, na, ra;
            ! function(e) {
                e.SUPER = "premium_subscription", e.MAX = "gold_subscription", e.IMMERSIVE_SUPER = "immersive_subscription"
            }(sa || (sa = {})),
            function(e) {
                e.IOS = "APPLE", e.Schools = "DUOLINGO_SCHOOLS", e.Stripe = "DUOLINGO", e.Android = "GOOGLE_PLAY", e.ImmersivePlus = "IMMERSIVE_PLUS", e.Admin = "NONE"
            }(na || (na = {})),
            function(e) {
                e.Standard = "STANDARD", e.NewYears2024 = "NEW_YEARS_2024"
            }(ra || (ra = {}));
            var ia = a(44780),
                oa = a(81149);
            const la = ee("https://duolingo-leaderboards-prod.duolingo.com"),
                ca = "7d9f5dd1-8423-491a-91f2-2532052038ce",
                da = "6a7eea1c-f80b-48a7-9c29-ddb4cd7d84e6",
                ua = "d50df136-ca7a-4c17-8c44-83f599174f58",
                ga = "4b668ba6-288d-4b78-81a3-7b213175ae2c",
                pa = "b7f7f746-212e-42a2-aa70-54beacad9011",
                ma = () => (0, J.ky)("debugUseDogfoodingTournamentLeaderboard") ? ua : ga,
                ha = () => (0, J.ky)("debugUseDogfoodingLeaguesLeaderboard") ? da : ca,
                va = e => "TROPHY,winner" === e ? "experiment" === (0, oa.j6)("tsl_web_tournament_port", void 0) ? "TROPHY_DIAMOND" : "TROPHY" : (0, ia.gs)(e) ? e : "NONE",
                _a = e => ({
                    itemId: e.item_id,
                    itemQuantity: e.item_quantity,
                    rank: e.rank,
                    rankRange: e.rank_range,
                    rewardType: e.reward_type,
                    tier: e.tier
                }),
                fa = e => ({
                    cohortSize: e.cohort_size,
                    cohortType: e.cohort_type,
                    numDemoted: e.num_demoted,
                    numLosers: e.num_losers,
                    numPromoted: e.num_promoted,
                    numWinners: e.num_winners,
                    rewards: e.rewards.map(_a),
                    scoreType: e.score_type
                }),
                Sa = e => ({
                    contestEnd: Date.parse(e.contest_end),
                    contestStart: Date.parse(e.contest_start),
                    contestState: e.contest_state,
                    registrationEnd: Date.parse(e.registration_end),
                    registrationStart: Date.parse(e.registration_start),
                    registrationState: e.registration_state,
                    ruleset: fa(e.ruleset)
                }),
                ya = e => ({
                    avatarUrl: e.avatar_url,
                    displayName: e.display_name,
                    hasRecentActivity: e.has_recent_activity_15,
                    reaction: va(e.reaction),
                    score: e.score,
                    userId: e.user_id
                }),
                Ea = e => ({
                    creationDate: Date.parse(e.creation_date),
                    id: e.cohort_id,
                    rankings: e.rankings.map(ya),
                    tier: e.tier
                }),
                ba = e => ({
                    cohort: Ea(e.cohort),
                    complete: e.complete,
                    contest: Sa(e.contest),
                    isDemoted: e.is_demoted,
                    isLoser: e.is_loser,
                    isPromoted: e.is_promoted,
                    isWinner: e.is_winner,
                    score: e.score,
                    userId: e.user_id
                }),
                Ia = async (...e) => {
                    (await Promise.resolve().then(a.bind(a, 79465))).trackLeaderboardApiEvent(...e)
                },
                wa = async (e, t, a = !1) => {
                    Ia("fetch", {
                        unlocked: a
                    });
                    const s = `/leaderboards/${e}/users/${t}`,
                        n = {};
                    return a && (n.client_unlocked = !0), n.get_reactions = !0, (e => {
                        const t = {
                            streakInTier: e.streak_in_tier,
                            tier: e.tier,
                            topThreeFinishes: e.top_three_finishes
                        };
                        return void 0 !== e.num_sessions_remaining_to_unlock && (t.numSessionsRemainingToUnlock = e.num_sessions_remaining_to_unlock), void 0 !== e.num_wins && (t.numWins = e.num_wins), void 0 !== e.active && (t.active = null === e.active ? null : ba(e.active)), void 0 !== e.ended && ("result" === (0, J.ky)("debugLeaderboards") && e.active ? t.ended = [ba(e.active)] : t.ended = e.ended.map(ba)), void 0 !== e.leaderboard && (t.leaderboard = (e => ({
                            activeContest: e.active_contest ? Sa(e.active_contest) : null,
                            nextContestStart: e.next_contest_start ? Date.parse(e.next_contest_start) : null
                        }))(e.leaderboard)), t
                    })((await la.get(s, {
                        params: n
                    })).data)
                },
                ka = async (e, t) => {
                    Ia("join");
                    const a = `/leaderboards/${e}/users/${t}`;
                    await la.post(a)
                },
                Ta = async (e, t) => {
                    Ia("clear_ended");
                    const a = `/leaderboards/${e}/users/${t}`;
                    await la.patch(a)
                },
                Ca = e => "TROPHY_DIAMOND" === e ? "TROPHY,winner" : e,
                Ra = async (e, t, a) => {
                    Ia("set_reaction", {
                        cohorted: !0
                    });
                    const s = `/reactions/${e}/users/${t}`,
                        n = {
                            reaction: Ca(a)
                        };
                    await la.patch(s, n)
                },
                La = async (e, t) => {
                    Ia("fetch_reaction_uncohorted");
                    const a = `/reactions/uncohorted/${e}/users/${t}`;
                    return va((await la.get(a)).data.reaction)
                },
                Aa = async (e, t, a) => {
                    Ia("set_reaction", {
                        cohorted: !1
                    });
                    const s = `/reactions/uncohorted/${e}/users/${t}`,
                        n = {
                            reaction: Ca(a)
                        };
                    await la.patch(s, n)
                },
                Pa = ee("https://www.duolingo.com/2017-06-30/messaging"),
                Da = (e, t = {}) => Pa.post("/ack-message/", {
                    messageId: {
                        [e]: t
                    },
                    userId: (0, M.Jb)()
                }),
                Na = e => Pa.post("/ack-messages/", {
                    sessionEndMessageLogs: e.map((({
                        ctaWasClicked: e,
                        messageId: t,
                        timestamp: a
                    }) => ({
                        ctaWasClicked: e,
                        sessionEndMessageId: {
                            [t]: {}
                        },
                        timestamp: a
                    }))),
                    userId: (0, M.Jb)()
                }),
                Oa = async (e, t) => (await Pa.post("/get-messages/", {
                    potentialMessageIds: e.map((e => ({
                        [e]: {}
                    }))),
                    useOnboardingBackend: t,
                    userId: (0, M.Jb)()
                })).data,
                xa = async (e, t) => (await Pa.post("/get-messages/", {
                    sessionEndPotentialMessageIds: e.map((e => ({
                        [e]: {}
                    }))),
                    useOnboardingBackend: t,
                    userId: (0, M.Jb)()
                })).data,
                Fa = te("/v2/mistakes");
            var Ma;
            ! function(e) {
                e[e.ADD = 0] = "ADD", e[e.RESOLVE_INBOX = 1] = "RESOLVE_INBOX", e[e.RESOLVE_LEARNING = 2] = "RESOLVE_LEARNING"
            }(Ma || (Ma = {}));
            const Ua = async (e, t, a) => (await Fa.get(`/users/${(0,M.Jb)()}/courses/${e}/count`, {
                    params: {
                        includeListening: t,
                        includeSpeaking: a
                    }
                })).data.numberMistakes,
                Ha = async ({
                    countLimit: e,
                    courseId: t,
                    includeListening: a,
                    includeSpeaking: s
                }) => (await Fa.get(`/users/${(0,M.Jb)()}/courses/${t}`, {
                    params: {
                        includeListening: a,
                        includeSpeaking: s,
                        limit: e,
                        requestType: "INBOX"
                    }
                })).data.mistakes,
                Ga = async ({
                    courseId: e,
                    expectedMistakes: t,
                    session: a
                }) => {
                    var s;
                    const n = null === (s = null == a ? void 0 : a.challenges) || void 0 === s ? void 0 : s.map((e => e.challengeGeneratorIdentifier)).filter((e => void 0 !== e)),
                        r = null == n ? void 0 : n.map((e => e.generatorId)),
                        i = null == t ? void 0 : t.filter((e => !(null == r ? void 0 : r.includes(e.generatorId)))),
                        o = null == i ? void 0 : i.map((e => ({
                            challengeIdentifier: e,
                            patchType: Ma.RESOLVE_INBOX
                        })));
                    void 0 !== o && 0 !== o.length && await Fa.patch(`/users/${(0,M.Jb)()}/courses/${e}`, {
                        incomingMistakes: o
                    })
                },
                Va = ee("https://invite.duolingo.com"),
                Ba = e => Va.post("/user/splash-load", {
                    invite_code: e
                });
            var za;
            ! function(e) {
                e.SKILL = "SKILL", e.STORY = "STORY", e.XP = "XP_CHALLENGE", e.UNIT = "UNIT"
            }(za || (za = {}));
            const Za = [za.SKILL, za.STORY],
                Wa = ee("https://schools.duolingo.com/api/1"),
                $a = ee("https://schools.duolingo.com/api/2"),
                ja = async () => (await Wa.get("/observers/list_settings_classrooms")).data.classrooms,
                qa = async e => (await Wa.get("/observers/get_observer_for_code", {
                    params: {
                        link_code: e
                    }
                })).data,
                Qa = async e => (await Wa.post("/observers/join_classroom_by_code", {
                    link_code: e
                })).data,
                Ka = async e => {
                    await Wa.post("/observers/leave_classroom", {
                        classroom_id: e
                    })
                },
                Ya = async e => (await $a.get(`/leaderboards/${e}/classroom_info`, {
                    params: {
                        user_id: e
                    }
                })).data,
                Ja = e => $a.post(`/students/${e}/auto_follow`),
                Xa = async (e, t, a) => (await $a.get("/activities", {
                    params: {
                        end_time: a,
                        start_time: t,
                        user_ids: [e].join(",")
                    }
                })).data[e],
                es = (ee("https://www.duolingo.com/v1/score"), ee("https://jeeves.duolingo.com")),
                ts = async e => (await es.get("/api/1/detect_duplicates", {
                    params: {
                        issue_key: e
                    }
                })).data,
                as = e => es.post("/api/1/fully_connect_duplicates", {
                    issue_keys: e
                }),
                ss = async e => (await es.get(`/api/1/shakira/features?project=${e}`)).data.features,
                ns = async () => (await es.get("/api/2/shakira/slack_report_types")).data,
                rs = async e => (await es.post("/api/2/shakira/suggested_features", e)).data,
                is = async (e, t) => {
                    const a = new FormData;
                    return a.set("issueData", JSON.stringify(e)), t.forEach((([e, t]) => a.set(e, t))), (await es.post("/api/2/shakira/report_issue", a)).data
                },
                os = te(""),
                ls = async e => {
                    await os.post("/d", {
                        phoneNumber: e
                    })
                };
            var cs = a(50498);
            const ds = ee("https://spam-control-api.duolingo.com");
            var us;
            ! function(e) {
                e.BAD_BEHAVIOR = "bad_behavior", e.BAD_NAME = "bad_name", e.NUDITY = "nudity", e.SPAM = "spam", e.SOMETHING_ELSE = "something_else"
            }(us || (us = {}));
            const gs = async (e, t) => {
                    const {
                        name: a = "(Unknown)",
                        picture: s,
                        username: n = "(Unknown)",
                        id: r
                    } = e;
                    await (0, cs.XD)((async () => ds.post("/reports/user_profiles", {
                        name: a,
                        picture: `https:${s}/xlarge`,
                        reason: t,
                        user_id: r,
                        username: n
                    })), {
                        retries: 1
                    })
                },
                ps = ee("https://stories.duolingo.com"),
                ms = async ({
                    storyId: e,
                    ...t
                }) => (await ps.get(`/api2/stories/${e}`, {
                    params: t
                })).data,
                hs = async (e, t) => (await ps.post(`/api2/stories/${e}/complete`, t)).data,
                vs = async e => (await ps.post("/api/userReply", e)).data;
            let _s, fs = 0;
            const Ss = async (e, t, a) => {
                    if (void 0 === _s || _s + 1e4 < Date.now()) fs = 1, _s = Date.now();
                    else if (fs += 1, fs >= 5) return (0, J.Au)() && alert("Practice hub stories has been refreshed too frequently - please contact a developer."), void(0, x.vU)("Practice hub stories has been refreshed too many times", {
                        data: {
                            practiceHubStoryApiCount: fs
                        }
                    });
                    return (await ps.get("/api2/practiceHubStories", {
                        params: {
                            featuredStoryId: e,
                            fromLanguage: t,
                            illustrationFormat: "svg",
                            learningLanguage: a
                        }
                    })).data
                },
                ys = ae(""),
                Es = async () => {
                    await ys.post("/logout")
                },
                bs = async () => (await ys.get("/notifications")).data,
                Is = async e => {
                    const t = new FormData;
                    t.append("image", e), await ys.post("/avatars", t)
                },
                ws = async e => {
                    await ys.post("/dismiss_notification", {
                        message: e.toLowerCase()
                    })
                },
                ks = async e => (await ys.get("/admin_tools", {
                    params: {
                        log_type: "deletes",
                        page: e
                    }
                })).data,
                Ts = async () => (await ys.get("/admin_tools/shadow_banned")).data,
                Cs = async e => {
                    const t = (await ys.post("/admin_tools/shadow_banned/add", {
                        username: e
                    })).data;
                    if (t.error) throw t.error instanceof Error ? t.error : Error(t.error);
                    return t
                },
                Rs = async e => {
                    const t = (await ys.post("/admin_tools/shadow_banned/remove", {
                        user_id: e
                    })).data;
                    if (t.error) throw t.error instanceof Error ? t.error : Error(t.error);
                    return t
                },
                Ls = async () => (await ys.get("/admin_tools/social_currency_stats")).data;
            var As = a(26886),
                Ps = a(93746);
            const Ds = ae("/api/1"),
                Ns = async (e, t, a, s) => {
                    const n = new FormData;
                    n.append("user_id", `${e}`), n.append("username", t), s && n.append("image", s), a.length && n.append("ban_description", a), await Ds.post("/shadowban_user", n)
                },
                Os = e => "zh-CN" === e ? "zh" : e,
                xs = e => "zh" === e ? "zh-CN" : e,
                Fs = ({
                    from_language: e,
                    from_language_id: t,
                    from_language_name: a,
                    learning_language: s,
                    learning_language_id: n,
                    learning_language_name: r,
                    num_learners: i,
                    num_learners_string: o,
                    ...l
                }) => ({
                    fromLanguage: e,
                    fromLanguageId: Os(t),
                    fromLanguageName: a,
                    learningLanguage: s,
                    learningLanguageId: Os(n),
                    learningLanguageName: r,
                    numLearners: i,
                    numLearnersString: o,
                    ...l
                }),
                Ms = async () => (await Ds.get("/courses/list")).data.map(Fs).filter((({
                    fromLanguageId: e,
                    learningLanguageId: t
                }) => ((0, Ps.nV)(t, e) || (0, As.yO)(e, t)) && !(0, As.It)(t, e))),
                Us = async (e, t = Ps.h9, a = Ps.h9) => (({
                    beta_date: e,
                    from_language: t,
                    from_language_name: a,
                    from_language_id: s,
                    learning_language: n,
                    learning_language_id: r,
                    learning_language_name: i,
                    num_learners: o,
                    num_learners_string: l,
                    released_date: c,
                    released_date_string: d,
                    start_date: u,
                    subscriber_count: g,
                    user_subscribed: p,
                    ...m
                }) => ({
                    betaDate: e,
                    fromLanguage: t,
                    fromLanguageId: Os(s),
                    fromLanguageName: a,
                    learningLanguage: n,
                    learningLanguageId: Os(r),
                    learningLanguageName: i,
                    numLearners: o,
                    numLearnersString: l,
                    releasedDate: c,
                    releasedDateString: d,
                    startDate: u,
                    subscriberCount: g,
                    userSubscribed: p,
                    ...m
                }))((await Ds.get(`/courses/${xs(e)}/${xs(t)}/show`, {
                    params: {
                        ui_language_abbrev: (0, Ps.D3)(a)
                    }
                })).data),
                Hs = H.HP((async e => (await Ds.get("/get_language_tokens", {
                    params: {
                        language: e
                    }
                })).data.tokens || [])),
                Gs = async (e, t) => {
                    await Ds.post("/me/register_device", {
                        registration_id: e,
                        subscription: t
                    })
                },
                Vs = async e => {
                    await Ds.post("/me/unregister_device", {
                        registration_id: e
                    })
                },
                Bs = async (e, t, a) => {
                    const s = {};
                    a && (s.email = a), await Ds.post(`/courses/${xs(e)}/${xs(null!=t?t:Ps.h9)}/subscribe`, s)
                },
                zs = async (e, t, a) => {
                    const s = {};
                    a && (s.email = a), await Ds.post(`/courses/${xs(e)}/${xs(null!=t?t:Ps.h9)}/unsubscribe`, s)
                };
            var Zs = a(16324),
                Ws = a(22106),
                $s = a(99773),
                js = a(41364),
                qs = a(71371),
                Qs = a(25062),
                Ks = a(32499),
                Ys = a(54448);
            const Js = te("/2017-06-30"),
                Xs = "Idempotency-Key";
            Js.addErrorInterceptor(((e, {
                response: t
            }) => {
                if (401 === (null == t ? void 0 : t.status) && !e.includes("login")) {
                    if ((0, M.Pc)()) return (0, x.um)("Requiring logged-out user to log in again", {
                        sample: .1
                    }), se(), (0, Ve.Zs)();
                    (0, x.vU)("Attempted authenticated call while logged-out")
                }
            })), (0, J.gQ)("debugStripe") && Js.setServiceEnvironment("purchasing-backend", "staging").setServiceEnvironment("shop-backend", "staging-1").setServiceEnvironment("subscriptions-backend", "staging-1"), (0, J.gQ)("monolithStaging") && Js.setServiceEnvironment("monolith", `next-${(0,J.ky)("monolithStaging")}`);
            const en = (e = !0) => ["acquisitionSurveyReason", "adsConfig", "animationEnabled", "betaStatus", "blockedUserIds", "blockerUserIds", "canUseModerationTools", "classroomLeaderboardsEnabled", "courses", "creationDate", "currentCourseId", "email", "emailAnnouncement", "emailAssignment", "emailAssignmentComplete", "emailClassroomJoin", "emailClassroomLeave", "emailEditSuggested", "emailEventsDigest", "emailFollow", "emailPass", "emailPromotion", "emailResearch", "emailWeeklyProgressReport", "emailSchoolsAnnouncement", "emailSchoolsNewsletter", "emailSchoolsProductUpdate", "emailSchoolsPromotion", "emailStreamPost", "emailVerified", "emailWeeklyReport", "enableMicrophone", "enableSoundEffects", "enableSpeaker", `experiments{${$s.rn}}`, "facebookId", "fromLanguage", "gemsConfig", "globalAmbassadorStatus", "googleId", "hasFacebookId", "hasGoogleId", "hasPlus", "health", "id", "inviteURL", "joinedClassroomIds", "lastResurrectionTimestamp", "learningLanguage", "lingots", "location", "name", "observedClassroomIds", "optionalFeatures", "persistentNotifications", "picture", "plusDiscounts", "practiceReminderSettings", "privacySettings", "referralInfo", "rewardBundles", "roles", "sessionCount", "streak", "streakData{currentStreak,longestStreak,previousStreak}", "timezone", "timezoneOffset", "totalXp", "trackingProperties", "username", "webNotificationIds", "xpGains", "xpGoal", "zhTw"].concat(e ? ["currentCourse"] : []);
            var tn;
            ! function(e) {
                e.COMMENT = "COMMENT", e.FOLLOW = "FOLLOW", e.LESSON = "LESSON", e.MASTER = "MASTER", e.PASS = "PASS", e.PRACTICE = "PRACTICE", e.STREAM_POST = "STREAM_POST", e.TEST = "TEST", e.TRANSLATION = "TRANSLATION", e.WELCOME = "WELCOME"
            }(tn || (tn = {}));
            const an = e => {
                    if ("PREPAID" === e.couponType && e.packageInfo) {
                        if ("premium" === e.packageInfo[0].subscriptionType) return e.packageInfo[0].isFamilyPlan ? "Super Family" : "Super";
                        if ("gold" === e.packageInfo[0].subscriptionType) return e.packageInfo[0].isFamilyPlan ? "Max Family" : "Max";
                        throw Error("Invalid Subscription Type from Coupon")
                    }
                    if ("B2B_UNIVERSAL_CLOCK" === e.couponType || "TRIAL" === e.couponType) return "Super";
                    throw Error("Invalid couponType")
                },
                sn = e => {
                    if ("PREPAID" === e.couponType && e.packageInfo) {
                        if ("WEEK" === e.packageInfo[0].unitOfTime) return "WEEK";
                        if ("MONTH" === e.packageInfo[0].unitOfTime) return "MONTH"
                    }
                    return "MONTH"
                },
                nn = async (e, t = !0, a = null) => {
                    await Js.post("/login", {
                        distinctId: (0, B.getDistinctId)(),
                        signal: a,
                        ...e
                    }, {
                        params: {
                            fields: t ? en().join(",") : ""
                        }
                    })
                };
            var rn;
            ! function(e) {
                e.CHANGE_PASSWORD = "CHANGE_PASSWORD", e.RESET_PASSWORD = "RESET_PASSWORD", e.SIGN_UP = "SIGN_UP"
            }(rn || (rn = {}));
            const on = () => "DUOLINGO_GENERAL" + ((0, J.gQ)("debugStripe") ? "_TEST" : ""),
                ln = async e => (await Js.post("/password-quality/check", { ...e
                })).data,
                cn = async e => {
                    await Js.post("/login", {
                        distinctId: (0, B.getDistinctId)(),
                        ...e
                    }, {
                        params: {
                            fields: ""
                        }
                    })
                },
                dn = async (e, t) => (await Js.post("/users", {
                    distinctId: (0, B.getDistinctId)(),
                    signal: t,
                    ...e
                }, {
                    forceJsonDecoding: !0,
                    params: {
                        fields: "id"
                    }
                })).data,
                un = (0, js.p)("GET_USER")((async (e, t = void 0) => await pn(e, en(t)))),
                gn = (0, js.p)("GET_USER")((async e => await pn(e, ["courses", "creationDate", "fromLanguage", "gemsConfig", "globalAmbassadorStatus", "hasPlus", "id", "learningLanguage", "lingots", "location", "name", "picture", "privacySettings", "roles", "streak", "streakData{currentStreak,previousStreak}", "subscriberLevel", "totalXp", "username"]))),
                pn = async (e, t) => (await Js.get(`/users/${e}`, {
                    params: {
                        fields: t.join(",")
                    }
                })).data,
                mn = e => Js.post(`/users/${e}/email-verifications`),
                hn = async (e, t) => (await Js.patch(`/users/${e}/email-verifications/${t}`, {
                    verified: !0
                })).data,
                vn = async (e, t) => (await Js.post("/email-removals", {
                    email: e,
                    token: t
                })).data,
                _n = async e => (await Js.get("/onboarding/validate-username", {
                    params: {
                        username: e
                    }
                })).data,
                fn = async e => (await Js.get("/users", {
                    params: {
                        fields: "users{id}",
                        username: e
                    }
                })).data.users,
                Sn = async e => (await Js.get("/users", {
                    params: {
                        email: e
                    }
                })).data.users,
                yn = async (e, t, a, s = null) => {
                    const n = a ? {
                        fields: a.join(",")
                    } : {};
                    return (await Js.patch(`/users/${e}`, {
                        signal: s,
                        ...t
                    }, {
                        forceJsonDecoding: !0,
                        params: n
                    })).data
                },
                En = async (e, t) => {
                    const a = t ? (0, je.zK)((0, je.g8)(t)) : void 0;
                    return (await Js.get(`/users/${e}/xp_summaries`, {
                        params: {
                            startDate: a
                        }
                    })).data.summaries
                },
                bn = async (e, t, a) => (await Js.get(`/users/${e}/moderated-events`, {
                    params: {
                        limit: a,
                        types: t.join(",")
                    }
                })).data.events,
                In = async (e, t) => {
                    await Js.post(`/users/${e}/messages`, {
                        message: t
                    })
                },
                wn = e => Js.delete(`/users/${(0,M.Jb)()}/courses/${e}`, {}),
                kn = async e => {
                    var t, a, s;
                    const n = (e.type !== ue.FF.AlphabetLesson && e.type !== ue.FF.AlphabetPractice || !(0, J.NY)() ? await Js.post("/sessions", e) : await We(e.learningLanguage, e.fromLanguage, e)).data;
                    if (e.type === ue.FF.DuoRadio) {
                        const r = n.elements.filter((e => "challenge" === e.type && "challengeType" in e));
                        n.challenges = (0, Ws.Qj)(null !== (t = r) && void 0 !== t ? t : [], n), n.fromLanguage = null !== (a = e.fromLanguage) && void 0 !== a ? a : "en", n.learningLanguage = null !== (s = e.learningLanguage) && void 0 !== s ? s : "es", n.type = ue.FF.DuoRadio
                    }
                    if (!Array.isArray(n.challenges)) throw Error("No challenges present in session");
                    return n
                },
                Tn = (e, {
                    onError: t,
                    signal: a
                } = {}) => {
                    const s = new AbortController;
                    return (0, cs.XD)((async () => {
                        try {
                            let t;
                            if (t = e.type === ue.FF.AlphabetLesson || e.type === ue.FF.AlphabetPractice ? await Ze(e) : await Js.put(`/sessions/${e.id}`, { ...e
                                }, {
                                    headers: {
                                        "Idempotency-Key": e.id
                                    },
                                    timeout: 1e4
                                }), 202 === t.status) throw Error("Session has been accepted but not yet processed.");
                            return t.data
                        } catch (e) {
                            throw qs.Z.remove("session_end_grade"), null == t || t(e), e.response && (e.response.status >= 500 && e.response.status < 600 && !e.response.headers["no-retry"] || s.abort()), e
                        }
                    }), {
                        backoffFn: e => {
                            const t = .75 + 2 * Math.random() * .25;
                            return 250 * Math.pow(2, e - 1) * t
                        },
                        retries: 1 / 0,
                        signal: a ? (0, cs.yv)(s.signal, a) : s.signal,
                        stopAtTime: Date.now() + 24e4
                    })
                },
                Cn = async e => (await Js.post(`/sessions/${e.id}/challenges`, { ...e
                })).data,
                Rn = {
                    BAD_AUDIO: "BAD_AUDIO",
                    BAD_HINTS: "BAD_HINTS",
                    BAD_IMAGE: "BAD_IMAGE",
                    BAD_OPTION: "BAD_OPTION",
                    BAD_PROMPT: "BAD_PROMPT",
                    CHARACTER_DISPLAY: "CHARACTER_DISPLAY",
                    MISSING_AUDIO: "MISSING_AUDIO",
                    MISSING_HINTS: "MISSING_HINTS",
                    MISSING_IMAGE: "MISSING_IMAGE",
                    NOT_ACCEPTED: "NOT_ACCEPTED",
                    OFFENSIVE_OPTION: "OFFENSIVE_OPTION",
                    OTHER_ISSUE: "OTHER_ISSUE",
                    WRONG_ACCEPTED: "WRONG_ACCEPTED"
                },
                Ln = async (e, t) => {
                    const a = {
                        challenge: (0, Ys.g)(e),
                        problems: t
                    };
                    await Js.post(`/challenges/${e.id}/reports`, a)
                },
                An = async () => (await Js.get("/shop-items")).data.shopItems,
                Pn = async (e = "US", t) => {
                    const a = t ? ra.NewYears2024 : ra.Standard,
                        s = (await Js.get(`/users/${(0,M.Jb)()}/subscription-catalog`, {
                            params: {
                                billingCountryCode: e,
                                supportedLayouts: a,
                                vendor: "VENDOR_STRIPE"
                            }
                        })).data,
                        n = t => void 0 === t.planCurrency ? "UNDEFINED" : (0, Qs.T4)(Math.floor(t.priceInCents / t.periodLengthInMonths), t.planCurrency, e),
                        r = t => void 0 === t.planCurrency ? "UNDEFINED" : (0, Qs.T4)(t.priceInCents, t.planCurrency, e),
                        i = s.plusPackageViewModels.find((e => 1 === e.periodLengthInMonths)),
                        o = t => t === Ks._r.TwelveMonth && i ? (0, Qs.T4)(12 * i.priceInCents, i.planCurrency, e) : void 0,
                        l = t => void 0 === t.undiscountedPriceInCents ? void 0 : (0, Qs.T4)(t.undiscountedPriceInCents, t.planCurrency, e),
                        c = e => {
                            const a = 1 === (s = e).periodLengthInMonths ? Ks._r.OneMonth : s.isFamilyPlan ? Ks._r.FamilyPlan : Ks._r.TwelveMonth;
                            var s;
                            return { ...e,
                                formattedHypotheticalYearlyPrice: o(a),
                                formattedMonthlyPrice: n(e),
                                formattedNypUndiscountedPrice: l(e),
                                formattedPrice: r(e),
                                isFreeTrial: e.trialPeriodInDays > 0,
                                isNewYears: t && a === Ks._r.TwelveMonth,
                                planType: a,
                                type: e.type
                            }
                        };
                    return {
                        currentPlan: s.currentPlan ? c(s.currentPlan) : void 0,
                        subscriptionPlans: s.plusPackageViewModels.map(c)
                    }
                },
                Dn = async e => (await Js.get(`/users/${(0,M.Jb)()}/shop-items/${e}`)).data,
                Nn = async (e, t) => Js.patch(`/users/${(0,M.Jb)()}/shop-items/${e}`, t),
                On = async (e, t, a, s) => (await Js.put(`/users/${(0,M.Jb)()}/payment-methods/${e}`, {
                    product: t,
                    stripeToken: a
                }, {
                    headers: {
                        [Xs]: s
                    }
                })).data,
                xn = async () => (await Js.get(`/users/${(0,M.Jb)()}`, {
                    params: {
                        fields: "paymentMethods"
                    }
                })).data.paymentMethods,
                Fn = async () => (await Js.get(`/users/${(0,M.Jb)()}`, {
                    params: {
                        fields: "shopItems{familyPlanInfo{inviteToken,pendingInvites,ownerId,secondaryMembers},itemName,purchaseDate,purchaseId,purchasePrice,quantity,subscriptionInfo{currency,expectedExpiration,extendedFreeTrialLength,isFreeTrialPeriod,periodLength,price,renewer,renewing,vendorPurchaseId},wagerDay}"
                    }
                })).data.shopItems,
                Mn = async (e, t) => (await Js.post(`/users/${(0,M.Jb)()}/payment-methods`, {
                    product: Qs.hp.Duolingo,
                    stripeToken: e
                }, {
                    headers: {
                        [Xs]: t
                    }
                })).data,
                Un = async (e, t) => (await Js.post(`/users/${(0,M.Jb)()}/create-setup`, {
                    paymentMethodId: e,
                    product: Qs.hp.Duolingo
                }, {
                    headers: {
                        [Xs]: t
                    }
                })).data,
                Hn = async (e, t) => (await Js.post(`/users/${(0,M.Jb)()}/attach-payment-method`, {
                    paymentMethodId: e,
                    product: Qs.hp.Duolingo
                }, {
                    headers: {
                        [Xs]: t
                    }
                })).data,
                Gn = async ({
                    email: e,
                    idempotencyKey: t,
                    languageCode: a,
                    productId: s,
                    promoCode: n
                }) => {
                    const r = {
                        couponCode: n,
                        email: e,
                        languageCode: a,
                        productId: s,
                        stripeAccount: on(),
                        vendor: "VENDOR_STRIPE"
                    };
                    return (0, Zs.EV)((await Js.post(`/users/${(0,M.Jb)()}/create-order`, (0, Zs.Ed)(r), {
                        headers: {
                            [Xs]: t
                        }
                    })).data)
                },
                Vn = async (e, t) => {
                    var a;
                    const s = null === (a = e.subscriptionInfo) || void 0 === a ? void 0 : a.vendorPurchaseId;
                    if (void 0 === s) throw Error("Current subscription doesn't have a valid vendorPurchaseId");
                    const n = {
                        subscriptionInfo: {
                            vendor: "VENDOR_STRIPE",
                            vendorPurchaseId: s
                        },
                        vendor: "VENDOR_STRIPE",
                        vendorSpecificPayload: JSON.stringify({
                            account: on(),
                            newSubscriptionSkuIds: t
                        })
                    };
                    return (await Js.post("/purchase-subscription-preview", n)).data
                },
                Bn = async (e, t, a) => {
                    const s = new AbortController;
                    let n = 0;
                    return (0, cs.XD)((async () => {
                        try {
                            return {
                                item: (await Js.post(`/users/${(0,M.Jb)()}/shop-items`, {
                                    itemName: e,
                                    ...t
                                }, {
                                    headers: a ? {
                                        [Xs]: a
                                    } : void 0
                                })).data,
                                numRetries: n
                            }
                        } catch (e) {
                            throw e.response && (e.response.status >= 500 && e.response.status < 600 && !e.response.headers["no-retry"] ? n++ : s.abort()), e
                        }
                    }), {
                        retries: 1,
                        signal: s.signal
                    })
                },
                zn = async ({
                    itemName: e,
                    purchasingId: t,
                    receivingId: a
                }) => (await Js.post(`/users/${t}/gifts/${a}`, {
                    itemName: e
                })).data,
                Zn = async e => (await Js.get(`/plus-coupon-codes/${e}`)).data,
                Wn = async (e, t) => (await Js.get(`/users/${e}/coupon-codes/${t}`)).data,
                $n = ["ageRestrictionLimit", `clientExperiments{${$s.Sg}}`, "featureFlags", "ipCountry", "speechHost"],
                jn = async e => 200 === (await Js.get(`/bango/invite/${e}`)).status,
                qn = async e => 200 === (await Js.post(`/users/${(0,M.Jb)()}/activate-bango-subscription`, {
                    inviteToken: e
                })).status,
                Qn = async () => (await Js.get("/config", {
                    params: {
                        fields: $n.join(",")
                    }
                })).data,
                Kn = async e => {
                    await Js.delete(`/users/${(0,M.Jb)()}/shop-items`, {
                        itemName: e
                    })
                },
                Yn = async () => (await Js.get(`/users/${(0,M.Jb)()}/privacy-settings`)).data.privacySettings.map((e => ({ ...e,
                    id: e.id.toUpperCase()
                }))),
                Jn = async e => (await Js.patch(`/users/${(0,M.Jb)()}/privacy-settings`, e, {
                    params: {
                        fields: "privacySettings"
                    }
                })).data.privacySettings,
                Xn = e => Js.post("/password-reset", {
                    email: e
                }),
                er = async (e, t) => {
                    await Js.post("/tracking-status", {
                        distinctId: t,
                        enabled: e
                    })
                },
                tr = async ({
                    id: e,
                    fromLanguage: t,
                    learningLanguage: a
                }, s, n) => {
                    await Js.patch(`/users/${e}/rewards/${s}`, {
                        consumed: !0,
                        fromLanguage: t,
                        learningLanguage: a,
                        pathLevelSpecifics: n
                    })
                },
                ar = async e => (await Js.get(`/attribution/survey/custom?uiLanguage=${e}`)).data.responses,
                sr = async e => (await Js.post(`/users/${(0,M.Jb)()}/plus-discounts`, {
                    discountType: e
                })).data,
                nr = (e, t, a) => Js.patch(`/users/${e}/experiments/${t}`, a),
                rr = async () => {
                    await Js.put(`/users/${(0,M.Jb)()}/remove-heart`)
                },
                ir = async (e, t, a) => (await Js.get(`/users/${e}/vocab-summary?endTime=${a}&startTime=${t}`)).data,
                or = te("/2017-06-30"),
                lr = async e => (await or.get(`/family-plan/invite/${e}`)).data,
                cr = async e => (await or.post(`/users/${(0,M.Jb)()}/family-plan/members/invite/${e}`, {})).data,
                dr = async e => 200 === (await or.post(`/users/${e}/family-plan/invites/${(0,M.Jb)()}`)).status,
                ur = async e => 200 === (await or.delete(`/users/${e}/family-plan/invites/${(0,M.Jb)()}`)).status,
                gr = async e => (await or.get(`/users/${(0,M.Jb)()}/family-plan/invites`, {
                    params: {
                        ownerId: e
                    }
                })).data,
                pr = async e => (await or.patch(`/users/${(0,M.Jb)()}/family-plan/invites/${e}`, {
                    status: "ACCEPTED"
                })).data,
                mr = async e => (await or.patch(`/users/${(0,M.Jb)()}/family-plan/invites/${e}`, {
                    status: "REJECTED"
                })).data,
                hr = (e, t) => or.delete(`/users/${e}/family-plan/members/${t}`, {}),
                vr = ee("https://www.duolingo.com/2017-06-30"),
                _r = async () => {
                    var e;
                    if (null === (e = window.webkit) || void 0 === e ? void 0 : e.messageHandlers) return new Promise((e => {
                        window.weekly_data_callback = t => {
                            window.user_model_callback = a => {
                                if (t.current_streak = a.streakData.length, t.current_learning_language = a.currentCourse.learningLanguage, a.currentCourse.skills) {
                                    const e = a.currentCourse.skills;
                                    let s = 0,
                                        n = 0;
                                    e.forEach((e => {
                                        e.forEach((({
                                            finishedLevels: e
                                        }) => {
                                            s += 1, e > 0 && (n += 1)
                                        }))
                                    })), t.current_course_progress = n / s
                                }
                                e(t)
                            }, window.webkit.messageHandlers.observer.postMessage({
                                get_user_model: {
                                    callback: "user_model_callback",
                                    fields: ["currentCourse", "streakData"]
                                }
                            })
                        }, window.webkit.messageHandlers.observer.postMessage({
                            get_weekly_report_info: {
                                callback: "weekly_data_callback"
                            }
                        })
                    }));
                    const {
                        data: t
                    } = await vr.get("/weekly-report-info");
                    return t
                },
                fr = te("/2017-06-30"),
                Sr = async ({
                    fromLanguage: e,
                    lastTotalLexemeCount: t,
                    learningLanguage: a,
                    limit: s = 200,
                    progressedSkills: n,
                    sortBy: r = "LEARNED_DATE",
                    startIndex: i = 0
                }) => (await fr.post(`/users/${(0,M.Jb)()}/courses/${a}/${e}/learned-lexemes`, {
                    lastTotalLexemeCount: t,
                    progressedSkills: n
                }, {
                    params: {
                        limit: s,
                        sortBy: r,
                        startIndex: i
                    }
                })).data,
                yr = async (e, t, a) => (await fr.post(`/users/${(0,M.Jb)()}/courses/${t}/${e}/learned-lexemes/count`, {
                    progressedSkills: a
                })).data,
                Er = async (e, t, a, s) => (await fr.post(`/users/${(0,M.Jb)()}/courses/${a}/${e}/practice-lexemes`, {
                    lastTotalLexemeCount: t,
                    progressedSkills: s
                })).data,
                br = async () => (await fr.get("/words-list/supported-courses")).data,
                Ir = ee("https://www.duolingo.com"),
                wr = ee("https://yir.duolingo.com"),
                kr = () => {
                    const e = (0, V.vl)().id;
                    return e ? Promise.resolve(e) : Ir.get("/2017-06-30/year-in-review-info").then((e => {
                        var t;
                        return (null === (t = null == e ? void 0 : e.data) || void 0 === t ? void 0 : t.report_url) ? (0, V.vl)(e.data.report_url.split("?")[1]).id : ""
                    })).catch((() => (window.location.href = "https://www.duolingo.com", "")))
                },
                Tr = e => wr.get(`/2023/user_stats_${e}.json`, {
                    forceJsonDecoding: !0
                }).then((e => e.data)),
                Cr = async e => {
                    await Ir.patch("/2017-06-30/year-in-review-info", {
                        learner_style: e
                    })
                },
                Rr = (0, a(80388).J9)() ? "zendesk.duolingo.cn" : "duolingotest.zendesk.com",
                Lr = new Q(`https://${Rr}/api/v2`),
                Ar = async (e, t) => (await fetch(`https://${Rr}/api/v2/uploads?filename=${e}`, {
                    body: t,
                    headers: {
                        "Content-Type": t.type
                    },
                    method: "POST"
                })).json(),
                Pr = async e => {
                    const t = {
                        request: {
                            comment: {
                                body: e.description,
                                uploads: e.uploadTokens
                            },
                            requester: {
                                email: e.email,
                                locale: window.duo.uiLanguage,
                                name: e.email
                            },
                            subject: e.subject,
                            tags: [e.tag]
                        }
                    };
                    return (await Lr.post("/requests", t)).data
                }
        },
        50498: (e, t, a) => {
            "use strict";
            a.d(t, {
                Bw: () => l,
                XD: () => c,
                _v: () => d,
                f: () => o,
                p4: () => i,
                yv: () => r
            });
            var s = a(80254),
                n = a(59815);
            const r = (...e) => {
                    const t = new AbortController,
                        a = () => {
                            t.abort();
                            for (const t of e) t.removeEventListener("abort", a)
                        };
                    for (const t of e) {
                        if (t.aborted) {
                            a();
                            break
                        }
                        t.addEventListener("abort", a)
                    }
                    return t.signal
                },
                i = async e => {
                    const t = {};
                    try {
                        return await Promise.race([e, t]) === t ? "pending" : "fulfilled"
                    } catch {
                        return "rejected"
                    }
                },
                o = s.IH((() => new Promise((() => {})))),
                l = () => {
                    let e, t;
                    return {
                        promise: new Promise(((a, s) => {
                            e = a, t = s
                        })),
                        reject: t,
                        resolve: e
                    }
                },
                c = async (e, {
                    backoffFn: t,
                    retries: a,
                    signal: s,
                    stopAtTime: r
                }) => {
                    let i, o = 0;
                    for (; o < a + 1;) {
                        if (o > 0) {
                            const e = t ? t(o) : Math.round(Math.min(1e3 * o, 3e4) * (Math.random() + 1));
                            console.log(`Backing off for ${e}ms before retrying`), await d(e)
                        }
                        if (!0 === (null == s ? void 0 : s.aborted) || r && Date.now() >= r) break;
                        try {
                            return await e(o)
                        } catch (e) {
                            i = e
                        }
                        if (o++, null == s ? void 0 : s.aborted) break
                    }
                    throw null != i ? i : new n.$K
                },
                d = e => new Promise((t => {
                    window.setTimeout(t, e)
                }))
        },
        69501: (e, t, a) => {
            "use strict";
            a.d(t, {
                Tc: () => O,
                cq: () => Z,
                IZ: () => j,
                a1: () => q,
                GN: () => Q,
                nU: () => K,
                Ap: () => Y,
                N$: () => B,
                Ms: () => ee
            });
            var s = a(91367),
                n = a(80254);
            const r = a.p + "sounds/adventures/67a424eb8d7150762f0a03a1310bce3a.mp3",
                i = a.p + "sounds/adventures/e91979b65353ada507d48a79115b2095.mp3",
                o = a.p + "sounds/adventures/4006babe059ba94299bcfe6c49c6a840.mp3",
                l = a.p + "sounds/adventures/79795ec5a52ac1e491b835b2d0be1783.mp3",
                c = a.p + "sounds/adventures/a29401f9b4d0d273849ddd88099e72ca.mp3",
                d = a.p + "sounds/adventures/9f0b28f64c9d6299d360e458ee2e8332.mp3",
                u = a.p + "sounds/adventures/efb67a0e30ea63dcd7f12b75b0691665.mp3",
                g = a.p + "sounds/adventures/5ec8becb434c58dac3e9cffdd7f15931.mp3",
                p = a.p + "sounds/adventures/a89c42caef13b881d833a195124a584f.mp3",
                m = a.p + "sounds/adventures/4aeff17948396f3da6ed02b5bddb962c.mp3",
                h = a.p + "sounds/adventures/35d80128d00ed9e223ee14b88b15e50d.mp3",
                v = a.p + "sounds/7abe057dc8446ad325229edd6d8fd250.mp3",
                _ = a.p + "sounds/2aae0ea735c8e9ed884107d6f0a09e35.mp3",
                f = a.p + "sounds/421d48c53ad6d52618dba715722278e0.mp3",
                S = a.p + "sounds/37d8f0b39dcfe63872192c89653a93f6.mp3",
                y = a.p + "sounds/0a27c1ee63dd220647e8410a0029aed2.mp3",
                E = a.p + "sounds/a28ff0a501ef5f33ca78c0afc45ee53e.mp3",
                b = a.p + "sounds/2e4669d8cf839272f0731f8afa488caf.mp3",
                I = a.p + "sounds/f0b6ab4396d5891241ef4ca73b4de13a.mp3";
            var w = a(50498),
                k = a(80388),
                T = a(53229),
                C = a(58576),
                R = a(71371),
                L = a(18804),
                A = a(79465);
            const P = s.Howler._setup;
            s.Howler._setup = () => {
                const e = null === s.Howler._navigator ? null : new Proxy(s.Howler._navigator, {
                    get: (e, t) => "userAgent" === t ? e.userAgent.replace(/OPR\/(\d{3})/, "OPR/99") : e[t]
                });
                return s.Howler._navigator = e, P()
            };
            const D = {
                    ADVENTURES_BACKGROUND_MUSIC: {
                        url: r,
                        volume: .5
                    },
                    ADVENTURES_CHOICE_DISTRACTOR: {
                        url: i,
                        volume: .5
                    },
                    ADVENTURES_GOAL_APPEAR: {
                        url: o,
                        volume: .5
                    },
                    ADVENTURES_ITEM_GET: {
                        url: l,
                        volume: .5
                    },
                    ADVENTURES_SPEECH_BUBBLE_APPEAR: {
                        url: c,
                        volume: .5
                    },
                    ADVENTURES_STATE_HIDE: {
                        url: d,
                        volume: .5
                    },
                    ADVENTURES_STATE_UNHIDE: {
                        url: u,
                        volume: .5
                    },
                    ADVENTURES_TAP_GROUND: {
                        url: g,
                        volume: .5
                    },
                    ADVENTURES_TAP_OBJECT: {
                        url: p,
                        volume: .5
                    },
                    ADVENTURES_WALKING_LOOP: {
                        url: m,
                        volume: .5
                    },
                    ADVENTURES_WALKING_STOP: {
                        url: h,
                        volume: .5
                    },
                    BONUS: {
                        url: v,
                        volume: .5
                    },
                    CORRECT: {
                        url: S,
                        volume: .35
                    },
                    FAILED: {
                        url: f,
                        volume: .5
                    },
                    INCORRECT: {
                        url: I,
                        volume: .35
                    },
                    PASSED: {
                        url: _,
                        volume: .5
                    },
                    TEST: {
                        url: E,
                        volume: .4
                    },
                    TIMER: {
                        url: b,
                        volume: .6
                    }
                },
                N = Symbol("SOUND_OPTIONS_KEY"),
                O = n.Xc(D, (e => e.url)),
                x = n.Ry(n.VO(D).map((({
                    url: e,
                    volume: t
                }) => [e, t]))),
                F = window.duo.useWebAudio ? new AudioContext : void 0,
                M = {};
            let U, H = !1;
            const G = e => e instanceof s.Howl,
                V = ({
                    failureReason: e,
                    source: t,
                    timeTaken: a,
                    url: s
                }) => {
                    const n = (0, k.J9)() ? .005 : 5e-4;
                    if (Math.random() < n) {
                        const r = new URL(J(s));
                        (0, A.track)("tts_play_finished", {
                            failure_reason: e,
                            host: r.host,
                            path: r.pathname,
                            sampling_rate: n,
                            successful: void 0 === e,
                            time_taken: a,
                            tts_source: t
                        })
                    }
                },
                B = ({
                    text: e,
                    url: t
                }) => {
                    const a = (0, k.J9)() ? .1 : .01;
                    Math.random() < a && (0, A.track)("tts_download_failure", {
                        offline: !navigator.onLine,
                        path: "string" == typeof t ? J(t) : "",
                        text: e
                    })
                },
                z = ({
                    failureReason: e,
                    url: t
                }) => {
                    (0, A.track)("tts_failed_to_play", {
                        failure_reason: e,
                        tts_url: "string" == typeof t ? J(t) : ""
                    })
                },
                Z = () => window.duo.useWebAudio ? "running" === F.state : H,
                W = e => {
                    var t;
                    if (window.duo.useWebAudio) {
                        const t = new Audio;
                        return t.crossOrigin = "anonymous", t.src = e, t.addEventListener("error", (() => {
                            var e;
                            (0, C.vU)("Failed to load audio", {
                                data: {
                                    errorCode: null === (e = t.error) || void 0 === e ? void 0 : e.code,
                                    url: t.src
                                },
                                sample: 1e-4
                            })
                        })), F.createMediaElementSource(t).connect(F.destination), t
                    }
                    return new s.Howl({
                        format: ["mp3"],
                        html5: !0,
                        onloaderror: (t, a) => (0, C.vU)("Failed to load audio", {
                            data: {
                                errorCode: a,
                                url: e
                            },
                            sample: 1e-4
                        }),
                        preload: !0,
                        src: [e],
                        volume: null !== (t = x[e]) && void 0 !== t ? t : 1
                    })
                },
                $ = e => {
                    switch (e) {
                        case "ended":
                            return "end";
                        case "error":
                            return "loaderror";
                        default:
                            return e
                    }
                },
                j = e => {
                    if (!e) return Promise.reject(Error("loadSound called with empty URL"));
                    e = J(e);
                    const t = M[e];
                    if (t) return t.promise;
                    const a = W(e),
                        s = new Promise(((e, t) => {
                            G(a) ? (a.on("load", e), a.on("loaderror", t)) : (a.addEventListener("canplaythrough", (() => e())), a.addEventListener("error", (() => t())))
                        }));
                    return M[e] = {
                        player: a,
                        promise: s
                    }, s
                },
                q = (e, {
                    requestedAt: t
                }, a) => {
                    var s, n;
                    if (!e) return (0, C.Kp)("TTS URL is null"), z({
                        failureReason: "empty_url",
                        url: ""
                    }), void V({
                        failureReason: "empty_url",
                        source: "network",
                        timeTaken: 0,
                        url: ""
                    });
                    const r = null === (s = M[e]) || void 0 === s ? void 0 : s.promise;
                    let i = "network";
                    (async () => {
                        const e = r ? await (0, w.p4)(r) : "empty";
                        i = "fulfilled" === e ? "cache" : "pending" === e ? "pending-cache" : "network"
                    })();
                    const o = window.performance.now();
                    return Q(e, { ...a,
                        eventListeners: [...null !== (n = null == a ? void 0 : a.eventListeners) && void 0 !== n ? n : [],
                            ["error", () => {
                                z({
                                    failureReason: "load_error",
                                    url: e
                                }), V({
                                    failureReason: "load_error",
                                    source: i,
                                    timeTaken: window.performance.now() - o,
                                    url: e
                                })
                            }],
                            ["play", () => {
                                const a = window.performance.now();
                                R.Z.start("tts_play", {
                                    startTime: t
                                }), R.Z.finish("tts_play"), V({
                                    failureReason: void 0,
                                    source: i,
                                    timeTaken: a - o,
                                    url: e
                                })
                            }],
                            ["playerror", () => {
                                z({
                                    failureReason: "play_promise_rejected",
                                    url: e
                                }), V({
                                    failureReason: "play_promise_rejected",
                                    source: i,
                                    timeTaken: window.performance.now() - o,
                                    url: e
                                })
                            }]
                        ]
                    })
                },
                Q = (e, t = {}) => {
                    var a, s, r, i, o, l, c, d, u, g, p;
                    if (!e) return void(0, C.Kp)("TTS URL is null");
                    const m = J(e);
                    if (n.VO(O).includes(m) && !(null === (a = (0, L.globalGetState)()) || void 0 === a ? void 0 : a.user.enableSoundEffects)) return;
                    if (!t.overlay && U && (G(U.player) ? U.player.playing() : !U.player.paused) && U.options.forceListen && U.url !== m && U.url !== t.allowInterrupt) return;
                    const h = M[m],
                        v = null !== (s = null == h ? void 0 : h.player) && void 0 !== s ? s : W(m),
                        _ = G(v) ? v[N] : null == h ? void 0 : h.options;
                    G(v) ? v[N] = t : h && (h.options = t), null === (r = null == _ ? void 0 : _.eventListeners) || void 0 === r || r.forEach((([e, t]) => {
                        G(v) ? v.off($(e), t) : v.removeEventListener(e, t)
                    })), null === (i = t.eventListeners) || void 0 === i || i.forEach((([e, t]) => {
                        G(v) ? v.on($(e), t) : v.addEventListener(e, t)
                    })), !M[m] && G(v) && v.on("end", (() => X(v))), t.overlay || (Y(), U = {
                        options: t,
                        player: v,
                        url: m
                    }), G(v) ? (v.loop(null !== (o = t.shouldLoop) && void 0 !== o && o), v.seek(null !== (l = t.currentTime) && void 0 !== l ? l : 0), v.rate(null !== (c = t.playbackRate) && void 0 !== c ? c : 1)) : (v.loop = null !== (d = t.shouldLoop) && void 0 !== d && d, v.currentTime = null !== (u = t.currentTime) && void 0 !== u ? u : 0, v.playbackRate = null !== (g = t.playbackRate) && void 0 !== g ? g : 1, v.volume = null !== (p = x[m]) && void 0 !== p ? p : 1);
                    const f = async () => {
                        if (G(v)) v.play();
                        else try {
                            await v.play()
                        } catch (e) {
                            console.error(e)
                        }
                    };
                    return f(), {
                        get currentTime() {
                            return G(v) ? "unloaded" === v.state() ? 0 : v.seek() : v.currentTime
                        },
                        set currentTime(e) {
                            G(v) ? "unloaded" !== v.state() && v.seek(e) : v.currentTime = e
                        },
                        get duration() {
                            return G(v) ? v.duration() : v.duration
                        },
                        set paused(e) {
                            G(v) ? e && v.playing() ? v.pause() : e || v.playing() || f() : e ? v.pause() : v.paused && f()
                        },
                        get paused() {
                            return G(v) ? !v.playing() : v.paused
                        },
                        get src() {
                            return m
                        },
                        get unmodifiedSrc() {
                            return e
                        }
                    }
                },
                K = n.IH((() => {
                    if (window.duo.useWebAudio) {
                        const e = () => {
                            "suspended" === F.state && F.resume(), document.removeEventListener("click", e, !0), document.removeEventListener("touchend", e, !0), document.removeEventListener("touchstart", e, !0)
                        };
                        document.addEventListener("click", e, !0), document.addEventListener("touchend", e, !0), document.addEventListener("touchstart", e, !0)
                    } else try {
                        const e = new s.Howl({
                            src: [y]
                        });
                        e.on("unlock", (() => {
                            e.unload(), H = !0
                        }))
                    } catch (e) {
                        (0, C.vU)("Howler failed to unlock audio", {
                            ex: e
                        })
                    }
                })),
                Y = () => {
                    U && (G(U.player) ? null == U || U.player.stop() : (U.player.pause(), U.player.currentTime = 0))
                },
                J = e => (e = e.replace("http://static.duolingo.com", "https://d7mj4aqfscim2.cloudfront.net"), window.duo.useWebAudio ? (0, T.qy)(e) : e),
                X = e => {
                    var t;
                    const a = e[N];
                    null === (t = null == a ? void 0 : a.eventListeners) || void 0 === t || t.forEach((([t, a]) => e.off($(t), a))), e[N] = void 0, e.unload()
                },
                ee = e => {
                    var t;
                    if (!e) return;
                    e = J(e);
                    const a = null === (t = M[e]) || void 0 === t ? void 0 : t.player;
                    a && G(a) && X(a), delete M[e]
                }
        },
        70326: (e, t, a) => {
            "use strict";
            a.d(t, {
                $C: () => S,
                IS: () => E,
                Wj: () => v,
                lV: () => w,
                pK: () => f,
                rV: () => I,
                x4: () => y
            });
            var s = a(80254),
                n = a(97544),
                r = a(54412),
                i = a(17135),
                o = a(59815),
                l = a(41679),
                c = a(15670),
                d = a(8654),
                u = a(93746),
                g = a(58576),
                p = a(30839),
                m = a(79465),
                h = a(16086);
            class v extends o.pY {
                constructor(e, t) {
                    super(), this.useImprovedErrorMessages = e, this.errorFields = t
                }
            }
            const _ = async e => {
                    var t;
                    const a = {
                        timezone: (0, i.NP)()
                    };
                    try {
                        const a = l.E6() && (null === (t = await l.Jb()) || void 0 === t ? void 0 : t.accessToken);
                        a && (e.facebookToken = a)
                    } catch {}
                    const s = (0, p.rV)(p.Qt.InviteCode);
                    s && (e.inviteCode = s, (0, p.cl)(p.Qt.InviteCode));
                    const o = (0, r.ej)(r.Vj.LandingURL);
                    o !== r.m_ && (e.landingUrl = o);
                    const d = (0, r.ej)(r.Vj.InitialReferrer);
                    d !== r.m_ && (e.initialReferrer = d), e.lastReferrer = (0, r.ej)(r.Vj.LastReferrer), (0, r.d8)(r.Vj.LastReferrer, "");
                    const u = await c.e("SIGNUP"),
                        g = await n.Vi.userCreate({ ...a,
                            ...e
                        }, u),
                        h = g.id;
                    return await (0, m.alias)(h), (0, m.setDistinctId)(h), g
                },
                f = async (e, t = u.h9) => {
                    if (e === t && "en" !== e) throw (0, g.vU)("Tried to create trial user with same from and learning languages", {
                        data: {
                            fromLanguage: t,
                            learningLanguage: e
                        }
                    }), Error("learningLanguage and fromLanguage cannot be the same");
                    return await _({
                        fromLanguage: t,
                        learningLanguage: e
                    })
                },
                S = async (e = {}, t = u.h9) => {
                    await _({
                        fromLanguage: t,
                        ...e
                    })
                },
                y = async (e, t = !0) => {
                    const a = (0, r.ej)(r.Vj.LandingURL);
                    a !== r.m_ && (e.landingUrl = a), e.lastReferrer = (0, r.ej)(r.Vj.LastReferrer), (0, r.d8)(r.Vj.LastReferrer, "");
                    const s = await c.e("LOGIN");
                    await n.Vi.login(e, t, s);
                    const i = (0, h.Jb)();
                    (0, m.setDistinctId)(i)
                },
                E = async (e, t = !0) => {
                    const a = {},
                        n = {
                            identifier: e.identifier.trim(),
                            password: e.password
                        };
                    if (n.identifier || (a.identifier = (0, d.H8)(11696)), n.password.trim() || (a.password = (0, d.H8)(5030)), !s.xb(a)) throw new v(!1, a);
                    try {
                        await y(s.ei(n, "identifier", "password"), !1)
                    } catch (e) {
                        if (t) {
                            const e = await b(n.identifier);
                            a.password = e ? (0, d.H8)(6852) : void 0, a.identifier = e ? void 0 : (0, d.H8)(52720, {
                                email_or_username: n.identifier
                            })
                        } else a.connectivity = (0, d.H8)(19737);
                        throw new v(!0, a)
                    }
                },
                b = async e => {
                    const [t, a] = await Promise.all([n.Vi.userSearchByEmail(e), n.Vi.userIdsByUsername(e)]);
                    return t.length > 0 || a.length > 0
                },
                I = async e => {
                    const t = await n.Vi.usernameValidate(e);
                    if (t.isUsernameTaken) throw new v(!0, {
                        suggestedUsernames: t.suggestedUsernames,
                        username: t.suggestedUsernames.length ? (0, d.H8)(49958, {
                            num: t.suggestedUsernames.length
                        }) : (0, d.H8)(6284)
                    });
                    if (!t.isUsernameValid) throw new v(!0, {
                        suggestedUsernames: [],
                        username: (0, d.H8)(14591)
                    })
                },
                w = e => new v(!1, Object.assign({}, ...e.map((e => {
                    switch (e) {
                        case "AGE_INVALID":
                            return {
                                age: (0, d._i)(15012)
                            };
                        case "EMAIL_INVALID":
                            return {
                                email: (0, d._i)(11696)
                            };
                        case "EMAIL_TAKEN":
                            return {
                                email: (0, d._i)(1760)
                            };
                        case "NAME_INVALID":
                            return {
                                name: (0, d._i)(24091)
                            };
                        case "PASSWORD_INCORRECT":
                            return {
                                currentPassword: (0, d._i)(8182)
                            };
                        case "PASSWORD_INVALID":
                            return {
                                password: (0, d._i)(5030)
                            };
                        case "USERNAME_INVALID":
                            return {
                                username: (0, d._i)(14591)
                            };
                        case "USERNAME_TAKEN":
                            return {
                                username: (0, d._i)(6284)
                            };
                        default:
                            return
                    }
                }))))
        },
        30033: (e, t, a) => {
            "use strict";
            a.d(t, {
                Aq: () => i,
                _q: () => o,
                m5: () => r
            });
            var s = a(80254),
                n = a(58576);
            const r = "data-test",
                i = (e, t) => {
                    console.log(`${e}${JSON.stringify(t)}`, n.VR)
                },
                o = (...e) => {
                    const t = s.jj(s.oA(e).map((e => e.split(" "))).flat()).sort();
                    return t.length ? {
                        [r]: t.join(" ")
                    } : {}
                }
        },
        83719: (e, t, a) => {
            "use strict";
            a.d(t, {
                Oj: () => s,
                ub: () => l,
                ul: () => c,
                zD: () => o
            });
            var s, n = a(80254);
            ! function(e) {
                e.Accent = "accent", e.ExtraSpace = "extra_space", e.MissingSpace = "missing_space", e.MissingWord = "missing_word", e.Typo = "typo", e.WrongWord = "wrong_word"
            }(s || (s = {}));
            const r = [12244, 9366, 748, 6198, 12541, 9987, 1358, 11280, 22136, 11684],
                i = [1547, 8153, 10795, 15212, 8539],
                o = "Nice! You’re building your writing skills!",
                l = () => n.UP(r),
                c = e => e ? n.UP(i) : 15039
        },
        80388: (e, t, a) => {
            "use strict";
            a.d(t, {
                J9: () => n,
                lS: () => r,
                nC: () => l,
                vQ: () => i
            });
            var s = a(17135);
            const n = () => window.location.host.endsWith(".cn"),
                r = () => "zh-CN" === navigator.language,
                i = async e => {
                    navigator.clipboard ? await navigator.clipboard.writeText(e) : o(e)
                },
                o = e => {
                    const t = document.createElement("textarea");
                    t.value = e, document.body.appendChild(t), t.select();
                    try {
                        if (!document.execCommand("copy")) throw Error('Cannot execute "copy" command')
                    } finally {
                        document.body.removeChild(t)
                    }
                },
                l = (e, t) => {
                    const a = t / 1e3;
                    let n = (0, s.Zo)();
                    return window.setInterval((() => {
                        const t = (0, s.Zo)();
                        t - n < a || (n = t, e())
                    }), 1e4)
                }
        },
        16324: (e, t, a) => {
            "use strict";
            a.d(t, {
                EV: () => i,
                Ed: () => o,
                TD: () => s
            });
            const s = e => e.toLowerCase().split("_").reduce(((e, t, a) => e + (a ? (e => e[0].toUpperCase() + e.slice(1))(t) : t))),
                n = e => e.split(/(?=[A-Z])/).join("_").toLowerCase(),
                r = (e, t) => ((e, t) => Object.fromEntries(Object.entries(e).map((e => t(e)))))(e, (([e, a]) => [t(e), null === a || "object" != typeof a || a instanceof Function ? a : Array.isArray(a) ? a.slice() : r(a, t)])),
                i = e => r(e, s),
                o = e => r(e, n)
        },
        95332: (e, t, a) => {
            "use strict";
            a.d(t, {
                Dw: () => L,
                F: () => v,
                SJ: () => h,
                Tu: () => p,
                cC: () => E,
                cf: () => w,
                eK: () => b,
                gr: () => T,
                j$: () => _,
                j6: () => k,
                jc: () => I,
                nT: () => S,
                qD: () => A,
                r1: () => y,
                rF: () => f,
                vv: () => R,
                xV: () => C,
                yH: () => m
            });
            var s = a(80254),
                n = a(40472),
                r = a(97544),
                i = a(37590),
                o = a(68903),
                l = a(8654),
                c = a(93746),
                d = a(58576),
                u = a(43006),
                g = a(11811);
            const p = 3,
                m = [g.Sm.Assist, g.Sm.CompleteReverseTranslation, g.Sm.Dialogue, g.Sm.Form, g.Sm.GapFill, g.Sm.Judge, g.Sm.Listen, g.Sm.ListenComplete, g.Sm.ListenIsolation, g.Sm.ListenSpeak, g.Sm.ListenTap, g.Sm.PartialListen, g.Sm.PartialReverseTranslate, g.Sm.SelectPronunciation, g.Sm.SelectTranscription, g.Sm.Speak, g.Sm.SyllableTap, g.Sm.Translate],
                h = {
                    [g.Sm.Assist]: "assist",
                    [g.Sm.CharacterIntro]: "character_intro",
                    [g.Sm.CharacterMatch]: "character_match",
                    [g.Sm.CharacterPuzzle]: "character_puzzle",
                    [g.Sm.CharacterSelect]: "character_select",
                    [g.Sm.CharacterTrace]: "character_trace",
                    [g.Sm.CharacterWrite]: "character_write",
                    [g.Sm.CompleteReverseTranslation]: "complete_reverse_translation",
                    [g.Sm.Definition]: "definition",
                    [g.Sm.Dialogue]: "dialogue",
                    [g.Sm.ExtendedMatch]: "extended_match",
                    [g.Sm.ExtendedListenMatch]: "extended_listen_match",
                    [g.Sm.Form]: "form",
                    [g.Sm.FreeResponse]: "free_response",
                    [g.Sm.GapFill]: "gap_fill",
                    [g.Sm.Judge]: "judge",
                    [g.Sm.Listen]: "listen",
                    [g.Sm.ListenComplete]: "listen_complete",
                    [g.Sm.ListenComprehension]: "listen_comprehension",
                    [g.Sm.ListenIsolation]: "listen_isolation",
                    [g.Sm.ListenMatch]: "listen_match",
                    [g.Sm.ListenSpeak]: "listen_speak",
                    [g.Sm.ListenTap]: "listen_tap",
                    [g.Sm.Match]: "match",
                    [g.Sm.Name]: "name",
                    [g.Sm.OrderTapComplete]: "order_tap_complete",
                    [g.Sm.PartialListen]: "partial_listen",
                    [g.Sm.PartialReverseTranslate]: "partial_reverse_translate",
                    [g.Sm.PatternTapComplete]: "pattern_tap_complete",
                    [g.Sm.RadioBinary]: "radio_binary",
                    [g.Sm.RadioImageSelect]: "radio_image_select",
                    [g.Sm.RadioListenMatch]: "radio_listen_match",
                    [g.Sm.RadioListenRecognize]: "radio_listen_recognize",
                    [g.Sm.RadioSelect]: "radio_select",
                    [g.Sm.ReadComprehension]: "read_comprehension",
                    [g.Sm.ReverseAssist]: "reverse_assist",
                    [g.Sm.SameDifferent]: "same_different",
                    [g.Sm.Select]: "select",
                    [g.Sm.SelectPronunciation]: "select_pronunciation",
                    [g.Sm.SelectTranscription]: "select_transcription",
                    [g.Sm.SvgPuzzle]: "svg_puzzle",
                    [g.Sm.SyllableListenTap]: "syllable_listen_tap",
                    [g.Sm.SyllableTap]: "syllable_tap",
                    [g.Sm.Speak]: "speak",
                    [g.Sm.TapCloze]: "tap_cloze",
                    [g.Sm.TapClozeTable]: "tap_cloze_table",
                    [g.Sm.TapComplete]: "tap_complete",
                    [g.Sm.TapCompleteTable]: "tap_complete_table",
                    [g.Sm.TapDescribe]: "tap_describe",
                    [g.Sm.Translate]: "translate",
                    [g.Sm.Transliterate]: "transliterate",
                    [g.Sm.TransliterationAssist]: "transliteration_assist",
                    [g.Sm.TypeCloze]: "type_cloze",
                    [g.Sm.TypeClozeTable]: "type_cloze_table",
                    [g.Sm.TypeComplete]: "type_complete",
                    [g.Sm.TypeCompleteTable]: "type_complete_table",
                    [g.Sm.WriteComprehension]: "write_comprehension"
                },
                v = {
                    BEA: "bea",
                    EDDY: "eddy",
                    FALSTAFF: "falstaff",
                    JUNIOR: "junior",
                    LILY: "lily",
                    LIN: "lin",
                    LUCY: "lucy",
                    OSCAR: "oscar",
                    VIKRAM: "vikram",
                    ZARI: "zari"
                },
                _ = e => {
                    const t = [];
                    return e.forEach(((e, a, s) => {
                        e.isBlank && a > 0 && s[a - 1].isBlank ? t[t.length - 1].text += e.text : t.push({ ...e
                        })
                    })), t
                },
                f = e => [!0, void 0].includes(e.grader.whitespaceDelimited) ? " " : "",
                S = (e, t) => {
                    e.length !== t.length && (0, d.Kp)("Mismatch between text sequence lengths", {
                        data: {
                            differentTexts: t,
                            originalTexts: e
                        }
                    });
                    let a = 0;
                    const s = [];
                    for (let n = 0; n < Math.min(e.length, t.length); n++) {
                        const r = e[n];
                        r !== t[n] && s.push([a, a + r.length]), a += r.length
                    }
                    return s
                },
                y = e => {
                    var t, a;
                    switch (e.type) {
                        case g.Sm.Assist:
                        case g.Sm.CharacterIntro:
                        case g.Sm.CharacterPuzzle:
                        case g.Sm.CharacterSelect:
                        case g.Sm.CharacterTrace:
                        case g.Sm.CharacterWrite:
                        case g.Sm.CompleteReverseTranslation:
                        case g.Sm.Judge:
                        case g.Sm.Listen:
                        case g.Sm.ListenSpeak:
                        case g.Sm.ListenComplete:
                        case g.Sm.ListenTap:
                        case g.Sm.Name:
                        case g.Sm.PartialListen:
                        case g.Sm.PatternTapComplete:
                        case g.Sm.ReverseAssist:
                        case g.Sm.Select:
                        case g.Sm.SvgPuzzle:
                        case g.Sm.SyllableListenTap:
                        case g.Sm.SyllableTap:
                        case g.Sm.Speak:
                        case g.Sm.Translate:
                        case g.Sm.Transliterate:
                        case g.Sm.TransliterationAssist:
                            return [e.prompt];
                        case g.Sm.CharacterMatch:
                            return [e.pairs.map((e => e.character)).join(", ")];
                        case g.Sm.Definition:
                            return [e.displayTokens.map((e => e.text)).join(""), (0, l.H8)(1831, {
                                string_1: e.phraseToDefine
                            })];
                        case g.Sm.Dialogue:
                            {
                                const t = e.dialogue.map((e => {
                                    const t = _(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("");
                                    return (0, l.H8)(20248, {
                                        message: t,
                                        speaker: e.speaker
                                    })
                                }));
                                return e.promptTokens && t.push(e.promptTokens.map((e => e.value)).join("")),
                                t
                            }
                        case g.Sm.Form:
                            return [`${e.promptPieces[0]} ${u.qv} ${e.promptPieces[1]}`];
                        case g.Sm.FreeResponse:
                            return [null !== (t = e.prompt) && void 0 !== t ? t : ""];
                        case g.Sm.GapFill:
                            return [_(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("")];
                        case g.Sm.ListenComprehension:
                            return [e.prompt, e.question ? e.question : (0, l.H8)(2005)];
                        case g.Sm.ExtendedListenMatch:
                        case g.Sm.ListenMatch:
                            return [e.pairs.map((e => e.translation)).join(", ")];
                        case g.Sm.ExtendedMatch:
                        case g.Sm.Match:
                            return [e.pairs.map((e => e.learningToken)).join(", ")];
                        case g.Sm.OrderTapComplete:
                            return [_(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("")];
                        case g.Sm.PartialReverseTranslate:
                            return [e.prompt];
                        case g.Sm.RadioBinary:
                        case g.Sm.RadioImageSelect:
                        case g.Sm.RadioListenMatch:
                        case g.Sm.RadioListenRecognize:
                        case g.Sm.RadioSelect:
                            return [];
                        case g.Sm.ReadComprehension:
                            return [e.passage, null !== (a = e.question) && void 0 !== a ? a : (0, l.H8)(2005)];
                        case g.Sm.SelectPronunciation:
                        case g.Sm.SelectTranscription:
                            return [e.choices[e.correctIndex].text];
                        case g.Sm.TapCloze:
                        case g.Sm.TapClozeTable:
                        case g.Sm.TapCompleteTable:
                        case g.Sm.TypeCloze:
                        case g.Sm.TypeClozeTable:
                        case g.Sm.TypeCompleteTable:
                            return [(0, i.JH)(e)];
                        case g.Sm.TapComplete:
                            return [e.displayTokens.map((e => e.isBlank ? u.qv : e.text)).join("")];
                        case g.Sm.TypeComplete:
                            return [e.displayTokens.map((e => e.text)).join("")];
                        case g.Sm.TapDescribe:
                            return [e.correctSolutions[0]];
                        case g.Sm.ListenIsolation:
                            return [e.solutionTranslation];
                        case g.Sm.WriteComprehension:
                            return [e.passage, e.question ? e.question : (0, l.H8)(2005)];
                        case g.Sm.SameDifferent:
                            return [e.prompts.join(" ")];
                        default:
                            throw (0, o.RJ)(e), Error(`Cannot get prompt for ${e.type} challenge`)
                    }
                },
                E = (e, {
                    fromLanguage: t,
                    learningLanguage: a
                }) => {
                    switch (e.type) {
                        case g.Sm.Assist:
                        case g.Sm.CharacterIntro:
                        case g.Sm.CharacterPuzzle:
                        case g.Sm.CharacterSelect:
                        case g.Sm.CharacterTrace:
                        case g.Sm.CharacterWrite:
                        case g.Sm.CompleteReverseTranslation:
                        case g.Sm.Dialogue:
                        case g.Sm.Form:
                        case g.Sm.FreeResponse:
                        case g.Sm.GapFill:
                        case g.Sm.Judge:
                        case g.Sm.Listen:
                        case g.Sm.ListenComplete:
                        case g.Sm.ListenComprehension:
                        case g.Sm.ListenIsolation:
                        case g.Sm.ListenSpeak:
                        case g.Sm.ListenTap:
                        case g.Sm.Name:
                        case g.Sm.OrderTapComplete:
                        case g.Sm.PartialListen:
                        case g.Sm.PartialReverseTranslate:
                        case g.Sm.PatternTapComplete:
                        case g.Sm.RadioBinary:
                        case g.Sm.RadioImageSelect:
                        case g.Sm.RadioListenMatch:
                        case g.Sm.RadioListenRecognize:
                        case g.Sm.RadioSelect:
                        case g.Sm.ReadComprehension:
                        case g.Sm.SameDifferent:
                        case g.Sm.Select:
                        case g.Sm.SelectPronunciation:
                        case g.Sm.SelectTranscription:
                        case g.Sm.Speak:
                        case g.Sm.SvgPuzzle:
                        case g.Sm.SyllableListenTap:
                        case g.Sm.SyllableTap:
                        case g.Sm.TapCloze:
                        case g.Sm.TapClozeTable:
                        case g.Sm.TapComplete:
                        case g.Sm.TapCompleteTable:
                        case g.Sm.TapDescribe:
                        case g.Sm.TypeCloze:
                        case g.Sm.TypeClozeTable:
                        case g.Sm.TypeComplete:
                        case g.Sm.TypeCompleteTable:
                        case g.Sm.WriteComprehension:
                            return a;
                        case g.Sm.CharacterMatch:
                        case g.Sm.ListenMatch:
                        case g.Sm.Match:
                        case g.Sm.ExtendedListenMatch:
                        case g.Sm.ExtendedMatch:
                            return;
                        case g.Sm.Definition:
                            return r._s.convertRemoteLanguageId(e.choiceLanguageId);
                        case g.Sm.ReverseAssist:
                        case g.Sm.TransliterationAssist:
                            return t;
                        case g.Sm.Translate:
                            return e.targetLanguage;
                        case g.Sm.Transliterate:
                            return "en";
                        default:
                            throw (0, o.RJ)(e), Error(`Unexpected challenge type: ${e.type}`)
                    }
                },
                b = ({
                    browserSettings: e,
                    challenge: t,
                    isDesktop: a,
                    isGrammar: s,
                    learningLanguage: n,
                    session: r
                }) => {
                    if (r.type === g.FF.PlacementTest) return t.type === g.Sm.Translate ? {
                        canToggleTyping: !1,
                        isToggledToTyping: !R(t)
                    } : {
                        canToggleTyping: !1,
                        isToggledToTyping: !1
                    };
                    if (r.type === g.FF.AlphabetLesson || r.type === g.FF.AlphabetPractice) return {
                        canToggleTyping: !1,
                        isToggledToTyping: !1
                    };
                    switch (t.type) {
                        case g.Sm.CompleteReverseTranslation:
                            return {
                                canToggleTyping: !0,
                                isToggledToTyping: e.completeReverseTranslationTypingEnabled && !s
                            };
                        case g.Sm.ListenTap:
                            return a ? {
                                canToggleTyping: !0,
                                isToggledToTyping: e.typingEnabled
                            } : {
                                canToggleTyping: !1,
                                isToggledToTyping: !1
                            };
                        case g.Sm.Translate:
                            return R(t) ? A(t, n) ? {
                                canToggleTyping: !1,
                                isToggledToTyping: !1
                            } : {
                                canToggleTyping: !0,
                                isToggledToTyping: e.typingEnabled
                            } : {
                                canToggleTyping: !1,
                                isToggledToTyping: !0
                            };
                        default:
                            return {
                                canToggleTyping: !1,
                                isToggledToTyping: !0
                            }
                    }
                },
                I = e => (0, n.y)(e),
                w = (e, t, a) => {
                    const s = 2 * a,
                        n = e * a + t;
                    return s < 10 ? n + 1 : (n + 1) % s
                },
                k = (e, t, a, s, n = []) => {
                    if ((0, c.k4)(e, t, a)) return s.map(((e, t) => n.includes(e.value) ? t : void 0)).filter((e => void 0 !== e));
                    const r = s.map((({
                        value: e
                    }) => e)).join("");
                    return T(r, n)
                },
                T = (e, t = []) => t.reduce(((t, a) => {
                    const n = e.indexOf(a);
                    return t.concat(s.DZ(a.length, (e => e + n)))
                }), []),
                C = e => {
                    var t;
                    return null === (t = e.weakWordsRanges) || void 0 === t ? void 0 : t.reduce(((t, a) => (e.tokens.forEach(((s, n) => {
                        const r = e.prompt.indexOf(s.value),
                            i = r + s.value.length - 1;
                        r >= a.start_index && i <= a.end_index && t.push(n)
                    })), t)), [])
                },
                R = e => void 0 !== e.choices && void 0 !== e.correctIndices && e.choices.length > 0 && e.correctIndices.length > 0,
                L = (e, t) => !A(e, t),
                A = (e, t) => e.sourceLanguage === t
        },
        8698: (e, t, a) => {
            "use strict";
            a.d(t, {
                KT: () => q,
                fM: () => Q,
                uu: () => ee,
                uZ: () => Y,
                w6: () => J,
                sS: () => re,
                Q5: () => X,
                j4: () => te,
                Gs: () => ae,
                BY: () => se,
                w4: () => ne
            });
            var s = a(80254),
                n = a(76986),
                r = a(93540),
                i = a(97544),
                o = a(83719),
                l = a(95332),
                c = a(18675),
                d = a(78939),
                u = a(33037),
                g = a(37590),
                p = a(8654),
                m = a(58576),
                h = a(23275),
                v = a(89260),
                _ = a(59096),
                f = a(18804),
                S = a(43006),
                y = a(11811);
            const E = a.p + "rive/38e665ad177e05119e74d83b6dd978d0.riv",
                b = a.p + "rive/57760f450daa9ad71711f24e9ed10b6d.riv",
                I = a.p + "rive/e1525b75a535e870558d211782c11410.riv",
                w = a.p + "rive/8efd6f5596ffe0b1d6685cd07961d07b.riv",
                k = a.p + "rive/4ef959f7d59ae68d06a51bfda470057d.riv",
                T = a.p + "rive/49cc2eda34cf2ab0fb36638af0ec1690.riv",
                C = a.p + "rive/dc3369fec0831f563341bf2fc0338585.riv",
                R = a.p + "rive/aea6db05a3c25e5815843609097848d7.riv",
                L = a.p + "rive/41897c26063d63ac7a60386d1d05fac9.riv",
                A = a.p + "rive/5d6331479f13d28b71c92ea1461c009d.riv",
                P = (e, t) => ({
                    artBoardName: "Character",
                    correctStateName: "Correct",
                    incorrectStateName: "Incorrect",
                    notSetStateName: "Reset",
                    outfit: t,
                    outfitInputName: "Outfit",
                    stateMachineName: "InLesson",
                    url: e
                }),
                D = P(E),
                N = P(b),
                O = P(I),
                x = P(w),
                F = P(k),
                M = P(T),
                U = P(C),
                H = P(R),
                G = P(L),
                V = P(A),
                B = n,
                z = " ",
                Z = ({
                    challenge: e,
                    challengeState: t
                }) => {
                    var a, s;
                    const n = (0, S.Dg)(null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.map((t => e.choices[t].text)).join("")) && void 0 !== s ? s : "", ""),
                        r = e.type === y.Sm.SyllableTap ? e.correctSolutions.map((e => (0, S.Dg)(e, ""))) : [(0, S.Dg)(e.correctIndices.map((t => e.choices[t].text)).join(""))];
                    return Promise.resolve({
                        correct: r.includes(n),
                        guess: n
                    })
                },
                W = ({
                    challenge: e,
                    challengeState: t
                }) => {
                    var a, s, n;
                    const r = null !== (a = t.guess) && void 0 !== a ? a : [],
                        i = {
                            BOTH: ["left", "right"],
                            LEFT: ["left"],
                            NEITHER: [],
                            RIGHT: ["right"]
                        };
                    for (let t = 0; t < r.length; t++) {
                        const a = e.choices[r[t]],
                            o = t > 0 ? e.choices[r[t - 1]] : void 0,
                            l = t + 1 < r.length ? e.choices[r[t + 1]] : void 0,
                            c = i[null !== (s = null == l ? void 0 : l.damagePosition) && void 0 !== s ? s : "NEITHER"],
                            d = i[null !== (n = null == o ? void 0 : o.damagePosition) && void 0 !== n ? n : "NEITHER"];
                        if ("NEITHER" !== a.damagePosition)
                            if ("LEFT" === a.damagePosition) {
                                if (!d.includes("right")) return !1
                            } else if ("RIGHT" === a.damagePosition) {
                            if (!c.includes("left")) return !1
                        } else if (!("BOTH" !== a.damagePosition || d.includes("right") && c.includes("left"))) return !1
                    }
                    return !0
                };
            class $ {
                continueChallenge({
                    challengeState: e
                }) {
                    return { ...e
                    }
                }
                prepareChallenge({
                    challenge: e
                }) {
                    const t = { ...e
                    };
                    return t.character && !t.character.image && delete t.character, t.character && (t.character = { ...t.character,
                        riveAnimation: "BEA" === t.character.name ? D : "EDDY" === t.character.name ? N : "FALSTAFF" === t.character.name ? O : "JUNIOR" === t.character.name ? x : "LILY" === t.character.name ? F : "LIN" === t.character.name ? M : "LUCY" === t.character.name ? U : "OSCAR" === t.character.name ? H : "VIKRAM" === t.character.name ? G : "ZARI" === t.character.name ? V : void 0
                    }), t
                }
            }
            const j = {
                    [y.Sm.Assist]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.options.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: t.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.CharacterIntro]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => [{
                                autoplay: !0,
                                required: !1,
                                text: e.prompt,
                                url: e.tts
                            }], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.CharacterMatch]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.pairs.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.character,
                                url: e.tts
                            }))), this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: void 0 !== e.guess,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.CharacterPuzzle]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            })), {
                                autoplay: !0,
                                required: !1,
                                text: e.correctSolutions[0],
                                url: e.tts
                            }]), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a;
                                const s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices.map((t => t >= 0 ? e.choices[t].text : "")).join(""),
                                    n = e.correctIndices.map((t => e.choices[t].text)).join("");
                                return Promise.resolve({
                                    correct: s === n,
                                    guess: s
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                return (null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices) || void 0 === s ? void 0 : s.filter((e => e >= 0)).length) === e.correctIndices.length
                            }
                        }
                    },
                    [y.Sm.CharacterSelect]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.character,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.CharacterTrace]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO], this.getTts = ({
                                challenge: e
                            }) => e.tts ? [{
                                autoplay: !0,
                                required: !1,
                                text: e.prompt,
                                url: e.tts
                            }] : [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                return Promise.resolve({
                                    correct: (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= e.strokes.length,
                                    guess: t.guess
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                return (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= e.strokes.length
                            }
                        }
                    },
                    [y.Sm.CharacterWrite]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO], this.getTts = ({
                                challenge: e
                            }) => e.promptTts ? [{
                                autoplay: !0,
                                required: !1,
                                text: e.prompt,
                                url: e.promptTts
                            }] : [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s, n;
                                const r = e.strokes.filter((e => "PREDRAWN" !== e.strokeDrawMode)),
                                    i = null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0,
                                    o = i >= r.length && !(null === (n = t.guess) || void 0 === n ? void 0 : n.skippedCurrentStroke);
                                return Promise.resolve({
                                    correct: o,
                                    guess: t.guess,
                                    numStrokesLeft: r.length - i
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                const n = e.strokes.filter((e => "PREDRAWN" !== e.strokeDrawMode));
                                return (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= n.length
                            }
                        }
                    },
                    [y.Sm.CompleteReverseTranslation]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => {
                                if (a.isToggledToTyping) {
                                    const s = this.getTypedSentence(t);
                                    return (0, u.wM)({
                                        allowTypoBlame: !0,
                                        challenge: e,
                                        guess: s,
                                        isTypingInLearningLanguage: a.isToggledToTyping
                                    })
                                }
                                const n = this.getTypedWords(e, t),
                                    r = this.getAllWords(e, t).join(""),
                                    i = e.displayTokens.filter((e => e.isBlank)).map((e => e.text));
                                if (s.Xy(n, i)) return Promise.resolve({
                                    correct: !0,
                                    guess: r
                                });
                                const o = await (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: r,
                                    isTypingInLearningLanguage: a.isToggledToTyping
                                });
                                return o.correct || delete o.blameMessage, o
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: {
                                    translatedWords: e.displayTokens.map((() => ""))
                                },
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => a.isToggledToTyping ? this.getTypedSentence(t).length > 0 : this.getTypedWords(e, t).every((e => e)), this.getTypedWords = (e, t) => {
                                var a, s;
                                const n = null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.translatedWords) && void 0 !== s ? s : [];
                                return e.displayTokens.flatMap(((e, t) => e.isBlank ? n[t] : []))
                            }, this.getAllWords = (e, t) => {
                                const {
                                    displayTokens: a
                                } = e;
                                let s = 0;
                                const n = this.getTypedWords(e, t);
                                return a.map((e => e.isBlank ? n[s++] : e.text))
                            }, this.getTypedSentence = e => {
                                var t, a;
                                return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translatedSentence) && void 0 !== a ? a : "").trim()
                            }
                        }
                    },
                    [y.Sm.Definition]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([...e.displayTokens.map((e => e.hintToken.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.hintToken.tts
                            })), e.tts && {
                                autoplay: !0,
                                required: !1,
                                text: e.displayTokens.map((e => e.text)).join(""),
                                url: e.tts
                            }]), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: t.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Dialogue]: new class extends $ {
                        constructor() {
                            super(...arguments), this.continueChallenge = ({
                                challengeState: e
                            }) => ({ ...e,
                                currentDialogueIndex: e.currentDialogueIndex + 1
                            }), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => {
                                var t;
                                return s.oA([...e.dialogue.map((e => e.hintTokens)).flat(), ...null !== (t = e.promptTokens) && void 0 !== t ? t : []].map((e => e.tts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.value,
                                    url: e.tts
                                })))
                            }, this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const {
                                    dialogue: a
                                } = e, {
                                    currentDialogueIndex: s
                                } = t;
                                return s >= a.length
                            }, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                currentDialogueIndex: 0,
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.ExtendedMatch]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.pairs.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.learningToken,
                                url: e.tts
                            }))), this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: void 0 !== e.guess,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = () => !1
                        }
                    },
                    [y.Sm.ExtendedListenMatch]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.pairs.map((e => e.tts && {
                                autoplay: !1,
                                required: !0,
                                text: e.translation,
                                url: e.tts
                            }))), this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: void 0 !== e.guess,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = () => !1
                        }
                    },
                    [y.Sm.Form]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                gradingMetadata: (0, _.u5)(e, t.guess),
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallenge = e => {
                                const t = super.prepareChallenge(e);
                                return t.options || (t.options = t.choices.map((e => ({
                                    text: e
                                })))), t
                            }, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.FreeResponse]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: "" !== this.getResponse(e),
                                guess: this.getResponse(e)
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const {
                                    maxGuessLength: a
                                } = e, s = this.getResponse(t);
                                return s.length > 0 && s.length <= a
                            }, this.getResponse = e => {
                                var t;
                                return (null !== (t = e.guess) && void 0 !== t ? t : "").trim()
                            }
                        }
                    },
                    [y.Sm.GapFill]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                closestSolution: e.displayTokens.map((e => e.text)).join(""),
                                correct: t.guess === e.correctIndex,
                                guess: void 0 === t.guess ? void 0 : e.choices[t.guess]
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Judge]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.OFFENSIVE_OPTION, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => (e.correctIndices.length > 1 && (0, m.vU)(`Judge has more than one right answer: ${e.prompt}`), Promise.resolve({
                                correct: void 0 !== t.guess && e.correctIndices.includes(t.guess),
                                guess: t.guess
                            })), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Listen]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([e.slowTts && {
                                autoplay: !1,
                                required: !1,
                                text: e.prompt,
                                url: e.slowTts
                            }, {
                                autoplay: !0,
                                required: !0,
                                text: e.prompt,
                                url: e.tts
                            }]), this.grade = ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => (0, u.wM)({
                                allowTypoBlame: !0,
                                challenge: e,
                                guess: this.getGuess(t),
                                isTypingInLearningLanguage: e.grader.language === a
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => !!this.getGuess(e), this.getGuess = e => {
                                var t;
                                return (null !== (t = e.guess) && void 0 !== t ? t : "").trim()
                            }
                        }
                    },
                    [y.Sm.ListenComplete]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([e.slowTts && {
                                autoplay: !1,
                                required: !1,
                                text: e.prompt,
                                url: e.slowTts
                            }, {
                                autoplay: !0,
                                required: !0,
                                text: e.prompt,
                                url: e.tts
                            }]), this.grade = ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => (0, u.wM)({
                                allowTypoBlame: !0,
                                challenge: e,
                                guess: this.getUserInput(e, t, !0).join(""),
                                isTypingInLearningLanguage: e.grader.language === a
                            }), this.isReadyForGuessing = () => !0, this.prepareChallenge = e => {
                                const t = super.prepareChallenge(e);
                                return t.prompt = t.displayTokens.map((e => e.text)).join(""), t
                            }, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: e.displayTokens.map((() => "")),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getUserInput(e, t, !1).every((e => e)), this.getUserInput = (e, t, a) => {
                                var s;
                                const n = null !== (s = t.guess) && void 0 !== s ? s : [];
                                return e.displayTokens.flatMap(((e, t) => {
                                    const s = a ? e.text : [];
                                    return e.isBlank ? n[t] : s
                                }))
                            }
                        }
                    },
                    [y.Sm.ListenMatch]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.pairs.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.translation,
                                url: e.tts
                            }))), this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: void 0 !== e.guess,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Match]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.pairs.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.learningToken,
                                url: e.tts
                            }))), this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: void 0 !== e.guess,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Name]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = ({
                                challenge: e,
                                challengeState: t,
                                session: a
                            }) => {
                                var s;
                                const n = [this.getTranslation(t)],
                                    i = this.getArticle(e, t);
                                if (i && n.unshift(i), e.grader) {
                                    const t = null !== (s = (0, c.K)(n)) && void 0 !== s ? s : "",
                                        a = { ...e,
                                            grader: e.grader
                                        };
                                    return (0, u.wM)({
                                        allowTypoBlame: !0,
                                        challenge: a,
                                        guess: t,
                                        isTypingInLearningLanguage: !0
                                    })
                                }
                                const o = (e.correctSolutions || []).map((e => (0, d.lG)(B, e)));
                                if (o.includes((0, d.lG)(B, n.join(z))) || o.includes((0, d.lG)(B, n.join("")))) return Promise.resolve({
                                    correct: !0,
                                    guess: n
                                });
                                const l = (0, f.globalGetState)();
                                let g = !1;
                                if (l) {
                                    const e = (0, r.HF)(l),
                                        t = a.skillId;
                                    t && e && (g = void 0 !== (0, h.m8)(e, (e => "skill" === e.type && e.pathLevelClientData.skillId === t && "custom_intro" === e.subtype)))
                                }
                                if (g) return Promise.resolve({
                                    correct: !1,
                                    guess: n
                                });
                                throw Error("Unable to grade name challenge")
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => (!e.articles || this.getArticle(e, t).length > 0) && this.getTranslation(t).length > 0, this.getArticle = (e, t) => {
                                var a, s, n, r;
                                return null !== (r = (null !== (a = e.articles) && void 0 !== a ? a : [])[null !== (n = null === (s = t.guess) || void 0 === s ? void 0 : s.article) && void 0 !== n ? n : -1]) && void 0 !== r ? r : ""
                            }, this.getTranslation = e => {
                                var t, a;
                                return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translation) && void 0 !== a ? a : "").trim()
                            }
                        }
                    },
                    [y.Sm.ListenComprehension]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => {
                                var t;
                                return s.oA([e.slowTts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.prompt,
                                    url: e.slowTts
                                }, {
                                    autoplay: !0,
                                    required: !0,
                                    text: e.prompt,
                                    url: e.tts
                                }, ...(null !== (t = e.questionTokens) && void 0 !== t ? t : []).map((e => e.tts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.value,
                                    url: e.tts
                                }))])
                            }, this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.ListenIsolation]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => {
                                var t, a;
                                return s.oA([{
                                    autoplay: !0,
                                    required: !0,
                                    text: e.tokens.map((e => e.value)).join(""),
                                    url: e.tts
                                }, ...(null !== (t = e.options) && void 0 !== t ? t : []).map((e => e.tts && {
                                    autoplay: !1,
                                    required: !0,
                                    text: e.text,
                                    url: e.tts
                                })), ...(null !== (a = e.tokens) && void 0 !== a ? a : []).map((e => e.tts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.value,
                                    url: e.tts
                                }))])
                            }, this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.ListenSpeak]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => [{
                                autoplay: !0,
                                required: !1,
                                text: e.prompt,
                                url: e.tts
                            }], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s, n, r;
                                const i = (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.score) && void 0 !== s ? s : 0) >= e.threshold;
                                return Promise.resolve({
                                    correct: i,
                                    guess: t.guess,
                                    numRetriesLeft: i || void 0 === (null === (n = t.guess) || void 0 === n ? void 0 : n.usedGuesses) ? 0 : l.Tu - (null === (r = t.guess) || void 0 === r ? void 0 : r.usedGuesses)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = () => !1
                        }
                    },
                    [y.Sm.ListenTap]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([e.slowTts && {
                                autoplay: !1,
                                required: !1,
                                text: e.prompt,
                                url: e.slowTts
                            }, {
                                autoplay: !0,
                                required: !0,
                                text: e.prompt,
                                url: e.tts
                            }, ...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            }))]), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => {
                                if (a.isToggledToTyping) return (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: this.getTranscription(t),
                                    isTypingInLearningLanguage: a.isToggledToTyping
                                });
                                const n = (0, l.rF)(e),
                                    r = this.getTapTranscriptions(e, t),
                                    i = r.join(n),
                                    o = e.correctIndices.map((t => e.choices[t].text));
                                if (s.Xy(o, r)) return Promise.resolve({
                                    correct: !0,
                                    guess: i
                                });
                                const c = await (0, u.wM)({
                                    allowTypoBlame: !1,
                                    challenge: e,
                                    guess: i,
                                    isTypingInLearningLanguage: a.isToggledToTyping
                                });
                                return c.correct ? c : Promise.resolve({
                                    correct: c.correct,
                                    guess: i
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => a.isToggledToTyping ? this.getTranscription(t).length > 0 : this.getTapTranscriptions(e, t).length > 0, this.getTapTranscriptions = (e, t) => {
                                var a, s, n;
                                return null !== (n = null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.tapTranscriptions) || void 0 === s ? void 0 : s.map((t => e.choices[t].text))) && void 0 !== n ? n : []
                            }, this.getTranscription = e => {
                                var t, a;
                                return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.transcription) && void 0 !== a ? a : "").trim()
                            }
                        }
                    },
                    [y.Sm.OrderTapComplete]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuesses(t).values();
                                let s = !0,
                                    n = !1;
                                for (const t of e.displayTokens)
                                    if (t.isBlank) {
                                        n = !0;
                                        const r = a.next().value;
                                        if (null == r || t.text !== e.choices[r].text) {
                                            s = !1;
                                            break
                                        }
                                    } else if (n && t.text !== z) {
                                    n = !1;
                                    const e = a.next();
                                    if (null !== e.value && !e.done) {
                                        s = !1;
                                        break
                                    }
                                }
                                return Promise.resolve({
                                    closestSolution: e.displayTokens.map((e => e.text)).join(""),
                                    correct: s,
                                    guess: t.guess,
                                    highlights: this.getHighlights(e)
                                })
                            }, this.hasDiscussion = () => !1, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => this.getGuesses(e).length > 0 && null !== this.getGuesses(e)[0], this.getGuesses = e => {
                                var t;
                                return null !== (t = e.guess) && void 0 !== t ? t : []
                            }, this.getHighlights = e => (0, l.nT)(e.displayTokens.map((e => e.text)), e.displayTokens.map((e => e.isBlank ? "" : e.text)))
                        }
                    },
                    [y.Sm.PartialListen]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => {
                                var n;
                                const r = e.displayTokens,
                                    i = r.findIndex((e => e.isBlank)),
                                    o = e.displayTokens.map((e => e.text)).join(""),
                                    l = null !== (n = t.guess) && void 0 !== n ? n : "",
                                    c = r.map(((e, t) => e.isBlank ? t === i ? l : "" : e.text)).join("");
                                if (s.Xy(c, o)) return Promise.resolve({
                                    correct: !0,
                                    guess: l
                                });
                                const d = await (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: c,
                                    isTypingInLearningLanguage: a.isToggledToTyping
                                });
                                return d.guess = l, d.correct || delete d.blameMessage, d
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => !!e.guess
                        }
                    },
                    [y.Sm.PartialReverseTranslate]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([...e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))]), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => {
                                var n;
                                const r = e.displayTokens,
                                    i = r.findIndex((e => e.isBlank)),
                                    o = e.displayTokens.map((e => e.text)).join(""),
                                    l = null !== (n = t.guess) && void 0 !== n ? n : "",
                                    c = r.map(((e, t) => e.isBlank ? t === i ? l : "" : e.text)).join("");
                                if (s.Xy(c, o)) return Promise.resolve({
                                    correct: !0,
                                    guess: l
                                });
                                const d = await (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: c,
                                    isTypingInLearningLanguage: a.isToggledToTyping
                                });
                                return d.guess = l, d.correct || delete d.blameMessage, d
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => !!e.guess
                        }
                    },
                    [y.Sm.PatternTapComplete]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = async ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: e.correctIndex === t.guess,
                                guess: void 0 === t.guess ? "" : e.choices[t.guess]
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.RadioBinary]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: !0,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.RadioImageSelect]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: !0,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.RadioListenMatch]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: !0,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: void 0,
                                pairs: e.pairs,
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.RadioListenRecognize]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: !0,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                correctIndices: !0,
                                guess: e.correctIndices,
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.RadioSelect]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [], this.getConditionallyDisplayedReportTypes = () => [], this.getTts = () => [], this.grade = ({
                                challengeState: e
                            }) => Promise.resolve({
                                correct: !0,
                                guess: e.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.ReadComprehension]: new class extends $ {
                        constructor() {
                            super(...arguments), this.continueChallenge = ({
                                challengeState: e
                            }) => ({ ...e,
                                finishedPassage: !0
                            }), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => {
                                var t, a;
                                return s.oA([...null !== (t = e.passageTokens) && void 0 !== t ? t : [], ...null !== (a = e.questionTokens) && void 0 !== a ? a : []].map((e => e.tts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.value,
                                    url: e.tts
                                })))
                            }, this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = ({
                                challengeState: e
                            }) => e.finishedPassage, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                finishedPassage: !1,
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.ReverseAssist]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED], this.getTts = () => [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: t.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.SameDifferent]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.ttsURLs.map(((t, a) => ({
                                autoplay: !0,
                                required: !0,
                                text: e.prompts[a],
                                url: t
                            })))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: t.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.Select]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_IMAGE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.phrase,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.SelectPronunciation]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => e.choices.map(((t, a) => ({
                                autoplay: a === e.correctIndex,
                                required: !0,
                                text: t.text,
                                url: t.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.SelectTranscription]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([{
                                autoplay: !0,
                                required: !0,
                                text: e.choices[e.correctIndex].text,
                                url: e.tts
                            }, ...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !0,
                                text: e.text,
                                url: e.tts
                            }))]), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: `${t.guess}`
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.SvgPuzzle]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([...e.choices.map((e => e.tts && e.text && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            }))].concat(e.tts ? [{
                                autoplay: !0,
                                required: !1,
                                text: e.correctSolutions[0],
                                url: e.tts
                            }] : [])), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                let n = !0;
                                for (let s = 0; s < e.correctIndices.length; s++)
                                    if (e.correctIndices[s] !== (null === (a = t.guess) || void 0 === a ? void 0 : a.choices[s])) {
                                        n = !1;
                                        break
                                    }
                                const r = null === (s = t.guess) || void 0 === s ? void 0 : s.choices.map((e => `${e}`)).join(", ").trim();
                                return Promise.resolve({
                                    correct: n,
                                    guess: `[${r}]`
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s;
                                return (null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices) || void 0 === s ? void 0 : s.filter((e => e >= 0)).length) === e.correctIndices.length
                            }
                        }
                    },
                    [y.Sm.SyllableTap]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([{
                                autoplay: !1,
                                required: !0,
                                text: e.prompt,
                                url: e.tts
                            }, ...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !0,
                                text: e.text,
                                url: e.tts
                            }))]), this.grade = e => Z(e), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = e => W(e)
                        }
                    },
                    [y.Sm.SyllableListenTap]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA([{
                                autoplay: !1,
                                required: !0,
                                text: e.prompt,
                                url: e.tts
                            }, ...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !0,
                                text: e.text,
                                url: e.tts
                            }))]), this.grade = e => Z(e), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = e => W(e)
                        }
                    },
                    [y.Sm.Speak]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => [{
                                autoplay: !0,
                                required: !1,
                                text: e.prompt,
                                url: e.tts
                            }], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                var a, s, n, r;
                                const i = (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.score) && void 0 !== s ? s : 0) >= e.threshold;
                                return Promise.resolve({
                                    correct: i,
                                    guess: t.guess,
                                    numRetriesLeft: i || void 0 === (null === (n = t.guess) || void 0 === n ? void 0 : n.usedGuesses) ? 0 : l.Tu - (null === (r = t.guess) || void 0 === r ? void 0 : r.usedGuesses)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = () => !1
                        }
                    },
                    [y.Sm.TapCloze]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuessedTexts(e, t),
                                    n = (0, g.Ub)(e);
                                return Promise.resolve({
                                    correct: s.Xy(a, n),
                                    guess: a.join(""),
                                    highlights: this.getHighlights(e, t)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.jL)(e.displayTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTokens: a
                                } = e;
                                let s = 0;
                                const n = this.getGuesses(e, t);
                                return a.map((e => {
                                    if (void 0 === e.damageStart) return e.text;
                                    const t = n[s++];
                                    return void 0 === t ? e.text.slice(0, e.damageStart) : `${e.text.slice(0,e.damageStart)}${t}`
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                const {
                                    displayTokens: a
                                } = e;
                                return t.guess ? t.guess.map((e => e.guess)) : (0, g.jL)(a).map((() => {}))
                            }
                        }
                    },
                    [y.Sm.TapClozeTable]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuessedTexts(e, t),
                                    n = (0, g.Ub)(e);
                                return Promise.resolve({
                                    correct: s.Xy(a, n),
                                    guess: a.join(""),
                                    highlights: this.getHighlights(e, t)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.Xh)(e.displayTableTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e.guess)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTableTokens: a,
                                    headers: s
                                } = e, n = this.getGuesses(e, t);
                                return (0, g.x6)(a, s, ((e, t, a) => {
                                    if (void 0 === a.damageStart) return a.text;
                                    const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                                    return (null == s ? void 0 : s.guess) ? `${a.text.slice(0,a.damageStart)}${s.guess}` : a.text.slice(0, a.damageStart)
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                var a;
                                const {
                                    displayTableTokens: s
                                } = e;
                                return null !== (a = t.guess) && void 0 !== a ? a : (0, g.Xh)(s)
                            }
                        }
                    },
                    [y.Sm.TapComplete]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuesses(e, t),
                                    n = a.values(),
                                    r = e.displayTokens.map((t => {
                                        if (t.isBlank) {
                                            const t = n.next().value;
                                            return null === t ? "" : e.choices[t].text
                                        }
                                        return t.text
                                    })).join("");
                                return Promise.resolve({
                                    closestSolution: e.displayTokens.map((e => e.text)).join(""),
                                    correct: s.Xy(a, e.correctIndices),
                                    guess: r,
                                    highlights: this.getHighlights(e, t)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).filter((e => null !== e)).length === e.correctIndices.length, this.getGuesses = (e, t) => t.guess ? t.guess : new Array(e.correctIndices.length).fill(null), this.getHighlights = (e, t) => {
                                const a = this.getGuesses(e, t).values();
                                return (0, l.nT)(e.displayTokens.map((e => e.text)), e.displayTokens.map((t => {
                                    if (t.isBlank) {
                                        const t = a.next().value;
                                        return null === t ? "" : e.choices[t].text
                                    }
                                    return t.text
                                })))
                            }
                        }
                    },
                    [y.Sm.TapCompleteTable]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuessedTexts(e, t),
                                    n = (0, g.Ub)(e);
                                return Promise.resolve({
                                    correct: s.Xy(a, n),
                                    guess: a.join(""),
                                    highlights: this.getHighlights(e, t)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.Xh)(e.displayTableTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e.guess)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTableTokens: a,
                                    headers: s
                                } = e, n = this.getGuesses(e, t);
                                return (0, g.x6)(a, s, ((e, t, a) => {
                                    if (!a.isBlank) return a.text;
                                    const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                                    return (null == s ? void 0 : s.guess) ? s.guess : ""
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                var a;
                                const {
                                    displayTableTokens: s
                                } = e;
                                return null !== (a = t.guess) && void 0 !== a ? a : (0, g.Xh)(s)
                            }
                        }
                    },
                    [y.Sm.TapDescribe]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getGuess(e, t),
                                    s = await (0, u.wM)({
                                        allowTypoBlame: !1,
                                        challenge: e,
                                        guess: a,
                                        isTypingInLearningLanguage: !1
                                    });
                                return s.correct ? s : {
                                    correct: s.correct,
                                    guess: a
                                }
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getChoices(t).length === e.correctIndices.length, this.getChoices = e => {
                                var t;
                                return null !== (t = e.guess) && void 0 !== t ? t : []
                            }, this.getGuess = (e, t) => {
                                const a = (0, l.rF)(e);
                                return this.getChoices(t).map((t => e.choices[t].text)).join(a)
                            }
                        }
                    },
                    [y.Sm.Translate]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e,
                                learningLanguage: t,
                                session: a
                            }) => s.oA([e.tts && {
                                autoplay: e.sourceLanguage === t,
                                required: !1,
                                text: e.prompt,
                                url: e.tts
                            }, ...e.choices.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            })), ...e.tokens.map((e => e.tts && !(0, v.LJ)(a.type) && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))]), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a,
                                learningLanguage: n
                            }) => {
                                if (a.isToggledToTyping) return (0, u.wM)({
                                    allowTypoBlame: a.isToggledToTyping,
                                    challenge: e,
                                    guess: this.getTranslation(t),
                                    isTypingInLearningLanguage: a.isToggledToTyping && e.grader.language === n
                                });
                                const r = (0, l.rF)(e),
                                    i = this.getTapTranslations(e, t),
                                    c = i.join(r),
                                    d = e.correctIndices.map((t => e.choices[t].text));
                                if (s.Xy(d, i)) return Promise.resolve({
                                    correct: !0,
                                    guess: c
                                });
                                const g = await (0, u.wM)({
                                    allowTypoBlame: a.isToggledToTyping,
                                    challenge: e,
                                    guess: c,
                                    isTypingInLearningLanguage: a.isToggledToTyping && e.grader.language === n
                                });
                                return g.correct ? g.blameType === o.Oj.ExtraSpace ? {
                                    correct: g.correct,
                                    guess: c
                                } : g : Promise.resolve({
                                    correct: g.correct,
                                    guess: c,
                                    mistakesRecyclingHighlights: g.mistakesRecyclingHighlights
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t,
                                challengeToggleState: a
                            }) => a.isToggledToTyping ? this.getTranslation(t).length > 0 : this.getTapTranslations(e, t).length > 0, this.getTapTranslations = (e, t) => {
                                var a, s, n;
                                return null !== (n = null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.tapTranslations) || void 0 === s ? void 0 : s.map((t => e.choices[t].text))) && void 0 !== n ? n : []
                            }, this.getTranslation = e => {
                                var t, a;
                                return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translation) && void 0 !== a ? a : "").trim()
                            }
                        }
                    },
                    [y.Sm.Transliterate]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = () => [], this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = this.getTransliteration(t),
                                    s = (e.correctSolutions || []).map((e => (0, d.lG)(B, e))).map((e => e.replace(z, ""))),
                                    n = (0, d.lG)(B, a).replace(z, ""),
                                    r = s.includes(n);
                                return Promise.resolve({
                                    correct: r,
                                    guess: a
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => this.getTransliteration(e).length > 0, this.getTransliteration = e => {
                                var t, a;
                                return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.transliteration) && void 0 !== a ? a : "").trim()
                            }
                        }
                    },
                    [y.Sm.TransliterationAssist]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.options.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.text,
                                url: e.tts
                            }))), this.grade = ({
                                challenge: e,
                                challengeState: t
                            }) => Promise.resolve({
                                correct: t.guess === e.correctIndex,
                                guess: t.guess
                            }), this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    },
                    [y.Sm.TypeCloze]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => {
                                const n = this.getGuessedTexts(e, t),
                                    r = (0, g.Ub)(e),
                                    i = await (0, d.C3)(a);
                                return Promise.resolve({
                                    correct: s.Xy(n.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                                    guess: n.join(""),
                                    highlights: this.getHighlights(e, t)
                                })
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.jL)(e.displayTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTokens: a
                                } = e;
                                let s = 0;
                                const n = this.getGuesses(e, t);
                                return a.map((e => {
                                    if (void 0 === e.damageStart) return e.text;
                                    const t = n[s++];
                                    return void 0 === t ? e.text.slice(0, e.damageStart) : `${e.text.slice(0,e.damageStart)}${t}`
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                const {
                                    displayTokens: a
                                } = e;
                                return t.guess ? t.guess.map((e => e.guess)) : (0, g.jL)(a).map((() => {}))
                            }
                        }
                    },
                    [y.Sm.TypeClozeTable]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => {
                                const n = this.getGuessedTexts(e, t),
                                    r = (0, g.Ub)(e),
                                    i = await (0, d.C3)(a);
                                return {
                                    correct: s.Xy(n.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                                    guess: n.join(""),
                                    highlights: this.getHighlights(e, t)
                                }
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.Xh)(e.displayTableTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e.guess)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTableTokens: a,
                                    headers: s
                                } = e, n = this.getGuesses(e, t);
                                return (0, g.x6)(a, s, ((e, t, a) => {
                                    if (void 0 === a.damageStart) return a.text;
                                    const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                                    return (null == s ? void 0 : s.guess) ? `${a.text.slice(0,a.damageStart)}${s.guess}` : a.text.slice(0, a.damageStart)
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                const {
                                    displayTableTokens: a
                                } = e;
                                return t.guess ? t.guess : (0, g.Xh)(a)
                            }
                        }
                    },
                    [y.Sm.TypeComplete]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tokens.map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t
                            }) => {
                                const a = e.displayTokens,
                                    n = a.findIndex((e => e.isBlank)),
                                    r = e.displayTokens.map((e => e.text)).join(""),
                                    i = this.getUserInput(e, t, !0),
                                    o = a.map(((t, a) => t.isBlank ? a === n ? e.assistedText ? e.assistedText + i[a] : i[a] : "" : t.text)).join("");
                                if (s.Xy(o, r)) return Promise.resolve({
                                    correct: !0,
                                    guess: i
                                });
                                const l = await (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: o,
                                    isTypingInLearningLanguage: !0
                                });
                                return l.guess = i[0], l.correct || delete l.blameMessage, l
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: "",
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess, this.getUserInput = (e, t, a) => {
                                var s;
                                const n = null !== (s = t.guess) && void 0 !== s ? s : [];
                                return e.displayTokens.flatMap((e => {
                                    const t = a ? e.text : [];
                                    return e.isBlank ? n : t
                                }))
                            }
                        }
                    },
                    [y.Sm.TypeCompleteTable]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                                autoplay: !1,
                                required: !1,
                                text: e.value,
                                url: e.tts
                            }))), this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => {
                                const n = this.getGuessedTexts(e, t),
                                    r = (0, g.Ub)(e),
                                    i = await (0, d.C3)(a);
                                return {
                                    correct: s.Xy(n.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0, d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                                    guess: n.join(""),
                                    highlights: this.getHighlights(e, t)
                                }
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                guess: (0, g.Xh)(e.displayTableTokens),
                                type: e.type
                            }), this.validate = ({
                                challenge: e,
                                challengeState: t
                            }) => this.getGuesses(e, t).every((e => void 0 !== e.guess)), this.getGuessedTexts = (e, t) => {
                                const {
                                    displayTableTokens: a,
                                    headers: s
                                } = e, n = this.getGuesses(e, t);
                                return (0, g.x6)(a, s, ((e, t, a) => {
                                    if (!a.isBlank) return a.text;
                                    const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                                    return (null == s ? void 0 : s.guess) ? s.guess : ""
                                }))
                            }, this.getHighlights = (e, t) => {
                                const a = this.getGuessedTexts(e, t),
                                    s = (0, g.Ub)(e);
                                return (0, l.nT)(s, a)
                            }, this.getGuesses = (e, t) => {
                                const {
                                    displayTableTokens: a
                                } = e;
                                return t.guess ? t.guess : (0, g.Xh)(a)
                            }
                        }
                    },
                    [y.Sm.WriteComprehension]: new class extends $ {
                        constructor() {
                            super(...arguments), this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE], this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED], this.getTts = ({
                                challenge: e
                            }) => {
                                var t, a;
                                return s.oA([...null !== (t = e.passageTokens) && void 0 !== t ? t : [], ...null !== (a = e.questionTokens) && void 0 !== a ? a : []].map((e => e.tts && {
                                    autoplay: !1,
                                    required: !1,
                                    text: e.value,
                                    url: e.tts
                                })))
                            }, this.grade = async ({
                                challenge: e,
                                challengeState: t,
                                learningLanguage: a
                            }) => {
                                var s;
                                const n = await (0, u.wM)({
                                    allowTypoBlame: !0,
                                    challenge: e,
                                    guess: null !== (s = t.guess) && void 0 !== s ? s : "",
                                    isTypingInLearningLanguage: e.grader.language === a
                                });
                                return {
                                    blameMessage: n.correct ? void 0 : (0, p.H8)(30063),
                                    correct: n.correct,
                                    guess: n.guess
                                }
                            }, this.isReadyForGuessing = () => !0, this.prepareChallengeState = ({
                                challenge: e
                            }) => ({
                                type: e.type
                            }), this.validate = ({
                                challengeState: e
                            }) => void 0 !== e.guess
                        }
                    }
                },
                q = s.XP(j),
                Q = [y.Sm.RadioBinary, y.Sm.RadioImageSelect, y.Sm.RadioListenMatch, y.Sm.RadioListenRecognize, y.Sm.RadioSelect],
                K = e => t => {
                    const a = t.challenge.type;
                    if (!(a in j)) throw Error(`Unknown challenge type: ${a}`);
                    return j[a][e](t)
                },
                Y = K("getAlwaysDisplayedReportTypes"),
                J = K("getConditionallyDisplayedReportTypes"),
                X = e => {
                    const {
                        challenge: t,
                        challengeState: a,
                        session: s
                    } = e;
                    if (t.skipped && (!(0, v.LJ)(s.type) || s.type === y.FF.UnitTest || s.type === y.FF.SectionTest)) {
                        if (a.hasBrokenTts) return Promise.resolve({
                            correct: !0,
                            guess: ""
                        });
                        if ((0, v.tq)().includes(t.type)) return Promise.resolve({
                            blameMessage: (0, p.H8)(4469),
                            blameSubtext: (0, p.H8)(35006),
                            correct: !0,
                            guess: ""
                        });
                        if ((0, v.bc)().includes(t.type)) {
                            const e = a.recognizerFailed ? (0, p.H8)(7768) : (0, p.H8)(35006);
                            return Promise.resolve({
                                blameMessage: (0, p.H8)(12946),
                                blameSubtext: e,
                                correct: !0,
                                guess: ""
                            })
                        }
                    }
                    return K("grade")(e)
                },
                ee = K("continueChallenge"),
                te = K("isReadyForGuessing"),
                ae = K("prepareChallenge"),
                se = K("prepareChallengeState"),
                ne = K("validate"),
                re = K("getTts")
        },
        18675: (e, t, a) => {
            "use strict";
            a.d(t, {
                K: () => g,
                w: () => f
            });
            var s = a(80254),
                n = a(5219),
                r = a(95332),
                i = a(64115),
                o = a(68903),
                l = a(58576),
                c = a(11811);
            const d = s.IH((() => {
                    n.setDebug((0, i.Au)())
                })),
                u = (e, t, a) => a.challenges.slice(0, t.currentIndex).filter((t => t.id === e.id && t.type === e.type)).length,
                g = e => "string" == typeof e ? e : e[0].endsWith("'") ? e.join("") : e.join(" "),
                p = (e, t) => {
                    var a;
                    const s = t.guess;
                    switch (e.type) {
                        case c.Sm.CharacterMatch:
                        case c.Sm.CharacterPuzzle:
                        case c.Sm.CharacterTrace:
                        case c.Sm.CharacterWrite:
                        case c.Sm.ExtendedListenMatch:
                        case c.Sm.ExtendedMatch:
                        case c.Sm.ListenMatch:
                        case c.Sm.ListenSpeak:
                        case c.Sm.Match:
                        case c.Sm.RadioBinary:
                        case c.Sm.RadioListenMatch:
                        case c.Sm.RadioListenRecognize:
                        case c.Sm.Speak:
                        case c.Sm.SvgPuzzle:
                            return;
                        case c.Sm.Assist:
                        case c.Sm.ReverseAssist:
                        case c.Sm.TransliterationAssist:
                            return null === (a = e.options[s]) || void 0 === a ? void 0 : a.text;
                        case c.Sm.SameDifferent:
                            return e.options[s];
                        case c.Sm.CharacterIntro:
                            return e.choices[s];
                        case c.Sm.CharacterSelect:
                            return ((e, t) => {
                                var a;
                                return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.character
                            })(e, s);
                        case c.Sm.Judge:
                            return e.choices[s];
                        case c.Sm.Select:
                            return ((e, t) => {
                                var a;
                                return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.phrase
                            })(e, s);
                        case c.Sm.SelectPronunciation:
                        case c.Sm.SelectTranscription:
                            return ((e, t) => {
                                var a;
                                return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.text
                            })(e, s);
                        case c.Sm.TapCloze:
                        case c.Sm.TypeCloze:
                        case c.Sm.TypeComplete:
                        case c.Sm.TapClozeTable:
                        case c.Sm.TypeClozeTable:
                        case c.Sm.TapCompleteTable:
                        case c.Sm.TypeCompleteTable:
                        case c.Sm.CompleteReverseTranslation:
                        case c.Sm.FreeResponse:
                        case c.Sm.Listen:
                        case c.Sm.ListenComplete:
                        case c.Sm.ListenIsolation:
                        case c.Sm.ListenTap:
                        case c.Sm.OrderTapComplete:
                        case c.Sm.PartialListen:
                        case c.Sm.PartialReverseTranslate:
                        case c.Sm.SyllableListenTap:
                        case c.Sm.SyllableTap:
                        case c.Sm.TapComplete:
                        case c.Sm.TapDescribe:
                        case c.Sm.Translate:
                        case c.Sm.Transliterate:
                        case c.Sm.WriteComprehension:
                            return s;
                        case c.Sm.Definition:
                        case c.Sm.Dialogue:
                        case c.Sm.ListenComprehension:
                        case c.Sm.PatternTapComplete:
                        case c.Sm.RadioImageSelect:
                        case c.Sm.RadioSelect:
                        case c.Sm.ReadComprehension:
                            return e.choices[s];
                        case c.Sm.Form:
                            return ((e, t) => {
                                if (e.promptPieces.length < 2 || !(t in e.options) || !("text" in e.options[t])) return;
                                const a = e.options[t].text;
                                return e.promptPieces[0] + a + e.promptPieces[1]
                            })(e, s);
                        case c.Sm.GapFill:
                            return ((e, t) => e.displayTokens.map((e => e.isBlank ? t : e.text)).join(""))(e, s);
                        case c.Sm.Name:
                            return g(s);
                        default:
                            throw (0, o.RJ)(e), Error("Unexpected challenge type for computing tracked response guess in computeGuess.")
                    }
                },
                m = e => {
                    var t, a, s;
                    switch (e.type) {
                        case c.Sm.CompleteReverseTranslation:
                        case c.Sm.GapFill:
                        case c.Sm.ListenIsolation:
                        case c.Sm.ListenSpeak:
                        case c.Sm.OrderTapComplete:
                        case c.Sm.PartialReverseTranslate:
                        case c.Sm.Speak:
                        case c.Sm.SyllableTap:
                        case c.Sm.TapCloze:
                        case c.Sm.TapComplete:
                        case c.Sm.Translate:
                        case c.Sm.TypeCloze:
                        case c.Sm.TypeComplete:
                            return null !== (t = e.tokens) && void 0 !== t ? t : [];
                        case c.Sm.Definition:
                            return e.displayTokens.map((e => e.hintToken));
                        case c.Sm.Dialogue:
                            return e.dialogue.flatMap((e => e.hintTokens));
                        case c.Sm.ReadComprehension:
                        case c.Sm.WriteComprehension:
                            return [...null !== (a = e.passageTokens) && void 0 !== a ? a : [], ...null !== (s = e.questionTokens) && void 0 !== s ? s : []];
                        case c.Sm.TapClozeTable:
                        case c.Sm.TapCompleteTable:
                        case c.Sm.TypeClozeTable:
                        case c.Sm.TypeCompleteTable:
                            return e.tableTokens.flat(2);
                        case c.Sm.Assist:
                        case c.Sm.CharacterIntro:
                        case c.Sm.CharacterMatch:
                        case c.Sm.CharacterPuzzle:
                        case c.Sm.CharacterSelect:
                        case c.Sm.CharacterTrace:
                        case c.Sm.CharacterWrite:
                        case c.Sm.ExtendedListenMatch:
                        case c.Sm.ExtendedMatch:
                        case c.Sm.Form:
                        case c.Sm.FreeResponse:
                        case c.Sm.Judge:
                        case c.Sm.Listen:
                        case c.Sm.ListenComprehension:
                        case c.Sm.ListenComplete:
                        case c.Sm.ListenMatch:
                        case c.Sm.ListenTap:
                        case c.Sm.Match:
                        case c.Sm.Name:
                        case c.Sm.PartialListen:
                        case c.Sm.PatternTapComplete:
                        case c.Sm.RadioBinary:
                        case c.Sm.RadioImageSelect:
                        case c.Sm.RadioListenMatch:
                        case c.Sm.RadioListenRecognize:
                        case c.Sm.RadioSelect:
                        case c.Sm.ReverseAssist:
                        case c.Sm.SameDifferent:
                        case c.Sm.Select:
                        case c.Sm.SelectPronunciation:
                        case c.Sm.SelectTranscription:
                        case c.Sm.SvgPuzzle:
                        case c.Sm.SyllableListenTap:
                        case c.Sm.TapDescribe:
                        case c.Sm.Transliterate:
                        case c.Sm.TransliterationAssist:
                            return [];
                        default:
                            throw (0, o.RJ)(e), Error("Unexpected challenge type for computing tracked response prompt tokens in computePromptTokens.")
                    }
                },
                h = e => {
                    const t = e.challengeStates[e.currentIndex].hintsShown;
                    return void 0 === t ? [] : t.map((e => e.value)).slice(0, 128)
                },
                v = e => {
                    var t, a;
                    return null !== (a = null === (t = e.challengeGeneratorIdentifier) || void 0 === t ? void 0 : t.specificType) && void 0 !== a ? a : r.SJ[e.type]
                },
                _ = e => {
                    var t;
                    return e.worldCharacterShown && (null === (t = e.character) || void 0 === t ? void 0 : t.name) ? [r.F[e.character.name]] : void 0
                },
                f = (e, t, a, s, r, i, o) => {
                    var g;
                    const f = e.challenges[a.currentIndex],
                        S = {
                            app_version: window.duo.version,
                            app_version_hash: window.duo.versionHash,
                            challenge_response_tracking_properties: f.challengeResponseTrackingProperties,
                            closest_solution: s.closestSolution,
                            compact_translations: f.compactTranslations,
                            content_id: null === (g = f.challengeGeneratorIdentifier) || void 0 === g ? void 0 : g.generatorId,
                            correct: r ? void 0 : s.correct,
                            distractors: f.wrongTokens,
                            from_language: a.sessionParams.fromLanguage,
                            guess: p(f, s),
                            hinted_words: h(a),
                            item_type: v(f),
                            learning_language: a.sessionParams.learningLanguage,
                            level_index: a.sessionParams.levelIndex,
                            num_hints_tapped: h(a).length,
                            order_index: a.currentIndex,
                            previous_mistake_order_index: a.recycledMistakeIndexToOriginalMistakeIndex[a.currentIndex],
                            prompt: f.prompt,
                            prompt_tokens: (y = m(f), y.filter((e => void 0 !== e.hintTable)).map((e => {
                                var t, a;
                                return {
                                    hints: null !== (a = null === (t = e.hintTable) || void 0 === t ? void 0 : t.rows.flatMap((e => e.flatMap((e => {
                                        var t;
                                        return null !== (t = e.hint) && void 0 !== t ? t : []
                                    }))))) && void 0 !== a ? a : [],
                                    value: e.value
                                }
                            }))),
                            repetition_number: u(f, a, e),
                            responded_by_typing: o.canToggleTyping && o.isToggledToTyping,
                            session_id: e.type === c.FF.AlphabetLesson || e.type === c.FF.AlphabetPractice ? e.trackingProperties.alphabet_static_session_id : e.trackingProperties.activity_uuid,
                            session_type: e.type.toLowerCase(),
                            skill_id: e.skillId,
                            skill_tree_id: e.trackingProperties.skill_tree_id,
                            skipped: r,
                            tagged_kc_ids: f.metadata.lexeme_ids_to_update,
                            time_taken: i,
                            tree_row: f.metadata.depth,
                            user_id: t.id,
                            world_characters_shown: _(f)
                        };
                    var y;
                    d(), n.track(S, (() => (0, l.bP)("track", "challenge response", [{
                        data: S,
                        name: "properties"
                    }], {
                        excludeFromTelemetry: !0
                    })))
                }
        },
        16970: (e, t, a) => {
            "use strict";
            a.d(t, {
                AX: () => R,
                BV: () => u,
                HZ: () => y,
                LK: () => L,
                Rv: () => N,
                S1: () => T,
                S9: () => E,
                SR: () => p,
                XW: () => c,
                Yt: () => w,
                aw: () => g,
                bo: () => f,
                cd: () => D,
                hN: () => b,
                i_: () => A,
                n_: () => d,
                u_: () => m,
                w: () => I,
                yB: () => P
            });
            var s = a(81149),
                n = a(68903),
                r = a(8654),
                i = a(93746),
                o = a(34704),
                l = a(11811);
            const c = "＿",
                d = 18,
                u = 10,
                g = 270;
            var p;
            ! function(e) {
                e.CorrectMoveInwards = "correct_1", e.CorrectShowFinalWord = "correct_2", e.CorrectFinal = "correct_3", e.IncorrectMoveInwards = "incorrect_1", e.IncorrectSnapBack = "incorrect_2"
            }(p || (p = {}));
            const m = e => e ? [p.CorrectMoveInwards, p.IncorrectMoveInwards, p.IncorrectSnapBack].includes(e) ? "white" : [p.CorrectShowFinalWord, p.CorrectFinal].includes(e) ? "green" : null : null,
                h = (e, t, a) => {
                    const n = {
                        fromLanguageId: t,
                        learningLanguageId: e
                    };
                    return a.some((({
                        course: e,
                        experiment: t
                    }) => {
                        return r = n, !((a = e).fromLanguageId !== r.fromLanguageId || a.learningLanguageId !== r.learningLanguageId || void 0 !== t && "experiment" !== (0, s.j6)(t, void 0));
                        var a, r
                    }))
                },
                v = [{
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "ar"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "el"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "he"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "hi"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "ja"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "ko"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "ru"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "uk"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "yi"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "zh"
                    }
                }, ...[{
                    fromLanguageId: "ar",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "bn",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "cs",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "de",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "el",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "es",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "fr",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "hi",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "hu",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "id",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "it",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "ja",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "ko",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "nl-NL",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "pl",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "pt",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "ro",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "ru",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "th",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "tl",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "tr",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "uk",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "vi",
                    learningLanguageId: "en"
                }, {
                    fromLanguageId: "zh",
                    learningLanguageId: "en"
                }].map((e => ({
                    course: e
                })))],
                _ = ["ja<en", "zh<en"],
                f = (e, t) => (0, n.p)(_)((0, o.LP)(e, t)),
                S = ["kanji", "hanzi"],
                y = e => (0, n.p)(S)(e),
                E = (e, t) => h(e, t, v),
                b = (e, t) => {
                    var a;
                    return !(null !== (a = null == t ? void 0 : t.featureFlags.alphabets_web_maintenance) && void 0 !== a && a) && E(e.learningLanguage, e.fromLanguage)
                },
                I = ({
                    learningLanguage: e,
                    fromLanguage: t
                }) => "ja" === e && "en" === t,
                w = e => {
                    const {
                        currentIndex: t,
                        session: {
                            challenges: a
                        }
                    } = e;
                    if (a.slice(0, t + 1).some((e => e.indicatorType === l.A.LimitedTts))) return !1;
                    const s = a[t + 1];
                    return (null == s ? void 0 : s.indicatorType) === l.A.LimitedTts
                },
                k = [{
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "ja"
                    }
                }, {
                    course: {
                        fromLanguageId: "en",
                        learningLanguageId: "zh"
                    }
                }],
                T = (e, t) => h(e, t, k),
                C = ["ja", "zh"],
                R = e => "characters" === (e => C.includes(e) ? "characters" : "letters")(e) ? (0, r.H8)(40498, {
                    language_name: (0, i.vY)(e)
                }) : (0, r.H8)(40499, {
                    language_name: (0, i.vY)(e)
                }),
                L = (e, t) => {
                    for (let a = 1; a < e.length; a++)
                        if (void 0 === e[(t + a) % e.length].choiceIndex) return (t + a) % e.length
                },
                A = (e, t) => `${e}|groupId:${t}`,
                P = e => "kanji" === e,
                D = (e, t) => {
                    let a = [...t],
                        s = t.length - 1;
                    for (; a.length > 4 && s >= 0;) e.includes(s) || (a = [...a.slice(0, s), ...a.slice(s + 1)]), s -= 1;
                    return a
                },
                N = e => "en" !== e && "experiment" === (0, s.j6)("writing_web_character_bingo_hearts", void 0)
        },
        78939: (e, t, a) => {
            "use strict";
            a.d(t, {
                sd: () => y,
                C3: () => h,
                YK: () => b,
                PW: () => f,
                GS: () => w,
                tc: () => p,
                gE: () => g,
                lG: () => S
            });
            var s = a(87251),
                n = a.n(s),
                r = a(80254);
            const i = JSON.parse('{"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","×":"x","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","÷":"/","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Ĉ":"C","ĉ":"c","Ċ":"C","ċ":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"D","đ":"d","Ē":"E","ē":"e","Ĕ":"E","ĕ":"e","Ė":"E","ė":"e","Ę":"E","ę":"e","Ě":"E","ě":"e","Ĝ":"G","ĝ":"g","Ğ":"G","ğ":"g","Ġ":"G","ġ":"g","Ģ":"G","ģ":"g","Ĥ":"H","ĥ":"h","Ħ":"H","ħ":"h","Ĩ":"I","ĩ":"i","Ī":"I","ī":"i","Ĭ":"I","ĭ":"i","Į":"I","į":"i","İ":"I","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","ĺ":"l","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ŀ":"L","ŀ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ŏ":"O","ŏ":"o","Ő":"O","ő":"o","Ŕ":"R","ŕ":"r","Ŗ":"R","ŗ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ŝ":"S","ŝ":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ŧ":"T","ŧ":"t","Ũ":"U","ũ":"u","Ū":"U","ū":"u","Ŭ":"U","ŭ":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ơ":"O","ơ":"o","Ư":"U","ư":"u","Ș":"S","ș":"s","Ț":"T","ț":"t","Ά":"Α","Έ":"Ε","Ή":"Η","Ί":"Ι","Ό":"Ο","Ύ":"Υ","Ώ":"Ω","ΐ":"ι","Ϊ":"Ι","Ϋ":"Υ","ά":"α","έ":"ε","ή":"η","ί":"ι","ΰ":"υ","ϊ":"ι","ϋ":"υ","ό":"ο","ύ":"υ","ώ":"ω","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y"}');
            var o = a(76986),
                l = a(97544),
                c = a(83719),
                d = a(30839);
            const u = o,
                g = () => {
                    const e = d.Qt.GradingConfig;
                    if (!(0, d.No)(e)) return !0;
                    const t = d.Qt.GradingConfigTimestamp;
                    let a = 0;
                    return (0, d.No)(t) && (a = (0, d.rV)(t)), Date.now() - a > 108e5 || a < 16969464e5
                },
                p = e => {
                    (0, d.LS)(d.Qt.GradingConfig, e), (0, d.LS)(d.Qt.GradingConfigTimestamp, Date.now())
                },
                m = r.HP((e => (0, d.rV)(`${d.Qt.LanguageTokens}.${e}`) || [])),
                h = async e => {
                    var t, a, s, n;
                    let r = i,
                        o = u;
                    if (e) {
                        const i = await (async () => {
                            if (!g()) return (0, d.rV)(d.Qt.GradingConfig);
                            const e = await l.bG.requestGradingConfig();
                            return p(e), e
                        })();
                        r = { ...i.language_data.default.accented_character_map,
                            ...null !== (a = null === (t = i.language_data[e]) || void 0 === t ? void 0 : t.accented_character_map) && void 0 !== a ? a : {}
                        }, o = [...i.language_data.default.normalization_data, ...null !== (n = null === (s = i.language_data[e]) || void 0 === s ? void 0 : s.normalization_data) && void 0 !== n ? n : []]
                    }
                    return {
                        accentedCharacterMap: r,
                        normalizationData: o
                    }
                },
                v = {
                    Accent: [c.Oj.Accent, 1e-12],
                    ExtraSpace: [c.Oj.ExtraSpace, .002],
                    MissingSpace: [c.Oj.MissingSpace, .001],
                    MissingWord: [c.Oj.MissingWord, .6],
                    Typo: [c.Oj.Typo, 1e-6],
                    WrongWord: [c.Oj.WrongWord, .6]
                },
                _ = r.Ry(r.VO(v)),
                f = (e, t, a) => S(t, a).split("").map((t => {
                    var a;
                    return null !== (a = e[t]) && void 0 !== a ? a : t
                })).join(""),
                S = (e, t) => e.reduce(((e, [t, a]) => e.replace(new RegExp(t, "g"), a)), t.toLowerCase()),
                y = (e, t) => {
                    if (!e) return null != t ? t.length : Number.MAX_VALUE;
                    if (!t) return e.length;
                    const a = [];
                    let s, n;
                    for (s = 0; s <= t.length; s++) a[s] = [s];
                    for (n = 0; n <= e.length; n++) a[0][n] = n;
                    for (s = 1; s <= t.length; s++)
                        for (n = 1; n <= e.length; n++) t.charAt(s - 1) === e.charAt(n - 1) ? a[s][n] = a[s - 1][n - 1] : a[s][n] = Math.min(a[s - 1][n - 1] + 1, Math.min(a[s][n - 1] + 1, a[s - 1][n] + 1));
                    return a[t.length][e.length]
                };
            class E {
                constructor({
                    accentedCharacterMap: e = {},
                    allowTypoBlame: t,
                    isTypingInLearningLanguage: a,
                    isWhitespaceDelimited: s = !0,
                    language: n,
                    submittedValue: r,
                    vertices: i
                }) {
                    if (this.startState = () => [0, 0], this.isEndState = ([e, t]) => e === this.vertices.length - 1 && t === this.submittedValue.length, this.iterEdges = e => {
                            const t = [],
                                a = (e, [t, a]) => ({ ...e,
                                    type: t,
                                    weight: a + (e.auto ? 1e-4 : 0)
                                }),
                                [s, n] = e;
                            if (n > this.submittedValue.length) throw Error('"pos" must be less than the length of "submittedValue".');
                            const r = this.submittedValue.slice(n);
                            return this.vertices[s].forEach((e => {
                                let s, i;
                                const o = e.lenient;
                                if (!o.length) return void t.push([e, [e.to, n]]);
                                if (" " === o) return void(r.startsWith(" ") ? t.push([e, [e.to, n + 1]]) : "" === r ? t.push([e, [e.to, n]]) : (i = this.isWhitespaceDelimited ? a(e, v.MissingSpace) : e, t.push([i, [i.to, n]])));
                                if (this.isWhitespaceDelimited) {
                                    let l = !0,
                                        c = 0;
                                    o.split("").some((e => {
                                        for (; c < r.length && " " === r[c];) c += 1;
                                        return c === r.length || e !== r[c] ? (l = !1, !0) : (c += 1, !1)
                                    })), l && (i = a(e, v.ExtraSpace), s = n + c, t.push([i, [i.to, s]]))
                                }
                                const l = r.indexOf(" "),
                                    c = l < 0 ? r : r.slice(0, l);
                                if (s = n + c.length, o === c) t.push([e, [e.to, s]]);
                                else if (this.isWhitespaceDelimited && c.length) {
                                    const n = ((e, t, a) => ((e, t, a = ((e, t) => e === t)) => {
                                        if (Math.abs(e.length - t.length) > 1) return 2;
                                        t.length > e.length && ([e, t] = [t, e]);
                                        const s = e.length,
                                            n = t.length;
                                        let r = 0;
                                        for (; r < n && a(e[r], t[r]);) r += 1;
                                        if (r === n) return s > n ? 1 : 0;
                                        let i = 0;
                                        for (; i < n && a(e[s - 1 - i], t[n - 1 - i]);) i += 1;
                                        return r + i + 1 >= s || s === n && r + 1 < s && a(e[r], t[r + 1]) && a(e[r + 1], t[r]) && r + i + 2 === s ? 1 : 2
                                    })(e, t, ((e, t) => {
                                        var s, n;
                                        return (null !== (s = a[e]) && void 0 !== s ? s : e) === (null !== (n = a[t]) && void 0 !== n ? n : t)
                                    })))(o, c, this.accentedCharacterMap);
                                    if (0 === n) i = a(e, v.Accent), t.push([i, [i.to, s]]);
                                    else if (1 === n) {
                                        const n = this.isValidToken(c),
                                            r = !this.allowTypoBlame || n && this.isTypingInLearningLanguage ? v.WrongWord : v.Typo;
                                        return i = a(e, r), void t.push([i, [i.to, s]])
                                    }
                                }
                                c.startsWith(o) && t.push([e, [e.to, n + o.length]]), !this.isWhitespaceDelimited && c.startsWith(o) || (i = a(e, v.MissingWord), this.isWhitespaceDelimited && (i = this.spaceSkippingEdge(i)), t.push([i, [i.to, n]]), c.length && (i = a(e, v.WrongWord), t.push([i, [i.to, s]])))
                            })), t
                        }, this.edgeWeight = e => {
                            var t;
                            return null !== (t = e.weight) && void 0 !== t ? t : 0
                        }, this.isValidToken = e => this.languageTokens.includes(e), this.spaceSkippingEdge = e => {
                            const t = { ...e
                                },
                                a = this.vertices[e.to];
                            return 1 === a.length && " " === a[0].lenient && (t.to = a[0].to, t.lenient += " ", "orig" in t && (t.orig += " ")), t
                        }, i[i.length - 1].length) throw Error("Malformed vertices array: Last element is not empty.");
                    this.accentedCharacterMap = e, this.isWhitespaceDelimited = s, this.isTypingInLearningLanguage = a, this.languageTokens = m(n), this.submittedValue = r, this.vertices = i, this.allowTypoBlame = t
                }
            }
            const b = ({
                    accentedCharacterMap: e,
                    allowTypoBlame: t,
                    compiledNormalizationData: a,
                    gradingData: s,
                    isTypingInLearningLanguage: i,
                    submittedValue: o
                }) => {
                    var l;
                    if (0 !== s.version) throw Error("Client-side grading version incompatible");
                    const d = new E({
                            accentedCharacterMap: e,
                            allowTypoBlame: t,
                            isTypingInLearningLanguage: i,
                            isWhitespaceDelimited: null === (l = s.whitespaceDelimited) || void 0 === l || l,
                            language: s.language,
                            submittedValue: S(a, o),
                            vertices: s.vertices
                        }),
                        [u, g] = ((e, t, a, s, i) => {
                            const o = new(n())(((e, t) => e.weight - t.weight || e.tieBreaker - t.tieBreaker));
                            o.push({
                                path: [],
                                state: e,
                                tieBreaker: 0,
                                weight: 0
                            });
                            const l = {};
                            for (; o.size();) {
                                const e = r.Fp(o.toArray().map((({
                                        tieBreaker: e
                                    }) => e))) + 1,
                                    {
                                        path: n,
                                        state: i,
                                        weight: c
                                    } = o.pop();
                                if (!l[`${i}`]) {
                                    if (l[`${i}`] = !0, c > 1) return [null, null];
                                    if (t(i)) return [n, c];
                                    a(i).forEach((([t, a], r) => {
                                        const l = s(t);
                                        if (l < 0) throw Error("Negative weight edge in solution DAG");
                                        o.push({
                                            path: [...n, [i, t]],
                                            state: a,
                                            tieBreaker: e + r,
                                            weight: c + l
                                        })
                                    }))
                                }
                            }
                            return [null, null]
                        })(d.startState(), d.isEndState, d.iterEdges, d.edgeWeight);
                    if (null === u || null === g) return {
                        correct: !1
                    };
                    const p = I(u);
                    if (void 0 !== p) return {
                        correct: !1,
                        gradingMetadata: p
                    };
                    const m = g <= .5,
                        h = {};
                    let v = "";
                    u.forEach((([{}, e]) => {
                        var t, a, s;
                        const n = null !== (t = e.type) && void 0 !== t ? t : "correct",
                            r = null !== (a = e.orig) && void 0 !== a ? a : e.lenient;
                        if ("correct" !== n) {
                            const e = v.length;
                            let t = e + r.length;
                            n === c.Oj.MissingWord && r.endsWith(" ") && (t -= 1);
                            const a = null !== (s = h[n]) && void 0 !== s ? s : [];
                            a.push([e, t]), h[n] = a
                        }
                        v += r
                    }));
                    const f = r.xb(h) ? void 0 : r.Fp(r.XP(h), (e => _[e])),
                        y = m && f === c.Oj.Accent && !i ? void 0 : f,
                        b = y ? h[y] : void 0;
                    return {
                        blameType: y,
                        closestSolution: v,
                        correct: m,
                        highlights: b
                    }
                },
                I = e => {
                    const t = e.filter((([{}, e]) => e.lenient.trim().length > 0)).map((([{}, e]) => e.metadata)),
                        a = t.filter((e => void 0 !== e));
                    if (0 !== a.length && a.length === t.length) return a[0].filter((e => a.every((t => t.some((t => r.Xy(e, t)))))))
                },
                w = e => e.normalize("NFD").replace(/\p{Diacritic}/gu, "")
        },
        8765: (e, t, a) => {
            "use strict";
            a.d(t, {
                D: () => r
            });
            var s = a(19290);
            const n = {
                    "black-white": ["#000000", "#ffffff"],
                    "diamond-stat": ["#56dbe2"],
                    "mask-green": ["#89e219", "#90dc48"],
                    "pearl-stat": ["#ffaade"],
                    "snow-dark-swan": ["#ffffff", "#37464f"],
                    "black-text": ["#3c3c3c", "#f1f7fb"],
                    "blue-space": ["#0b3e71"],
                    "juicy-blue-space": ["#0a4a82"],
                    "juicy-blue-space-light": ["#235390"],
                    gold: ["#faa919"],
                    "gray-text": ["#999", "#dce6ec"],
                    orange: ["#ff9d00"],
                    "diamond-highlight": ["#e7fbfb"],
                    diamond: ["#38d0d0"],
                    banana: ["#ffb020"],
                    cloud: ["#cfcfcf"],
                    "cloud-light": ["#ddd"],
                    "cloud-lightest": ["#f0f0f0"],
                    kiwi: ["#7ac70c"],
                    "kiwi-dark": ["#5d9709"],
                    "kiwi-light": ["#8ee000"],
                    facebook: ["#3b5998"],
                    "facebook-dark": ["#2d4373"],
                    google: ["#4285f4"],
                    twitter: ["#1da1f2"],
                    "hv-light-peach": ["#f1dab3"],
                    "hv-peach": ["#dbba83"],
                    "hv-light-orange": ["#ffb140"],
                    "hv-orange": ["#cc7900"],
                    "hv-brown": ["#8c5a11"],
                    "streak-panel-extended-background": ["#ff9600", "#cd7900"],
                    "streak-panel-frozen-background": ["#ddf4ff", "#2b70c9"],
                    "streak-panel-frozen-flair-background": ["#84d8ff", "#49c0f8"],
                    "streak-panel-frozen-subtitle": ["#1cb0f6", "#ffffff"],
                    "streak-panel-frozen-text": ["#84d8ff", "#ffffff"],
                    "streak-panel-frozen-topbar-text": ["#1899d6", "#ffffff"],
                    "streak-panel-streak-society-background": ["#ffc800", "#d79433"],
                    "streak-panel-streak-society-text": ["#cd7900", "#ffffff"],
                    "streak-panel-unextended-heading-text": ["#ebc37f", "#52656d"],
                    "streak-panel-unextended-heading-background": ["#fff5d3", "#202f36"],
                    "streak-panel-unextended-topbar-text": ["#ebc37f", "#ffffff"],
                    "streak-panel-milestone-gradient-start": ["#ff933a"],
                    "streak-panel-milestone-gradient-end": ["#ffc800"],
                    "streak-society-dark-orange": ["#ff9701"],
                    "streak-society-light-orange": ["#ffb301"],
                    "friends-quest-own-incomplete": ["#afafaf", "#6f8b9d"],
                    "friends-quest-friend-incomplete": ["#919191", "#4f6471"],
                    "black-text-always-light": ["#3c3c3c"],
                    "cardinal-always-light": ["#ff4b4b"],
                    cowbird: ["#ae6802"],
                    "eel-always-light": ["#4b4b4b"],
                    "fox-always-light": ["#ff9600"],
                    "fire-ant-always-light": ["#ea2b2b"],
                    "grizzly-lite": ["#dc8f47"],
                    "guinea-pig-always-light": ["#cd7900"],
                    "iguana-always-light": ["#ddf4ff"],
                    "macaw-always-light": ["#1cb0f6"],
                    "owl-always-light": ["#58cc02"],
                    "polar-always-light": ["#f7f7f7"],
                    "sea-sponge-always-light": ["#d7ffb8"],
                    "tree-frog-always-light": ["#58a700"],
                    "turtle-always-light": ["#a5ed6e"],
                    "walking-fish-always-light": ["#ffdfe0"],
                    "wolf-always-light": ["#777"],
                    "cardinal-always-dark": ["#ee5555"],
                    "eel-always-dark": ["#f1f7fb"],
                    "hare-always-dark": ["#52656d"],
                    "macaw-always-dark": ["#49c0f8"],
                    "owl-always-dark": ["#93d333"],
                    "polar-always-dark": ["#202f36"],
                    "wolf-always-dark": ["#dce6ec"],
                    rookie: ["#00af85"],
                    explorer: ["#ff64bf"],
                    traveler: ["#ff9153"],
                    trailblazer: ["#9a8fe8"],
                    adventurer: ["#600cc7"],
                    discoverer: ["#6f2c39"],
                    daredevil: ["#2e538a"],
                    navigator: ["#092f77"],
                    champion: ["#ff6e35"],
                    daily_refresh: ["#0094ff"],
                    "dark-mode-locked-path-section-text-color": ["#52656d"],
                    "rookie-progress-bar": ["#00c696"],
                    "explorer-progress-bar": ["#ff8acf"],
                    "traveler-progress-bar": ["#ffa76a"],
                    "trailblazer-progress-bar": ["#a99dfe"],
                    "adventurer-progress-bar": ["#7a0dc7"],
                    "discoverer-progress-bar": ["#833241"],
                    "daredevil-progress-bar": ["#3662a5"],
                    "navigator-progress-bar": ["#0c398d"],
                    "champion-progress-bar": ["#ff8150"],
                    "daily_refresh-progress-bar": ["#1ca0ff"],
                    "course-complete-cta": ["#78dbe0"],
                    "course-complete-cta-border": ["#5ec9cc"],
                    "bea-secondary": ["#1899d6"],
                    "eddy-secondary": ["#ea2b2b"],
                    "gilded-secondary": ["#e7a601"],
                    "lily-secondary": ["#a568cc"],
                    "vikram-secondary": ["#a32a71"],
                    "zari-secondary": ["#cc6ba6"],
                    "oscar-secondary": ["#00a47d"],
                    "falstaff-secondary": ["#965a3a"],
                    "bea-radio": ["#147bac"],
                    "duo-radio": ["#3e8f01"],
                    "eddy-radio": ["#b33535"],
                    "falstaff-radio": ["#834f33"],
                    "lin-lucy-radio": ["#b36900"],
                    "lily-radio": ["#905bb3"],
                    "vikram-radio": ["#8f2463"],
                    "zari-radio": ["#b35e92"],
                    "oscar-radio": ["#00906d"],
                    "bea-junior-shine": ["#43bef8"],
                    "duo-shine": ["#72d627"],
                    "eddy-shine": ["#ff6969"],
                    "falstaff-shine": ["#e3a56c"],
                    "lily-shine": ["#d696ff"],
                    "lin-lucy-shine": ["#ffa82c"],
                    "oscar-shine": ["#3fd9b5"],
                    "vikram-shine": ["#d65aa2"],
                    "zari-shine": ["#ff9ed9"],
                    "super-background-secondary": ["#1a1e4c"],
                    "super-gradient-background": ["#0c2f71"],
                    "super-gradient-top-halo": ["#0c4c46"],
                    "super-gradient-bottom-halo": ["#4c1d73"],
                    "max-background-dark": ["#000000"],
                    "gold-shine": ["#ffe700"],
                    "legendary-dark-background": ["#181818"],
                    roseate: ["#df4ba2"],
                    rosefinch: ["#b41c75"],
                    bluebird: ["#0390d3"],
                    cotinga: ["#793ae3"],
                    sabrewing: ["#a570ff"],
                    blueberry: ["#1152a7"],
                    ether: ["#3c598d"],
                    "diamond-tournament-purple": ["#a1a1ee"],
                    "diamond-tournament-reaction": ["#76a3e7"],
                    "yir-page0": ["#ddf4ff"],
                    "yir-page1": ["#e3ffeb"],
                    "yir-page1-shadow": ["#131f24"],
                    "yir-page3-shadow": ["#bbacfc"],
                    "yir-page4-shadow": ["#8fdbff"],
                    "yir-page5-shadow": ["#ffb750"],
                    "super-gradient-green-variant1": ["#26ff55"],
                    "super-gradient-blue-variant1": ["#268bff"],
                    "super-gradient-pink-variant1": ["#fc55ff"],
                    "super-gradient-purple-variant1": ["#1122b5"],
                    "unknown-001e2d": ["#001e2d"],
                    "unknown-0047a4": ["#0047a4"],
                    "unknown-0087d0": ["#0087d0"],
                    "unknown-00aff9": ["#00aff9"],
                    "unknown-013047": ["#013047"],
                    "unknown-048fd1": ["#048fd1"],
                    "unknown-0e0f10": ["#0e0f10"],
                    "unknown-0e3d79": ["#0e3d79"],
                    "unknown-172071": ["#172071"],
                    "unknown-280378": ["#280378"],
                    "unknown-3ebbf6": ["#3ebbf6"],
                    "unknown-655ebb": ["#655ebb"],
                    "unknown-696cee": ["#696cee"],
                    "unknown-7c0000": ["#7c0000"],
                    "unknown-89e219": ["#89e219"],
                    "unknown-935051": ["#935051"],
                    "unknown-959595": ["#959595"],
                    "unknown-a2a2a2": ["#a2a2a2"],
                    "unknown-a3dbeb": ["#a3dbeb"],
                    "unknown-a4dffb": ["#a4dffb"],
                    "unknown-aaa": ["#aaa"],
                    "unknown-d087ff": ["#d087ff"],
                    "unknown-d9d9d9": ["#d9d9d9"],
                    "unknown-ddd": ["#ddd"],
                    "unknown-de8029": ["#de8029"],
                    "unknown-e3e3e3": ["#e3e3e3"],
                    "unknown-e4ffff": ["#e4ffff"],
                    "unknown-ed8c01": ["#ed8c01"],
                    "unknown-f3484e": ["#f3484e"],
                    "unknown-f4fafe": ["#f4fafe"],
                    "unknown-fbdec5": ["#fbdec5"],
                    "unknown-ffc700": ["#ffc700"],
                    "unknown-fff2aa": ["#fff2aa"],
                    "unknown-fffbef": ["#fffbef"]
                },
                r = { ...s.DM,
                    ...n
                };
            for (const e of Object.keys(n))
                if (s.DM[e]) throw Error(`Color '${e}' already exists in the web-ui palette`);
            for (const e of Object.keys(r))
                if (e.endsWith("-always-light")) {
                    const t = e.slice(0, -13);
                    if (!r[t]) throw Error(`Color '${e}' should be renamed to '${t}'`);
                    if (1 === r[t].length) throw Error(`Color '${e}' should be removed because the base color '${t}{' has no dark mode variant`)
                }
        },
        72398: (e, t, a) => {
            "use strict";
            a.d(t, {
                JE: () => f,
                ar: () => g,
                bP: () => m,
                ji: () => h,
                qr: () => p,
                s1: () => u,
                si: () => v
            });
            var s = a(99369),
                n = a(80254),
                r = a(17135),
                i = a(64115),
                o = a(58576);
            const l = [],
                c = {},
                d = e => {
                    l.push(e), l.length > 100 && l.shift()
                },
                u = () => {
                    let e = !1;
                    return l.map((t => "action" === t.type ? e ? n.CE(t, "state") : (e = !0, t) : t))
                },
                g = (e, t, a, n) => {
                    var o;
                    if ((0, i.Au)()) {
                        const i = null !== (o = null == n ? void 0 : n.timestamp) && void 0 !== o ? o : (0, r.Ux)();
                        m("action", t.type, [{
                            data: (0, s.asMutable)(e),
                            name: "prev state"
                        }, {
                            data: t,
                            name: "action"
                        }, {
                            data: (0, s.asMutable)(a),
                            name: "next state"
                        }], { ...n,
                            excludeFromTelemetry: !0,
                            timestamp: i
                        }), d({
                            action: t,
                            state: a,
                            timestamp: i,
                            type: "action"
                        })
                    }
                },
                p = (e, t, a, s = {}) => {
                    const n = s.localOverride ? `Condition ${e} overridden from experiment ${t} in HOF local override` : s.queryOverride ? `Condition ${e} overridden from experiment ${t} in HOF query string` : s.url ? s.cache ? `Condition ${e} retrieved from cache for URL experiment ${t}` : s.default ? `Condition control queried from URL experiment ${t}, but experiment record not found` : `Condition ${e} queried from URL experiment ${t}` : `Condition ${e} queried from ${s.loggedOut?"logged out experiment":"experiment"} ${t} in context ${a}${s.cache?", provided by cache":s.default?", but record not found":s.notInRollout?", but user not in rollout":""}`;
                    c[t] !== n && ((0, i.Au)() && m("condition", `${t} in ${e}`, [{
                        data: n,
                        name: "detail"
                    }], {
                        excludeFromTelemetry: !0
                    }), c[t] = n)
                },
                m = (e, t, a, s) => {
                    h("groupCollapsed", e, t, s), (0, i.Au)() && (a.forEach((({
                        name: e,
                        data: t
                    }) => S.log(`%c${e}:`, "font-weight: 700;", t))), S.groupEnd())
                },
                h = (e, t, a, s) => {
                    var n, o;
                    if ((0, i.Au)()) {
                        const i = ((e, t, a, s) => {
                            const n = [];
                            return "other" !== e && n.push(e), n.push(`%c${t}`, `%c@ ${a}`), void 0 !== s && n.push(`%c(in ${s.toFixed(2)}ms)`), n.join(" ")
                        })(t, a, (o = null !== (n = null == s ? void 0 : s.timestamp) && void 0 !== n ? n : (0, r.Ux)(), `${_(o.getHours(),2)}:${_(o.getMinutes(),2)}:${_(o.getSeconds(),2)}.${_(o.getMilliseconds(),3)}`), null == s ? void 0 : s.duration);
                        S[e](`%c${i}`, ...((e, t) => {
                            const a = [];
                            return "other" !== e && a.push("color: gray; font-weight: lighter;"), a.push("font-weight: 700;", "color: gray; font-weight: lighter;"), void 0 !== (null == t ? void 0 : t.duration) && a.push("color: gray; font-weight: lighter;"), a
                        })(t, s))
                    }
                },
                v = (e, t, a) => {
                    var s;
                    const n = `${e.pathname}${e.search}`,
                        o = `${t.pathname}${t.search}`;
                    if ((0, i.Au)()) {
                        const i = null !== (s = null == a ? void 0 : a.timestamp) && void 0 !== s ? s : (0, r.Ux)();
                        m("route", `${n} → ${o}`, [{
                            data: e,
                            name: "from"
                        }, {
                            data: t,
                            name: "to"
                        }], { ...a,
                            excludeFromTelemetry: !0,
                            timestamp: i
                        }), d({
                            timestamp: i,
                            to: t,
                            type: "navigation"
                        })
                    }
                },
                _ = (e, t) => `${e}`.padStart(t, "0"),
                f = e => n.XP(console).forEach((t => {
                    if ("function" == typeof console[t]) {
                        const a = console[t].bind(console);
                        console[t] = (...s) => {
                            if ((0, i.Au)() && (a(...n.zu(s, o.VR)), o.iZ[t] && !s.includes(o.VR))) {
                                const [a, ...n] = s;
                                e(o.iZ[t], a, ...n)
                            }
                        }, S[t] = a
                    } else S[t] = console[t]
                })),
                S = {}
        },
        54412: (e, t, a) => {
            "use strict";
            a.d(t, {
                Vj: () => n,
                d8: () => o,
                ej: () => i,
                m_: () => c,
                nJ: () => l
            });
            var s = a(67921);
            const n = {
                    CSRFToken: "csrf_token",
                    Impersonate: "impersonate",
                    InitialReferrer: "initial_referrer",
                    JWT: (window.location.host.includes("testbed") ? "testbed_" : "") + "jwt_token",
                    LandingPage: "lp",
                    LandingURL: "lu",
                    LastReferrer: "lr",
                    LoggedIn: "logged_in",
                    LoggedOutUUID: "logged_out_uuid",
                    RedirectToPreview: "redirect_to_preview",
                    ShouldTrackWelcome: "should_track_welcome",
                    Test: "test",
                    TimeSiteLoaded: "tsl",
                    UTMParameters: "utm_parameters"
                },
                r = window.location.host.includes("duolingo.com") ? ".duolingo.com" : window.location.host.includes("duolingo.cn") ? ".duolingo.cn" : window.location.host.includes("githubpreview.dev") ? window.location.host : "localhost",
                i = e => s.get(e),
                o = (e, t, a, n) => {
                    const i = {
                        domain: r,
                        expires: 365
                    };
                    a && (i.SameSite = "Lax"), n && (i.secure = !0), s.set(e, t, i)
                },
                l = e => {
                    s.remove(e), s.remove(e, {
                        domain: "duolingo.com"
                    }), s.remove(e, {
                        domain: "www.duolingo.com"
                    }), s.remove(e, {
                        domain: r
                    })
                },
                c = "N/A"
        },
        29581: (e, t, a) => {
            "use strict";
            a.d(t, {
                ml: () => l,
                vL: () => c
            });
            var s = a(19172),
                n = a(7515),
                r = a(73573);
            const i = e => "selfNetworkStatus" in e,
                o = e => e.includes("mutating") ? "mutating" : e.includes("loading") ? "loading" : "idle",
                l = (0, r.V)((e => (0, s.f)(`${e.debugLabel}.dependentNetworkStatus`).derived((t => {
                    const a = t(e).map((e => t(c(e))));
                    return o(a)
                })).build())),
                c = (0, r.V)((e => (0, s.f)(`${e.debugLabel}.networkStatus`).derived((t => o([...i(e) ? [t((0, n.P)(e.selfNetworkStatus, "value"))] : [], ...t(i(e) ? (0, n.P)(e.selfNetworkStatus, "deps") : (0, n.P)(e, "deps")).flatMap((e => t(c(e))))]))).build()))
        },
        96195: (e, t, a) => {
            "use strict";
            a.d(t, {
                d: () => p
            });
            var s = a(80254),
                n = a(29581),
                r = a(31106),
                i = a(68903),
                o = a(20716),
                l = a(43633),
                c = a(19172),
                d = a(7515),
                u = a(58576),
                g = a(14437);
            const p = (e, t, a, {
                blockOnDependencies: p = !0,
                fetchOnMount: m = !0,
                queryKeyHasher: h = (e => e)
            } = {}) => {
                const v = t => (0, c.f)(`${e}.${t}`),
                    _ = e => (0, g.r)([e.refetchKey, h(e.queryKey)]),
                    f = v("refetchKey").primitive(0).reducer(((e, {}) => e + 1)).build(),
                    S = v("queryStatus").primitive({}).build(),
                    y = v("mutationStatus").primitive([]).build(),
                    E = v("query").derivedTracked((e => {
                        const t = e.untracked(f);
                        return m || 0 !== t ? Array.from(a(e)).map((e => ({ ...e,
                            refetchKey: t
                        }))) : []
                    })).build(),
                    b = v("querySettle").derivedTracked((e => {
                        const t = e(E),
                            a = e.untracked(S);
                        return t.every((e => {
                            var t;
                            return "settled" === (null === (t = a[_(e)]) || void 0 === t ? void 0 : t.state)
                        }))
                    })).write(((e, a, s, n) => {
                        const r = e(S)[_(s.query)];
                        void 0 !== r && "settled" !== r.state && r.controller === s.controller && (e(y).length > 0 ? a(S, (e => {
                            const t = { ...e
                            };
                            return t[_(s.query)] = {
                                controller: s.controller,
                                query: s.query,
                                result: n,
                                state: "awaitingSettlement"
                            }, t
                        })) : (a(t, n), a(S, (e => {
                            const t = { ...e
                            };
                            return t[_(s.query)] = {
                                query: s.query,
                                state: "settled"
                            }, t
                        }))))
                    })).build(),
                    I = v("queryValidateAction").write(((e, t, a) => {
                        const s = Object.entries(e(S)).flatMap((([e, t]) => {
                            if (void 0 === t) return [];
                            const s = a(t);
                            switch (s) {
                                case "invalidated":
                                    return "settled" !== t.state && t.controller.abort(), [];
                                case "superseded":
                                    return "settled" !== t.state && t.controller.abort(), [
                                        [e, {
                                            query: t.query,
                                            state: "settled"
                                        }]
                                    ];
                                case "unaffected":
                                    return [
                                        [e, t]
                                    ];
                                default:
                                    throw Error(`Unexpected action type: ${(0,i.RJ)(s)}`)
                            }
                        }));
                        t(S, Object.fromEntries(s))
                    })).build(),
                    w = v("queryAction").derived((e => {
                        const t = { ...e(S)
                            },
                            a = [],
                            s = new Set;
                        return e(y).length > 0 ? [] : ((p && "idle" !== e((0, n.ml)((0, d.P)(E, "deps"))) ? [] : e((0, d.P)(E, "value"))).forEach((e => {
                            const n = _(e),
                                r = t[n];
                            if (void 0 === r) {
                                if (s.has(n)) throw Error("Duplicate query key");
                                a.push({
                                    action: "start",
                                    query: e
                                })
                            } else "awaitingSettlement" === r.state && a.push({
                                action: "settle",
                                query: r
                            }), delete t[n]
                        })), [...Object.values(t).filter(i.$K).map((e => ({
                            action: "abort",
                            query: e
                        }))), ...a])
                    })).write(((e, t, ...a) => {
                        const n = e((0, l.Z0)());
                        if ("teardown" === a[0]) return void t(I, (() => "invalidated"));
                        const r = e(w);
                        if (0 === r.length) return;
                        const {
                            abort: o,
                            settle: c,
                            start: d,
                            ...u
                        } = s.vM(r, "action");
                        if (!s.xb(u)) throw (0, i.RJ)(null), Error(`Unexpected network action types: ${JSON.stringify(Object.keys(u))}`);
                        null == c || c.forEach((({
                            query: e
                        }) => {
                            t(b, e, e.result)
                        }));
                        const g = { ...e(S)
                        };
                        null == o || o.forEach((({
                            query: e
                        }) => {
                            "settled" !== e.state && e.controller.abort(), delete g[_(e.query)]
                        })), null == d || d.forEach((({
                            query: e
                        }) => {
                            const t = new AbortController,
                                a = {
                                    controller: t,
                                    query: e
                                };
                            g[_(e)] = {
                                state: "running",
                                ...a
                            }, (async () => {
                                let s;
                                await Promise.resolve();
                                try {
                                    s = {
                                        type: "network-success",
                                        value: await e.queryFn(e.queryKey)(t.signal)
                                    }
                                } catch (e) {
                                    s = {
                                        ex: e,
                                        type: "network-failure"
                                    }
                                }
                                n.set(b, a, {
                                    queryKey: e.queryKey,
                                    result: s,
                                    type: "network-result"
                                })
                            })()
                        })), t(S, g)
                    })).build(),
                    k = (0, r.w)(`${e}.mount`, (e => {
                        const t = e.sub(w, (() => {
                            e.set(w, "update")
                        }));
                        return e.set(w, "update"), () => {
                            t(), e.set(w, "teardown")
                        }
                    })),
                    T = v("networkState").derivedTracked((e => e.untracked(y).length > 0 ? "mutating" : e(b) ? "idle" : "loading")).build(),
                    C = v("final").derivedTracked((e => {
                        e.record(E);
                        const a = e.untracked(t);
                        return e.untracked(y).reduce(((e, t) => void 0 === t.applyOptimisticUpdate ? e : t.applyOptimisticUpdate(e)), a)
                    })).write(((e, a, s) => {
                        const n = e(y),
                            r = [],
                            i = n.reduce(((e, t) => {
                                const a = e.resolveMutationConflict(t);
                                switch (a) {
                                    case "race":
                                        {
                                            const a = e => "constructor" in e ? e.constructor.name : "anonymous";
                                            (0, u.um)("Mutations are racing", {
                                                data: {
                                                    existingMutationName: a(t),
                                                    newMutationName: a(e)
                                                },
                                                sample: .001
                                            })
                                        }
                                    case "unaffected":
                                        return r.push(t), e;
                                    default:
                                        return a
                                }
                            }), s);
                        a(y, [...r, i]);
                        let o = !0;
                        const c = (() => {
                                const t = e((0, l.Z0)());
                                return () => o ? {
                                    get: e,
                                    set: a
                                } : t
                            })(),
                            d = (...e) => {
                                const t = c().get(y),
                                    a = t.filter((e => e !== i));
                                if (t.length !== a.length)
                                    if (c().set(y, a), e.length > 0) {
                                        if (o) throw e[0]
                                    } else c().set(I, (e => i.resolveQueryConflict(e.query.queryKey, "settled" === e.state ? "settled" : "in-flight")))
                            },
                            g = {
                                update: (...e) => {
                                    o ? a(t, ...e) : c().set(t, ...e)
                                }
                            };
                        let p;
                        try {
                            p = i.execute(g)
                        } catch (e) {
                            return void d(e)
                        }
                        p instanceof Promise ? (o = !1, (async () => {
                            try {
                                await p, d()
                            } catch (e) {
                                d(e)
                            }
                        })()) : d()
                    })).build();
                return (0, o.it)(C, k), (0, o.IM)(C, T), (0, o.XV)(C, f), C
            }
        },
        31106: (e, t, a) => {
            "use strict";
            a.d(t, {
                w: () => r
            });
            var s = a(68903),
                n = a(19172);
            const r = (e, t) => {
                const a = (0, n.f)(e).primitive("unmounted").reducer(((e, t) => {
                    switch (t.type) {
                        case "increment":
                            if ("unmounted" === e) throw Error("A mount action should be used on an unmounted coordinator");
                            return { ...e,
                                mountCount: e.mountCount + 1
                            };
                        case "mount":
                            if ("unmounted" !== e) throw Error("An increment action should be used on a mounted coordiantor");
                            return {
                                mountCount: 1,
                                unmount: t.unmount
                            };
                        case "unmount":
                            if ("unmounted" === e) throw Error("Coordinator was already unmounted");
                            return e.mountCount > 1 ? { ...e,
                                mountCount: e.mountCount - 1
                            } : "unmounted";
                        default:
                            return (0, s.RJ)(t), e
                    }
                })).build();
                return e => ("unmounted" === e.get(a) ? e.set(a, {
                    type: "mount",
                    unmount: t(e)
                }) : e.set(a, {
                    type: "increment"
                }), () => {
                    var t;
                    const s = e.get(a);
                    if ("unmounted" === s) throw Error("Coordinator was already unmounted");
                    1 === s.mountCount && (null === (t = s.unmount) || void 0 === t || t.call(s)), e.set(a, {
                        type: "unmount"
                    })
                })
            }
        },
        18728: (e, t, a) => {
            "use strict";
            a.d(t, {
                Lv: () => p,
                lQ: () => g,
                md: () => u
            });
            var s = a(27378),
                n = a(99369),
                r = a(80254),
                i = a(96195),
                o = a(31106),
                l = a(20716),
                c = a(28818),
                d = a(19172);
            const u = (e, t, {
                    cacheTime: a = 3e5
                } = {}) => {
                    const s = r.HP((s => {
                        const n = `${e}.${s}`,
                            r = e => (0, d.f)(`${n}.${e}`),
                            c = r("base").primitive(void 0).reducer(((e, t) => {
                                if ("clear" !== t) return "network-success" === t.result.type ? t.result.value : e
                            })).build(),
                            u = (0, i.d)(`${n}.coordinator`, c, (() => void 0 === s ? [] : [{
                                queryFn: e => () => t(e),
                                queryKey: s
                            }])),
                            g = r("timeoutId").primitive(void 0).build(),
                            p = (0, d.f)(n).derivedTracked((e => e(u))).build(),
                            m = (0, o.w)(`${n}.mount`, (e => {
                                clearTimeout(e.get(g));
                                const t = u.mount(e);
                                return () => {
                                    null == t || t();
                                    const s = setTimeout((() => {
                                        e.set(c, "clear")
                                    }), a);
                                    e.set(g, s)
                                }
                            }));
                        return (0, l.it)(p, m), p
                    }));
                    return {
                        debugName: e,
                        getAtom: s
                    }
                },
                g = (e, t) => p(e, void 0 === t ? [] : [t])[0],
                p = (e, t) => {
                    const a = (0, c.oR)(),
                        r = (0, n.asMutable)(t),
                        i = s.useMemo((() => r.map((t => e.getAtom(t)))), r),
                        o = s.useMemo((() => (0, d.f)(`${e.debugName}.group.${r.length}`).derivedTracked((e => i.map((t => e(t))))).build()), [i]);
                    return s.useEffect((() => {
                        const e = i.map((e => e.mount(a)));
                        return () => {
                            e.forEach((e => null == e ? void 0 : e()))
                        }
                    }), [i, a]), (0, c.tj)(o)
                }
        },
        75532: (e, t, a) => {
            "use strict";
            a.d(t, {
                p: () => s
            });
            const s = (e, t, a) => [e, {
                execute: ({
                    update: e
                }) => {
                    e({
                        type: "override",
                        value: t
                    })
                },
                resolveMutationConflict: () => "race",
                resolveQueryConflict: () => a
            }]
        },
        26886: (e, t, a) => {
            "use strict";
            a.d(t, {
                It: () => h,
                jP: () => _,
                og: () => u,
                s7: () => m,
                yO: () => p
            });
            var s = a(72538),
                n = a(81149),
                r = a(53229),
                i = a(8654),
                o = a(93746),
                l = a(16086);
            const c = {},
                d = [
                    ["eo", "es"],
                    ["eo", "fr"],
                    ["eo", "pt"],
                    ["gn", "es"]
                ],
                u = (e, t = o.h9) => {
                    const a = (0, r.lV)((0, i.H8)(2471, {
                        learning_language_name: (0, o.vY)(e)
                    }));
                    return `/${(0,l.Pc)()?"enroll":"course"}/${e}/${t}/${a}`
                },
                g = (e, t) => `${t}<-${e}`,
                p = (e, t) => g(e, t) in c,
                m = (e, t, a, s, r) => {
                    var i;
                    if (r >= o.AP.Beta) return !0;
                    const l = c[g(t, s)];
                    return !!l && (!!(null === (i = e.featureFlags) || void 0 === i ? void 0 : i[l.featureFlag]) || a && "experiment" === (0, n.j6)(l.experiment, void 0))
                },
                h = (e, t) => d.some((([a, s]) => a === e && s === t)),
                v = (e, t) => {
                    var a;
                    return (null === (a = t.currentCourseId) || void 0 === a ? void 0 : a.endsWith("ZH-CN")) && t.zhTw ? t.currentCourseId === e || t.currentCourseId.replace("ZH-CN", "ZH-TW") === e : t.currentCourseId === e
                },
                _ = (e, t) => t.courses.filter((a => v(a, t) || e[a].xp)).map((a => ((e, t, a) => {
                    var n;
                    const r = e[a].fromLanguage,
                        i = e[a].learningLanguage,
                        l = (0, o.vI)(r, t.zhTw);
                    return {
                        courseId: a,
                        fromLanguageId: r,
                        isCurrent: v(a, t),
                        learningLanguageId: i,
                        learningLanguageName: l === i ? "Intermediate Eng." : null === (n = s[l]) || void 0 === n ? void 0 : n[i]
                    }
                })(e, t, a)))
        },
        95351: (e, t, a) => {
            "use strict";
            a.d(t, {
                K: () => i
            });
            var s = a(23275),
                n = a(11811);
            const r = {
                    [n.FF.GlobalPractice]: {
                        maxLength: 16,
                        minLength: 10,
                        nthSessionStart: 4,
                        requiredSessionEnds: 2
                    }
                },
                i = ({
                    currentCourseHistory: e,
                    levelData: t,
                    sessionType: a,
                    timestamp: i
                }) => {
                    if (void 0 === e) return;
                    const {
                        globalPracticeSessionEnds: o,
                        globalPracticeSessionStarts: l,
                        mistakeHistory: c
                    } = e;
                    if (t && (0, s.$)(t.level)) {
                        const e = c.filter((e => {
                            var a;
                            return t.level.id === (null === (a = e.additionalData) || void 0 === a ? void 0 : a.levelId)
                        })).map((e => e.value.generatorIdentifier)).slice(0, 10);
                        return e.length >= 0 ? e : void 0
                    }
                    if (a === n.FF.GlobalPractice) {
                        if (void 0 === i) throw Error("timestamp should not be undefined for Global Practice SessionType");
                        const e = c.filter((e => i < e.expirationTimestamp)).map((e => e.value)),
                            t = r[a];
                        return l % t.nthSessionStart == 0 && o >= t.requiredSessionEnds && e.length >= t.minLength ? e.map((e => e.generatorIdentifier)).slice(0, t.maxLength) : void 0
                    }
                }
        },
        17135: (e, t, a) => {
            "use strict";
            a.d(t, {
                ee: () => E,
                PG: () => S,
                wD: () => y,
                rE: () => b,
                Mb: () => k,
                zq: () => w,
                Xx: () => I,
                v4: () => Z,
                g8: () => D,
                NP: () => H,
                zM: () => N,
                M: () => M,
                zK: () => c,
                cz: () => o,
                C$: () => i,
                i_: () => _,
                Qe: () => v,
                aW: () => ae,
                zO: () => R,
                Ux: () => T,
                QB: () => C,
                $$: () => re,
                ji: () => z,
                t8: () => se,
                Ij: () => Y,
                dz: () => ee,
                zj: () => te,
                Ml: () => A,
                Zo: () => L,
                RF: () => P,
                fv: () => Q,
                L3: () => K,
                mm: () => $,
                J8: () => ne,
                Z2: () => j,
                oE: () => ie,
                Zm: () => q,
                F: () => h,
                kJ: () => m,
                Ko: () => X,
                T6: () => W,
                HR: () => x,
                pQ: () => U,
                VV: () => G,
                hD: () => J,
                pY: () => F,
                bC: () => B,
                zk: () => V,
                Gz: () => O,
                iN: () => u,
                $I: () => l,
                Rw: () => g
            });
            var s = a(58576),
                n = a(76578),
                r = a(80254);
            const i = e => e.toLocaleDateString(void 0, {
                    month: "long",
                    year: "numeric"
                }),
                o = e => {
                    const t = e.getFullYear().toString();
                    let a = (e.getMonth() + 1).toString(),
                        s = e.getDate().toString();
                    return a.length < 2 && (a = `0${a}`), s.length < 2 && (s = `0${s}`), [t, a, s].join("-")
                },
                l = e => {
                    const [t, a, s] = e.split("-");
                    return new Date(parseInt(t, 10), parseInt(a, 10) - 1, parseInt(s, 10))
                },
                c = e => new Date(1e3 * e).toISOString().slice(0, 10),
                d = [
                    ["s", 1e3],
                    ["m", 6e4],
                    ["h", 36e5],
                    ["d", 864e5]
                ],
                u = e => {
                    var t;
                    if (e.includes(":")) return e.split(":").reverse().reduce(((e, t, a) => e + parseInt(t, 10) * d[a][1]), 0);
                    const a = e.trim().charAt(e.length - 1),
                        s = null === (t = d.find((([e]) => e === a))) || void 0 === t ? void 0 : t[1];
                    return void 0 === s ? NaN : parseInt(e, 10) * s
                },
                g = r.ZP.memoize((e => {
                    let t;
                    try {
                        t = parseInt(e, 10)
                    } catch {
                        (0, s.Kp)("Invalid timezoneOffset", {
                            data: {
                                timezoneOffset: e
                            }
                        }), t = parseInt(S, 10)
                    }
                    const a = Math.sign(t);
                    return t = Math.abs(t), a * (Math.floor(t / 100) + t % 100 / 60)
                }));
            var p = a(8654);
            const m = (e, t, a) => (Q(e, t) - a + 7) % 7,
                h = (e, t, a = 0) => {
                    const s = q(e, t),
                        n = m(e, t, a);
                    return Math.ceil((s + n) / 7)
                },
                v = (e, t, a = 0) => {
                    const s = (t + 1) % 12,
                        n = t < 11 ? e : e + 1,
                        r = (t - 1 + 12) % 12,
                        i = t > 0 ? e : e - 1,
                        o = q(e, t),
                        l = q(i, r),
                        c = m(e, t, a),
                        d = [],
                        u = Math.ceil((o + c) / 7);
                    for (let a = 0; a < u; a++) {
                        const u = [];
                        for (let d = 0; d < 7; d++) {
                            const g = 7 * a + d - c,
                                p = g < 0 ? r : g >= o ? s : t,
                                m = (g < 0 ? l + g : g % o) + 1,
                                h = p === r ? i : p === s ? n : e;
                            u.push(re(h, p, m))
                        }
                        d.push(u)
                    }
                    return d
                },
                _ = ({
                    month: e,
                    year: t
                }) => (0, p.T$)(new Date(t, e), {
                    month: "long",
                    year: "numeric"
                }),
                f = "America/New_York",
                S = "-500",
                y = 2147483647,
                E = 7,
                b = 1440,
                I = 3600,
                w = 36e5,
                k = 864e5,
                T = () => new Date,
                C = e => new Date(e),
                R = e => new Date(1e3 * e),
                L = () => Math.floor(Date.now() / 1e3),
                A = () => Math.floor(Date.now() / w),
                P = e => Math.floor(Date.now() / 1e3) - ee(e),
                D = e => Math.floor(e.getTime() / 1e3),
                N = (e, t = "000") => new Date(1e3 * e + 36e5 * g(t)),
                O = e => new Date(e),
                x = e => Date.now() + 1e3 * e,
                F = e => Date.now() >= e,
                M = (e, t) => (t - 1e3 * e) / k,
                U = () => (new Date).getTimezoneOffset(),
                H = () => {
                    try {
                        return Intl.DateTimeFormat().resolvedOptions().timeZone || ((0, s.Kp)("Got empty time zone from browser API", {
                            once: !0,
                            sample: .1
                        }), f)
                    } catch (e) {
                        (0, s.Kp)("Failed to detect time zone", {
                            ex: e,
                            once: !0
                        })
                    }
                    return f
                },
                G = e => (void 0 === e ? new Date : new Date(e.getTime())).setUTCHours(0, 0, 0, 0),
                V = e => e.toDateString() === T().toDateString(),
                B = (e, t) => {
                    const a = new Date;
                    return a.setDate(a.getDate() + t), e.toDateString() === a.toDateString()
                },
                z = (e = S) => N(Date.now() / 1e3, e).getUTCDay(),
                Z = (e, t) => {
                    const a = new Date(e.setDate(e.getDate() + t));
                    return G(a) / 1e3
                },
                W = () => {
                    const e = new Date;
                    return e.setHours(0, 0, 0, 0), e
                },
                $ = () => {
                    const e = new Date;
                    return e.setDate(e.getDate() + 1), e.setHours(0, 0, 0, 0)
                },
                j = () => {
                    const e = new Date;
                    return e.setDate(1), e.setHours(0, 0, 0, 0), e.setMonth(e.getMonth() + 1), e
                },
                q = (e, t) => new Date(e, t + 1, 0).getDate(),
                Q = (e, t) => new Date(e, t).getDay(),
                K = (e = S) => {
                    const t = Math.floor(23 - T().getUTCHours() - g(e));
                    return (0, n.vN)(t, 24)
                },
                Y = e => {
                    const t = N(e);
                    return q(t.getUTCFullYear(), t.getUTCMonth()) - t.getUTCDate()
                },
                J = () => {
                    const e = new Date;
                    return e.setDate(e.getDate() - 1), e
                },
                X = (e = S) => {
                    const t = T(),
                        a = 3600 * (t.getUTCHours() + g(e)) + 60 * t.getUTCMinutes() + t.getUTCSeconds();
                    return (0, n.vN)(a, 86400)
                },
                ee = e => {
                    const {
                        days: t = 0,
                        hours: a = 0,
                        minutes: s = 0,
                        seconds: n = 0
                    } = e;
                    return 86400 * t + a * I + 60 * s + n
                },
                te = e => {
                    if (e < 0) throw RangeError("The argument must be greater than or equal to 0.");
                    const t = e / 1e3,
                        a = t / 60,
                        s = a / 60,
                        n = s / 24,
                        r = Math.floor(n),
                        i = 24 * r,
                        o = Math.floor(s - i),
                        l = 60 * (i + o),
                        c = Math.floor(a - l),
                        d = 60 * (l + c);
                    return {
                        days: r,
                        hours: o,
                        hoursTotal: o + 24 * r,
                        minutes: c,
                        seconds: Math.floor(t - d)
                    }
                },
                ae = (e, t, a = "floor") => {
                    const s = new Date(e),
                        n = new Date(t),
                        r = Date.UTC(s.getFullYear(), s.getMonth(), s.getDate()),
                        i = Date.UTC(n.getFullYear(), n.getMonth(), n.getDate());
                    switch (a) {
                        case "round":
                            return Math.round((i - r) / k);
                        case "ceil":
                            return Math.ceil((i - r) / k);
                        default:
                            return Math.floor((i - r) / k)
                    }
                },
                se = (e, t, a = "floor") => {
                    switch (a) {
                        case "round":
                            return Math.round((t - e) / k);
                        case "ceil":
                            return Math.ceil((t - e) / k);
                        default:
                            return Math.floor((t - e) / k)
                    }
                },
                ne = (e, t) => {
                    const a = 12 * e.getFullYear() + e.getMonth();
                    return 12 * t.getFullYear() + t.getMonth() - a
                },
                re = (...e) => {
                    const t = e.indexOf(void 0);
                    return new Date(...e.slice(0, -1 === t ? e.length : t))
                },
                ie = ({
                    currentTime: e,
                    targetHour: t,
                    targetWeekday: a
                }) => {
                    const s = new Date(e),
                        n = s.getUTCDay();
                    let r = 0;
                    return n === a ? s.getUTCHours() >= t && (r = E) : r = n > a ? E - n + a : a - n, s.setUTCDate(s.getUTCDate() + r), s.setUTCHours(t, 0, 0, 0), s.getTime()
                }
        },
        64115: (e, t, a) => {
            "use strict";
            a.d(t, {
                vU: () => d,
                Vl: () => E,
                R: () => f,
                ky: () => b,
                nn: () => m,
                pL: () => _,
                gQ: () => I,
                Au: () => S,
                oj: () => h,
                NY: () => v,
                Sz: () => k
            });
            var s = a(99369),
                n = a(53229),
                r = a(30839),
                i = a(27378),
                o = a(28818);
            let l;
            const c = (0, a(1398).Z)((() => a.e(2343).then(a.bind(a, 12343)).then((e => ({
                    default: e.DevTools
                }))))),
                d = () => {
                    const [e, t] = i.useReducer((e => !e), !1);
                    i.useEffect((() => (l = t, () => {
                        l === t && (l = void 0)
                    })), []);
                    const a = (0, o.oR)();
                    return e ? i.createElement(i.Suspense, {
                        fallback: null
                    }, i.createElement(c, {
                        isInitialOpen: !0,
                        store: a
                    })) : null
                };
            let u, g = !1,
                p = !1;
            const m = () => {
                    var e;
                    return null !== (e = null == u ? void 0 : u()) && void 0 !== e ? e : 0
                },
                h = () => window.location.host.startsWith("preview."),
                v = () => /^next-\d+\./.test(window.location.host),
                _ = () => {
                    const e = /^next-(\d+)\./.exec(window.location.host);
                    return e ? parseInt(e[1], 10) : void 0
                },
                f = () => {
                    p || (p = !0, console.log("Enabled debug mode"), T())
                },
                S = () => v() || p,
                y = () => ({ ...(0, n.vl)((0, r.rV)(r.Qt.DebugFlags)),
                    ...(0, n.vl)((0, r.rV)(r.Qt.BrowserSessionDebugFlags, {
                        useSessionStorage: !0
                    })),
                    ...(0, n.vl)(window.location.search)
                }),
                E = () => Object.keys(y()).length > 0,
                b = (e, t) => {
                    var a;
                    return S() && null !== (a = y()[e]) && void 0 !== a ? a : t
                },
                I = e => void 0 !== b(e),
                w = e => void 0 !== e && "" !== e && "false" !== e,
                k = (e, t) => {
                    var a;
                    if (!S()) throw Error("Tried to set a debug flag with debug mode disabled.");
                    const n = null !== (a = (0, r.rV)(r.Qt.BrowserSessionDebugFlags, {
                        useSessionStorage: !0
                    })) && void 0 !== a ? a : {};
                    if (w(t) ? n[e] === t : !(e in n)) return;
                    const i = w(t) ? (0, s.set)(n, e, t) : (0, s.without)(n, e);
                    (0, r.LS)(r.Qt.BrowserSessionDebugFlags, i, {
                        useSessionStorage: !0
                    }), console.log(`Set debugFlag ${e} to ${t}`)
                },
                T = () => {
                    g || ((async () => {
                        const [e] = await Promise.all([a.e(1711).then(a.bind(a, 4485))]);
                        u = e.getDebugOffset
                    })(), C(), window.duoDebug = {
                        get persistedState() {
                            return (0, r.pn)("duo.state")
                        }
                    }, g = !0)
                },
                C = async () => {
                    const {
                        globalDispatch: e,
                        globalGetState: t
                    } = await Promise.resolve().then(a.bind(a, 18804));
                    let s;
                    e({
                        timestamp: Date.now(),
                        type: "debug/PAGE_LOAD"
                    });
                    const n = () => {
                        var a, r;
                        Date.now() > (null !== (r = null === (a = t()) || void 0 === a ? void 0 : a.debug.pageLoadTime) && void 0 !== r ? r : Date.now()) + 864e5 ? e({
                            type: "debug/ADD_UNIQUE_DEBUG_WARNING",
                            warning: {
                                type: "stale-page"
                            }
                        }) : s = window.setTimeout(n, 1e4)
                    };
                    document.addEventListener("visibilitychange", (() => {
                        "hidden" === document.visibilityState ? window.clearTimeout(s) : s = window.setTimeout(n, 600)
                    })), n()
                };
            S() && T()
        },
        22106: (e, t, a) => {
            "use strict";
            a.d(t, {
                a1: () => S,
                XA: () => E,
                Qj: () => b
            });
            var s = a(80254);
            const n = a.p + "images/duoRadio/titleCards/0a1dbbee82ca1abf78cfa96926c993d0.svg",
                r = a.p + "images/duoRadio/titleCards/86a7197b4d04f50efeda11d91e01f04d.svg",
                i = a.p + "images/duoRadio/titleCards/0213039e407c5a87138e3a1899deb91f.svg",
                o = a.p + "images/duoRadio/titleCards/83a42d94b6f15a46780255fe86b71c9c.svg",
                l = a.p + "images/duoRadio/titleCards/ba9f61070706600cdcccfc8e6e8945d2.svg",
                c = a.p + "images/duoRadio/titleCards/b48799a15e2373ad7be768c485925b13.svg",
                d = a.p + "images/duoRadio/titleCards/ec9adf7c80b18615d426b934c0485ed4.svg",
                u = a.p + "images/duoRadio/titleCards/32e296a54199e290304787f2e7ade910.svg",
                g = a.p + "images/duoRadio/titleCards/e7f11db7a8a3f557dd711b07b151f5d4.svg",
                p = a.p + "images/duoRadio/titleCards/6d305343640ddcedc69570b68afb83da.svg",
                m = a.p + "images/duoRadio/titleCards/574da2b8f9f820018251d07cdb43846c.svg",
                h = a.p + "images/duoRadio/titleCards/0c34200c8bfd5ae2588af5f470bef829.svg",
                v = a.p + "images/duoRadio/titleCards/029f7af45c1fefa43d38099d87a33489.svg",
                _ = a.p + "images/duoRadio/titleCards/fbc42e2bc09a4f7b89cb3f4edfa92211.svg";
            var f = a(11811);
            const S = e => {
                    const t = e.duoRadioChallengeStats;
                    if (!t) throw Error("DuoRadio session missing challenge stats");
                    return Math.round(t.numChallengesCorrect / t.numChallengesCompleted * 100)
                },
                y = e => {
                    switch (e) {
                        case "binary":
                        case "binaryComprehension":
                            return f.Sm.RadioBinary;
                        case "imageComprehension":
                        case "imageSelect":
                            return f.Sm.RadioImageSelect;
                        case "listenMatch":
                            return f.Sm.RadioListenMatch;
                        case "listenRecognize":
                            return f.Sm.RadioListenRecognize;
                        case "select":
                            return f.Sm.RadioSelect;
                        default:
                            throw Error(`Unknown DuoRadio challenge type: ${e}`)
                    }
                },
                E = e => {
                    switch (e) {
                        case "aventurasConBea":
                            return o;
                        case "adventuresWithBea":
                            return i;
                        case "chattingWithZari":
                            return v;
                        case "hablandoConZari":
                            return _;
                        case "ideasConBea":
                            return r;
                        case "ideasWithBea":
                            return n;
                        case "laCasaDeVikram":
                            return h;
                        case "lilyConoceGente":
                            return c;
                        case "lilyAndStrangers":
                            return l;
                        case "lucyEstaEscuchando":
                            return u;
                        case "lucyIsListening":
                            return d;
                        case "askLucy":
                            return g;
                        case "preguntaleALucy":
                            return p;
                        case "vikramsCommunityHotline":
                            return m;
                        default:
                            throw Error(`Unknown title: ${e}`)
                    }
                },
                b = (e, t) => e.map((e => {
                    const a = {
                        type: y(e.challengeType),
                        ...void 0 === e.correctIndex ? {} : {
                            correctIndex: e.correctIndex
                        },
                        ...void 0 === e.correctIndices ? {} : {
                            correctIndices: e.correctIndices
                        },
                        ...void 0 === e.choices ? {} : {
                            choices: e.choices
                        },
                        ...void 0 === e.isTrue ? {} : {
                            isTrue: e.isTrue
                        },
                        ...void 0 === e.pairs ? {} : {
                            pairs: e.pairs
                        },
                        ...void 0 === e.prompt ? {} : {
                            prompt: e.prompt
                        },
                        ...void 0 === e.audioText ? {} : {
                            audioText: e.audioText
                        },
                        ...void 0 === e.audioUrl ? {} : {
                            audioUrl: e.audioUrl
                        },
                        challengeResponseTrackingProperties: {
                            "": void 0
                        },
                        id: "",
                        indicatorType: null,
                        metadata: t.metadata,
                        solutionTranslation: "",
                        trackingProperties: t.trackingProperties
                    };
                    if (a.type === f.Sm.RadioListenRecognize || a.type === f.Sm.RadioSelect) {
                        const e = s.ZP.shuffle(a.choices);
                        if (a.type === f.Sm.RadioListenRecognize) {
                            const t = a.correctIndices.map((t => e.indexOf(a.choices[t])));
                            a.correctIndices = t
                        } else if (a.type === f.Sm.RadioSelect) {
                            const t = e.indexOf(a.choices[a.correctIndex]);
                            a.correctIndex = t
                        }
                        a.choices = e
                    }
                    return a
                }))
        },
        37971: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    c: () => s
                }),
                function(e) {
                    e.AlphabetTipSplash = "ALPHABET_TIP_SPLASH", e.Blaming = "BLAMING", e.CapstoneReviewSplash = "CAPSTONE_REVIEW_SPLASH", e.CharacterWriteRetryBlaming = "CHARACTER_WRITE_RETRY_BLAMING", e.CoachDuo = "COACH_DUO", e.CoachDuoSplash = "COACH_DUO_SPLASH", e.CoachDuoSliding = "COACH_DUO_SLIDING", e.CoachDuoSubmitting = "COACH_DUO_SUBMITTING", e.EarnbackSplash = "EARNBACK_SPLASH", e.EasierPlacementSplash = "EASIER_PLACEMENT_SPLASH", e.EndCarousel = "END_CAROUSEL", e.Grading = "GRADING", e.GrammarSkillSplash = "GRAMMAR_SKILL_SPLASH", e.Guessing = "GUESSING", e.HardModeDuo = "HARD_MODE_DUO", e.HardModeDuoSliding = "HARD_MODE_DUO_SLIDING", e.LegendaryDuo = "LEGENDARY_DUO", e.MistakesReviewDuo = "MISTAKES_REVIEW_DUO", e.PartialXpDuo = "PARTIAL_XP_DUO", e.PartialXpDuoSliding = "PARTIAL_XP_DUO_SLIDING", e.PlacementSplash = "PLACEMENT_SPLASH", e.PracticeHubDuo = "PRACTICE_HUB_DUO", e.SectionTestSplash = "SECTION_TEST_SPLASH", e.Showing = "SHOWING", e.Sliding = "SLIDING", e.SmartTip = "SMART_TIP", e.SmartTipBlaming = "SMART_TIP_BLAMING", e.SmartTipSliding = "SMART_TIP_SLIDING", e.SpeakRetryBlaming = "SPEAK_RETRY_BLAMING", e.Submitting = "SUBMITTING", e.UnitReviewSplash = "UNIT_REVIEW_SPLASH", e.UnitTestSplash = "UNIT_TEST_SPLASH", e.VisiblePersonalizationSplash = "VISIBLE_PERSONALIZATION_SPLASH"
                }(s || (s = {}))
        },
        94786: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    Q: () => s
                }),
                function(e) {
                    e.Adventures = "adventures", e.AlphabetLesson = "alphabet_lesson", e.AlphabetPractice = "alphabet_practice", e.DuoRadio = "duo_radio", e.FinalLevelLesson = "final_level_lesson", e.GlobalPractice = "practice", e.Legendary = "legendary", e.LegendaryLevel = "legendary_level", e.LegendaryLexemePractice = "legendary_lexeme_practice", e.LegendaryUnitPractice = "legendary_unit_practice", e.Lesson = "lesson", e.LevelReview = "level_review", e.LexemePractice = "lexeme_practice", e.LexemeSkillLevelPractice = "lexeme_skill_level_practice", e.ListeningPractice = "listen_up", e.MistakesReview = "mistakes_review", e.Placement = "placement", e.PlacementTest = "placement_test", e.SectionTest = "section_test", e.SpeakingPractice = "perfect_pronounciation", e.SpecifiedMatchPractice = "specified_match_practice", e.Stories = "stories", e.TargetPractice = "target_practice", e.UnitPractice = "unit_practice", e.UnitReview = "unit_review", e.UnitRewind = "unit_rewind", e.UnitTest = "unit_test"
                }(s || (s = {}))
        },
        67173: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    V: () => s
                }),
                function(e) {
                    e.AccountNotFound = "account-not-found", e.AchievementV3Slide = "achievementV3-slide", e.AcquisitionSurvey = "acquisitionSurvey", e.AddFamilyMember = "add-family-member", e.AgeInput = "age-input", e.AllowButton = "allow-button", e.AppStoreButtons = "app-store-buttons", e.AudioButton = "audio-button", e.AvatarsIntroDismissButton = "avatars-intro-dismiss-button", e.B2bStartButton = "b2b-start-button", e.BackArrow = "back-arrow", e.BigRedButton = "big-red-button", e.Blame = "blame", e.BlameCorrect = "blame-correct", e.BlameIncorrect = "blame-incorrect", e.BlockButton = "block-button", e.CancelEditFamily = "cancel-edit-family", e.CcBillingInfoForm = "cc-billing-info-form", e.CcBillingInfoRejected = "cc-billing-info-rejected", e.CcCancelButton = "cc-cancel-button", e.CcExpirationInput = "cc-expiration-input", e.CcExpirationLabel = "cc-expiration-label", e.CcNameInput = "cc-name-input", e.CcNameLabel = "cc-name-label", e.CcNumberInput = "cc-number-input", e.CcNumberLabel = "cc-number-label", e.CcPostalCodeInput = "cc-postal-code-input", e.CcPostalCodeLabel = "cc-postal-code-label", e.CcRejectedImage = "cc-rejected-image", e.CcSecurityInput = "cc-security-input", e.CcSecurityLabel = "cc-security-label", e.CcSubmitButton = "cc-submit-button", e.CcTermsConditionsLabel = "cc-terms-conditions-label", e.CcTermsConditionsLink = "cc-terms-conditions-link", e.Challenge = "challenge", e.ChallengeChoice = "challenge-choice", e.ChallengeHeader = "challenge-header", e.ChallengeJudgeText = "challenge-judge-text", e.ChallengeTapToken = "challenge-tap-token", e.ChallengeTapTokenText = "challenge-tap-token-text", e.ChallengeTextInput = "challenge-text-input", e.ChallengeTranslateInput = "challenge-translate-input", e.ChinesePrivacy = "chinese-privacy", e.ChineseTerms = "chinese-terms", e.ChoosePlanHeader = "choose-plan-header", e.CloseButton = "close-button", e.CloseButtonInviteFamily = "close-button-invite-family", e.CloseButtonStories = "close-button-stories", e.ContinueButton = "continue-button", e.ContinueWithFacebook = "continue-with-facebook", e.ContinueWithGoogle = "continue-with-google", e.CoursesLink = "courses-link", e.CoursesMenu = "courses-menu", e.CreateProfile = "create-profile", e.CreateProfileJuicy = "create-profile-juicy", e.CreateProfileLater = "create-profile-later", e.DailyQuestProgressSlide = "daily-quest-progress-slide", e.DailyQuestRewardSlide = "daily-quest-reward-slide", e.DailyReminder = "daily-reminder", e.DarkMode = "dark-mode", e.DrawerBackdrop = "drawer-backdrop", e.EditFamily = "edit-family", e.EmailField = "email-field", e.EmailInput = "email-input", e.EnableSpeaker = "enable-speaker", e.EnglishPrivacy = "english-privacy", e.EnglishTerms = "english-terms", e.FamilyMember = "family-member", e.FaqLink = "faq-link", e.FooterLinks = "footer-links", e.ForgotPassword = "forgot-password", e.ForgotPasswordThankYou = "forgot-password-thank-you", e.FriendAddButton = "friend-add-button", e.FriendAddedButton = "friend-added-button", e.FriendEntry = "friend-entry", e.FriendFollowersList = "friend-followers-list", e.FriendFollowingList = "friend-following-list", e.FriendUpdatesHeader = "friend-updates-header", e.FullNameInput = "full-name-input", e.FunboardingAccountLink = "funboarding-account-link", e.FunboardingContinueButton = "funboarding-continue-button", e.GetStartedTop = "get-started-top", e.GlobalPractice = "global-practice", e.GoalCasual = "daily-goal-10", e.GoalIntense = "daily-goal-50", e.GoalRegular = "daily-goal-20", e.GoalSerious = "daily-goal-30", e.GuidebookButton = "guidebook-button", e.GuidebookHeader = "guidebook-header", e.HaveAccount = "have-account", e.HdyhauFriends = "hdyhau-friendsOrFamily", e.HdyhauNews = "hdyhau-newsArticleOrBlog", e.HdyhauOnline = "hdyhau-onlineAds", e.HdyhauOther = "hdyhau-other", e.HdyhauRadio = "hdyhau-radio", e.HdyhauSearch = "hdyhau-webSearch", e.HdyhauSocial = "hdyhau-socialMedia", e.HdyhauTv = "hdyhau-tv", e.HeartsIntroContinueButton = "hearts-intro-continue-button", e.HeartsMenu = "hearts-menu", e.HintPopover = "hint-popover", e.HintToken = "hint-token", e.Home = "home", e.IntroPopover = "intro-popover", e.InvalidFormField = "invalid-form-field", e.LanguageCard = "language-card", e.Leaderboard = "leaderboard", e.LeaderboardsLocked = "leaderboards-locked", e.LeaderboardsOpenButton = "leaderboards-open", e.LeaderboardsPopover = "leaderboards-popover", e.LearnWithPlus = "learn-with-plus", e.LegendaryEarnedSlide = "legendary-earned-slide", e.LegendaryNodeButton = "legendary-node-button", e.LegendaryPaywallLingotsCTA = "legendary-paywall-lingots-cta", e.LegendarySessionEndContinue = "legendary-session-end-continue", e.LegendaryStartButton = "legendary-start-button", e.LingotMenu = "lingot-menu", e.LingotStat = "lingot-stat", e.LoggedOutTopbar = "logged-out-topbar", e.LoginWithFacebook = "login-with-facebook", e.LoginWithGoogle = "login-with-google", e.LongscrollTitle = "longscroll-title", e.MilestoneStreakFreezeSlide = "milestone-streak-freeze-slide", e.MobileApps = "mobile-apps", e.NotificationButton = "notification-button", e.NotificationDrawerNoThanksButton = "notification-drawer-no-thanks-button", e.NyButton = "ny-button", e.NyPromo = "ny-promo", e.PasswordInput = "password-input", e.PlayerNext = "player-next", e.PlayerPracticeAgain = "player-practice-again", e.PlayerSkip = "player-skip", e.PlayerToggleKeyboard = "player-toggle-keyboard", e.PlusChecklistTitle = "plus-checklist-title", e.PlusCloseX = "plus-close-x", e.PlusContinue = "plus-continue", e.PlusNoThanks = "plus-no-thanks", e.PlusOfferButton = "plus-offer-button", e.PlusOfferLogo = "plus-offer-logo", e.PlusPlans = "plus-plans", e.PlusTimelineIcon = "plus-timeline-icon", e.PlusViewAllPlans = "plus-view-all-plans", e.PracticeHubAdContinueButton = "practice-hub-ad-continue-button", e.PracticeHubAdNoThanksButton = "practice-hub-ad-no-thanks-button", e.PracticeHubCollectionButton = "practice-hub-collection-button", e.PracticeHubCollectionHeader = "practice-hub-collection-header", e.PracticeHubFeatureSessionCTA = "practice-hub-feature-session-cta", e.PrivacyPersonalizedAds = "privacy-personalized-ads", e.PrivacyPublicProfile = "privacy-public-profile", e.PriorProficiencyCard = "prior-proficiency-card", e.ProfileHeaderBlockButton = "profile-header-block-button", e.ProfileHeaderPopover = "profile-header-popover", e.ProfileHeaderUnblockButton = "profile-header-unblock-button", e.ProfileUsername = "profile-username", e.PurchaseButton = "purchase-button", e.PurchaseIcon = "purchase-icon", e.PurchaseStepActive = "purchase-step-active", e.QuitButton = "quit-button", e.RegisterButton = "register-button", e.RemoveMember = "remove-member", e.Reset = "reset", e.ResetPassword = "reset-password", e.RewardSlide = "reward-slide", e.SaveButton = "save-button", e.SelectMemberCheckbox = "select-member-checkbox", e.SessionCompleteSlide = "session-complete-slide", e.SessionDuo = "session-duo", e.SessionSplashTitle = "session-splash-title", e.SettingsAccount = "settings-account", e.SettingsCoach = "settings-coach", e.SettingsCourses = "settings-courses", e.SettingsNotifications = "settings-notifications", e.SettingsPassword = "settings-password", e.SettingsPrivacy = "settings-privacy", e.SettingsProfilePictureLabel = "settings-profile-picture-label", e.SettingsSchools = "settings-schools", e.SettingsSound = "settings-sound", e.SettingsSuper = "settings-super", e.ShopSection = "shop-section", e.SignInButton = "sign-in-button", e.SignInJuicy = "sign-in-juicy", e.SignUpButton = "sign-up-button", e.SignUpLink = "sign-up-link", e.SkillPath = "skill-path", e.SkillPathLevel = "skill-path-level", e.SkillPathLevelLockedButton = "skill-path-level-locked-button", e.SkillPathState = "skill-path-state", e.SkillPathTooltipUnitTest = "skill-path-tooltip-unit-test", e.SkillPathUnit = "skill-path-unit", e.SkillPathUnitTest = "skill-path-unit-test", e.PlacementTestResultsSlide = "placement-test-result-slide", e.SocialPanelFindFriends = "social-panel-find-friends", e.SocialPanelInviteFriends = "social-panel-invite-friends", e.SoundSettings = "sound-settings", e.StartBasics = "start-basics", e.StartPlacement = "start-placement", e.StoriesChoice = "stories-choice", e.StoriesElement = "stories-element", e.StoriesPlayerContinue = "stories-player-continue", e.StoriesPlayerDone = "stories-player-done", e.StoriesTextInput = "stories-text-input", e.StoryStart = "story-start", e.StoryStartButton = "story-start-button", e.StoryTitle = "story-title", e.StreakExplainerSlide = "streak-explainer-slide", e.StreakFreezeSlide = "streak-freeze-slide", e.StreakGoalTitle = "streak-goal-title", e.StreakMenu = "streak-menu", e.StreakPanel = "streak-panel", e.StreakPanelHeader = "streak-panel-header", e.StreakSlide = "streak-slide", e.StreakStat = "streak-stat", e.StreakWagerSlide = "streak-wager-slide", e.Submit = "submit", e.SuperMenu = "super-menu", e.SurveyBrain = "brain", e.SurveyCulture = "culture", e.SurveyFamily = "family", e.SurveyFun = "fun", e.SurveyOther = "other", e.SurveySchool = "school", e.SurveyTravel = "travel", e.SurveyWork = "work", e.TrialReminder = "trial-reminder", e.UnitTestResultsSlide = "unit-test-results-slide", e.UseAnotherAccount = "use-another-account", e.UseAnotherCardRadio = "use-another-card", e.UsernameInput = "username-input", e.UserSearchEmptyState = "user-search-empty-state", e.UserSearchInput = "user-search-input", e.WordBank = "word-bank"
                }(s || (s = {}))
        },
        59815: (e, t, a) => {
            "use strict";
            a.d(t, {
                $K: () => n,
                Di: () => i,
                Wp: () => o,
                pY: () => s,
                w: () => r
            });
            class s extends Error {
                constructor(e) {
                    const t = new.target.prototype;
                    super(e), Object.setPrototypeOf(this, t)
                }
            }
            class n extends s {
                constructor() {
                    super("Aborted by user")
                }
            }
            class r extends s {}
            class i extends s {
                constructor() {
                    super("Encountered stale data")
                }
            }
            const o = e => "CSS_CHUNK_LOAD_FAILED" === e.code || "ChunkLoadError" === e.name
        },
        99773: (e, t, a) => {
            "use strict";
            a.d(t, {
                RM: () => u,
                Sg: () => g,
                rn: () => d
            });
            var s = a(80254);
            const n = {
                    conditions: ["control", "experiment"],
                    contexts: [void 0]
                },
                r = {
                    connect_enable_social_underage_v2: n,
                    connect_friends_quests_gifting_2: {
                        conditions: ["control", "experiment", "experiment_copy"],
                        contexts: [void 0]
                    },
                    gweb_diamond_tournament_dogfooding: n,
                    minfra_web_stripe_setup_intent: n,
                    mochi_web_family_add_home_message: n,
                    mochi_web_family_plan_copysolidate: n,
                    mochi_web_fp_in_app_invites_v2: n,
                    nurr_web_no_placement_placement_v2: n,
                    path_web_course_complete_slides: n,
                    path_web_daily_refresh_legendary: n,
                    path_web_duoradio_audio_controls_redesign_v2: n,
                    path_web_sections_overview: n,
                    path_web_smec: n,
                    retention_web_copysolidate_sf: n,
                    retention_web_fix_lapsed_banner_shows: n,
                    retention_web_streak_freeze_from_duo: {
                        conditions: ["control", "experiment"],
                        contexts: ["home_message", "session_end"]
                    },
                    spack_web_animation_checklist: n,
                    spack_web_copysolidate_hearts: n,
                    spack_web_copysolidate_super_longscroll: n,
                    spack_web_delay_cta_long_scroll: n,
                    spack_web_fp_upgrade_hook: n,
                    spack_web_super_promo_d12_ft_ineligible: n,
                    spack_web_super_promo_d12_pf2_v2: n,
                    tsl_web_tournament_port: n,
                    web_delight_sync_settings: n,
                    writing_adjust_practice_xp_v2: {
                        conditions: ["control", "experiment"],
                        contexts: ["frontend"]
                    },
                    writing_web_character_bingo_hearts: n
                },
                i = {
                    conditions: ["control", "experiment"],
                    contexts: [null]
                },
                o = {
                    conditions: ["control", "experiment"],
                    contexts: [null]
                },
                l = {
                    path_web_smec_new_users: i
                },
                c = {
                    placeholder_experiment: o,
                    sfeat_web_clientside_experiment_test_fam: o,
                    sfeat_web_clientside_experiment_test_fam_v2: i
                },
                d = s.XP(r).sort().join(","),
                u = [...s.XP(c), ...s.XP(l)].filter((e => "placeholder_experiment" !== e)),
                g = u.join(",")
        },
        81149: (e, t, a) => {
            "use strict";
            a.d(t, {
                LK: () => S,
                PI: () => C,
                Uy: () => w,
                cu: () => T,
                j6: () => y,
                nY: () => b,
                xz: () => k
            });
            var s = a(5029),
                n = a(54174),
                r = a(97544),
                i = a(72398),
                o = a(54412),
                l = a(17135),
                c = a(64115),
                d = a(53229),
                u = a(60752),
                g = a(58576),
                p = a(30839),
                m = a(18804),
                h = a(79465),
                v = a(16086);
            a(20028);
            const _ = e => (t, ...a) => {
                var s;
                if ((0, c.Au)()) {
                    const e = (0, d.vl)();
                    if (e[t]) return (0, i.qr)(e[t], t, void 0, {
                        queryOverride: !0
                    }), e[t];
                    const a = null === (s = (0, p.rV)(p.Qt.DebugExperimentOverrides)) || void 0 === s ? void 0 : s[t];
                    if (a) return (0, i.qr)(a, t, void 0, {
                        localOverride: !0
                    }), `${a}`
                }
                return e(t, ...a)
            };
            let f = {};
            const S = () => {
                    f = {}
                },
                y = _(((e, t) => {
                    const a = `${e} ${t}`;
                    if (a in f) {
                        const [s, n] = f[a];
                        if ((0, l.Zo)() < n) return (0, i.qr)(s, e, t, {
                            cache: !0
                        }), s
                    }
                    const s = ((e, t) => {
                        const a = t,
                            s = (null !== (o = null === (i = (0, m.globalGetState)()) || void 0 === i ? void 0 : i.user.experiments) && void 0 !== o ? o : {})[e];
                        var i, o;
                        if (!s) return "control";
                        if (!s.eligible) return s.condition;
                        const l = void 0 !== a && !s.contexts.includes(a);
                        if (!s.treated || l) {
                            const t = (0, m.globalGetState)();
                            t && (0, n.d)(t) ? (async () => {
                                const t = await (0, u.b)();
                                await t.add("submittableRequests", {
                                    request: {
                                        contexts: a ? [a] : [],
                                        experimentName: e
                                    },
                                    type: "experiment-treatment"
                                })
                            })() : r.Vi.treatUser((0, v.Jb)(), e, {
                                contexts: a ? [a] : [],
                                treated: !0
                            }), window.setTimeout((() => (0, m.globalDispatch)({
                                context: a,
                                name: e,
                                treated: !0,
                                type: "UPDATE_EXPERIMENT_RECORD"
                            })), 0), (0, h.track)("treatment_record_updated", {
                                experiment_name: e
                            })
                        }
                        return s.condition
                    })(e, t);
                    return f[a] = [s, "web_delight_sync_settings" === e ? 1 / 0 : (0, l.Zo)() + 30], (0, i.qr)(s, e, t), s
                })),
                E = e => {
                    const t = (0, s.sha256)(e);
                    return parseInt(t.slice(t.length - 8), 16)
                },
                b = (e, t, a = [null]) => {
                    const s = k(),
                        n = s[e] || {
                            condition: t,
                            contexts: a
                        };
                    n.condition = t, s[e] = n, (0, p.LS)(p.Qt.LoggedOutExperiments, s)
                },
                I = (e, t, a, s = [null]) => {
                    b(e, t, s), (0, h.track)("counterfactuals_client_treat", {
                        condition: t,
                        context: a,
                        experiment_name: e,
                        is_owner_only: void 0
                    })
                },
                w = e => {
                    const t = k();
                    delete t[e], (0, p.LS)(p.Qt.LoggedOutExperiments, t)
                },
                k = () => (0, p.rV)(p.Qt.LoggedOutExperiments) || {},
                T = _(((e, t, a, s) => {
                    (0, v.Pc)() && console.warn(`Logged in users should not usually be treated for logged out experiments! (${e})`);
                    const n = k()[e],
                        r = a[e];
                    if (!r && !n) return (0, i.qr)(null != s ? s : "control", e, t, {
                        default: !0,
                        loggedOut: !0
                    }), null != s ? s : "control";
                    if (r && void 0 !== r.condition) return (0, i.qr)(r.condition, e, t, {
                        loggedOut: !0
                    }), r.condition;
                    if (n) {
                        const a = n.contexts;
                        return a.includes(t) || I(e, n.condition, t, [...a, t]), (0, i.qr)(n.condition, e, t, {
                            loggedOut: !0
                        }), n.condition
                    }
                    const l = r.conditions;
                    if (!(E(`${(0,o.ej)(o.Vj.LoggedOutUUID)}-${e}`) / 2 ** 32 < r.rollout)) {
                        const a = l[0];
                        return (0, i.qr)(a, e, t, {
                            loggedOut: !0,
                            notInRollout: !0
                        }), a
                    }
                    const c = l[E(`${(0,o.ej)(o.Vj.LoggedOutUUID)}-${e}-condition`) % l.length];
                    return I(e, c, t, [t]), (0, i.qr)(c, e, t, {
                        loggedOut: !0
                    }), c
                })),
                C = (e, t) => {
                    const a = Object.values(e);
                    return a.every((e => e === a[0])) ? a[0] : e[t()]
                },
                R = (e, t, a, s, n = [null]) => {
                    b(e, t, n), (0, h.track)("counterfactuals_client_treat", {
                        condition: t,
                        context: a,
                        experiment_name: e,
                        is_owner_only: !1
                    }), (0, h.trackRawEvent)("counterfactuals_client_treat", {
                        condition: t,
                        context: a,
                        distinct_id: s,
                        experiment_name: e,
                        is_owner_only: !0,
                        user_id: s
                    })
                };
            _(((e, t, a, s, n, r, o) => {
                const l = k()[e],
                    c = a[e];
                if (void 0 === n || void 0 === s) return (0, g.vU)(`Users not in a family plan should not usually be treated for family plan experiments! (${e})`, {
                    data: {
                        experimentName: e
                    },
                    once: !0
                }), c.conditions[0];
                if (!c && !l) return (0, i.qr)(null != o ? o : "control", e, t, {
                    default: !0,
                    loggedOut: !0,
                    user_id: r
                }), null != o ? o : "control";
                if (c && void 0 !== c.condition) return c.condition;
                if (l) {
                    const a = l.contexts;
                    return a.includes(t) || R(e, l.condition, t, n, [...a, t]), l.condition
                }
                const d = E(`${e}_${s}`) % 65536;
                if (!(d / 65536 < c.rollout)) {
                    const a = c.conditions[0];
                    return (0, i.qr)(a, e, t, {
                        loggedOut: !0,
                        notInRollout: !0,
                        user_id: r
                    }), a
                }
                const u = c.conditions[d % c.conditions.length];
                return R(e, u, t, n, [t]), (0, i.qr)(u, e, t, {
                    loggedOut: !0,
                    notInRollout: !1,
                    user_id: r
                }), u
            }))
        },
        41679: (e, t, a) => {
            "use strict";
            a.d(t, {
                E6: () => h,
                Jb: () => v,
                L8: () => g,
                hP: () => p,
                k3: () => S
            });
            var s = a(80254),
                n = a(86518),
                r = a(97544),
                i = a(70326),
                o = a(67899),
                l = a(53229),
                c = a(6986),
                d = a(79465),
                u = a(16086);
            const g = s.IH((() => new Promise(((e, t) => {
                    window.fbAsyncInit = async () => {
                        window.FB.init({
                            appId: "234536436609303",
                            version: "v7.0",
                            xfbml: !0
                        }), window.FB.AppEvents.logPageView(), await v(), e()
                    }, (async () => {
                        try {
                            await (0, l.lh)("//connect.facebook.net/en_US/sdk.js", "facebook-jssdk")
                        } catch {
                            t(Error("Cannot load facebook SDK"))
                        }
                    })()
                })))),
                p = async () => (await g(), (await _()).accessToken);
            let m = !1;
            const h = () => m,
                v = () => new Promise((e => {
                    window.FB.getLoginStatus((t => {
                        "connected" === t.status ? (console.log("User already granted Facebook-access"), e(t.authResponse)) : (console.log("User didn't grant Facebook-access yet"), e(void 0))
                    }))
                })),
                _ = async (e = [], t = !1) => {
                    if (m = !0, !t) {
                        const e = await v();
                        if (e) return e
                    }
                    return new Promise(((t, a) => {
                        window.FB.login((e => {
                            e.authResponse ? (console.log("Facebook-access granted"), t(e.authResponse)) : (console.log("User closed Facebook popup or denied access"), a(Error("User closed Facebook popup or denied access")))
                        }), {
                            scope: ["email", ...e].join(",")
                        })
                    }))
                },
                f = () => new Promise((e => {
                    window.FB.api("/me", {
                        fields: "name,email,id"
                    }, e)
                })),
                S = async ({
                    allowLanguagelessUser: e = !1,
                    dispatch: t,
                    history: a,
                    onLoginSuccess: s,
                    redirectPath: l,
                    via: g
                }) => {
                    var m, h;
                    const v = await p();
                    try {
                        return await (async ({
                            dispatch: e,
                            facebookToken: t,
                            history: a,
                            onLoginSuccess: s,
                            redirectPath: r
                        }) => {
                            await (0, i.x4)({
                                facebookToken: t
                            });
                            const o = e((0, n.eY)({
                                onUserRetrieved: e => {
                                    (0, c.oV)("social", e)
                                },
                                urlForStringsReload: r
                            }));
                            return console.log("Logging into existing account"), await o, s ? s() : a.push(r), !0
                        })({
                            dispatch: t,
                            facebookToken: v,
                            history: a,
                            onLoginSuccess: s,
                            redirectPath: l
                        })
                    } catch (a) {
                        if (!(0, r.Hx)(a) || 401 !== (null === (m = a.response) || void 0 === m ? void 0 : m.status) && 403 !== (null === (h = a.response) || void 0 === h ? void 0 : h.status)) throw a;
                        if ((0, u.Pc)()) {
                            const e = await f();
                            await t((0, n.DZ)({
                                email: e.email,
                                facebookToken: v,
                                name: e.name
                            })), await t((0, n.eY)()), (0, d.track)("register", {
                                successful: !0,
                                through: "facebook",
                                via: g
                            }), (0, o.SX)({
                                event: "sign_up"
                            })
                        } else if (e) {
                            const e = await f();
                            await (0, i.$C)({
                                email: e.email,
                                name: e.name
                            }), await t((0, n.eY)()), (0, d.track)("register", {
                                successful: !0,
                                through: "facebook",
                                via: g
                            }), (0, o.SX)({
                                event: "sign_up"
                            })
                        }
                        return !1
                    }
                }
        },
        20821: (e, t, a) => {
            "use strict";
            a.d(t, {
                Q: () => s
            });
            const s = (e, t = 0) => {
                let a, s = [];
                var n;
                return n = n => {
                    s.push(n), void 0 === a && (a = setTimeout((() => {
                        const t = s.filter((({
                            resolver: e
                        }) => !e.signal.aborted));
                        a = void 0, s = [], t.length > 0 && e(t)
                    }), t))
                }, e => t => new Promise(((a, s) => {
                    n({
                        params: e,
                        resolver: {
                            reject: s,
                            resolve: a,
                            signal: t
                        }
                    })
                }))
            }
        },
        94171: (e, t, a) => {
            "use strict";
            a.d(t, {
                Nh: () => P,
                wS: () => D,
                Dw: () => M,
                py: () => O,
                xH: () => x,
                Mb: () => A,
                RL: () => C,
                rl: () => R,
                fw: () => F,
                N7: () => L,
                ed: () => Z,
                ET: () => U,
                Ck: () => z,
                qh: () => j,
                WV: () => $,
                Fy: () => W,
                _Q: () => H,
                ML: () => G,
                qt: () => q,
                Vz: () => B,
                JD: () => V,
                BQ: () => Q
            });
            const s = a.p + "images/goals/7170947038eaa6cba13c7ee7d6c14e35.svg",
                n = a.p + "images/goals/b5dc107d1cf9cea867391174a8f3185b.svg",
                r = a.p + "images/goals/2f657380071df22fcb537fd294a42ae7.svg",
                i = a.p + "images/goals/645d8ee266b41bb009986bcf057bdddd.svg",
                o = a.p + "images/goals/d50a64c07d6a558abecc5eaf8481cd80.svg";
            var l = a(20770);
            const c = a.p + "images/goals/f874b6952352c8466b192d0a0d6ddc28.svg",
                d = a.p + "images/goals/daa802c6eebc41858b704ee001d05f0c.svg",
                u = a.p + "images/goals/5ac5f9a9c076d81536ee0f85ac88e4c2.svg",
                g = a.p + "images/goals/d8e2b76c5f925390f22c39c17f752e84.svg",
                p = a.p + "images/goals/b39589bb4696d406be1ec194e3550d29.svg",
                m = a.p + "images/goals/81ee0dbf33ffd889da4f899c2ec6f36b.svg",
                h = a.p + "images/goals/a9dcc1aaf98e3e6a030e243415a28850.svg",
                v = a.p + "images/goals/e0d5a67550d87239e9b604e7ba9603b6.svg",
                _ = a.p + "images/goals/00b59b3190fddbc40ae4eb1a1b81765f.svg",
                f = a.p + "images/goals/6c46b3c45da29cd15b5c797f908e07d3.svg",
                S = a.p + "images/goals/59de0be96dd57b30e3e44f9e1396827e.svg",
                y = a.p + "images/goals/dd8f074a2a72986c2c0b115623c6dc57.svg";
            var E = a(17135),
                b = a(64115),
                I = a(68903),
                w = a(8654),
                k = a(55829),
                T = a(81621);
            const C = 216e5,
                R = 216e6,
                L = ["hiFlex", "hiDreamTeam", "hiHighFive", "hiAllStar"],
                A = ["nudgeFlex", "nudgeClaws", "nudgeHighFive", "nudgeSadDuo"],
                P = 30,
                D = "friends_quest_complete",
                N = "FRIENDS_QUESTS",
                O = 20,
                x = "xp_boost_15_gift",
                F = 2,
                M = {
                    avatarUrl: T.tU,
                    displayName: "Sample User",
                    historicalStats: [{
                        goalCategory: "FRIENDS_QUEST",
                        streak: 2
                    }],
                    progressIncrements: [100, 0, 0, 0, 0],
                    userId: 0
                },
                U = () => {
                    const e = (0, b.ky)("debugFriendsQuestState");
                    if (e && Object.values(k.S).some((t => t === e))) return {
                        friendProgress: M,
                        goalId: "sample_xp_goal",
                        metric: "XP",
                        ownProgress: 150,
                        questId: "sample_xp_quest",
                        questPoints: 5,
                        status: e,
                        threshold: 500,
                        totalProgress: 250,
                        winStreak: 1
                    }
                },
                H = e => (0, E.oE)({
                    currentTime: e,
                    targetHour: 17,
                    targetWeekday: 0
                }),
                G = e => (0, E.oE)({
                    currentTime: e,
                    targetHour: 17,
                    targetWeekday: 2
                }),
                V = e => H(e) < G(e),
                B = (e, t) => void 0 !== t && V(e) && t.totalProgress < t.threshold,
                z = (e, t) => void 0 !== e ? e.totalProgress >= e.threshold || e.status === k.S.FINISHED ? "belowDailyQuest" : "aboveDailyQuest" : 0 === t ? "none" : "belowDailyQuest",
                Z = e => {
                    var t;
                    return null === (t = null == e ? void 0 : e.quests) || void 0 === t ? void 0 : t.find((e => e.goalCategory === N && [k.S.ACTIVE, k.S.FINISHED].includes(e.questState)))
                },
                W = e => {
                    var t, a;
                    return null !== (a = null === (t = e.find((e => e.goalCategory === N))) || void 0 === t ? void 0 : t.streak) && void 0 !== a ? a : 0
                },
                $ = (e, t) => {
                    switch (e) {
                        case "LESSONS":
                            return (0, w._i)(30518, {
                                threshold: t
                            });
                        case "NINETY_ACCURACY_LESSONS":
                            return (0, w._i)(35010, {
                                threshold: t
                            });
                        case "PERFECT_LESSONS":
                            return (0, w._i)(35007, {
                                threshold: t
                            });
                        case "XP":
                            return (0, w._i)(35008, {
                                threshold: t
                            });
                        default:
                            throw (0, I.RJ)(e), Error("Unsupported friends quest metric")
                    }
                },
                j = (e, t) => {
                    switch (e) {
                        case "LESSONS":
                        case "NINETY_ACCURACY_LESSONS":
                            return (0, w._i)(35909, {
                                num: t
                            });
                        case "PERFECT_LESSONS":
                            return (0, w._i)(35759, {
                                num: t
                            });
                        case "XP":
                            return (0, w._i)(28544, {
                                num: t
                            });
                        default:
                            throw (0, I.RJ)(e), Error("Unsupported friends quest metric")
                    }
                },
                q = ({
                    isActive: e = !0,
                    isDark: t = !1,
                    nudgeType: a
                }) => {
                    switch (a) {
                        case "hiAllStar":
                            return e ? u : t ? c : d;
                        case "hiDreamTeam":
                            return e ? m : t ? g : p;
                        case "hiFlex":
                        case "nudgeFlex":
                            return e ? r : t ? s : n;
                        case "hiHighFive":
                        case "nudgeHighFive":
                            return e ? l : t ? i : o;
                        case "nudgeClaws":
                            return e ? _ : t ? h : v;
                        case "nudgeSadDuo":
                            return e ? y : t ? f : S;
                        default:
                            return (0, I.RJ)(a), ""
                    }
                },
                Q = e => (0, T.VY)(e) && !(e.privacySettings || []).includes("DISABLE_FRIENDS_QUESTS")
        },
        94358: (e, t, a) => {
            "use strict";
            a.d(t, {
                IM: () => u,
                JI: () => l,
                nP: () => d,
                sT: () => g
            });
            var s = a(41461),
                n = a(93746),
                r = a(79465);
            let i, o = !1,
                l = !1;
            const c = new Promise((e => {
                i = e
            }));
            window._fs_ready = () => i();
            const d = () => {
                    var e;
                    try {
                        return null !== (e = s.Hr(!0)) && void 0 !== e ? e : ""
                    } catch {
                        return ""
                    }
                },
                u = async e => {
                    s.S1({
                        debug: !1,
                        devMode: !1,
                        orgId: "QZHJ3"
                    }), o = !0, s.yV(`${e}`, {
                        ui_language_str: n.h9
                    }), s.ur(), l = !0, await c;
                    const t = s.Hr();
                    t && (0, r.track)("fullstory_record_start", {
                        url: t
                    })
                },
                g = () => {
                    o && (s.IG(), l = !1)
                }
        },
        41831: (e, t, a) => {
            "use strict";
            a.d(t, {
                nU: () => R,
                bf: () => T,
                xD: () => C,
                Ch: () => N,
                Oj: () => L,
                oh: () => A,
                VR: () => $,
                gl: () => x,
                wh: () => M,
                ng: () => O,
                uT: () => U,
                FF: () => P,
                cV: () => Q,
                Ul: () => K,
                Oy: () => Y,
                wU: () => B,
                iL: () => j,
                n0: () => D,
                ie: () => F,
                B_: () => J,
                i3: () => V
            });
            var s = a(80254),
                n = a(73520);
            const r = a.p + "images/goals/39f13d2de304cad2ac2f88b31a7e2ff4.svg",
                i = a.p + "images/goals/2b5a211d830a24fab92e291d50f65d1d.svg",
                o = a.p + "images/goals/8787ab04a1279f1c7ca12201834e90f7.svg",
                l = a.p + "images/goals/1cadcf84c054b52aa7eaaa794a7d64bf.svg",
                c = a.p + "images/goals/a0cb3348a6747c752f7c8270b0af0b69.svg",
                d = a.p + "images/goals/974e284761265b0eb6c9fd85243c5c4b.svg",
                u = a.p + "images/goals/b519a0beabb2deedd5767f987e3f0a74.svg",
                g = a.p + "images/goals/62bb241121ae018b28240eebffb9fc4a.svg";
            var p = a(17135),
                m = a(64115),
                h = a(68903),
                v = a(8654),
                _ = a(58576),
                f = a(23275),
                S = a(89260),
                y = a(79465),
                E = a(11811),
                b = a(81621),
                I = a(97106);
            const w = ["daily_goal_daily_quest", "perfect_lessons_core_daily_quest", "perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_hard_daily_quest", "combo_xp_core_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_core_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest", "speak_challenges_hard_daily_quest", "listen_challenges_hard_daily_quest", "time_spent_core_daily_quest", "time_spent_hard_daily_quest", "extend_streak_daily_quest"],
                k = ["XP", "LESSONS", "NINETY_ACCURACY_LESSONS", "PERFECT_LESSONS", "QUESTS", "EIGHTY_ACCURACY_LESSONS", "COMBO_XP", "FIVE_CORRECT_IN_A_ROW", "TEN_CORRECT_IN_A_ROW", "SPEAK_CHALLENGES", "LISTEN_CHALLENGES", "EXTEND_STREAK", "START_STREAK", "SECONDS_SPENT_LEARNING"],
                T = ["DAILY_QUEST_FIRST", "DAILY_QUEST_SECOND", "DAILY_QUEST_THIRD"],
                C = ["DAILY", "CORE", "HARD"],
                R = "2023_11_monthly_challenge",
                L = (e, t) => {
                    const a = {
                        metricUpdates: []
                    };
                    return k.forEach((s => {
                        const n = ((e, t, a) => {
                            const s = e.challenges.filter((e => !e.skipped)),
                                n = (r = s).reduce(((e, t) => e + (t.correct ? 1 : 0)), 0) / r.length * 100;
                            var r;
                            switch (t) {
                                case "XP":
                                case "QUESTS":
                                    return;
                                case "LESSONS":
                                    return [E.FF.SectionTest, E.FF.UnitTest].includes(e.type) && e.failed ? void 0 : {
                                        metric: t,
                                        quantity: 1
                                    };
                                case "NINETY_ACCURACY_LESSONS":
                                    return n >= 90 ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "EIGHTY_ACCURACY_LESSONS":
                                    return n >= 80 ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "PERFECT_LESSONS":
                                    return n >= 100 ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "COMBO_XP":
                                    return e.maxInLessonStreak ? {
                                        metric: t,
                                        quantity: (0, I.CT)(e.challenges.length, e.maxInLessonStreak)
                                    } : void 0;
                                case "FIVE_CORRECT_IN_A_ROW":
                                    return e.maxInLessonStreak && e.maxInLessonStreak >= 5 ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "TEN_CORRECT_IN_A_ROW":
                                    return e.maxInLessonStreak && e.maxInLessonStreak >= 10 ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "SPEAK_CHALLENGES":
                                    {
                                        const e = (0, S.bc)();
                                        return {
                                            metric: t,
                                            quantity: s.filter((t => e.includes(t.type) && t.correct)).length
                                        }
                                    }
                                case "LISTEN_CHALLENGES":
                                    {
                                        const e = (0, S.tq)();
                                        return {
                                            metric: t,
                                            quantity: s.filter((t => e.includes(t.type) && t.correct)).length
                                        }
                                    }
                                case "EXTEND_STREAK":
                                    return a.streakExtended ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "START_STREAK":
                                    return a.streakStarted ? {
                                        metric: t,
                                        quantity: 1
                                    } : void 0;
                                case "SECONDS_SPENT_LEARNING":
                                    return a.timeSpent ? {
                                        metric: t,
                                        quantity: a.timeSpent
                                    } : void 0;
                                default:
                                    return void(0, h.RJ)(t)
                            }
                        })(e, s, t);
                        n && a.metricUpdates.push(n)
                    })), a
                },
                A = (e, t) => {
                    const a = {
                            metricUpdates: []
                        },
                        s = e.score / e.maxScore * 100;
                    return a.metricUpdates = k.map((e => {
                        switch (e) {
                            case "LESSONS":
                                return {
                                    metric: e,
                                    quantity: 1
                                };
                            case "EIGHTY_ACCURACY_LESSONS":
                                return {
                                    metric: e,
                                    quantity: s >= 80 ? 1 : 0
                                };
                            case "NINETY_ACCURACY_LESSONS":
                                return {
                                    metric: e,
                                    quantity: s >= 90 ? 1 : 0
                                };
                            case "PERFECT_LESSONS":
                                return {
                                    metric: e,
                                    quantity: s >= 100 ? 1 : 0
                                };
                            case "EXTEND_STREAK":
                                return t.streakExtended ? {
                                    metric: e,
                                    quantity: 1
                                } : void 0;
                            case "START_STREAK":
                                return t.streakStarted ? {
                                    metric: e,
                                    quantity: 1
                                } : void 0;
                            case "SECONDS_SPENT_LEARNING":
                                return t.timeSpent ? {
                                    metric: e,
                                    quantity: t.timeSpent
                                } : void 0;
                            case "XP":
                            case "QUESTS":
                            case "COMBO_XP":
                            case "FIVE_CORRECT_IN_A_ROW":
                            case "TEN_CORRECT_IN_A_ROW":
                            case "SPEAK_CHALLENGES":
                            case "LISTEN_CHALLENGES":
                                return;
                            default:
                                return void(0, h.RJ)(e)
                        }
                    })).filter(h.$K), a
                },
                P = e => {
                    if (void 0 !== e.period.oneOff) {
                        const t = (0, p.Ux)(),
                            a = (0, p.$$)(e.period.oneOff.start.year, e.period.oneOff.start.month - 1, e.period.oneOff.start.day),
                            s = (0, p.$$)(e.period.oneOff.end.year, e.period.oneOff.end.month - 1, e.period.oneOff.end.day);
                        if (a <= t && s > t) return !0
                    } else if (e.period.recurring) {
                        const t = (0, p.Ux)(),
                            a = (0, p.$$)(e.period.recurring.start.year, e.period.recurring.start.month - 1, e.period.recurring.start.day),
                            s = (0, p.$$)(e.period.recurring.until.year, e.period.recurring.until.month - 1, e.period.recurring.until.day);
                        if (a <= t && s > t) return !0
                    }
                    return !1
                },
                D = (e, {
                    includeListening: t,
                    includeSpeaking: a,
                    path: s,
                    streak: n,
                    xpSummaries: r
                }) => {
                    var i, o;
                    const l = (0, p.Ux)();
                    switch (l.setDate(l.getDate() - 1), e.metric) {
                        case "XP":
                        case "LESSONS":
                        case "PERFECT_LESSONS":
                        case "NINETY_ACCURACY_LESSONS":
                        case "EIGHTY_ACCURACY_LESSONS":
                        case "COMBO_XP":
                        case "FIVE_CORRECT_IN_A_ROW":
                        case "TEN_CORRECT_IN_A_ROW":
                        case "SECONDS_SPENT_LEARNING":
                            return !0;
                        case "SPEAK_CHALLENGES":
                            return a && void 0 !== s && (0, f.U8)({
                                path: s
                            }) > 0;
                        case "LISTEN_CHALLENGES":
                            return t;
                        case "EXTEND_STREAK":
                            return n >= 1 && null !== (o = null === (i = null == r ? void 0 : r[(0, p.cz)(l)]) || void 0 === i ? void 0 : i.frozen) && void 0 !== o && o;
                        case "QUESTS":
                        case "START_STREAK":
                            return !1;
                        default:
                            return (0, h.RJ)(e.metric), !1
                    }
                },
                N = ({
                    assignedQuestGoalIds: e,
                    questEligibilityParams: t,
                    schema: a,
                    slotType: s
                }) => {
                    const n = (({
                        assignedQuestGoalIds: e,
                        questEligibilityParams: t,
                        schema: a,
                        slotType: s
                    }) => {
                        const n = e.flatMap((e => H(e)));
                        return a.filter((a => "DAILY_QUESTS" === a.category && D(a, t) && P(a) && !e.some((e => a.goalId === e)) && !n.some((e => e === a.goalId)) && G(s).some((e => e === a.goalId))))
                    })({
                        assignedQuestGoalIds: e,
                        questEligibilityParams: t,
                        schema: a,
                        slotType: s
                    });
                    if (0 === n.length) return void(0, _.Kp)(`No eligible quests found for slot type ${s}`);
                    if ((0, m.gQ)("debugChooseSpecificDailyQuest")) {
                        const e = (0, m.ky)("debugChooseSpecificDailyQuest");
                        if (n.some((t => t.goalId === e))) return e
                    }
                    let r = ((e, t) => "DAILY" === e && void 0 !== t.find((e => "extend_streak_daily_quest" === e.goalId)) ? "extend_streak_daily_quest" : t[Math.floor(Math.random() * t.length)].goalId)(s, n);
                    return r
                },
                O = (e, t) => {
                    var a, s;
                    return null !== (s = null === (a = t.difficultyTiers) || void 0 === a ? void 0 : a[e].tiers[0]) && void 0 !== s ? s : t.threshold
                },
                x = ({
                    availableQuests: e,
                    oldProgress: t,
                    difficulty: a,
                    updatedProgress: s
                }) => {
                    const {
                        newlyCompletedQuests: n,
                        totalCompletedQuests: r
                    } = z({
                        difficulty: a,
                        oldProgress: t,
                        progress: s,
                        quests: e
                    }), i = {
                        availableQuests: e,
                        difficulty: a,
                        oldProgress: t
                    };
                    return n > 0 ? { ...i,
                        numQuestsCompleted: r,
                        type: "dailyQuestComplete"
                    } : e.some((e => {
                        var n, r;
                        const i = O(a, e);
                        return F(e.goalId, null !== (n = s[e.goalId]) && void 0 !== n ? n : 0) >= i / 2 && F(e.goalId, null !== (r = t[e.goalId]) && void 0 !== r ? r : 0) < i / 2
                    })) ? { ...i,
                        numQuestsCompleted: 0,
                        type: "dailyQuestHalfway"
                    } : e.every((e => {
                        var a;
                        return 0 === F(e.goalId, null !== (a = t[e.goalId]) && void 0 !== a ? a : 0)
                    })) && e.some((e => {
                        var t;
                        return F(e.goalId, null !== (t = s[e.goalId]) && void 0 !== t ? t : 0) > 0
                    })) ? { ...i,
                        numQuestsCompleted: 0,
                        type: "dailyQuestFirst"
                    } : void 0
                },
                F = (e, t) => ["time_spent_core_daily_quest", "time_spent_hard_daily_quest"].includes(e) ? Math.floor(t / 60) : t,
                M = e => {
                    switch (e) {
                        case "XP":
                        case "COMBO_XP":
                            return i;
                        case "LESSONS":
                            return l;
                        case "FIVE_CORRECT_IN_A_ROW":
                        case "TEN_CORRECT_IN_A_ROW":
                            return d;
                        case "PERFECT_LESSONS":
                        case "NINETY_ACCURACY_LESSONS":
                        case "EIGHTY_ACCURACY_LESSONS":
                            return r;
                        case "SPEAK_CHALLENGES":
                            return u;
                        case "LISTEN_CHALLENGES":
                            return c;
                        case "SECONDS_SPENT_LEARNING":
                            return g;
                        case "EXTEND_STREAK":
                            return o;
                        case "QUESTS":
                        case "START_STREAK":
                            return;
                        default:
                            return (0, h.RJ)(e)
                    }
                },
                U = (e, t) => {
                    switch (e.metric) {
                        case "XP":
                            return (0, v._i)(35008, {
                                threshold: t
                            });
                        case "LESSONS":
                            return (0, v._i)(30518, {
                                threshold: t
                            });
                        case "PERFECT_LESSONS":
                            return (0, v._i)(35007, {
                                threshold: t
                            });
                        case "NINETY_ACCURACY_LESSONS":
                            return (0, v._i)(35010, {
                                threshold: t
                            });
                        case "EIGHTY_ACCURACY_LESSONS":
                            return (0, v._i)(38216, {
                                num: t,
                                threshold: t
                            });
                        case "COMBO_XP":
                            return (0, v._i)(38217, {
                                num: t,
                                threshold: t
                            });
                        case "FIVE_CORRECT_IN_A_ROW":
                            return (0, v._i)(38218, {
                                num: t,
                                threshold: t
                            });
                        case "TEN_CORRECT_IN_A_ROW":
                            return (0, v._i)(38305, {
                                num: t,
                                threshold: t
                            });
                        case "SPEAK_CHALLENGES":
                            return (0, v._i)(30522, {
                                threshold: t
                            });
                        case "LISTEN_CHALLENGES":
                            return (0, v._i)(30521, {
                                threshold: t
                            });
                        case "SECONDS_SPENT_LEARNING":
                            return (0, v._i)(39357, {
                                num: Math.floor(t / 60)
                            });
                        case "EXTEND_STREAK":
                            return (0, v._i)(42618);
                        case "QUESTS":
                        case "START_STREAK":
                            return;
                        default:
                            return void(0, _.vU)("Unsupported quest metric", {
                                data: {
                                    metric: (0, h.RJ)(e.metric)
                                },
                                once: !0
                            })
                    }
                },
                H = e => {
                    switch (e) {
                        case "daily_goal_daily_quest":
                        case "extend_streak_daily_quest":
                        case "speak_challenges_hard_daily_quest":
                        case "listen_challenges_hard_daily_quest":
                            return [e];
                        case "perfect_lessons_core_daily_quest":
                        case "perfect_lessons_hard_daily_quest":
                        case "ninety_accuracy_lessons_core_daily_quest":
                        case "ninety_accuracy_lessons_hard_daily_quest":
                        case "eighty_accuracy_lessons_core_daily_quest":
                        case "eighty_accuracy_lessons_hard_daily_quest":
                            return ["perfect_lessons_core_daily_quest", "perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_hard_daily_quest"];
                        case "combo_xp_core_daily_quest":
                        case "combo_xp_hard_daily_quest":
                        case "five_in_a_row_core_daily_quest":
                        case "five_in_a_row_hard_daily_quest":
                        case "ten_in_a_row_hard_daily_quest":
                            return ["combo_xp_core_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_core_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest"];
                        case "time_spent_core_daily_quest":
                        case "time_spent_hard_daily_quest":
                            return ["time_spent_core_daily_quest", "time_spent_hard_daily_quest"];
                        default:
                            return (0, _.vU)("Unsupported quest", {
                                data: {
                                    goalId: (0, h.RJ)(e)
                                },
                                once: !0
                            }), []
                    }
                },
                G = e => {
                    switch (e) {
                        case "DAILY":
                            return ["daily_goal_daily_quest", "extend_streak_daily_quest"];
                        case "CORE":
                            return ["perfect_lessons_core_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "combo_xp_core_daily_quest", "five_in_a_row_core_daily_quest", "time_spent_core_daily_quest"];
                        case "HARD":
                            return ["perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_hard_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest", "speak_challenges_hard_daily_quest", "listen_challenges_hard_daily_quest", "time_spent_hard_daily_quest"];
                        default:
                            return (0, _.vU)("Unsupported daily quest slot type", {
                                data: {
                                    slotType: (0, h.RJ)(e)
                                },
                                once: !0
                            }), []
                    }
                },
                V = ({
                    difficulty: e,
                    progress: t,
                    oldProgress: a,
                    quests: s
                }) => {
                    s.forEach((s => {
                        var n;
                        const r = O(e, s);
                        void 0 !== t && void 0 !== a && (null !== (n = t[s.goalId]) && void 0 !== n ? n : 0) >= r && a[s.goalId] < r && (0, y.track)("daily_quest_completed", {
                            daily_quest_difficulty: e,
                            daily_quest_name: s.goalId
                        })
                    }))
                },
                B = ({
                    difficulty: e,
                    oldProgress: t,
                    progress: a,
                    quest: s
                }) => {
                    var n;
                    const r = O(e, s);
                    return void 0 !== a && void 0 !== t && (null !== (n = a[s.goalId]) && void 0 !== n ? n : 0) >= r && t[s.goalId] < r
                },
                z = ({
                    difficulty: e,
                    progress: t,
                    oldProgress: a,
                    quests: s
                }) => s.reduce(((s, n) => {
                    var r, i, o;
                    const l = O(e, n);
                    return {
                        newlyCompletedQuests: void 0 !== t && void 0 !== a && (null !== (r = t[n.goalId]) && void 0 !== r ? r : 0) >= l && a[n.goalId] < l ? s.newlyCompletedQuests + 1 : s.newlyCompletedQuests,
                        totalCompletedQuests: (null !== (i = null == t ? void 0 : t[n.goalId]) && void 0 !== i ? i : 0) >= l || (null !== (o = null == a ? void 0 : a[n.goalId]) && void 0 !== o ? o : 0) >= l ? s.totalCompletedQuests + 1 : s.totalCompletedQuests
                    }
                }), {
                    newlyCompletedQuests: 0,
                    totalCompletedQuests: 0
                }),
                Z = (e, t) => t ? e[t.goalId].metric : void 0,
                W = (e, t) => e[t].quantity,
                $ = (e, t) => {
                    const {
                        dailyQuest: a,
                        coreQuest: s,
                        hardQuest: n
                    } = e;
                    return (j(t) ? [a, s, n] : [a]).filter(h.$K)
                },
                j = e => {
                    const t = (0, b.i5)(e),
                        a = (0, b.i5)(e) < 30;
                    if ((0, m.ky)("debugAllDailyQuestsUnlocked", !1) || !a && !(0, b.EO)(e)) return !0;
                    const s = (0, b.pu)(e);
                    return a ? t >= 6 : s >= 4
                },
                q = e => (0, p.zM)(e).getUTCMonth() === (0, p.Ux)().getMonth() && (0, p.Ij)(e) < 4,
                Q = e => {
                    if (!(0, b.EO)(e)) return !1;
                    const t = s.VO(e.xpSummaries).filter((e => void 0 !== e && e.gainedXp > 0)).sort(((e, t) => t.date - e.date));
                    if (t.length < 6) return !0;
                    const a = t[5].date;
                    return q(a)
                },
                K = e => {
                    if ((0, b.i5)(e) >= 30) return !1;
                    if ((0, b.i5)(e) < 7) return !0;
                    const t = (0, p.v4)((0, p.zM)(e.lastResurrectionTimestamp), 6),
                        a = s.VO(e.xpSummaries).filter((e => void 0 !== e && e.date >= t && e.gainedXp > 0)).sort(((e, t) => e.date - t.date));
                    if (a.length < 2) return !0;
                    const n = a[1].date;
                    return q(n)
                },
                Y = e => !Q(e) && !K(e),
                J = e => (t, a) => {
                    const {
                        dailyQuest: r,
                        coreQuest: i,
                        hardQuest: o
                    } = (0, n.oV)(a()), l = (0, n.xm)(a()), c = (({
                        currentProgress: e,
                        dailyQuest: t,
                        coreQuest: a,
                        hardQuest: n,
                        metricUpdatesWithXp: r,
                        schema: i
                    }) => {
                        var o, l, c;
                        const d = {},
                            u = s.HK(r, "metric"),
                            g = Z(i, t),
                            p = Z(i, a),
                            m = Z(i, n);
                        return t && g && u[g] && (d[t.goalId] = W(u, g) + (null !== (o = null == e ? void 0 : e[t.goalId]) && void 0 !== o ? o : 0)), a && p && u[p] && (d[a.goalId] = W(u, p) + (null !== (l = null == e ? void 0 : e[a.goalId]) && void 0 !== l ? l : 0)), n && m && u[m] && (d[n.goalId] = W(u, m) + (null !== (c = null == e ? void 0 : e[n.goalId]) && void 0 !== c ? c : 0)), d
                    })({
                        coreQuest: i,
                        currentProgress: (0, n.EL)(a()),
                        dailyQuest: r,
                        hardQuest: o,
                        metricUpdatesWithXp: e.metricUpdates,
                        schema: l
                    }), d = (0, n.D_)(a()).progressUpdate, u = (() => {
                        var e, t;
                        const a = {};
                        if (void 0 === d) return c;
                        for (const s of w) void 0 === c[s] && void 0 !== d[s] || (a[s] = (null !== (e = d[s]) && void 0 !== e ? e : 0) + (null !== (t = c[s]) && void 0 !== t ? t : 0));
                        return a
                    })();
                    t({
                        payload: {
                            timestamp: Date.now(),
                            updates: u
                        },
                        type: "SET_GOALS_PROGRESS_UPDATE"
                    })
                }
        },
        8649: (e, t, a) => {
            "use strict";
            a.d(t, {
                EV: () => l,
                dH: () => c,
                hP: () => d
            });
            var s = a(80254),
                n = a(53229);
            const r = "onGoogleLibraryLoad";
            let i, o = !1;
            const l = () => o,
                c = s.IH((() => new Promise(((e, t) => {
                    window[r] = () => {
                        try {
                            window.google.accounts.id.initialize({
                                callback: ({
                                    credential: e
                                }) => {
                                    null == i || i(e)
                                },
                                client_id: "450298686065.apps.googleusercontent.com"
                            }), o = !0, e()
                        } catch {
                            t(Error("Cannot initialize google sign in SDK"))
                        }
                    }, (async () => {
                        try {
                            await (0, n.lh)("https://accounts.google.com/gsi/client", r)
                        } catch {
                            t(Error("Cannot load google sign in SDK"))
                        }
                    })()
                })))),
                d = () => new Promise((e => {
                    i = e
                }))
        },
        67574: (e, t, a) => {
            "use strict";
            a.d(t, {
                F: () => g
            });
            var s = a(80231),
                n = a(86518),
                r = a(97544),
                i = a(70326),
                o = a(8649),
                l = a(67899),
                c = a(6986),
                d = a(79465),
                u = a(16086);
            const g = async ({
                allowLanguagelessUser: e = !1,
                disallowAutomaticRegister: t = !0,
                dispatch: a,
                history: g,
                onLoginSuccess: p,
                redirectPath: m,
                setSubmitting: h,
                via: v
            }) => {
                var _, f;
                const S = await (0, o.hP)();
                h && h();
                try {
                    return await (async ({
                        dispatch: e,
                        googleIdToken: t,
                        history: a,
                        redirectPath: s,
                        onLoginSuccess: r
                    }) => {
                        await (0, i.x4)({
                            googleIdToken: t
                        });
                        const o = e((0, n.eY)({
                            onUserRetrieved: e => {
                                (0, c.oV)("social", e)
                            },
                            urlForStringsReload: s
                        }));
                        return await o, r ? r() : a.push(s), !0
                    })({
                        dispatch: a,
                        googleIdToken: S,
                        history: g,
                        onLoginSuccess: p,
                        redirectPath: m
                    })
                } catch (o) {
                    if (!(0, r.Hx)(o) || 401 !== (null === (_ = o.response) || void 0 === _ ? void 0 : _.status) && 403 !== (null === (f = o.response) || void 0 === f ? void 0 : f.status)) throw o;
                    const c = (y = S, JSON.parse(s.DS.decode(y.split(".")[1])));
                    if (t) throw o;
                    return (0, u.Pc)() ? (await a((0, n.DZ)({
                        email: c.email,
                        googleIdToken: S,
                        name: c.name
                    })), await a((0, n.eY)()), (0, d.track)("register", {
                        successful: !0,
                        through: "google",
                        via: v
                    }), (0, l.SX)({
                        event: "sign_up"
                    })) : e && (await (0, i.$C)({
                        email: c.email,
                        googleIdToken: S,
                        name: c.name
                    }), await a((0, n.eY)()), (0, d.track)("register", {
                        successful: !0,
                        through: "google",
                        via: v
                    }), (0, l.SX)({
                        event: "sign_up"
                    })), !1
                }
                var y
            }
        },
        67899: (e, t, a) => {
            "use strict";
            a.d(t, {
                KU: () => l,
                Nf: () => d,
                SX: () => r,
                dl: () => u,
                zu: () => g
            });
            var s = a(80254),
                n = a(53229);
            window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                event: "gtm.js",
                "gtm.start": Date.now()
            }), window.dataLayer.push({
                cookie_domain: window.location.hostname
            });
            const r = e => {
                    window.dataLayer.push(e)
                },
                i = window.setInterval((() => {
                    var e;
                    const t = window;
                    if (!(null === (e = t.ga) || void 0 === e ? void 0 : e.getAll)) return;
                    const [a] = t.ga.getAll().filter((e => "UA-21595814-1" === e.get("trackingId")));
                    a && (window.clearInterval(i), new t.gaplugins.UrlChangeTracker(a))
                }), 200),
                o = ["card_entry_accept", "card_entry_reject", "plus_landing_page_load", "premium_ad_click", "premium_ad_dismiss", "premium_ad_show", "premium_purchase_cancel", "premium_purchase_failure", "premium_purchase_page_dismiss", "premium_purchase_page_show", "premium_purchase_start", "premium_purchase_success", "premium_trial_offer_click", "premium_trial_offer_dismiss", "premium_trial_offer_show", "registration_load", "sign_in_load", "web_to_app_store_tap"],
                l = (e, t) => {
                    if (!o.includes(e)) return;
                    const a = s.ei(t, ["free_trial_period", "iap_context", "subscription_tier"]);
                    r({ ...a,
                        event: e
                    })
                };
            let c;
            const d = () => c,
                u = async () => {
                    try {
                        await (0, n.lh)("https://www.googletagmanager.com/gtm.js?id=GTM-TX6Z97C"), c = !!window.google_tag_manager
                    } catch (e) {
                        c = !1
                    }
                },
                g = "gtm-attribution-link"
        },
        33037: (e, t, a) => {
            "use strict";
            a.d(t, {
                LN: () => v,
                tx: () => f,
                wM: () => S,
                zn: () => _
            });
            var s = a(56043),
                n = a(83719),
                r = a(78939),
                i = a(37590),
                o = a(68903),
                l = a(8654),
                c = a(93746),
                d = a(58576),
                u = a(43006),
                g = a(79465),
                p = a(11811);
            const m = {
                    [n.Oj.Accent]: 18634,
                    [n.Oj.ExtraSpace]: 4476,
                    [n.Oj.MissingSpace]: 18757,
                    [n.Oj.MissingWord]: 8435,
                    [n.Oj.Typo]: 4081,
                    [n.Oj.WrongWord]: 576
                },
                h = e => {
                    if (m[e]) return (0, l.H8)(m[e])
                },
                v = e => {
                    switch (e.type) {
                        case p.Sm.Assist:
                            {
                                const {
                                    correctIndex: t,
                                    options: a
                                } = e;
                                return [a[t].text]
                            }
                        case p.Sm.CharacterIntro:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.CharacterPuzzle:
                            return [e.correctSolutions[0]];
                        case p.Sm.CharacterTrace:
                        case p.Sm.CharacterWrite:
                            return [e.prompt];
                        case p.Sm.CharacterMatch:
                        case p.Sm.FreeResponse:
                        case p.Sm.ListenMatch:
                        case p.Sm.Match:
                        case p.Sm.ExtendedListenMatch:
                        case p.Sm.ExtendedMatch:
                            return [];
                        case p.Sm.CharacterSelect:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a].character]
                            }
                        case p.Sm.CompleteReverseTranslation:
                            {
                                const {
                                    displayTokens: t
                                } = e;
                                return [t.map((e => e.text)).join("")]
                            }
                        case p.Sm.Definition:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.Dialogue:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.Form:
                            {
                                const {
                                    options: t,
                                    correctIndex: a
                                } = e;
                                return [t[a].text]
                            }
                        case p.Sm.GapFill:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.Judge:
                            {
                                const {
                                    choices: t,
                                    correctIndices: a
                                } = e;
                                return a.map((e => t[e]))
                            }
                        case p.Sm.Listen:
                        case p.Sm.ListenComplete:
                            return [e.prompt];
                        case p.Sm.ListenComprehension:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.ListenIsolation:
                            {
                                const {
                                    tokens: t
                                } = e;
                                return [t.map((e => e.value)).join("")]
                            }
                        case p.Sm.ListenSpeak:
                        case p.Sm.ListenTap:
                            return [e.prompt];
                        case p.Sm.Name:
                            return e.correctSolutions;
                        case p.Sm.OrderTapComplete:
                        case p.Sm.PartialListen:
                        case p.Sm.PartialReverseTranslate:
                            return [e.displayTokens.map((e => e.text)).join("")];
                        case p.Sm.PatternTapComplete:
                            return [e.choices[e.correctIndex]];
                        case p.Sm.ReadComprehension:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a]]
                            }
                        case p.Sm.ReverseAssist:
                            {
                                const {
                                    correctIndex: t,
                                    options: a
                                } = e;
                                return [a[t].text]
                            }
                        case p.Sm.SameDifferent:
                            {
                                const {
                                    correctIndex: t,
                                    options: a
                                } = e;
                                return [a[t]]
                            }
                        case p.Sm.Select:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a].phrase]
                            }
                        case p.Sm.SelectPronunciation:
                        case p.Sm.SelectTranscription:
                            {
                                const {
                                    choices: t,
                                    correctIndex: a
                                } = e;
                                return [t[a].text]
                            }
                        case p.Sm.SvgPuzzle:
                            return [e.correctSolutions[0]];
                        case p.Sm.SyllableListenTap:
                            return [e.correctIndices.map((t => e.choices[t].text)).join("")];
                        case p.Sm.SyllableTap:
                            return e.correctSolutions;
                        case p.Sm.Speak:
                            return [e.prompt];
                        case p.Sm.TapCloze:
                        case p.Sm.TapClozeTable:
                            return [(0, i.Ub)(e).join("")];
                        case p.Sm.TapComplete:
                            {
                                const {
                                    displayTokens: t
                                } = e;
                                return [t.map((e => e.text)).join("")]
                            }
                        case p.Sm.TapCompleteTable:
                            return [(0, i.Ub)(e).join("")];
                        case p.Sm.TapDescribe:
                        case p.Sm.Translate:
                        case p.Sm.Transliterate:
                            return e.correctSolutions;
                        case p.Sm.TransliterationAssist:
                            {
                                const {
                                    correctIndex: t,
                                    options: a
                                } = e;
                                return [a[t].text]
                            }
                        case p.Sm.TypeCloze:
                        case p.Sm.TypeClozeTable:
                            return [(0, i.Ub)(e).join("")];
                        case p.Sm.TypeComplete:
                            return [e.displayTokens.map((e => e.text)).join("")];
                        case p.Sm.TypeCompleteTable:
                            return [(0, i.Ub)(e).join("")];
                        case p.Sm.WriteComprehension:
                            return [e.exampleSolution];
                        case p.Sm.RadioBinary:
                        case p.Sm.RadioImageSelect:
                        case p.Sm.RadioListenMatch:
                        case p.Sm.RadioListenRecognize:
                        case p.Sm.RadioSelect:
                            return [];
                        default:
                            throw (0, o.RJ)(e), Error(`Unexpected challenge type: ${e.type}`)
                    }
                },
                _ = e => {
                    var t, a, s, n;
                    switch (e.type) {
                        case p.Sm.ListenTap:
                            return e.promptTransliteration;
                        case p.Sm.Select:
                            return e.choices[e.correctIndex].phraseTransliteration;
                        case p.Sm.Translate:
                            return null === (t = e.correctSolutionTransliterations) || void 0 === t ? void 0 : t[0];
                        case p.Sm.CharacterIntro:
                            return null === (a = e.choiceTransliterations) || void 0 === a ? void 0 : a[e.correctIndex];
                        case p.Sm.Form:
                            return e.options[e.correctIndex].textTransliteration;
                        case p.Sm.Judge:
                            return null === (s = e.choiceTransliterations) || void 0 === s ? void 0 : s[e.correctIndices[0]];
                        case p.Sm.SyllableListenTap:
                            return e.promptTransliteration;
                        case p.Sm.SyllableTap:
                            return null === (n = e.correctSolutionTransliterations) || void 0 === n ? void 0 : n[0];
                        default:
                            return
                    }
                },
                f = (e, t, a, s) => (s.length && !s[0] && (0, d.Kp)("Trying to show correct solution when none are provided by the challenge", {
                    data: {
                        correctSolutions: s,
                        length: s.length,
                        text: s[0]
                    }
                }), e && a && s.length && !s.includes(a) && s[0] && (0, u.Dg)(t) !== (0, u.Dg)(s[0])),
                S = async ({
                    challenge: e,
                    guess: t,
                    isTypingInLearningLanguage: a,
                    allowTypoBlame: n
                }) => {
                    var i;
                    const o = Date.now(),
                        l = null === (i = e.grader) || void 0 === i ? void 0 : i.language,
                        c = await (0, r.C3)(l),
                        d = !!e.smartTipsGraderV2,
                        u = (0, r.YK)({
                            accentedCharacterMap: c.accentedCharacterMap,
                            allowTypoBlame: n,
                            compiledNormalizationData: c.normalizationData,
                            gradingData: d ? e.smartTipsGraderV2 : e.grader,
                            isTypingInLearningLanguage: a,
                            submittedValue: t
                        }),
                        {
                            blameType: g,
                            closestSolution: m,
                            correct: _,
                            gradingMetadata: f,
                            highlights: S
                        } = u;
                    let E;
                    if (!1 !== e.grader.whitespaceDelimited && (e.type === p.Sm.Translate || e.type === p.Sm.PartialReverseTranslate)) {
                        const a = (0, s.SK)(v(e)[0], t, .5);
                        E = a ? [a] : void 0
                    }
                    return y(e, _, o, d), {
                        blameMessage: g ? h(g) : void 0,
                        blameType: g,
                        closestSolution: m,
                        correct: _,
                        gradingMetadata: f,
                        guess: t,
                        highlights: S,
                        mistakesRecyclingHighlights: E
                    }
                },
                y = async (e, t, a, s) => {
                    Math.random() > .001 || await (0, g.track)("challenge_grade", {
                        challenge_type: e.type,
                        correct: t,
                        from_language: c.h9,
                        grading_method: s ? "client_library_smart_tips" : "client_library",
                        sampling_rate: .001,
                        target_language: e.grader.language,
                        time_spent_grading: Date.now() - a
                    })
                }
        },
        37590: (e, t, a) => {
            "use strict";
            a.d(t, {
                JH: () => g,
                Ub: () => u,
                Xh: () => c,
                ao: () => d,
                jL: () => l,
                tl: () => m,
                x6: () => o
            });
            var s = a(68903),
                n = a(58576),
                r = a(43006),
                i = a(11811);
            const o = (e, t, a = (({}, {}, e) => e.text)) => p(e, a).slice(t ? 1 : 0).flatMap((e => [", ", ...e.flatMap((e => [" ", e])).slice(1)])).slice(1),
                l = e => e.flatMap(((e, t) => void 0 === e.damageStart ? [] : {
                    index: t
                })),
                c = e => e.flatMap(((e, t) => e.flatMap(((e, a) => e.filter((e => "isBlank" in e && e.isBlank || "damageStart" in e)).length ? [{
                    colIndex: a,
                    rowIndex: t
                }] : [])))),
                d = e => {
                    const t = c(e)[0];
                    return {
                        colIndex: t.colIndex,
                        rowIndex: t.rowIndex
                    }
                },
                u = e => {
                    switch (e.type) {
                        case i.Sm.TapCloze:
                        case i.Sm.TypeCloze:
                            return e.displayTokens.map((e => e.text));
                        case i.Sm.TapClozeTable:
                        case i.Sm.TypeClozeTable:
                        case i.Sm.TapCompleteTable:
                        case i.Sm.TypeCompleteTable:
                            {
                                const {
                                    displayTableTokens: t,
                                    headers: a
                                } = e;
                                return o(t, a)
                            }
                        default:
                            throw (0, s.RJ)(e), Error(`Tried to call getGrammarChallengeCorrectTexts on an unsupported challenge type: ${e.type}`)
                    }
                },
                g = e => {
                    switch (e.type) {
                        case i.Sm.TapCloze:
                        case i.Sm.TypeCloze:
                            return e.displayTokens.map((e => void 0 === e.damageStart ? e.text : `${e.text.slice(0,e.damageStart)}${r.qv}`)).join("");
                        case i.Sm.TapClozeTable:
                        case i.Sm.TypeClozeTable:
                        case i.Sm.TapCompleteTable:
                        case i.Sm.TypeCompleteTable:
                            {
                                const {
                                    displayTableTokens: t,
                                    headers: a
                                } = e;
                                return o(t, a).join("")
                            }
                        default:
                            throw (0, s.RJ)(e), Error(`Tried to call getGrammarChallengePrompt on an unsupported challenge type: ${e.type}`)
                    }
                },
                p = (e, t = (({}, {}, e) => e.text)) => e.map(((e, a) => e.map(((e, s) => e.map((e => t(s, a, e))).join(""))))),
                m = (e, t, a) => e.map(((s, r) => s.map(((s, i) => s.map(((s, o) => {
                    let l;
                    try {
                        l = t[r][i][o]
                    } catch (t) {
                        (0, n.vU)("No matching token found for display token in table challenge", {
                            data: {
                                displayTableTokens: e
                            }
                        })
                    }
                    return a({
                        colIndex: i,
                        rowIndex: r
                    }, s, l, o)
                }))))))
        },
        15670: (e, t, a) => {
            "use strict";
            a.d(t, {
                e: () => o
            });
            var s = a(50498),
                n = a(79465);
            let r = !1;
            const i = e => new Promise((t => {
                    var a, s;
                    r || (r = !0, window.grecaptcha ? (0, n.track)("abuse_req_cls_init_success", {}) : (0, n.track)("abuse_req_cls_init_fail", {
                        abuse_client_error_cause: "script_not_loaded"
                    })), null === (s = null === (a = window.grecaptcha) || void 0 === a ? void 0 : a.enterprise) || void 0 === s || s.ready((async () => {
                        var a, s;
                        const n = await (null === (s = null === (a = window.grecaptcha) || void 0 === a ? void 0 : a.enterprise) || void 0 === s ? void 0 : s.execute("6LcLOdsjAAAAAFfwGusLLnnn492SOGhsCh-uEAvI", {
                            action: e
                        }));
                        t(n)
                    }))
                })),
                o = async e => {
                    try {
                        const t = await Promise.race([i(e), (async () => (await (0, s._v)(10100), null))()]);
                        return t ? ((0, n.track)("abuse_req_cls_sig_measure_success", {}), {
                            siteKey: "6LcLOdsjAAAAAFfwGusLLnnn492SOGhsCh-uEAvI",
                            token: t,
                            vendor: 2
                        }) : ((0, n.track)("abuse_req_cls_sig_measure_fail", {
                            abuse_client_error_cause: "report_timeout"
                        }), null)
                    } catch (e) {
                        (0, n.track)("abuse_req_cls_sig_measure_fail", {
                            abuse_client_error_cause: "report_error"
                        })
                    }
                    return null
                }
        },
        1: (e, t, a) => {
            "use strict";
            a.d(t, {
                $E: () => g,
                Ef: () => p,
                In: () => y,
                PH: () => E,
                _u: () => _,
                c$: () => h,
                e_: () => S,
                is: () => v,
                mE: () => f,
                qv: () => b,
                vZ: () => m
            });
            var s = a(17135),
                n = a(64115),
                r = a(8654),
                i = a(93746),
                o = a(35160),
                l = a(23275),
                c = a(11811),
                d = a(20028);
            const u = ["premium", "schools", "beta course", "revenue paused", "free"],
                g = ["premium", "schools", "beta course", "revenue paused"],
                p = (e, t, a, s) => {
                    const r = (0, n.ky)("heartsGroupType");
                    return r && (o = r, u.includes(o)) ? r : a ? "premium" : (0, d.d1)(e) ? "schools" : t.unlimitedHeartsAvailable ? "revenue paused" : void 0 !== s && (0, i.TS)(s) ? "beta course" : "free";
                    var o
                },
                m = e => ["schools", "beta course", "revenue paused"].includes(e),
                h = e => e.hearts === e.maxHearts,
                v = e => e.hearts <= 0,
                _ = e => {
                    const t = Date.now();
                    if (t > e) return null;
                    const {
                        hours: a,
                        minutes: n,
                        seconds: i
                    } = (0, s.zj)(e - t);
                    return a > 0 ? (0, r._i)(25240, {
                        num_hours: a
                    }) : n > 0 ? (0, r._i)(25241, {
                        num_minutes: n
                    }) : (0, r._i)(25242, {
                        num_seconds: i
                    })
                },
                f = {
                    currencyType: "XGM",
                    id: "health_refill",
                    localizedDescription: "",
                    name: "Health Refill",
                    price: 0,
                    type: "misc"
                },
                S = {
                    currencyType: "XGM",
                    id: "health_refill",
                    localizedDescription: "",
                    name: "Health Refill",
                    price: 350,
                    type: "misc"
                },
                y = {
                    currencyType: "XGM",
                    id: "health_refill_reactive",
                    localizedDescription: "",
                    name: "Health Refill Reactive",
                    price: 450,
                    type: "misc"
                },
                E = e => e.sessionCount < 3 || (0, n.gQ)("debugFreeHeartRefill"),
                b = (e, t, a, s) => {
                    var r, i;
                    const d = null === (r = a.levelData) || void 0 === r ? void 0 : r.level;
                    (t && 0 === e.sessionCount && void 0 !== d && !(0, l.qM)(d) && (null === (i = a.sessionParams) || void 0 === i ? void 0 : i.type) !== c.FF.Placement && 0 === a.currentIndex || (0, n.gQ)("debugHeartsIntro")) && s({
                        options: {
                            name: o.t.HeartsIntro,
                            spotlightType: "heartsInSession"
                        },
                        type: "TOGGLE_MODAL"
                    })
                }
        },
        68903: (e, t, a) => {
            "use strict";
            a.d(t, {
                $K: () => l,
                LU: () => g,
                OM: () => r,
                RJ: () => n,
                bp: () => c,
                cY: () => i,
                gB: () => o,
                p: () => d,
                rw: () => u
            });
            var s = a(80254);
            const n = e => e,
                r = e => [e, e],
                i = (e, t) => e.some((e => s.Xy(e, t))),
                o = (e, t) => t.includes(e),
                l = e => void 0 !== e,
                c = (e, t) => t.every((t => t in e && !!e[t])),
                d = e => t => e.includes(t),
                u = (e, t) => {
                    let a;
                    const s = (...s) => {
                        void 0 === a && (a = window.setTimeout((() => {
                            a = void 0, e(...s)
                        }), t))
                    };
                    return s.cancel = () => window.clearTimeout(a), s
                },
                g = e => {
                    let t = !1;
                    return (...a) => {
                        if (t) throw Error("Function was already called");
                        return t = !0, e(...a)
                    }
                }
        },
        50548: (e, t, a) => {
            "use strict";
            a.d(t, {
                TH: () => _,
                ZY: () => h,
                k6: () => v,
                m8: () => m
            });
            var s = a(92534),
                n = a(27378),
                r = a(3620),
                i = a(58576),
                o = a(35160),
                l = a(18804),
                c = a(79465);
            const d = [],
                u = [],
                g = [],
                p = [],
                m = (0, s.lX)({
                    getUserConfirmation: async (e, t) => {
                        var a, s;
                        await (null === (a = g[0]) || void 0 === a ? void 0 : a.call(g));
                        const {
                            isDesktop: n,
                            via: r
                        } = null !== (s = p[0]) && void 0 !== s ? s : {}, m = () => {
                            var e;
                            null === (e = u[0]) || void 0 === e || e.call(u), t(!1)
                        }, h = () => {
                            var e, a;
                            const {
                                shouldCancelRouteChange: s = !1
                            } = null !== (a = null === (e = d[0]) || void 0 === e ? void 0 : e.call(d)) && void 0 !== a ? a : {};
                            t(!s)
                        };
                        if (void 0 === r) return (0, i.vU)("Tried to show user confirmation without `via` parameter"), void h();
                        ["avatars_create", "avatars_edit"].includes(r) && (0, c.track)("avatar_exit_drawer_show", {
                            via: "dismiss"
                        }), n ? (0, l.globalDispatch)({
                            options: {
                                message: e,
                                name: o.t.Confirm,
                                onClose: m,
                                onConfirm: h,
                                via: r
                            },
                            type: "TOGGLE_MODAL"
                        }) : (0, l.globalDispatch)({
                            options: {
                                message: e,
                                name: "CONFIRM",
                                onClose: m,
                                onConfirm: h
                            },
                            type: "TOGGLE_DRAWER"
                        })
                    }
                }),
                h = (e, t, a, s) => {
                    n.useEffect((() => (d.length > 0 && (0, i.Kp)("Adding ConfirmedRouteChangeHandler when another handler is already present", {
                        once: !0
                    }), d.unshift(e), u.unshift(t), g.unshift(a), p.unshift(s), () => {
                        const n = d.indexOf(e);
                        n >= 0 && d.splice(n, 1);
                        const r = u.indexOf(t);
                        r >= 0 && u.splice(r, 1);
                        const i = g.indexOf(a);
                        i >= 0 && g.splice(i, 1);
                        const o = p.indexOf(s);
                        o >= 0 && p.splice(o, 1)
                    })), [e, t, a, p])
                },
                v = () => (0, r.k6)(),
                _ = () => (0, r.TH)()
        },
        29134: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => n
            });
            var s = a(27378);
            const n = (e, t, a) => {
                const [n, r] = s.useState(e);
                return s.useEffect((() => {
                    const e = new AbortController,
                        a = e.signal;
                    return (async () => {
                        const e = await t(a);
                        a.aborted || r(e)
                    })(), () => {
                        e.abort()
                    }
                }), a), n
            }
        },
        11883: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => i
            });
            var s = a(27378),
                n = a(64115),
                r = a(42464);
            const i = (e = 1e3) => {
                const [t, a] = s.useState(Date.now() + (0, n.nn)());
                return (0, r.Z)((() => a(Date.now() + (0, n.nn)())), e), t
            }
        },
        42464: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => n
            });
            var s = a(27378);
            const n = (e, t) => {
                const a = s.useRef(e);
                s.useEffect((() => {
                    a.current = e
                }), [e]), s.useEffect((() => {
                    if (void 0 !== t) {
                        const e = setInterval((() => a.current()), t);
                        return () => clearInterval(e)
                    }
                }), [t])
            }
        },
        53229: (e, t, a) => {
            "use strict";
            a.d(t, {
                Fo: () => u,
                Lm: () => i,
                Vp: () => o,
                lV: () => c,
                lh: () => l,
                qy: () => d,
                sZ: () => r,
                vl: () => n
            });
            var s = a(80254);
            const n = (e = window.location.search) => Object.fromEntries(new URLSearchParams(e).entries()),
                r = (e, t, a) => {
                    const s = new URLSearchParams(a.location.search);
                    s.set(e, t), a.replace({
                        search: s.toString()
                    })
                },
                i = (e = window.location.search) => n(e.replace(/\+/g, "%2B")),
                o = e => s.XP(e).sort().map((t => [t, e[t]].map(encodeURIComponent).join("="))).join("&"),
                l = s.HP(((e, t) => new Promise(((a, s) => {
                    const n = document.createElement("script");
                    n.async = !0, n.id = null != t ? t : `duo${`${Math.random()}`.split(".")[1]}_${Date.now()}`, n.onerror = s, n.onload = a, n.src = e, n.type = "text/javascript";
                    const r = document.getElementsByTagName("script")[0];
                    r.parentNode.insertBefore(n, r)
                })))),
                c = e => encodeURIComponent(e.replace(/[!"#$%&'()*+,\-./:;<=>?@[\]^_`{|}~ \b\f\n\r\t\v¿]+/g, " ").trim().replace(" ", "-")),
                d = e => e,
                u = e => new URL(e).hostname
        },
        8654: (e, t, a) => {
            "use strict";
            a.d(t, {
                H8: () => p,
                Hy: () => T,
                KJ: () => f,
                Q7: () => k,
                T$: () => L,
                Ti: () => A,
                VG: () => C,
                WQ: () => m,
                _E: () => y,
                _i: () => g,
                ip: () => w,
                k8: () => N,
                k_: () => S,
                lw: () => c,
                mD: () => R,
                pu: () => O,
                sS: () => P,
                to: () => D,
                yL: () => I
            });
            var s = a(26307),
                n = a(37803),
                r = a(80254),
                i = a(64115),
                o = a(93746),
                l = a(58576);
            const c = "rtl" === (() => {
                    if (document.dir) return document.dir;
                    return document.documentElement.getAttribute("dir") || "ltr"
                })(),
                d = e => "number" == typeof e ? `${e}` : `placeholder_${e.project}`,
                u = r.HP((e => {
                    (0, l.vU)(`Showing placeholder string for project ${e.project}`, {
                        data: {
                            placeholderText: e.text
                        }
                    })
                }), (e => e.project)),
                g = (e, t = {}, a = {}) => {
                    try {
                        return ((e, t, a) => {
                            var n, r;
                            const o = d(e);
                            if ((0, i.gQ)("renderStringIds")) return `string_${o}`;
                            const g = "number" == typeof e ? e : ((0, i.Au)() || u(e), e.text),
                                p = null !== (n = a.lang) && void 0 !== n ? n : window.duo.uiLanguage,
                                m = {
                                    getFallback: () => {
                                        var e;
                                        return null !== (e = window.duo.l10n.strings.en) && void 0 !== e ? e : {}
                                    },
                                    getGroupVariableTable: () => {
                                        var e;
                                        return null !== (e = window.duo.l10n.contextualVariableMapping) && void 0 !== e ? e : {}
                                    },
                                    getStrings: () => {
                                        var e;
                                        return null !== (e = window.duo.l10n.strings[p]) && void 0 !== e ? e : {}
                                    },
                                    uiLanguage: p
                                },
                                h = {
                                    addRightToLeftMark: null !== (r = a.addRightToLeftMark) && void 0 !== r ? r : c,
                                    addStringIdToolTips: (0, i.gQ)("stringIdTooltips"),
                                    exportTags: a.exportTags,
                                    invalidSampleRate: .01,
                                    longStrings: (0, i.gQ)("longStrings"),
                                    postprocess: a.postprocess,
                                    preprocess: a.preprocess,
                                    stripTags: a.stripTags
                                };
                            return s.cz(m, l.vU, g, t, h)
                        })(e, t, a)
                    } catch (e) {
                        return (0, l.vU)("Localization failed", {
                            ex: e
                        }), ""
                    }
                },
                p = (e, t = {}, a = {}) => {
                    const s = g(e, t, a);
                    if ("number" == typeof s || "string" == typeof s) return s.toString();
                    try {
                        const t = document.createElement("div");
                        return t.innerHTML = n.uS(s), (0, i.gQ)("stringIdTooltips") ? `${t.innerText} (string_${d(e)})` : t.innerText
                    } catch {
                        return (0, l.vU)("Failed to convert ReactElement to string", {
                            data: {
                                stringId: e
                            }
                        }), ""
                    }
                },
                m = {
                    AT: "de",
                    BE: "fr",
                    BR: "pt",
                    CH: "de",
                    CN: "zh-CN",
                    CZ: "cs",
                    DE: "de",
                    DK: "da",
                    EG: "ar",
                    ES: "es",
                    FI: "fi",
                    FR: "fr",
                    GR: "el",
                    HU: "hu",
                    ID: "id",
                    IN: "hi",
                    IT: "it",
                    JP: "ja",
                    PH: "tl",
                    PT: "pt",
                    RU: "ru",
                    TR: "tr",
                    TW: "zh",
                    VN: "vi"
                },
                h = ["AT", "BE", "BG", "CY", "CZ", "DK", "DE", "EE", "EL", "ES", "FI", "FR", "GB", "HR", "HU", "IE", "IT", "LT", "LU", "LV", "MT", "NL", "PL", "PT", "RO", "SE", "SI", "SK", "UK"],
                v = ["US", "CA", "GB", "AU", "NZ", "SG", "KR", "JP", ...h],
                _ = ["US", "CA", "GB", "AU", "NZ"],
                f = e => v.includes(e),
                S = e => !!e.ipCountry && h.includes(e.ipCountry),
                y = e => !!e.ipCountry && _.includes(e.ipCountry);
            var E;
            ! function(e) {
                e.DEFAULT = ", ", e.zh = "、", e.ar = "، ", e.ja = "・"
            }(E || (E = {}));
            const b = ["ar", "el", "en", "hi", "ko", "zh"],
                I = e => b.includes(o.h9) ? `${e%12||12}${e<12?"am":"pm"}` : `${e}:00`,
                w = () => [p(18415), p(11602), p(667), p(974), p(21780), p(19860), p(14040)],
                k = () => [p(30377), p(30378), p(30379), p(30380), p(30381), p(30382), p(30383)],
                T = () => [p(34912), p(34913), p(34914), p(34915), p(34916), p(34917), p(34918)],
                C = () => [p(36297), p(36298), p(36299), p(36300), p(36301), p(36302), p(36303), p(36304), p(36305), p(36306), p(36307), p(36308)],
                R = () => [p(30384), p(30385), p(30386), p(30387), p(30388), p(30389), p(30390), p(30391), p(30392), p(30393), p(30394), p(30395)],
                L = (e, t = {
                    day: "numeric",
                    month: "long"
                }) => new Intl.DateTimeFormat((0, o.M$)(window.duo.uiLanguage), t).format(e),
                A = ["zh-CN", "zh-TW", "ja", "ko", "th"].includes(window.duo.uiLanguage),
                P = async (e, t) => {
                    const s = await a(55081)(`./${e}.duostrings`);
                    window.duo.l10n.strings[e] = { ...window.duo.l10n.strings[e],
                        ...t ? r.ei(s.sources, t) : s.sources
                    }
                },
                D = (e, t, a) => e.replace(/<a href="(.*?)">/g, `<a class="${t}" href="$1"${void 0===a?"":`target="${a}"`}>`),
                N = () => {
                    var e, t;
                    const a = (0, o.BE)(),
                        s = /^([a-z]{2,3})(?:-([a-z]{3})(?=$|-))?(?:-([a-z]{4})(?=$|-))?(?:-([a-z]{2}|\d{3})(?=$|-))?/i.exec(a);
                    return ((e, t) => {
                        const a = "AEAFBHDJDZEGIQIRJOKWLYOMQASDSY".match(/../g),
                            s = "AGARASAUBDBRBSBTBWBZCACNCODMDOETGTGUHKHNIDILINJMJPKEKHKRLAMHMMMOMTMXMZNINPPAPEPHPKPRPTPYSASGSVTHTTTWUMUSVEVIWSYEZAZW".match(/../g),
                            n = "amasbndzengnguhehiidjajvkmknkolomhmlmrmtmyneomorpapssdsmsnsutatethtnurzhzu".match(/../g);
                        return e ? (null == s ? void 0 : s.includes(e)) ? 0 : (null == a ? void 0 : a.includes(e)) ? 6 : 1 : (null == n ? void 0 : n.includes(t)) ? 0 : ["ar", "arq", "arz", "fa"].includes(t) ? 6 : 1
                    })(null !== (e = null == s ? void 0 : s[4]) && void 0 !== e ? e : null, null !== (t = null == s ? void 0 : s[1]) && void 0 !== t ? t : "en")
                },
                O = e => {
                    let t;
                    return null === (t = /(.*)<([\w]+)>(.*)<\/\2>(.*)/g.exec(e)) || void 0 === t ? ["", "", ""] : [t[1], t[3], t[4]]
                }
        },
        60752: (e, t, a) => {
            "use strict";
            a.d(t, {
                b: () => p
            });
            var s = a(47987),
                n = a(50498),
                r = a(58576),
                i = a(18804),
                o = a(79465);
            const l = "duolingo";
            let c, d = !1;
            const u = () => (0, i.globalDispatch)({
                    type: "UNMOUNT"
                }),
                g = (e, t) => {
                    switch (t) {
                        case 0:
                            {
                                const t = e;t.createObjectStore("prefetchedSessions"),
                                t.createObjectStore("submittableSessions", {
                                    keyPath: "id"
                                })
                            }
                        case 1:
                            e.deleteObjectStore("prefetchedSessions"), e.createObjectStore("prefetchedSessions");
                        case 2:
                            {
                                const t = e;t.deleteObjectStore("submittableSessions"),
                                t.createObjectStore("submittableRequests", {
                                    autoIncrement: !0
                                })
                            }
                        case 3:
                            e.deleteObjectStore("prefetchedSessions"), e.createObjectStore("prefetchedSessions");
                        case 4:
                            e.deleteObjectStore("submittableRequests"), e.createObjectStore("submittableRequests", {
                                autoIncrement: !0
                            });
                        case 5:
                            e.deleteObjectStore("prefetchedSessions"), e.createObjectStore("prefetchedSessions");
                        case 6:
                        case 7:
                            e.deleteObjectStore("submittableRequests"), e.createObjectStore("submittableRequests", {
                                autoIncrement: !0
                            });
                        case 8:
                            e.deleteObjectStore("prefetchedSessions"), e.createObjectStore("prefetchedSessions")
                    }
                },
                p = async () => (c || (c = m()), c),
                m = async () => {
                    try {
                        const e = await (0, s.X3)(l, 9, {
                            blocked: (e, t) => {
                                (0, o.track)("indexeddb_connection_blocked", {
                                    indexeddb_requested_version: t,
                                    indexeddb_version: e
                                })
                            },
                            blocking: (t, a) => {
                                e.close(), d || ((0, o.track)("indexeddb_connection_blocking", {
                                    indexeddb_requested_version: a,
                                    indexeddb_version: t
                                }), d = !0, u())
                            },
                            terminated: () => {
                                (0, r.Kp)("IndexedDB connection was terminated abnormally", {
                                    once: !0
                                }), c = void 0
                            },
                            upgrade: g
                        });
                        return e
                    } catch (e) {
                        if ("VersionError" === e.name) {
                            const e = (await indexedDB.databases()).find((e => e.name === l));
                            (0, o.track)("indexeddb_version_conflict", {
                                indexeddb_requested_version: 9,
                                indexeddb_version: null == e ? void 0 : e.version
                            }), u(), await (0, n.f)()
                        }
                        throw e
                    }
                }
        },
        48469: (e, t, a) => {
            "use strict";
            a.d(t, {
                R: () => i
            });
            var s = a(43633),
                n = a(19172);
            const r = new WeakMap,
                i = e => {
                    let t = r.get(e);
                    return void 0 === t && (t = (0, n.f)(`atomFromReduxSelector(${e.name})`).derived((t => e(t(s.er)))).build(), r.set(e, t)), t
                }
        },
        20716: (e, t, a) => {
            "use strict";
            a.d(t, {
                IM: () => i,
                XV: () => o,
                bI: () => n,
                it: () => r
            });
            const s = e => (t, a) => {
                    if (e in t) throw Error(`Property ${e} already exists`);
                    t[e] = a
                },
                n = s("isInitialized"),
                r = s("mount"),
                i = s("selfNetworkStatus"),
                o = s("refetch")
        },
        1930: (e, t, a) => {
            "use strict";
            a.d(t, {
                cn: () => n,
                kv: () => i,
                w0: () => r
            });
            var s = a(59737);
            const n = a(2407).cn,
                r = s.w0,
                i = s.kv
        },
        43633: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z0: () => d,
                er: () => g,
                gh: () => m,
                h0: () => l,
                ok: () => p,
                zJ: () => o
            });
            var s = a(2407),
                n = a(60106),
                r = a(19172);
            let i;
            const o = () => i,
                l = () => {
                    const e = o();
                    if (void 0 === e) throw Error("Global Jotai store not initialized");
                    return e
                },
                c = (0, r.f)("globalStore").primitive(null).build(),
                d = () => c,
                u = (0, r.f)("globalRedux").primitive(null).build(),
                g = u,
                p = (0, r.f)("globalJotaiPersister").primitive(null).build(),
                m = e => {
                    if (void 0 !== i) throw Error("configureGlobalStore called twice");
                    i = (({
                        persister: e,
                        reduxStore: t
                    }) => {
                        var a;
                        const r = (0, s.MT)();
                        r.set(c, r), r.set(u, t.getState()), t.subscribe((() => {
                            r.set(u, t.getState())
                        }));
                        const i = new n.Z(null !== (a = e.get()) && void 0 !== a ? a : {});
                        return i.subscribe((() => {
                            e.set((() => i.getAll()))
                        })), r.set(p, i), r
                    })(e)
                }
        },
        28818: (e, t, a) => {
            "use strict";
            a.d(t, {
                Dv: () => d,
                KO: () => g,
                YV: () => p,
                b9: () => u,
                oR: () => c,
                tj: () => m,
                wq: () => l
            });
            var s = a(27378),
                n = a(70644),
                r = a(43633),
                i = a(7515);
            const o = s.createContext(void 0),
                l = ({
                    children: e,
                    storeOverride: t
                }) => s.createElement(o.Provider, {
                    value: null != t ? t : (0, r.zJ)()
                }, e),
                c = () => {
                    const e = s.useContext(o);
                    if (void 0 === e) throw Error("useStore must be used within a JotaiProvider");
                    return e
                },
                d = e => {
                    const t = c();
                    return (0, n.useSyncExternalStore)(s.useCallback((a => {
                        let s = !1;
                        const n = t.sub(e, (() => {
                            s || a()
                        }));
                        return () => {
                            s = !0, setTimeout((() => n()), 0)
                        }
                    }), [t, e]), s.useCallback((() => t.get(e)), [t, e]))
                },
                u = e => {
                    const t = c();
                    return s.useCallback(((...a) => {
                        t.set(e, ...a)
                    }), [t, e])
                },
                g = e => [d(e), u(e)],
                p = () => {
                    const e = c();
                    return s.useCallback(((t, ...a) => {
                        e.set(t, ...a)
                    }), [e])
                },
                m = e => d((0, i.P)(e, "value"))
        },
        10300: (e, t, a) => {
            "use strict";
            a.d(t, {
                br: () => W,
                iW: () => Z,
                ju: () => O,
                BW: () => D,
                K0: () => M,
                RT: () => B,
                QR: () => H,
                Kx: () => G,
                iV: () => V,
                zV: () => F,
                gz: () => x
            });
            var s = a(30427),
                n = a(99369),
                r = a(80254),
                i = a(40893),
                o = a(42659),
                l = a(96195),
                c = a(75532),
                d = a(97544);
            const u = e => async (t, { ...a
                }) => {
                    const s = () => {
                            if (0 === Object.keys(a).length) throw Error("All requests aborted")
                        },
                        n = (e, t, s = void 0) => {
                            const n = a[e];
                            delete a[e], void 0 !== n && (void 0 === s ? void 0 !== t ? n.resolver.resolve(t) : n.resolver.reject(Error(`Fetcher failed to fetch data for ${e.toString()}`)) : n.resolver.reject(s))
                        };
                    try {
                        Object.keys(a).forEach((e => {
                            var t;
                            const s = null === (t = a[e]) || void 0 === t ? void 0 : t.resolver.signal;
                            (null == s ? void 0 : s.aborted) ? delete a[e]: null == s || s.addEventListener("abort", (() => {
                                delete a[e]
                            }))
                        })), await e({
                            batch: a,
                            batchKey: t,
                            resolveField: n,
                            resolveIndexField: n,
                            throwIfAllAborted: s
                        }), Object.keys(a).forEach((e => {
                            var t;
                            null === (t = a[e]) || void 0 === t || t.resolver.reject(Error("Request not resolved by fetcher"))
                        }))
                    } catch (e) {
                        Object.keys(a).forEach((t => {
                            var s;
                            null === (s = a[t]) || void 0 === s || s.resolver.reject(e)
                        }))
                    }
                },
                g = e => {
                    let t = e.filter((e => !e.signal.aborted));
                    if (t.length <= 1) return e[0];
                    const a = new AbortController;
                    return t.forEach((e => {
                        e.signal.addEventListener("abort", (() => {
                            t = t.filter((t => t !== e)), 0 === t.length && a.abort()
                        }))
                    })), {
                        reject: e => {
                            t.forEach((t => {
                                t.reject(e)
                            }))
                        },
                        resolve: e => {
                            t.forEach((t => {
                                t.resolve(e)
                            }))
                        },
                        signal: a.signal
                    }
                };
            var p = a(14437);
            const m = (e, t, a) => s => {
                const n = {};
                s.forEach((({
                    params: a,
                    resolver: s
                }) => {
                    const r = a[0],
                        i = "function" == typeof t ? t : t[r],
                        o = "function" == typeof e ? () => e(...a) : () => e[r](a[1]),
                        [l, c] = o(),
                        d = (0, p.r)(l);
                    let u = n[d];
                    void 0 === u && (u = [l, {}], n[d] = u);
                    const m = u[1][r];
                    u[1][r] = void 0 === m ? {
                        params: c,
                        resolver: s
                    } : {
                        params: i(m.params, c, r),
                        resolver: g([m.resolver, s])
                    }
                })), Object.values(n).forEach((([e, t]) => {
                    a(e, t)
                }))
            };
            var h = a(20821),
                v = a(12125);
            const _ = (0, h.Q)(m({
                    classroomLeaderboard: ({
                        userId: e
                    }) => [{
                        userId: e
                    }, {}],
                    leagueAndTournamentLeaderboard: ({
                        userId: e,
                        ...t
                    }) => [{
                        userId: e
                    }, { ...t
                    }],
                    reaction: ({
                        userId: e
                    }) => [{
                        userId: e
                    }, {}]
                }, {
                    classroomLeaderboard: () => ({}),
                    leagueAndTournamentLeaderboard: (e, t) => ({
                        wasUnlocked: e.wasUnlocked || t.wasUnlocked
                    }),
                    reaction: () => ({})
                }, u((async ({
                    batch: e,
                    batchKey: {
                        userId: t
                    },
                    resolveField: a
                }) => {
                    const s = void 0 === e.leagueAndTournamentLeaderboard ? Promise.resolve(void 0) : d.dQ.get(d.dQ.getLeaguesLeaderboardId(), t, e.leagueAndTournamentLeaderboard.params.wasUnlocked),
                        n = void 0 === e.leagueAndTournamentLeaderboard ? Promise.resolve(void 0) : d.dQ.get(d.dQ.getTournamentLeaderboardId(), t, e.leagueAndTournamentLeaderboard.params.wasUnlocked),
                        r = void 0 === e.classroomLeaderboard ? [Promise.resolve(void 0), Promise.resolve(void 0)] : [d.dQ.get(d.dQ.SCHOOLS_CLASSROOM_LEADERBOARD_ID, t), d.bu.getUserClassroomLeaderboardInfo(t)],
                        [i, o, l, c] = await Promise.all([s, n, ...r]),
                        u = await (async () => {
                            var a, s;
                            if (void 0 === e.reaction) return;
                            const n = (null == o ? void 0 : o.active) ? o : i || void 0,
                                r = null === (a = null != l ? l : n) || void 0 === a ? void 0 : a.active,
                                c = null === (s = null == r ? void 0 : r.cohort.rankings.find((e => e.userId === t))) || void 0 === s ? void 0 : s.reaction;
                            return void 0 !== c ? c : d.dQ.getReactionUncohorted(d.dQ.getLeaguesLeaderboardId(), t)
                        })();
                    a("classroomLeaderboard", (() => {
                        if (void 0 !== l && void 0 !== c) {
                            if (l.active) {
                                const e = l.active.cohort.rankings.reduce(((e, t) => (e[t.userId] = t, e)), {});
                                l.active.cohort.rankings = (0, v.Y)(c.eligible_students.map((t => {
                                    var a, s, n, r, i, o;
                                    return {
                                        avatarUrl: t.avatar_url,
                                        displayName: t.display_name,
                                        hasRecentActivity: null !== (s = null === (a = e[t.user_id]) || void 0 === a ? void 0 : a.hasRecentActivity) && void 0 !== s && s,
                                        reaction: null !== (r = null === (n = e[t.user_id]) || void 0 === n ? void 0 : n.reaction) && void 0 !== r ? r : "NONE",
                                        score: null !== (o = null === (i = e[t.user_id]) || void 0 === i ? void 0 : i.score) && void 0 !== o ? o : 0,
                                        userId: t.user_id
                                    }
                                })))
                            }
                            return {
                                alias: "classroom",
                                classroomId: c.classroom_id,
                                classroomName: c.classroom_name,
                                learningLanguageId: c.learning_language_id,
                                socialDisabledUsers: c.eligible_students.flatMap((e => e.social_enabled ? [] : [e.user_id])),
                                state: l
                            }
                        }
                    })(), void 0), a("leagueAndTournamentLeaderboard", void 0 === i || void 0 === o ? void 0 : {
                        leagues: i,
                        tournament: o
                    }, void 0), a("reaction", u, void 0)
                })))),
                f = (() => {
                    const e = (0, h.Q)(m((() => [null, null]), (() => null), u((async ({
                        batch: e,
                        resolveIndexField: t
                    }) => {
                        const a = e => parseInt(e, 10);
                        (await Promise.all(Object.keys(e).map((async e => {
                            var t;
                            try {
                                return [e, (await d.Vi.userInfoPartial(a(e), ["streak"])).streak, void 0]
                            } catch (a) {
                                return (0, d.Hx)(a) && 404 === (null === (t = a.response) || void 0 === t ? void 0 : t.status) ? [e, null, void 0] : [e, void 0, a]
                            }
                        })))).forEach((([e, s, n]) => {
                            t(a(e), s, n)
                        }))
                    }))));
                    return ({
                        userId: t
                    }) => e([t, null])
                })();
            var S = a(68903),
                y = a(48469),
                E = a(19172);
            const b = (0, y.R)((e => e.config.featureFlags)),
                I = ((e, t) => {
                    const a = (0, E.f)(`featureFlag.${e}.random`).primitive(Math.random()).build();
                    return (0, E.f)(`featureFlag.${e}`).derived((t => {
                        var s;
                        return t(a) < (null !== (s = t(b)[e]) && void 0 !== s ? s : 0)
                    })).write((({}, e, {}) => {
                        e(a, Math.random())
                    })).build()
                })("web_fetch_leaderboard_streak");
            var w = a(74901),
                k = a(87471),
                T = a(95941),
                C = a(58576);
            const R = (0, y.R)((e => e.user.classroomLeaderboardsEnabled)),
                L = (0, y.R)(s.P1(o.np, k.ud)),
                A = (0, S.p)(["network-result", "override"]),
                P = e => (t, a) => {
                    if (!(e => {
                            if ("object" != typeof e || null === e) return !1;
                            const {
                                type: t
                            } = e;
                            return "string" == typeof t && A(t)
                        })(a)) return e(t, a);
                    switch (a.type) {
                        case "override":
                            {
                                const s = "function" == typeof a.value ? a.value(t) : a.value;
                                return e(t, {
                                    type: "new-value",
                                    value: s
                                })
                            }
                        case "network-result":
                            return "network-failure" === a.result.type ? ((0, C.Kp)("Failed to fetch leaderboard", {
                                ex: a.result.ex
                            }), t) : e(t, {
                                type: "new-value",
                                value: a.result.value
                            });
                        default:
                            throw (0, S.RJ)(a), Error(`Unhandled action type ${a.type}`)
                    }
                },
                D = (() => {
                    const e = (0, w.u)("classroomLeaderboard").withReducer(P(((e, t) => {
                        switch (t.type) {
                            case "new-value":
                                return t.value;
                            case "clear-ended":
                                return void 0 === e ? ((0, C.Kp)("Attempting to clear ended leaderboard with no state"), e) : (0, n.setIn)(e, ["state", "ended"], []);
                            default:
                                throw (0, S.RJ)(t), Error(`Unhandled action type ${t.type}`)
                        }
                    }))).build();
                    return (0, l.d)("classroomLeaderboard", e, (e => {
                        const t = e.untracked(i.DW);
                        return void 0 !== t && e.untracked(R) ? [{
                            queryFn: _,
                            queryKey: ["classroomLeaderboard", {
                                userId: t
                            }]
                        }] : []
                    }), {
                        fetchOnMount: !1
                    })
                })(),
                N = e => {
                    var t, a, s, n, r, i;
                    if (void 0 === e) return;
                    const o = (null === (t = e.leagues) || void 0 === t ? void 0 : t.ended) ? null === (a = null == e ? void 0 : e.leagues) || void 0 === a ? void 0 : a.ended[0] : void 0,
                        l = (null === (s = null == e ? void 0 : e.tournament) || void 0 === s ? void 0 : s.ended) ? null === (n = null == e ? void 0 : e.tournament) || void 0 === n ? void 0 : n.ended[0] : void 0;
                    return l && !o ? {
                        alias: "tournament",
                        status: l
                    } : o && !l ? {
                        alias: "leagues",
                        status: o
                    } : o && l ? (null === (r = null == o ? void 0 : o.contest) || void 0 === r ? void 0 : r.contestEnd) > (null === (i = null == l ? void 0 : l.contest) || void 0 === i ? void 0 : i.contestEnd) ? {
                        alias: "leagues",
                        status: o
                    } : {
                        alias: "tournament",
                        status: l
                    } : void 0
                },
                O = (() => {
                    const e = (0, w.u)("baseLeaguesLeaderboard").withReducer(P(((e, t) => {
                        switch (t.type) {
                            case "clear-ended":
                                {
                                    if (void 0 === e) return (0, C.Kp)("Attempting to clear ended leaderboard with no state"), e;
                                    let t = e;
                                    return t = (0, n.setIn)(t, ["leagues", "ended"], []),
                                    t = (0, n.setIn)(t, ["tournament", "ended"], []),
                                    t
                                }
                            case "new-value":
                                {
                                    const a = t.value;
                                    return void 0 === a ? e : {
                                        lastKnownEndedLeaderboard: (() => {
                                            var t, s, n;
                                            const r = N(a);
                                            return void 0 !== (null == r ? void 0 : r.status) && void 0 !== (null === (t = null == e ? void 0 : e.lastKnownEndedLeaderboard) || void 0 === t ? void 0 : t.status) && (null === (s = null == r ? void 0 : r.status.contest) || void 0 === s ? void 0 : s.contestEnd) > (null === (n = null == e ? void 0 : e.lastKnownEndedLeaderboard) || void 0 === n ? void 0 : n.status.contest.contestEnd) || void 0 === (null == e ? void 0 : e.lastKnownEndedLeaderboard) ? r : null == e ? void 0 : e.lastKnownEndedLeaderboard
                                        })(),
                                        leagues: (() => {
                                            const t = null == e ? void 0 : e.leagues.numSessionsRemainingToUnlock,
                                                s = a.leagues.numSessionsRemainingToUnlock;
                                            return (0, n.set)(a.leagues, "numSessionsRemainingToUnlock", void 0 === t || void 0 === s ? s : Math.max(0, Math.min(t, s)))
                                        })(),
                                        tournament: a.tournament
                                    }
                                }
                            default:
                                throw (0, S.RJ)(t), Error(`Unhandled action type ${t.type}`)
                        }
                    }))).build();
                    return (0, l.d)("baseLeaguesLeaderboard", e, (e => {
                        const t = e.untracked(L),
                            a = e.untracked(i.DW);
                        if (!t || void 0 === a) return [];
                        const s = e.untracked(U);
                        return [{
                            queryFn: _,
                            queryKey: ["leagueAndTournamentLeaderboard", {
                                userId: a,
                                wasUnlocked: s
                            }]
                        }]
                    }), {
                        fetchOnMount: !1,
                        queryKeyHasher: ([e, t]) => [e, r.CE(t, "wasUnlocked")]
                    })
                })(),
                x = (0, E.f)("tournamentState").derivedTracked((e => {
                    var t;
                    return null === (t = e(O)) || void 0 === t ? void 0 : t.tournament
                })).build(),
                F = (0, E.f)("leaguesLeaderboard").derivedTracked((e => (e => {
                    if (void 0 === e) return;
                    const {
                        leagues: t,
                        tournament: a,
                        lastKnownEndedLeaderboard: s
                    } = e;
                    if (null == a ? void 0 : a.active) return {
                        alias: "tournament",
                        state: a
                    };
                    if (t.active) return {
                        alias: "leagues",
                        state: t
                    };
                    const n = "leagues" === (null == s ? void 0 : s.alias) && (null == s ? void 0 : s.status.cohort.tier) === T.WP.length - 1 && (null == s ? void 0 : s.status.isPromoted);
                    return a && n ? {
                        alias: "tournament",
                        state: { ...a,
                            tier: 0
                        }
                    } : "tournament" !== (null == s ? void 0 : s.alias) || !0 !== (null == s ? void 0 : s.status.isLoser) && !0 !== (null == s ? void 0 : s.status.isDemoted) && !0 !== (null == s ? void 0 : s.status.isWinner) || !t ? "tournament" === (null == s ? void 0 : s.alias) && (null == s ? void 0 : s.status.isPromoted) && a ? {
                        alias: "tournament",
                        state: a
                    } : (null == s || s.alias, {
                        alias: "leagues",
                        state: t
                    }) : {
                        alias: "leagues",
                        state: t
                    }
                })(e(O)))).build(),
                M = (0, E.f)("endedLeaderboard").derivedTracked((e => N(e(O)))).build(),
                U = (0, E.f)("leaguesLeaderboard.isUnlocked").selected(F, (({
                    value: e
                }) => 0 === (null == e ? void 0 : e.state.numSessionsRemainingToUnlock))).build(),
                H = (0, l.d)("leaderboardReaction", (0, w.u)("leaderboardReaction").withReducer(P(((e, t) => {
                    if ("new-value" === t.type) return t.value;
                    throw (0, S.RJ)(t.type), Error(`Unhandled action type ${t.type}`)
                }))).build(), (e => {
                    const t = e.untracked(i.DW);
                    return void 0 === t ? [] : [{
                        queryFn: _,
                        queryKey: ["reaction", {
                            userId: t
                        }]
                    }]
                })),
                G = (0, w.u)("leaderboardSessionEndData").withReducer(((e, t) => {
                    const a = "leaderboardMoveUpPrompt" !== t.slideType ? (void 0 !== (null === (s = null == e ? void 0 : e.moveUpPrompts) || void 0 === s ? void 0 : s.numShown) && e.moveUpPrompts.numShown > 0 && t.cohortId !== e.moveUpPrompts.cohortId && (0, C.um)("Cohort changed, but move-up prompt count did not reset", {
                        data: {
                            numShown: null === (n = null == e ? void 0 : e.moveUpPrompts) || void 0 === n ? void 0 : n.numShown,
                            slideType: t.slideType
                        },
                        sample: .1
                    }), null !== (i = null === (r = null == e ? void 0 : e.moveUpPrompts) || void 0 === r ? void 0 : r.numShown) && void 0 !== i ? i : 0) : void 0 === e || t.cohortId !== e.moveUpPrompts.cohortId ? 1 : e.moveUpPrompts.numShown + 1;
                    var s, n, r, i;
                    return {
                        lastShownDate: t.shownDate,
                        moveUpPrompts: {
                            cohortId: t.cohortId,
                            numShown: a
                        }
                    }
                })).build(),
                V = (() => {
                    const e = (0, w.u)("leaderboardStreaks").withReducer(((e, t) => {
                        if ("network-failure" === t.result.type) return (0, C.Kp)("Failed to fetch leaderboard streak", {
                            ex: t.result.ex
                        }), e;
                        const {
                            cohortId: a,
                            userId: s
                        } = t.queryKey;
                        return a !== (null == e ? void 0 : e.cohortId) ? {
                            cohortId: a,
                            streakLengths: {
                                [t.queryKey.userId]: t.result.value
                            }
                        } : (0, n.setIn)(e, ["streakLengths", s], t.result.value)
                    })).build();
                    return (0, l.d)("leaderboardStreaks", e, (t => {
                        const a = t(Z),
                            s = t(z);
                        if (void 0 === a || void 0 === s || !t.untracked(I)) return [];
                        const n = t.untracked(e);
                        return s.flatMap((e => (null == n ? void 0 : n.cohortId) === a && void 0 !== n.streakLengths[e] ? [] : [{
                            queryFn: f,
                            queryKey: {
                                cohortId: a,
                                userId: e
                            }
                        }]))
                    }), {
                        blockOnDependencies: !1
                    })
                })(),
                B = (0, E.f)("leaderboard").derivedTracked((e => e.untracked(R) ? e(D) : e(F))).write(((e, t, {}, a, s) => {
                    const n = e(R) ? "classroom" : "leagues";
                    a.alias !== n && (0, C.Kp)("Attempted to set unexpected leaderboard", {
                        data: {
                            expectedLeaderboard: n,
                            newLeaderboard: a.alias
                        }
                    }), "classroom" === a.alias ? t(...(0, c.p)(D, a, s)) : t(...(0, c.p)(O, (e => {
                        if (void 0 !== e) return { ...e,
                            [a.alias]: a.state
                        }
                    }), s))
                })).build(),
                z = (0, E.f)("activeCohortUserIds").selectedTracked(B, (e => {
                    var t;
                    return null === (t = null == e ? void 0 : e.state.active) || void 0 === t ? void 0 : t.cohort.rankings.map((e => e.userId))
                }), r.Xy).build(),
                Z = (0, E.f)("activeCohortId").selectedTracked(B, (e => {
                    var t;
                    return null === (t = null == e ? void 0 : e.state.active) || void 0 === t ? void 0 : t.cohort.id
                })).build(),
                W = [O, D, H, V]
        },
        33124: (e, t, a) => {
            "use strict";
            a.d(t, {
                Fh: () => v,
                Bp: () => h,
                PD: () => _,
                hO: () => m
            });
            var s = a(99369),
                n = a(40893),
                r = a(42659),
                i = a(97544),
                o = a(75532),
                l = a(48469),
                c = a(10300),
                d = a(19172),
                u = a(7515),
                g = a(87471),
                p = a(81621);
            const m = (0, d.f)("setLeaderboardReaction").write(((e, t, a) => {
                    const s = e(n.DW),
                        r = e((0, u.P)(c.iW, "value"));
                    if (void 0 === s) throw Error("Cannot set reaction without user ID");
                    t(c.QR, {
                        applyOptimisticUpdate: () => a,
                        execute: async ({
                            update: e
                        }) => {
                            void 0 === r ? await i.dQ.setReactionUncohorted(i.dQ.getLeaguesLeaderboardId(), s, a) : await i.dQ.setReactionCohorted(r, s, a), e({
                                type: "override",
                                value: a
                            })
                        },
                        resolveMutationConflict: () => "race",
                        resolveQueryConflict: () => "superseded"
                    })
                })).build(),
                h = (0, d.f)("recordedSessionForLeaderboard").write(((e, t) => {
                    t(...(0, o.p)(c.ju, (e => {
                        if (void 0 === (null == e ? void 0 : e.leagues)) return e;
                        const {
                            numSessionsRemainingToUnlock: t
                        } = e.leagues;
                        return void 0 === t ? e : (0, s.setIn)(e, ["leagues", "numSessionsRemainingToUnlock"], t - 1)
                    }), "unaffected"))
                })).build(),
                v = (0, d.f)("completeLeaderboard").write(((e, t, a) => {
                    if ("leagues" === a) {
                        const t = e((0, l.R)(r.np));
                        if (!(0, p.Ud)(t) || !(0, g.ud)(t)) return
                    }
                    const s = e(n.DW);
                    var o, d;
                    t(...(o = "classroom" === a ? c.BW : c.ju, d = {
                        execute: async ({
                            update: e
                        }) => {
                            e({
                                type: "clear-ended"
                            }), await i.dQ.patch("classroom" === a ? i.dQ.SCHOOLS_CLASSROOM_LEADERBOARD_ID : "tournament" === a ? i.dQ.getTournamentLeaderboardId() : i.dQ.getLeaguesLeaderboardId(), s)
                        },
                        resolveMutationConflict: () => "race",
                        resolveQueryConflict: () => "invalidated"
                    }, [o, d]))
                })).build(),
                _ = (0, d.f)("refetchLeaderboardData").write(((e, t) => {
                    t(c.ju.refetch, "refetch"), t(c.BW.refetch, "refetch"), t(c.QR.refetch, "refetch")
                })).build()
        },
        71752: (e, t, a) => {
            "use strict";
            a.d(t, {
                q: () => r
            });
            var s = a(1930),
                n = a(1965);
            const r = e => t => {
                const {
                    addComments: a,
                    build: r
                } = (0, n.r)(t), i = (...n) => {
                    const i = i => {
                        const o = o => {
                            const l = e => o(0 === n.length || null != e ? e : n[0]);
                            return a({ ...r((() => e(t, i, (e => (0, s.cn)(l(e)))))),
                                withReducer: a => r((() => e(t, i, (e => (0, s.w0)(l(e), a)))))
                            })
                        };
                        return a({
                            transformInitialValue: o,
                            ...o((e => e)),
                            withBaseAtom: a => r((() => e(t, i, a)))
                        })
                    };
                    return a({
                        selectPersistedValue: i,
                        ...i((e => e))
                    })
                };
                return a({
                    withDefault: i,
                    ...i(void 0)
                })
            }
        },
        33956: (e, t, a) => {
            "use strict";
            a.d(t, {
                M: () => r
            });
            var s = a(1930),
                n = a(19172);
            const r = e => (t, a, r = s.cn) => {
                const i = a => (0, n.f)(`${e.debugLabel}.${t}.${a}`),
                    o = i("substate").derived((a => a(e).substate(t))).build(),
                    l = i("baseAtom").derived((e => r(e(o).get()))).build();
                return i("persistedAtom").derived((e => e(e(l)))).write(((e, t, s) => {
                    const n = e(l);
                    t(n, s);
                    const r = a(e(n));
                    e(o).set((() => r))
                })).build()
            }
        },
        1965: (e, t, a) => {
            "use strict";
            a.d(t, {
                r: () => s
            });
            const s = e => {
                const t = e => e;
                return {
                    addComments: t,
                    build: t => ({
                        build: () => {
                            return a = t(), s = e, a.debugLabel = s, a;
                            var a, s
                        }
                    })
                }
            }
        },
        19172: (e, t, a) => {
            "use strict";
            a.d(t, {
                f: () => o
            });
            var s = a(80254),
                n = a(1930),
                r = a(1965),
                i = a(2670);
            const o = e => {
                const {
                    addComments: t,
                    build: a
                } = (0, r.r)(e), l = (e, a) => {
                    const s = s => {
                        const n = t => c((t => s(e(t)))).write(((e, s, ...n) => a(e, s, ...t(...n))));
                        return t({ ...n(((...e) => e)),
                            transformWriteArgs: n
                        })
                    };
                    return t({ ...s((e => e)),
                        transformValue: s
                    })
                }, c = e => t({ ...a((() => (0, n.cn)(e))),
                    write: t => a((() => (0, n.cn)(e, t)))
                });
                return t({
                    deref: t => l((e => {
                        const a = t(e);
                        if (void 0 !== a) return e(a)
                    }), ((a, s, ...n) => {
                        const r = t(a);
                        if (void 0 === r) throw Error(`Attempted to write to a deref atom with no sub-atom (atom: ${e})`);
                        s(r, ...n)
                    })),
                    derefTracked: a => {
                        const s = l((0, i.wI)((e => {
                            const t = a(e);
                            if (void 0 !== t) return e(t)
                        })), ((t, s, ...n) => {
                            const r = (0, i.wI)(a)(t).value;
                            if (void 0 === r) throw Error(`Attempted to write to a deref atom with no sub-atom (atom: ${e})`);
                            s(r, ...n)
                        }));
                        return t({ ...s,
                            transformValue: e => s.transformValue((t => ({
                                deps: t.deps,
                                value: e(t.value)
                            })))
                        })
                    },
                    derived: c,
                    derivedTracked: e => c((0, i.wI)(e)),
                    primitive: e => {
                        if ("function" == typeof e) throw Error("primitive atom cannot be a function");
                        return t({ ...a((() => (0, n.cn)(e))),
                            reducer: t => a((() => (0, n.w0)(e, t))),
                            write: t => a((() => (0, n.cn)(e, t)))
                        })
                    },
                    primitiveLazy: a => {
                        const n = s.IH((() => o(e).primitive(a()).build())),
                            r = o(`${e}.lazy`).derived((e => e(n())));
                        return t({ ...r,
                            reducer: e => r.write(((t, a, s) => a(n(), e(t(n()), s))))
                        })
                    },
                    selected: (e, t, s = Object.is) => a((() => (0, n.kv)(e, (e => t(e)), s))),
                    selectedTracked: (e, t, s = Object.is) => a((() => (0, n.kv)(e, (({
                        value: a
                    }) => {
                        const s = t(a);
                        return {
                            deps: [e],
                            value: s
                        }
                    }), ((e, t) => s(e.value, t.value))))),
                    write: e => a((() => (0, n.cn)(null, e)))
                })
            }
        },
        7515: (e, t, a) => {
            "use strict";
            a.d(t, {
                P: () => i
            });
            var s = a(80254),
                n = a(1930);
            const r = s.HP((e => t => t[e])),
                i = (e, t) => {
                    const a = r(t),
                        s = (0, n.kv)(e, a);
                    return void 0 === s.debugLabel && (s.debugLabel = `${e.debugLabel}["${t}"]`), s
                }
        },
        2670: (e, t, a) => {
            "use strict";
            a.d(t, {
                wI: () => i,
                xQ: () => o
            });
            var s = a(1930),
                n = a(7515),
                r = a(73573);
            const i = e => t => {
                    const a = [],
                        s = e => (a.push(e), t((0, n.P)(e, "value")));
                    s.record = e => a.push(e), s.untracked = t;
                    const r = e(s);
                    return {
                        deps: a,
                        value: r
                    }
                },
                o = (0, r.V)(((e, t, a = Object.is) => {
                    const r = (0, s.kv)((0, n.P)(e, "value"), ((s, n) => {
                        const r = t(s);
                        return void 0 === n ? {
                            deps: [e],
                            value: r
                        } : a(r, n.value) ? n : {
                            deps: n.deps,
                            value: r
                        }
                    }), ((e, t) => a(e.value, t.value)));
                    return r.debugLabel = `${e.debugLabel}.select(${t.name})`, r
                }))
        },
        74901: (e, t, a) => {
            "use strict";
            a.d(t, {
                u: () => i
            });
            var s = a(43633),
                n = a(71752);
            const r = (0, a(33956).M)(s.ok),
                i = (0, n.q)(r)
        },
        93746: (e, t, a) => {
            "use strict";
            a.d(t, {
                AP: () => i,
                h9: () => P,
                Py: () => v,
                vI: () => c,
                M$: () => d,
                b7: () => u,
                Jl: () => S,
                lx: () => b,
                vY: () => E,
                BE: () => g,
                Ux: () => I,
                k4: () => N,
                D3: () => _,
                TS: () => y,
                zp: () => R,
                nV: () => L,
                jO: () => w,
                OK: () => T,
                vx: () => A,
                Dz: () => f
            });
            var s = a(80254);
            const n = JSON.parse('[{"from_language_id":"ar","learning_language_id":"de","phase":3},{"from_language_id":"ar","learning_language_id":"en","phase":3},{"from_language_id":"ar","learning_language_id":"es","phase":1},{"from_language_id":"ar","learning_language_id":"fr","phase":3},{"from_language_id":"ar","learning_language_id":"sv","phase":3},{"from_language_id":"bn","learning_language_id":"en","phase":3},{"from_language_id":"cs","learning_language_id":"en","phase":3},{"from_language_id":"de","learning_language_id":"en","phase":3},{"from_language_id":"de","learning_language_id":"es","phase":3},{"from_language_id":"de","learning_language_id":"fr","phase":3},{"from_language_id":"de","learning_language_id":"it","phase":3},{"from_language_id":"el","learning_language_id":"en","phase":3},{"from_language_id":"en","learning_language_id":"ar","phase":3},{"from_language_id":"en","learning_language_id":"cs","phase":3},{"from_language_id":"en","learning_language_id":"cy","phase":3},{"from_language_id":"en","learning_language_id":"da","phase":3},{"from_language_id":"en","learning_language_id":"de","phase":3},{"from_language_id":"en","learning_language_id":"el","phase":3},{"from_language_id":"en","learning_language_id":"eo","phase":3},{"from_language_id":"en","learning_language_id":"en","phase":3},{"from_language_id":"en","learning_language_id":"es","phase":3},{"from_language_id":"en","learning_language_id":"fi","phase":3},{"from_language_id":"en","learning_language_id":"fr","phase":3},{"from_language_id":"en","learning_language_id":"ga","phase":3},{"from_language_id":"en","learning_language_id":"gd","phase":3},{"from_language_id":"en","learning_language_id":"he","phase":3},{"from_language_id":"en","learning_language_id":"hi","phase":3},{"from_language_id":"en","learning_language_id":"ht","phase":3},{"from_language_id":"en","learning_language_id":"hu","phase":3},{"from_language_id":"en","learning_language_id":"hv","phase":3},{"from_language_id":"en","learning_language_id":"hw","phase":3},{"from_language_id":"en","learning_language_id":"id","phase":3},{"from_language_id":"en","learning_language_id":"it","phase":3},{"from_language_id":"en","learning_language_id":"ja","phase":3},{"from_language_id":"en","learning_language_id":"ko","phase":3},{"from_language_id":"en","learning_language_id":"la","phase":3},{"from_language_id":"en","learning_language_id":"mi","phase":1},{"from_language_id":"en","learning_language_id":"nl-NL","phase":3},{"from_language_id":"en","learning_language_id":"no-BO","phase":3},{"from_language_id":"en","learning_language_id":"nv","phase":3},{"from_language_id":"en","learning_language_id":"pl","phase":3},{"from_language_id":"en","learning_language_id":"pt","phase":3},{"from_language_id":"en","learning_language_id":"ro","phase":3},{"from_language_id":"en","learning_language_id":"ru","phase":3},{"from_language_id":"en","learning_language_id":"sv","phase":3},{"from_language_id":"en","learning_language_id":"sw","phase":3},{"from_language_id":"en","learning_language_id":"tlh","phase":2},{"from_language_id":"en","learning_language_id":"tr","phase":3},{"from_language_id":"en","learning_language_id":"uk","phase":3},{"from_language_id":"en","learning_language_id":"vi","phase":3},{"from_language_id":"en","learning_language_id":"yi","phase":3},{"from_language_id":"en","learning_language_id":"zh","phase":3},{"from_language_id":"en","learning_language_id":"zu","phase":3},{"from_language_id":"es","learning_language_id":"ca","phase":3},{"from_language_id":"es","learning_language_id":"de","phase":3},{"from_language_id":"es","learning_language_id":"en","phase":3},{"from_language_id":"es","learning_language_id":"eo","phase":3},{"from_language_id":"es","learning_language_id":"fr","phase":3},{"from_language_id":"es","learning_language_id":"gn","phase":3},{"from_language_id":"es","learning_language_id":"it","phase":3},{"from_language_id":"es","learning_language_id":"pt","phase":3},{"from_language_id":"es","learning_language_id":"qc","phase":1},{"from_language_id":"es","learning_language_id":"ru","phase":3},{"from_language_id":"es","learning_language_id":"sv","phase":3},{"from_language_id":"es","learning_language_id":"yu","phase":1},{"from_language_id":"fr","learning_language_id":"de","phase":3},{"from_language_id":"fr","learning_language_id":"en","phase":3},{"from_language_id":"fr","learning_language_id":"eo","phase":2},{"from_language_id":"fr","learning_language_id":"es","phase":3},{"from_language_id":"fr","learning_language_id":"it","phase":3},{"from_language_id":"fr","learning_language_id":"pt","phase":3},{"from_language_id":"hi","learning_language_id":"en","phase":3},{"from_language_id":"hu","learning_language_id":"de","phase":3},{"from_language_id":"hu","learning_language_id":"en","phase":3},{"from_language_id":"id","learning_language_id":"en","phase":3},{"from_language_id":"it","learning_language_id":"de","phase":3},{"from_language_id":"it","learning_language_id":"en","phase":3},{"from_language_id":"it","learning_language_id":"es","phase":3},{"from_language_id":"it","learning_language_id":"fr","phase":3},{"from_language_id":"ja","learning_language_id":"en","phase":3},{"from_language_id":"ja","learning_language_id":"fr","phase":3},{"from_language_id":"ja","learning_language_id":"ko","phase":3},{"from_language_id":"ja","learning_language_id":"zh","phase":3},{"from_language_id":"ko","learning_language_id":"en","phase":3},{"from_language_id":"ko","learning_language_id":"zh","phase":1},{"from_language_id":"nl-NL","learning_language_id":"de","phase":3},{"from_language_id":"nl-NL","learning_language_id":"en","phase":3},{"from_language_id":"nl-NL","learning_language_id":"fr","phase":3},{"from_language_id":"pa","learning_language_id":"en","phase":1},{"from_language_id":"pl","learning_language_id":"en","phase":3},{"from_language_id":"pt","learning_language_id":"de","phase":3},{"from_language_id":"pt","learning_language_id":"en","phase":3},{"from_language_id":"pt","learning_language_id":"eo","phase":3},{"from_language_id":"pt","learning_language_id":"es","phase":3},{"from_language_id":"pt","learning_language_id":"fr","phase":3},{"from_language_id":"pt","learning_language_id":"it","phase":3},{"from_language_id":"ro","learning_language_id":"en","phase":3},{"from_language_id":"ru","learning_language_id":"de","phase":3},{"from_language_id":"ru","learning_language_id":"en","phase":3},{"from_language_id":"ru","learning_language_id":"es","phase":3},{"from_language_id":"ru","learning_language_id":"fr","phase":3},{"from_language_id":"ru","learning_language_id":"sv","phase":1},{"from_language_id":"ru","learning_language_id":"uk","phase":1},{"from_language_id":"te","learning_language_id":"en","phase":3},{"from_language_id":"th","learning_language_id":"en","phase":3},{"from_language_id":"tl","learning_language_id":"en","phase":3},{"from_language_id":"tr","learning_language_id":"de","phase":3},{"from_language_id":"tr","learning_language_id":"en","phase":3},{"from_language_id":"tr","learning_language_id":"fr","phase":1},{"from_language_id":"tr","learning_language_id":"ru","phase":3},{"from_language_id":"uk","learning_language_id":"en","phase":3},{"from_language_id":"vi","learning_language_id":"en","phase":3},{"from_language_id":"vi","learning_language_id":"zh","phase":3},{"from_language_id":"zh","learning_language_id":"de","phase":1},{"from_language_id":"zh","learning_language_id":"en","phase":3},{"from_language_id":"zh","learning_language_id":"es","phase":2},{"from_language_id":"zh","learning_language_id":"fr","phase":3},{"from_language_id":"zh","learning_language_id":"it","phase":2},{"from_language_id":"zh","learning_language_id":"ja","phase":3},{"from_language_id":"zh","learning_language_id":"ko","phase":2},{"from_language_id":"zh","learning_language_id":"zh-HK","phase":3}]'),
                r = JSON.parse('{"ar":{"abbrev":"ar","label":"العربية","name":"Arabic","plural_forms":["zero","one","two","few","many","other"],"plural_rule":"n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5","script_direction":"rtl"},"bn":{"abbrev":"bn","label":"বাংলা","name":"Bengali","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"ca":{"abbrev":"ca","label":"català","name":"Catalan","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"cs":{"abbrev":"cs","label":"Čeština","name":"Czech","plural_forms":["one","few","other"],"plural_rule":"(n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2","script_direction":"ltr"},"cy":{"abbrev":"cy","label":"Cymraeg","name":"Welsh","plural_forms":["one","two","other","many"],"plural_rule":"(n === 1) ? 0 : (n === 2) ? 1 : (n !== 8 && n !== 11) ? 2 : 3","script_direction":"ltr"},"da":{"abbrev":"da","label":"dansk","name":"Danish","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"de":{"abbrev":"de","label":"Deutsch","name":"German","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"el":{"abbrev":"el","label":"Ελληνικά","name":"Greek","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"en":{"abbrev":"en","label":"English","name":"English","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"eo":{"abbrev":"eo","label":"Esperanto","name":"Esperanto","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"es":{"abbrev":"es","label":"Español","name":"Spanish","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"fi":{"abbrev":"fi","label":"suomen kieli","name":"Finnish","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"fr":{"abbrev":"fr","label":"Français","name":"French","plural_forms":["one","other"],"plural_rule":"(n > 1) ? 1 : 0","script_direction":"ltr"},"ga":{"abbrev":"ga","label":"Gaeilge","name":"Irish","plural_forms":["one","two","few","many","other"],"plural_rule":"n === 1 ? 0 : n === 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4","script_direction":"ltr"},"gd":{"abbrev":"gd","label":"Gàidhlig","name":"Scottish Gaelic","plural_forms":["one","two","few","other"],"plural_rule":"(n === 1 || n === 11) ? 0 : (n === 2 || n === 12) ? 1 : (n !== 0 && n < 20) ? 2 : 3","script_direction":"ltr"},"gn":{"abbrev":"gn","label":"Avañe\'ẽ","name":"Guarani","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"he":{"abbrev":"he","label":null,"name":"Hebrew","plural_forms":["one","two","many","other"],"plural_rule":"(n === 1) ? 0 : (n === 2) ? 1 : (n > 10 && n % 10 === 0) ? 2 : 3","script_direction":"rtl"},"hi":{"abbrev":"hi","label":"हिंदी","name":"Hindi","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"ht":{"abbrev":"ht","label":"Kreyòl ayisyen","name":"Haitian Creole","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"hu":{"abbrev":"hu","label":"Magyar","name":"Hungarian","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"hv":{"abbrev":"hv","label":"Valyria","name":"High Valyrian","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"hw":{"abbrev":"hw","label":"Ōlelo Hawaiʻi","name":"Hawaiian","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"id":{"abbrev":"id","label":"Bahasa Indonesia","name":"Indonesian","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"it":{"abbrev":"it","label":"Italiano","name":"Italian","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"ja":{"abbrev":"ja","label":"日本語","name":"Japanese","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"ko":{"abbrev":"ko","label":"한국어","name":"Korean","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"la":{"abbrev":"la","label":"Lingua latīna","name":"Latin","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"mi":{"abbrev":"mi","label":null,"name":"Māori","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"nl-NL":{"abbrev":"dn","label":"Nederlands","name":"Dutch","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"no-BO":{"abbrev":"nb","label":"bokmål","name":"Norwegian (Bokmål)","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"nv":{"abbrev":"nv","label":"Diné bizaad","name":"Navajo","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"pa":{"abbrev":"pa","label":"ਪੰਜਾਬੀ","name":"Punjabi (Gurmukhi)","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"pl":{"abbrev":"pl","label":"Polski","name":"Polish","plural_forms":["one","few","many"],"plural_rule":"n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2","script_direction":"ltr"},"pt":{"abbrev":"pt","label":"Português","name":"Portuguese","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"qc":{"abbrev":"qc","label":null,"name":"K\'iche\'","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"ro":{"abbrev":"ro","label":"Română","name":"Romanian","plural_forms":["one","few","other"],"plural_rule":"n === 1 ? 0 : (n === 0 || (n % 100 > 0 && n % 100 < 20)) ? 1 : 2","script_direction":"ltr"},"ru":{"abbrev":"ru","label":"Русский","name":"Russian","plural_forms":["one","few","many"],"plural_rule":"n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2","script_direction":"ltr"},"sv":{"abbrev":"sv","label":"svenska","name":"Swedish","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"sw":{"abbrev":"sw","label":"Kiswahili","name":"Swahili","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"te":{"abbrev":"te","label":"తెలుగు","name":"Telugu","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"th":{"abbrev":"th","label":"ภาษาไทย","name":"Thai","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"tl":{"abbrev":"tl","label":"Tagalog","name":"Tagalog","plural_forms":["one","other"],"plural_rule":"(n % 10 === 4 || n % 10 === 6 || n % 10 === 9) ? 1 : 0","script_direction":"ltr"},"tlh":{"abbrev":"kl","label":"tlhIngan Hol","name":"Klingon","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"tr":{"abbrev":"tr","label":"Türkçe","name":"Turkish","plural_forms":["one","other"],"plural_rule":"(n > 1) ? 1 : 0","script_direction":"ltr"},"uk":{"abbrev":"uk","label":"Українською","name":"Ukrainian","plural_forms":["one","few","many"],"plural_rule":"n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2","script_direction":"ltr"},"vi":{"abbrev":"vi","label":"Tiếng Việt","name":"Vietnamese","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"xx-ZB":{"abbrev":"xz","label":"Español","name":"Spanish","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"yi":{"abbrev":"yi","label":"ייִדיש","name":"Yiddish","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"rtl"},"yu":{"abbrev":"yu","label":null,"name":"Yucatec","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"},"zh":{"abbrev":"zs","label":"中文","name":"Chinese","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"zh-HK":{"abbrev":"zc","label":"廣東話","name":"Chinese (Cantonese)","plural_forms":["other"],"plural_rule":"0","script_direction":"ltr"},"zu":{"abbrev":"zu","label":"isiZulu","name":"Zulu","plural_forms":["one","other"],"plural_rule":"(n != 1) ? 1 : 0","script_direction":"ltr"}}');
            var i, o = a(68903),
                l = a(58576);
            ! function(e) {
                e[e.Active = 1] = "Active", e[e.Beta = 2] = "Beta", e[e.Inactive = 0] = "Inactive", e[e.Released = 3] = "Released"
            }(i || (i = {}));
            const c = (e, t) => "zh" === e ? t ? "zh-TW" : "zh-CN" : T(e) ? e : "en",
                d = e => e.startsWith("zh") ? "zh" : e.startsWith("nl") ? "nl" : k(e) ? e : ((0, l.vU)("UI language not able to be converted to LanguageId.", {
                    data: {
                        languageId: e
                    }
                }), "en"),
                u = e => ["bn", "hi", "pa", "ta", "te", "tl", "uk"].includes(e) ? "auto" : "nl-NL" === e ? "nl" : "zh-CN" === e ? "zh" : e,
                g = () => {
                    var e;
                    return (null === (e = navigator.languages) || void 0 === e ? void 0 : e[0]) || navigator.language || "en"
                },
                p = s.Xc(r, (e => e.abbrev)),
                m = s.U_(p),
                h = s.jj(n.filter((e => e.phase >= i.Active)).flatMap((e => "zh" === e.from_language_id ? ["zh-CN", "zh-TW"] : e.from_language_id))),
                v = e => m[e],
                _ = e => p[e],
                f = Object.keys(r),
                S = s.Xc(s.vM(n.filter((e => e.phase >= i.Beta)), "from_language_id"), (e => s.jg(e, "learning_language_id").sort())),
                y = e => {
                    if (void 0 === e) throw Error("Course is undefined when checking if it is a beta course. It could be caused by the user being languageless.");
                    return "BETA" === e.status
                },
                E = e => r[e].name,
                b = e => r[e].label,
                I = e => r[e].script_direction,
                w = (0, o.p)(f),
                k = ((0, o.p)(s.XP(m)), (0, o.p)(["ar", "bn", "cs", "de", "el", "en", "es", "fr", "hi", "hu", "id", "it", "ja", "ko", "nl", "pa", "pl", "pt", "ro", "ru", "ta", "te", "th", "tl", "tr", "uk", "vi", "zh"])),
                T = (0, o.p)(h),
                C = s.Xc(s.vM(n, "from_language_id"), (e => s.jg(e, "learning_language_id").sort())),
                R = (e, t) => {
                    var a;
                    return !0 === (null === (a = C[t]) || void 0 === a ? void 0 : a.includes(e))
                },
                L = (e, t) => {
                    var a;
                    return !0 === (null === (a = S[t]) || void 0 === a ? void 0 : a.includes(e))
                },
                A = e => ["zh-CN", "zh-TW", "zs"].includes(e),
                P = (D = window.duo.uiLanguage).startsWith("zh") ? "zh" : w(D) ? D : ((0, l.vU)("UI language not able to be converted to LanguageId.", {
                    data: {
                        languageId: D
                    }
                }), "en");
            var D;
            const N = (e, t, a) => {
                const s = {
                    ja: ["en"]
                };
                return !(!(e in s) || !s[e].includes(t) || a !== e) || !["ja", "th", "zh", "zh-HK"].includes(e)
            }
        },
        1398: (e, t, a) => {
            "use strict";
            a.d(t, {
                N: () => n,
                Z: () => r
            });
            var s = a(27378);
            const n = e => "preload" in e,
                r = e => {
                    let t, a, n = "uninitialized";
                    const r = async () => {
                            t = e(), n = "pending";
                            try {
                                a = (await t).default, n = "resolved"
                            } catch (e) {
                                a = e, n = "rejected"
                            }
                        },
                        i = s.forwardRef(((e, i) => {
                            if ("uninitialized" === n && r(), "resolved" === n) return s.createElement(a, { ...e,
                                ref: i
                            });
                            throw null != a ? a : t
                        }));
                    return i.hasLoaded = () => "resolved" === n, i.getError = () => "rejected" === n ? a : void 0, i.isLoading = () => "pending" === n, i.preload = async () => {
                        "uninitialized" === n && r(), await t
                    }, i
                }
        },
        87471: (e, t, a) => {
            "use strict";
            a.d(t, {
                Cv: () => N,
                Ep: () => I,
                NO: () => b,
                PR: () => f,
                TL: () => R,
                Tm: () => C,
                XU: () => T,
                Yw: () => v,
                ZL: () => y,
                c$: () => w,
                d0: () => A,
                em: () => k,
                fY: () => L,
                hn: () => S,
                pW: () => D,
                u4: () => E,
                ud: () => P,
                vl: () => _
            });
            var s = a(99369),
                n = a(65908),
                r = a(66586),
                i = a(25324),
                o = a(97544),
                l = a(80388),
                c = a(17135),
                d = a(64115),
                u = a(81149),
                g = a(8654),
                p = a(95941),
                m = a(81621),
                h = a(20028);
            const v = (e, t) => t.filter((t => "CURRENCY" === t.rewardType && (t.tier === e || null === t.tier))).reduce(((e, t) => (e[t.rank] = t.itemQuantity, e)), {}),
                _ = (e, t, a) => e.filter((e => e.tier === t && (e.rankRange && e.rankRange.length > 1 ? a >= e.rankRange[0] && a <= e.rankRange[1] : e.rank === a))),
                f = (e, t) => {
                    if (!(null === t || e >= t.length)) return t[e]
                },
                S = (e, t) => {
                    if (null !== t && 0 !== e) return t[e - 1]
                },
                y = (e, t) => !!t && e < t,
                E = (e, t, a) => !!a && t - e - 1 < a,
                b = (e, t) => {
                    var a, s, n;
                    const r = t.map((({
                            cohort: {
                                rankings: e
                            }
                        }) => e.map((({
                            userId: e
                        }) => e)))),
                        i = t.map((({
                            cohort: {
                                tier: e
                            }
                        }) => e)),
                        o = t.map((({
                            contest: {
                                ruleset: {
                                    rewards: e
                                }
                            }
                        }) => e)),
                        l = r.map((t => t.indexOf(e))),
                        c = l[l.length - 1],
                        d = i[i.length - 1],
                        u = t[t.length - 1],
                        g = u.contest.ruleset,
                        p = g.cohortSize,
                        m = f(d, g.numPromoted),
                        h = S(d, g.numDemoted),
                        _ = null !== (a = u.isPromoted) && void 0 !== a ? a : y(c, m),
                        b = null !== (n = null !== (s = u.isDemoted) && void 0 !== s ? s : u.isLoser) && void 0 !== n ? n : E(c, p, h);
                    return {
                        lingots: t.map((({}, e) => v(i[e], o[e])[l[e]] || 0)).reduce(((e, t) => e + t), 0),
                        rank: _ ? "PROMOTED" : b ? "DEMOTED" : "STAY"
                    }
                },
                I = (e, t, a, s, n, r) => {
                    if (r) {
                        if (y(e, s)) return "DIAMOND_TOP";
                        if (E(e, t, a)) return "DIAMOND_BOTTOM"
                    }
                    return 0 === e ? "GOLD" : 1 === e ? "SILVER" : 2 === e ? "BRONZE" : y(e, s) ? "GREEN" : E(e, t, a) ? "RED" : n ? "GRAY" : "WHITE"
                },
                w = (e, t, a) => {
                    var s, n, r, i;
                    if ((null === (s = null == e ? void 0 : e.leaderboard) || void 0 === s ? void 0 : s.activeContest) && e.active) {
                        const {
                            cohortSize: s,
                            numDemoted: o,
                            numPromoted: l,
                            numLosers: d,
                            numWinners: u
                        } = e.leaderboard.activeContest.ruleset, g = null !== (n = e.active.cohort.tier) && void 0 !== n ? n : e.tier, p = e.active.cohort.rankings, m = C(p, e.active.userId), h = g !== e.tier, v = Date.now(), _ = h && g === (null == l ? void 0 : l.length) ? u : f(g, l), b = h && 0 === g ? d : S(g, o);
                        if (e.ended && e.ended.length >= 1 && e.active.cohort.rankings.length >= 5) return {
                            lastPositionSeen: void 0,
                            lastScoreSeen: void 0,
                            type: "leaderboardJoin"
                        };
                        if (t && t.placesMoved >= 1) {
                            if (m <= 2 && t.lastPositionSeen >= 3) return {
                                lastPositionSeen: t.lastPositionSeen,
                                lastScoreSeen: t.lastScoreSeen,
                                type: "leaderboardTopThree"
                            };
                            if (!y(t.lastPositionSeen, _) && y(m, _)) return {
                                lastPositionSeen: t.lastPositionSeen,
                                lastScoreSeen: t.lastScoreSeen,
                                type: "leaderboardPromoZone"
                            };
                            if (E(t.lastPositionSeen, s, b) && !E(m, s, b)) return {
                                lastPositionSeen: t.lastPositionSeen,
                                lastScoreSeen: t.lastScoreSeen,
                                type: "leaderboardDemoZone"
                            };
                            if (t.placesMoved >= 3) return {
                                lastPositionSeen: t.lastPositionSeen,
                                lastScoreSeen: t.lastScoreSeen,
                                type: "leaderboardRankIncreaseLarge"
                            };
                            if (t.placesMoved > 0 && t.placesMoved < 3) return {
                                lastPositionSeen: t.lastPositionSeen,
                                lastScoreSeen: t.lastScoreSeen,
                                type: "leaderboardRankIncreaseSmall"
                            }
                        } else if (m >= 1 && p[m - 1].score - p[m].score <= 10 && p[m - 1].score - p[m].score > 0 && (0, c.aW)(e.active.cohort.creationDate, v) >= 1 && (0, c.aW)(null !== (r = null == a ? void 0 : a.lastShownDate) && void 0 !== r ? r : 0, v) >= 1 && (null !== (i = null == a ? void 0 : a.moveUpPrompts.numShown) && void 0 !== i ? i : 0) < 4) return {
                            lastPositionSeen: void 0,
                            lastScoreSeen: void 0,
                            type: "leaderboardMoveUpPrompt"
                        }
                    }
                },
                k = e => {
                    if (!e) return "default";
                    const t = (0, d.ky)("debugLeaderboards");
                    if (t && ["wait", "register", "maintenance", "locked"].includes(t)) return t;
                    const {
                        active: a,
                        ended: s,
                        leaderboard: n,
                        numSessionsRemainingToUnlock: r,
                        tier: i
                    } = e;
                    if (!(null == n ? void 0 : n.activeContest) || !(null == a ? void 0 : a.contest) && !(null == s ? void 0 : s.length) && 0 === r && -1 === i) return "maintenance";
                    const {
                        activeContest: {
                            registrationState: o
                        }
                    } = n;
                    if (void 0 !== r && r > 0) return "locked";
                    if (!a && "CLOSED" === o) return "wait";
                    if (!a && "OPEN" === o) return "register";
                    if (a) return "contest";
                    throw Error("No view applicable for current league state")
                },
                T = e => {
                    switch (e) {
                        case 0:
                            return r;
                        case 1:
                            return i;
                        case 2:
                            return n;
                        default:
                            return
                    }
                },
                C = (e, t) => e.findIndex((e => e.userId === t)),
                R = ({
                    forceFinalRank: e,
                    rankings: t,
                    score: a,
                    userId: n
                }) => {
                    const r = C(t, n),
                        i = (0, s.setIn)(t, [r, "score"], a),
                        o = (0, s.asMutable)(i);
                    if (void 0 !== e && e >= 0 && e < t.length) {
                        if (e === r) return o;
                        const t = Math.min(e, r),
                            a = Math.max(e, r),
                            s = e === t ? -1 : 1;
                        return o.map(((n, o) => o === e ? i[r] : o < t || o > a ? n : i[o + s]))
                    }
                    return o.sort(((e, t) => e.score > t.score ? -1 : e.score < t.score ? 1 : 0))
                },
                L = e => (0, h.jq)(e) && !(0, m.VY)(e),
                A = (e, t) => !(0, l.J9)() && (0, h.jq)(e) && (!(0, m.VY)(e) || void 0 !== t.ipCountry && (0, g.KJ)(t.ipCountry)) && !e.classroomLeaderboardsEnabled,
                P = e => (0, m.VY)(e) || (0, m.Ud)(e) && !e.classroomLeaderboardsEnabled,
                D = (e, t) => {
                    var a;
                    return null === (a = null == e ? void 0 : e.state.active) || void 0 === a ? void 0 : a.cohort.rankings.find((e => e.userId === t))
                },
                N = e => {
                    var t, a, s, n, r;
                    return {
                        can_advance_to_tournament: "leagues" === (null == e ? void 0 : e.alias) && (null === (t = e.state.active) || void 0 === t ? void 0 : t.cohort.tier) === p.WP.length - 1 && (null !== (n = null === (s = null === (a = null == e ? void 0 : e.state.leaderboard) || void 0 === a ? void 0 : a.activeContest) || void 0 === s ? void 0 : s.ruleset.numWinners) && void 0 !== n ? n : 0) > 0 && "experiment" === (0, u.j6)("tsl_web_tournament_port", void 0),
                        leaderboard_id: (() => {
                            if (void 0 !== (null == e ? void 0 : e.state.active) && "classroom" !== (null == e ? void 0 : e.alias)) return "tournament" === (null == e ? void 0 : e.alias) ? o.dQ.getTournamentLeaderboardId() : o.dQ.getLeaguesLeaderboardId()
                        })(),
                        leaderboard_tier: null === (r = null == e ? void 0 : e.state.active) || void 0 === r ? void 0 : r.cohort.tier,
                        tournament_wins: "tournament" === (null == e ? void 0 : e.alias) ? e.state.numWins : void 0
                    }
                }
        },
        95941: (e, t, a) => {
            "use strict";
            a.d(t, {
                gj: () => A,
                WP: () => T,
                Vq: () => L,
                L: () => C,
                nw: () => R,
                lf: () => P,
                Ri: () => D,
                aZ: () => N
            });
            const s = a.p + "images/leagues/7f895707cd44583692d20481dcd9e0d0.svg";
            var n = a(39631);
            const r = a.p + "images/leagues/192181672ada150becd83a74a4266ae9.svg";
            var i = a(80869),
                o = a(83577),
                l = a(92902);
            const c = a.p + "images/leagues/820dca5575baaae67e9654bcd9cabb13.svg",
                d = a.p + "images/leagues/7b8eb902b285be6a592cbdc45d781460.svg",
                u = a.p + "images/leagues/da3da435ad26e5c57d4c5235406ff938.svg",
                g = a.p + "images/leagues/f480e032c5222395e73dac88ce3592bb.svg";
            var p = a(83831);
            const m = a.p + "images/leagues/0e249b5f869b806da7406b815f4d60c6.svg";
            var h = a(8466);
            const v = a.p + "images/leagues/57f0c6b260d33493a0cddc4ab38d6833.svg";
            var _ = a(8146);
            const f = a.p + "images/leagues/f902954eeaa88fd2cb12f9168b4f68cb.svg";
            var S = a(79815);
            const y = a.p + "images/leagues/74d6ab6e5b6f92e7d16a4a6664d1fafd.svg";
            var E = a(9175);
            const b = a.p + "images/leagues/3ced84eb1f0274ec0f02b24ae6e3d29b.svg";
            var I = a(40301);
            const w = a.p + "images/leagues/8148b17e32d8706a82c02688f559e9ef.svg";
            var k = a(26858);
            const T = ["bronze", "silver", "gold", "sapphire", "ruby", "emerald", "amethyst", "pearl", "obsidian", "diamond"],
                C = [r, w, m, b, y, g, s, f, v, o],
                R = [i, k, h, I, E, p, n, S, _, l],
                L = [321, 21153, 6276, 10705, 2028, 3777, 23232, 11453, 14693, 9894],
                A = [3726, 2804, 10599, 2970, 9356, 5746, 16491, 19007, 12827, 10357],
                P = [c, d, u],
                D = [30969, 31162, 31163],
                N = [31162, 31163, 31165]
        },
        37825: (e, t, a) => {
            "use strict";
            a.d(t, {
                Hl: () => o,
                M_: () => r,
                b2: () => l,
                d: () => n,
                lZ: () => i
            });
            var s = a(23275);
            const n = e => ["practice", "skill", "story"].includes(e),
                r = e => e.includes("/legendary"),
                i = e => (0, s.Ol)({
                    levelType: "unit_review",
                    path: e
                }).some((e => e.finishedSessions > 0)),
                o = e => {
                    switch (e) {
                        case "practice":
                            return "path_practice";
                        case "skill":
                            return "path_skill";
                        case "story":
                            return "path_story";
                        default:
                            return "path_level"
                    }
                },
                l = e => {
                    switch (e) {
                        case "practice":
                            return "promo_practice";
                        case "skill":
                            return "promo_skill";
                        default:
                            return "session_end"
                    }
                }
        },
        26506: (e, t, a) => {
            "use strict";
            a.d(t, {
                U: () => n,
                _: () => r
            });
            class s {
                constructor() {
                    this.disabled = !1, this.handlers = new WeakMap
                }
                addListener(e, t, a, s) {
                    var n;
                    const r = null !== (n = this.handlers.get(a)) && void 0 !== n ? n : e => {
                        this.disabled || a(e)
                    };
                    this.handlers.set(a, r), e.addEventListener(t, r, s)
                }
                removeListener(e, t, a, s) {
                    const n = this.handlers.get(a);
                    n && (this.handlers.delete(a), e.removeEventListener(t, n, s))
                }
                enableListeners() {
                    this.disabled = !1
                }
                disableListeners() {
                    this.disabled = !0
                }
            }
            const n = new s,
                r = new s
        },
        41364: (e, t, a) => {
            "use strict";
            a.d(t, {
                U: () => o,
                p: () => c
            });
            var s = a(80254);
            let n, r = 0;
            const i = e => {
                    null == n || n(e), r = e
                },
                o = e => {
                    n = e
                },
                l = {
                    GET_USER: 1e4,
                    SYNC_STORED_PROGRESS: 2e4
                },
                c = e => t => async (...a) => {
                    let n, o;
                    const c = s.IH((() => {
                            n && window.clearInterval(n), o && window.clearTimeout(o), i(0)
                        })),
                        d = Date.now(),
                        u = !r;
                    if (u) {
                        i(.001);
                        const t = l[e];
                        n = window.setInterval((() => {
                            const e = (Date.now() - d) / t,
                                a = 1 - Math.exp(-e);
                            i(a)
                        }), 200), o = window.setTimeout(c, 2e4)
                    }
                    let g;
                    try {
                        g = {
                            type: "value",
                            value: await t(...a)
                        }
                    } catch (e) {
                        g = {
                            error: e,
                            type: "error"
                        }
                    }
                    u && c();
                    const p = Date.now() - d;
                    if (l[e] = p, "error" === g.type) throw g.error;
                    return g.value
                }
        },
        58729: (e, t, a) => {
            "use strict";
            a.d(t, {
                cj: () => o,
                JE: () => i
            });
            var s = a(72398),
                n = a(58576);
            const r = (e, t = 1) => {
                    if (e && "object" == typeof e) {
                        if (Array.isArray(e)) {
                            if (t > 0) {
                                const a = e.map((e => r(e, t - 1)));
                                return a.length ? `[${a.join(", ")}]` : "[]"
                            }
                            return e.length ? `Array(${e.length})` : "[]"
                        }
                        if (t > 0) {
                            const a = Object.entries(e).map((([e, a]) => (/^[a-zA-Z$_][a-zA-Z$_\d]*$/.test(e) || (e = `'${e}'`), [e, r(a, t - 1)])));
                            return a.length ? `{ ${a.map((([e,t])=>`${e}: ${t}`)).join(", ")} }` : "{}"
                        }
                        return Object.keys(e).length ? "{…}" : "{}"
                    }
                    return "string" == typeof e ? `'${e}'` : `${e}`
                },
                i = () => s.JE(l),
                o = (e, t, a, i) => {
                    if ((0, s.ar)(e, t, a, i), !n.o.includes(t.type)) try {
                        const e = "QUEUE_ANIMATIONS" === t.type && t.animations.some((e => e.name.startsWith("PATH_"))) ? 3 : 1;
                        (0, n.gp)({
                            level: "debug",
                            message: `dispatch(${r(t,e)})`
                        })
                    } catch {}
                },
                l = (e, t, ...a) => (0, n.gp)({
                    level: e,
                    message: t,
                    ...a.length > 0 ? {
                        data: {
                            args: a
                        }
                    } : {}
                })
        },
        58576: (e, t, a) => {
            "use strict";
            a.d(t, {
                WH: () => A,
                VR: () => E,
                o: () => v,
                BH: () => y,
                iZ: () => _,
                fZ: () => S,
                vU: () => W,
                c2: () => G,
                um: () => j,
                cM: () => q,
                bP: () => Q,
                si: () => K,
                gp: () => H,
                D_: () => D,
                yB: () => O,
                av: () => N,
                Kp: () => $
            });
            var s = a(72398),
                n = a(51629),
                r = a(60074),
                i = a(98784),
                o = a.n(i),
                l = a(97544),
                c = a(17135),
                d = a(64115),
                u = a(94358),
                g = a(68903),
                p = a(30839),
                m = a(79465),
                h = a(59815);
            const v = ["CHALLENGE_GUESS_CHANGE", "MODAL_MOUNTED", "MODAL_UNMOUNTED"],
                _ = {
                    debug: "debug",
                    error: "error",
                    group: "info",
                    groupCollapsed: "info",
                    info: "info",
                    log: "info",
                    warn: "warning"
                },
                f = Object.fromEntries(Object.entries(_).map((([e, t]) => [t, e]))),
                S = [429, 500, 502, 503, 504];
            class y extends h.pY {
                constructor(e, t) {
                    super(e), this.fingerprint = t
                }
            }
            const E = Symbol("EXCLUDE_FROM_TELEMETRY"),
                b = ["d35aaqx5ub95lt.cloudfront.net", "duolingo.com", "localhost", "webpack://", "webpack-internal://"],
                I = [401, 403, /5\d\d/],
                w = e => e / 100,
                k = (e, t) => {
                    var a, s;
                    const n = null !== (s = null === (a = e.extra) || void 0 === a ? void 0 : a.error) && void 0 !== s ? s : t.originalException;
                    return n instanceof Error ? n : void 0
                },
                T = (e, t) => {
                    const a = k(e, t);
                    return null != a && (0, l.Hx)(a) ? a : void 0
                },
                C = (e, t) => {
                    var a;
                    const s = T(e, t);
                    return null === (a = null == s ? void 0 : s.response) || void 0 === a ? void 0 : a.status
                },
                R = [{
                    groupAll: !0,
                    matcher: {
                        mode: "CONTAINS",
                        property: "message",
                        string: "Dummy rule",
                        type: "STRING"
                    },
                    message: "Dummy rule",
                    name: "dummy-rule",
                    sample: .9
                }, {
                    groupAll: !0,
                    matcher: {
                        mode: "CONTAINS",
                        property: "message",
                        string: "file://",
                        type: "STRING"
                    },
                    message: "Local file error (probably extension)",
                    name: "local-file-error",
                    sample: w(.01)
                }, {
                    fingerprint: e => [...e, "status-500"],
                    level: "warning",
                    matcher: {
                        function: (e, t) => {
                            const a = C(e, t);
                            return void 0 !== a && 500 === a
                        },
                        type: "FUNCTION"
                    },
                    name: "status-code-500",
                    sample: w(.01)
                }, {
                    fingerprint: (e, t, a) => {
                        var s;
                        return [...e, `status-${null!==(s=C(t,a))&&void 0!==s?s:"unknown"}`]
                    },
                    matcher: {
                        function: (e, t) => {
                            const a = C(e, t);
                            return void 0 !== a && S.includes(a)
                        },
                        type: "FUNCTION"
                    },
                    message: "Unactionable status code",
                    name: "status-code-unactionable",
                    sample: w(.01)
                }, {
                    fingerprint: (e, t, a) => {
                        var s;
                        return [...e, `status-${null!==(s=C(t,a))&&void 0!==s?s:"unknown"}`]
                    },
                    level: "warning",
                    matcher: {
                        function: (e, t) => {
                            const a = C(e, t);
                            return void 0 !== a && I.some((e => "number" == typeof e ? e === a : e.test(a.toString())))
                        },
                        type: "FUNCTION"
                    },
                    name: "status-code-warning"
                }, {
                    fingerprint: (e, t, a) => {
                        var s;
                        return [...e, `status-${null!==(s=C(t,a))&&void 0!==s?s:"unknown"}`]
                    },
                    matcher: {
                        function: (e, t) => void 0 !== C(e, t),
                        type: "FUNCTION"
                    },
                    name: "status-code-other"
                }, {
                    groupAll: !0,
                    matcher: {
                        mode: "REGEX",
                        property: "message",
                        regex: /Loading( CSS)? chunk .+? failed\./,
                        type: "STRING"
                    },
                    message: "CSS chunk load error",
                    name: "chunk-load-error",
                    onMatch: e => {
                        var t, a, s;
                        return (0, m.track)("chunk_download_failure", {
                            offline: !navigator.onLine,
                            path: null !== (s = null === (a = /\n\((error: )?(.*?)\)$/.exec(null !== (t = e.message) && void 0 !== t ? t : "")) || void 0 === a ? void 0 : a.slice(-1)[0]) && void 0 !== s ? s : ""
                        })
                    },
                    sample: w(.01)
                }, {
                    groupAll: !0,
                    matcher: {
                        mode: "EQUALS",
                        property: "name",
                        string: "UnhandledRejection",
                        type: "STRING"
                    },
                    message: "Unhandled promise rejection",
                    name: "unhandled-promise-rejection",
                    sample: w(.01)
                }, {
                    matcher: {
                        function: (e, t) => {
                            var a;
                            return "Failed to fetch" === (null === (a = T(e, t)) || void 0 === a ? void 0 : a.message)
                        },
                        type: "FUNCTION"
                    },
                    name: "failed-to-fetch",
                    sample: w(.01)
                }, {
                    matcher: {
                        function: (e, t) => {
                            var a;
                            const s = T(e, t);
                            return !1 === (null === (a = t.mechanism) || void 0 === a ? void 0 : a.handled) && void 0 !== e.message && !["Cannot load facebook SDK", "Cannot load google SDK", "Cannot load google sign in SDK"].includes(e.message) && void 0 === s
                        },
                        type: "FUNCTION"
                    },
                    name: "app-crash",
                    onMatch: (e, t) => {
                        const a = k(e, t);
                        void 0 !== a && (0, m.track)("app_crash", {
                            crash_message: a.message,
                            crash_type: null == a ? void 0 : a.name,
                            sentry_event_id: e.event_id
                        })
                    }
                }];
            let L = 0;
            const A = "{{ default }}",
                P = (e, t) => {
                    if (!navigator.onLine) return null;
                    if ((() => {
                            if ((0, d.NY)()) return !1;
                            try {
                                let e = (0, p.rV)(p.Qt.SentryThrottling);
                                return void 0 === e || e.firstErrorTimestamp < (0, c.HR)(-300) ? e = {
                                    errorCount: 1,
                                    firstErrorTimestamp: Date.now()
                                } : e.errorCount++, (0, p.LS)(p.Qt.SentryThrottling, e), e.errorCount > 10
                            } catch {
                                try {
                                    (0, p.cl)(p.Qt.SentryThrottling)
                                } catch {}
                                return !1
                            }
                        })()) return null;
                    const a = T(e, t);
                    if (void 0 !== a && void 0 === (null == a ? void 0 : a.response)) return null;
                    const s = ((e, t, a) => {
                        var s, n;
                        const r = null !== (n = null === (s = t.extra) || void 0 === s ? void 0 : s.error) && void 0 !== n ? n : a.originalException;
                        return e.find((({
                            matcher: e
                        }) => {
                            var s;
                            switch (e.type) {
                                case "FUNCTION":
                                    return e.function(t, a);
                                case "STRING":
                                    {
                                        const {
                                            property: t = "message"
                                        } = e,
                                        a = "string" == typeof r && "message" === t ? r : null !== (s = null == r ? void 0 : r[t]) && void 0 !== s ? s : "";
                                        switch (e.mode) {
                                            case "CONTAINS":
                                                return a.includes(e.string);
                                            case "ENDS_WITH":
                                                return a.endsWith(e.string);
                                            case "EQUALS":
                                                return a === e.string;
                                            case "STARTS_WITH":
                                                return a.startsWith(e.string);
                                            case "REGEX":
                                                return e.regex.test(a);
                                            default:
                                                return (0, g.RJ)(e)
                                        }
                                    }
                                default:
                                    return (0, g.RJ)(e)
                            }
                        }))
                    })(R, e, t);
                    if (void 0 !== s) {
                        const a = ((e, t, a) => {
                            var s, n, r;
                            const i = {};
                            if (null === (s = e.onMatch) || void 0 === s || s.call(e, t, a), void 0 !== e.sample && e.sample < 1) {
                                if (null === (n = t.tags) || void 0 === n ? void 0 : n.sample_rate) return console.log("Ignoring event rule sample value due to already being sampled", t.message), t;
                                const a = (0, d.oj)() || (0, d.NY)() ? Math.min(1, e.sample / w(.1)) : e.sample;
                                if (Math.random() > a) return console.log("Ignoring due to sampling:", t.message), null;
                                i.originalErrorMessage = B(t.message), i.sample_rate = a, i.webEventRuleSampled = !0, t.message = `[WebEventRule] ${null!==(r=e.message)&&void 0!==r?r:t.message}${void 0===a?"":` (sampled at ${100*a}%)`}`
                            }
                            if (!0 === e.groupAll || void 0 !== e.fingerprint) {
                                let s = [...e.groupAll ? [] : [A], `event-rule-${e.name}`];
                                void 0 !== e.fingerprint && (s = e.fingerprint(s, t, a)), t.fingerprint = s
                            }
                            return t.tags = { ...t.tags,
                                ...i
                            }, t
                        })(s, e, t);
                        if (null === a) return null;
                        e = a
                    }
                    return L >= 20 ? null : (L += 1, e)
                },
                D = () => {
                    var e;
                    n.S({
                        allowUrls: b,
                        attachStacktrace: !0,
                        beforeSend: P,
                        dsn: "https://c5ab8b73d726e87132e8e0502de636e0@o4506106988134400.ingest.sentry.io/4506139970502656",
                        enabled: !!(null === (e = window.duo.l10n) || void 0 === e ? void 0 : e.strings),
                        environment: (0, d.oj)() ? "preview" : (0, d.NY)() ? "staging" : "production",
                        normalizeDepth: 4,
                        release: window.duo.versionHash
                    })
                },
                N = (e, t) => {
                    r.av({
                        id: e.id,
                        username: e.username
                    }), r.v("experiments", null != t ? t : null), void 0 !== t && V(t).forEach((([e, t]) => r.YA(e, t)))
                },
                O = e => {
                    r.YA("isZombieMode", e.toString())
                },
                x = "[duolingo-web-redacted]",
                F = ["Accept", "Accept-Language", "Cache-Control", "Content-Type", "Referer", "traceparent", "X-Amzn-Trace-Id", "X-Requested-With"].map((e => e.toLowerCase())),
                M = ["Set-Cookie"].map((e => e.toLowerCase())),
                U = e => {
                    var t, a;
                    return o().merge({}, e, {
                        message: e.message,
                        name: e.name,
                        request: {
                            body: x,
                            headers: void 0 === e.request.headers ? {} : Object.fromEntries(Object.entries(e.request.headers).map((([e, t]) => [e, F.includes(e.toLowerCase()) ? t : x])))
                        },
                        response: void 0 === e.response ? void 0 : {
                            data: void 0 === e.response.data ? void 0 : x,
                            headers: void 0 === (null === (t = e.response) || void 0 === t ? void 0 : t.headers) ? {} : Object.fromEntries(Object.entries(null === (a = e.response) || void 0 === a ? void 0 : a.headers).map((([e, t]) => [e, M.includes(e.toLowerCase()) ? x : t])))
                        }
                    })
                },
                H = ({
                    category: e,
                    data: t,
                    level: a = "info",
                    message: s,
                    type: n = "default"
                }) => r.n_({
                    category: e,
                    data: t,
                    level: a,
                    message: s,
                    type: n
                }),
                G = () => r.nZ().getScopeData().breadcrumbs,
                V = (() => {
                    const e = Math.ceil(29),
                        t = Math.floor(29),
                        a = a => `exp.${a.length<=60?a:`${a.slice(0,e)}..${a.slice(-t)}`}`;
                    return e => Object.entries(e).map((([e, t]) => [a(e), t]))
                })(),
                B = e => void 0 !== e && (null == e ? void 0 : e.length) > 200 ? `${e.slice(0,199)}…` : e,
                z = {},
                Z = (e, t, a = {}) => {
                    let n = t instanceof Error ? [t.name, t.message].filter((e => e)).join(": ") : t;
                    const {
                        ex: i,
                        once: o = !1,
                        sample: c = 1
                    } = a, d = t instanceof Error ? t : i;
                    if (s.ji(f[e], "other", n, {
                            data: d
                        }), o) {
                        if (z[n]) return void window.console.log("Ignoring because reported already:", n);
                        z[n] = !0
                    }
                    if (c < 1) {
                        if (Math.random() > c) return void window.console.log("other", `Ignoring due to sampling: ${n}`);
                        n = `${n} (sampled at ${100*c}%)`
                    }
                    return ((e, t, a, s) => {
                        const {
                            data: n,
                            once: i,
                            sample: o
                        } = s, [c, d] = (() => {
                            var e, t;
                            if (void 0 === a || !(0, l.Hx)(a)) return [];
                            const [s, n] = null !== (e = null == a ? void 0 : a.request.url.split("?")) && void 0 !== e ? e : [];
                            return [{
                                error: U(a),
                                queryString: n,
                                url: s
                            }, {
                                "error.code": a.code,
                                ...void 0 === a.duration ? {} : {
                                    "error.duration": a.duration
                                },
                                "error.method": a.request.method,
                                "error.status": null === (t = a.response) || void 0 === t ? void 0 : t.status,
                                "error.url": B(s)
                            }]
                        })(), g = {
                            extra: { ...c,
                                ..."object" == typeof n ? n : {
                                    data: n
                                }
                            },
                            fingerprint: void 0 !== s.fingerprint ? s.fingerprint : void 0 !== a && (e => {
                                try {
                                    return "fingerprint" in e
                                } catch (e) {
                                    return !1
                                }
                            })(a) && void 0 !== a.fingerprint ? a.fingerprint : [t, ...void 0 === a ? [] : [a.name, a.message]],
                            level: e,
                            tags: {
                                limit_once_per_page: i,
                                originalErrorHasStackTrace: void 0 !== (null == a ? void 0 : a.stack),
                                originalErrorMessage: B(null == a ? void 0 : a.message),
                                sample_rate: o,
                                ...d,
                                ...(p = (0, u.nP)(), p && {
                                    fullStoryUrl: p
                                })
                            }
                        };
                        var p;
                        if (void 0 === a) return r.uT(t, g);
                        const m = Error(t);
                        return m.name = a.name, void 0 !== a.stack && (m.stack = a.stack), r.Tb(m, g)
                    })(e, n, d, a)
                },
                W = (e, t = {}) => Z("error", e, t),
                $ = (e, t = {}) => Z("warning", e, t),
                j = (e, t = {}) => Z("info", e, t),
                q = (e, t, a = {}) => {
                    s.ji("log", "other", t, {
                        excludeFromTelemetry: !0,
                        ...a
                    }), H({
                        data: { ...void 0 === (null == a ? void 0 : a.data) ? {} : {
                                data: a.data
                            },
                            ...void 0 === W ? {} : {
                                ex: W
                            }
                        },
                        level: _.log,
                        message: `[${e}] ${t}`
                    })
                },
                Q = (e, t, a, n) => {
                    s.bP(e, t, a, n), (null == n ? void 0 : n.excludeFromTelemetry) || H({
                        level: _.info,
                        message: `[${e}] ${t}`
                    })
                },
                K = (e, t) => {
                    s.si(e, t), H({
                        data: {
                            from: e,
                            to: t
                        },
                        type: "navigation"
                    })
                }
        },
        76578: (e, t, a) => {
            "use strict";
            a.d(t, {
                J6: () => i,
                KH: () => s,
                TE: () => n,
                bA: () => o,
                t7: () => r,
                vN: () => l
            });
            const s = (e, t) => ({
                    x: e.x + t.x,
                    y: e.y + t.y
                }),
                n = (e, t) => Math.sqrt((t.x - e.x) ** 2 + (t.y - e.y) ** 2),
                r = (e, t, a) => e + (t - e) * a,
                i = e => e.reduce(((e, t) => e + t), 0) / e.length,
                o = (e, t, a, s, n, r = !1) => {
                    const i = (e - t) * (n - s) / (a - t) + s;
                    return r ? Math.min(Math.max(i, s), n) : i
                },
                l = (e, t) => (e % t + t) % t
        },
        73573: (e, t, a) => {
            "use strict";
            a.d(t, {
                V: () => s
            });
            const s = e => {
                const t = new WeakMap,
                    a = new WeakMap;
                return (...s) => {
                    let n = t;
                    for (const e of s) n.has(e) || n.set(e, new WeakMap), n = n.get(e);
                    if (a.has(n)) return a.get(n);
                    const r = e(...s);
                    return a.set(n, r), r
                }
            }
        },
        64865: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => h,
                Ir: () => _,
                JN: () => u,
                TI: () => p,
                VF: () => m,
                WV: () => S,
                ci: () => f,
                fi: () => g,
                fy: () => v
            });
            var s = a(80388),
                n = a(53229),
                r = a(8654),
                i = a(93746),
                o = a(79465),
                l = a(74597);
            const c = "https://af4a.adj.st/?adjust_t=mfg8p8a",
                d = "https://af4a.adj.st/?adjust_t=ewm3ujy",
                u = "https://app.adjust.com/u0fwvk3",
                g = "https://app.adjust.com/hwy9on0",
                p = (...e) => l.Z.android ? h(...e) : l.Z.ios ? (0, r.H8)(22504, void 0, {
                    addRightToLeftMark: !1
                }) : l.Z.windowsPhone ? (0, r.H8)(14998) : void 0,
                m = ({
                    via: e
                }) => l.Z.android ? _({
                    via: e
                }) : l.Z.ios ? v({
                    via: e
                }) : l.Z.windowsPhone ? (0, r.H8)(14998) : void 0,
                h = ({
                    isAndroidBanner: e,
                    utmCampaign: t,
                    utmContent: a
                } = {
                    isAndroidBanner: !1,
                    utmCampaign: "",
                    utmContent: ""
                }) => e ? (0, s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `${c}&adjust_label=android_banner` : (0, s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `//play.google.com/store/apps/details?${(0,n.Vp)({hl:i.h9,id:"com.duolingo",referrer:`utm_source=duolingo.com&utm_medium=duolingo_web&utm_content=${a}&utm_campaign=${t}`})}`,
                v = ({
                    via: e
                }) => (0, s.J9)() ? `https://app.adjust.com/u0fwvk3?&redirect=http%3A%2F%2Fa.app.qq.com%2Fo%2Fsimple.jsp%3Fpkgname%3Dcom.duolingo&campaign=${e}` : l.Z.hasMobileApp || "mobile_web_to_app_conversion" === e ? "share_profile" === e ? `${d}` : `${c}&adjust_label=${e}` : (0, r.H8)(22504, void 0, {
                    addRightToLeftMark: !1
                }),
                _ = ({
                    isAndroidBanner: e,
                    via: t
                }) => e ? (0, s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `${c}&adjust_label=android_banner` : (0, s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : l.Z.hasMobileApp ? "share_profile" === t ? `${d}` : `${c}&adjust_label=${t}` : h({
                    utmCampaign: t,
                    utmContent: "download_button"
                }),
                f = e => {
                    const t = document.createElement("a");
                    t.href = "https://android-release.duolingo.cn/Duo.latest.apk", t.download = "duolingo.apk", t.click(), (0, o.track)("china_apk_download", {
                        via: e
                    }), window.URL.revokeObjectURL(t.href)
                },
                S = e => !e && (l.Z.ios || l.Z.android)
        },
        35160: (e, t, a) => {
            "use strict";
            var s, n;
            a.d(t, {
                    W: () => n,
                    t: () => s
                }),
                function(e) {
                    e.Achievement = "ACHIEVEMENT", e.AgeRestrictedLeaderboardsIntro = "AGE_RESTRICTED_LEADERBOARDS_INTRO", e.AlreadyOnPremium = "ALREADY_ON_PREMIUM", e.Alert = "ALERT", e.AllowMicrophone = "ALLOW_MICROPHONE", e.AvatarsIntroduction = "AVATARS_INTRODUCTION", e.AvatarsSaveConfirm = "AVATARS_SAVE_CONFIRM", e.B2bDownloadCodes = "B2B_DOWNLOAD_CODES", e.B2bRemoveLearner = "B2B_REMOVE_LEARNER", e.B2bSendCodes = "B2B_SEND_CODES", e.CardUpdate = "CARD_UPDATE", e.ChangeUiLanguage = "CHANGE_UI_LANGUAGE", e.CharacterExpandedView = "CHARACTER_EXPANDED_VIEW", e.Confirm = "CONFIRM", e.ConfirmSetting = "CONFIRM_SETTING", e.Debug = "DEBUG", e.DiamondTournamentEliminate = "DIAMOND_TOURNAMENT_ELIMINATE", e.DiamondTournamentEntry = "DIAMOND_TOURNAMENT_ENTRY", e.DiamondTournamentWin = "DIAMOND_TOURNAMENT_WIN", e.DownloadText = "DOWNLOAD_TEXT", e.DuoRadioTranscript = "DUO_RADIO_TRANSCRIPT", e.EasierLessonNudge = "EASIER_LESSON_NUDGE", e.EditFamily = "EDIT_FAMILY", e.EfficacyPageMenu = "EFFICACY_PAGE_MENU", e.EmailVerification = "EMAIL_VERIFICATION", e.EmptyHearts = "EMPTY_HEARTS", e.FriendsQuestComplete = "FRIENDS_QUEST_COMPLETE", e.FriendsQuestGift = "FRIENDS_QUEST_GIFT", e.FriendsQuestIntro = "FRIENDS_QUEST_INTRO", e.HeartsIntro = "HEARTS_INTRO", e.HomeMessage = "HOME_MESSAGE", e.InviteFamily = "INVITE_FAMILY", e.InviteFriends = "INVITE_FRIENDS", e.JoinClassroomConfirmation = "JOIN_CLASSROOM_CONFIRMATION", e.LeaveClassroomConfirmation = "LEAVE_CLASSROOM_CONFIRMATION", e.LegendaryPurchase = "LEGENDARY_PURCHASE", e.LegendarySplash = "LEGENDARY_SPLASH", e.MessageUser = "MESSAGE_USER", e.MonthlyBadges = "MONTHLY_BADGES", e.MonthlyChallengeIntro = "MONTHLY_CHALLENGE_INTRO", e.NewCourseFork = "NEW_COURSE_FORK", e.NetworkError = "NETWORK_ERROR", e.Notifications = "NOTIFICATIONS", e.PickUiLanguage = "PICK_UI_LANGUAGE", e.PremiumChange = "PLUS_CHANGE", e.PremiumCancelConfirm = "PREMIUM_CANCEL_CONFIRM", e.PremiumPurchase = "PLUS_PURCHASE", e.PremiumPurchaseSecondary = "PREMIUM_PURCHASE_SECONDARY", e.PremiumUnlimitedHearts = "PREMIUM_UNLIMITED_HEARTS", e.ProfileCourses = "PROFILE_COURSES", e.ProfileFollowSuggestions = "PROFILE_FOLLOW_SUGGESTIONS", e.ProfileFriends = "PROFILE_FRIENDS", e.ProfileFriendsInCommon = "PROFILE_FRIENDS_IN_COMMON", e.ReportProfileUser = "REPORT_PROFILE_USER", e.ReportSentence = "REPORT_SENTENCE", e.SendNudge = "SEND_NUDGE", e.SessionReview = "SESSION_REVIEW", e.ShadowbanList = "SHADOWBAN_LIST", e.ShadowbanUser = "SHADOWBAN_USER", e.ShakeToReport = "SHAKE_TO_REPORT", e.SignInUp = "SIGN_IN_UP", e.StreakEarnback = "STREAK_EARNBACK", e.StreakPanelExpanded = "STREAK_PANEL_EXPANDED", e.TestingTools = "TESTING_TOOLS", e.TournamentAdvance = "TOURNAMENT_ADVANCE", e.TransliterationSettings = "TRANSLITERATION_SETTINGS", e.TrialWall = "TRIAL_WALL"
                }(s || (s = {})),
                function(e) {
                    e.Custom = "style-custom", e.Super = "style-super", e.White = "style-white"
                }(n || (n = {}))
        },
        16689: (e, t, a) => {
            "use strict";
            a.d(t, {
                $A: () => n,
                R8: () => o,
                br: () => l,
                oe: () => r,
                oo: () => i,
                te: () => d,
                uP: () => c
            });
            var s = a(41831);
            const n = e => {
                    var t;
                    return null === (t = e.filter((e => "MONTHLY_CHALLENGES" === e.category && (0, s.FF)(e)))[0]) || void 0 === t ? void 0 : t.goalId
                },
                r = e => {
                    const t = null == e ? void 0 : e.images.find((e => "CHALLENGE_HEADER" === e.component));
                    return null == t ? void 0 : t.image.lightMode.svg
                },
                i = e => e.illustrations.challengeSessionEnd.lightMode.svg,
                o = e => {
                    const t = null == e ? void 0 : e.text.find((e => "CHALLENGE_HEADER" === e.component));
                    return null == t ? void 0 : t.options[0].text.uiString
                },
                l = e => {
                    var t;
                    return null === (t = e.icon) || void 0 === t ? void 0 : t.enabled.lightMode.svg
                },
                c = e => null == e ? void 0 : e.displayTexts.challengeIntro.uiString,
                d = e => null == e ? void 0 : e.illustrations.challengeIntro.lightMode.svg
        },
        20041: (e, t, a) => {
            "use strict";
            a.d(t, {
                Iu: () => n,
                Qd: () => i,
                WZ: () => d,
                Z3: () => m,
                dS: () => p,
                fu: () => r,
                ky: () => g,
                oI: () => o,
                pC: () => u
            });
            var s = a(68903);
            const n = ["charactersTabCallout", "dogfoodingPreview", "dynamic", "emailVerified", "guidebookCallout", "immersivePlusPromo", "kudosOffer", "kudosReceive", "leaderboardsIntro", "legendaryRebrandGoldColor", "maintenanceBreak", "marketingOptIn", "mobileWebToAppConversion", "mobileWebToAppConversionAggressive", "newYearsDiscount", "pathChange", "pathMigration", "pathSectionsCallout", "pathSkipping", "plusBadge", "plusBadgeFamily", "plusBadgeMigration", "plusBottomSheetFamilyFollowUp", "reactivatedWelcome", "resurrectedWelcome", "schoolsJoinedClassroom", "shakeToReportAlert", "skillTreeMigration", "streakFreezeFromDuo", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "superFamilyPlanInvite", "superPreviewEndingCallout", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive"],
                r = ["dogfoodingPreview", "superPreviewEndingCallout"],
                i = {
                    emailVerified: "EMAIL_VERIFIED",
                    leaderboardsIntro: "WEB_LEADERBOARDS_INTRODUCTION",
                    skillTreeMigration: "NEW_TREE_CHANGE_V2",
                    streakFreezeUsed: "STREAK_FREEZE_USED"
                },
                o = (0, s.p)(["AVATARS_INTRODUCTION", "AVATARS_SAVE_CONFIRM", "CONFIRM", "CONFIRM_SKIP_ALPHABET_GATE", "EASIER_LESSON_NUDGE", "FRIENDS_QUEST_GIFT", "GENERIC_NOTIFICATION", "LEGENDARY_WITH_GEMS", "PRACTICE_HUB_SESSION_NOTIFICATION", "REACTIONS", "SEND_NUDGE", "STREAK_EARNBACK", "STREAK_PANEL_EXPANDED", "SUPER_OFFBOARDING", "dogfoodingPreview", "dynamic", "emailVerified", "immersivePlusPromo", "legendaryRebrandGoldColor", "kudosOffer", "kudosReceive", "maintenanceBreak", "marketingOptIn", "mobileWebToAppConversion", "mobileWebToAppConversionAggressive", "newYearsDiscount", "pathChange", "plusBottomSheetFamilyFollowUp", "reactivatedWelcome", "resurrectedWelcome", "shakeToReportAlert", "schoolsJoinedClassroom", "skillTreeMigration", "streakFreezeFromDuo", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "superFamilyPlanInvite", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive"]),
                l = (0, s.p)(["kudosOffer", "kudosReceive", "legendaryRebrandGoldColor", "marketingOptIn", "pathChange", "plusBottomSheetFamilyFollowUp", "reactivatedWelcome", "resurrectedWelcome", "streakFreezeFromDuo", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive", "newYearsDiscount", "superFamilyPlanInvite"]),
                c = (0, s.p)(["emailVerified"]),
                d = (0, s.p)(["pathChange", "pathMigration"]),
                u = e => !r.includes(e),
                g = e => e.every((e => u(e))),
                p = (e, t) => {
                    if (!o(e) || !l(e) || !t) return !1;
                    switch (e) {
                        case "kudosOffer":
                        case "kudosReceive":
                        case "legendaryRebrandGoldColor":
                        case "plusBottomSheetFamilyFollowUp":
                        case "pathChange":
                        case "reactivatedWelcome":
                        case "resurrectedWelcome":
                        case "streakFreezeFromDuo":
                        case "streakFreezeRecurringOffer":
                        case "streakFreezeUsed":
                        case "streakRepairOffer":
                        case "turningNotificationsOn":
                        case "webToAppConversion":
                        case "webToAppConversionAggressive":
                        case "newYearsDiscount":
                        case "marketingOptIn":
                        case "superFamilyPlanInvite":
                            return !0;
                        default:
                            return !1
                    }
                },
                m = (e, t) => !!(o(e) && c(e) && t) && "emailVerified" === e
        },
        18201: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => j
            });
            var s = a(68903),
                n = a(1398),
                r = a(58576);
            const i = e => {
                    const t = (0, n.Z)(e);
                    t.preload();
                    const a = window.performance.now();
                    return e => (t.hasLoaded() || (0, r.Kp)(`Drawer ${e} was not preloaded at time of use`, {
                        data: {
                            isLoading: t.isLoading(),
                            timeSincePreloadMS: window.performance.now() - a
                        },
                        ex: t.getError(),
                        once: !0
                    }), t)
                },
                o = (0, n.Z)((() => a.e(4994).then(a.bind(a, 23470)))),
                l = (0, n.Z)((() => a.e(4862).then(a.bind(a, 67469)))),
                c = i((() => a.e(9020).then(a.bind(a, 35137)))),
                d = i((() => a.e(5323).then(a.bind(a, 82882)))),
                u = (0, n.Z)((() => a.e(4103).then(a.bind(a, 21325)))),
                g = (0, n.Z)((() => Promise.all([a.e(1773), a.e(1104)]).then(a.bind(a, 60515)))),
                p = (0, n.Z)((() => a.e(6133).then(a.bind(a, 85102)))),
                m = (0, n.Z)((() => a.e(7839).then(a.bind(a, 29169)))),
                h = (0, n.Z)((() => a.e(8507).then(a.bind(a, 30512)))),
                v = (0, n.Z)((() => a.e(9178).then(a.bind(a, 68879)))),
                _ = (0, n.Z)((() => a.e(3289).then(a.bind(a, 40711)))),
                f = i((() => a.e(8575).then(a.bind(a, 8159)))),
                S = (0, n.Z)((() => Promise.all([a.e(5931), a.e(7888), a.e(9585)]).then(a.bind(a, 962)))),
                y = i((() => a.e(4800).then(a.bind(a, 71347)))),
                E = (0, n.Z)((() => a.e(9849).then(a.bind(a, 51526)))),
                b = (0, n.Z)((() => a.e(6162).then(a.bind(a, 88964)))),
                I = (0, n.Z)((() => a.e(6798).then(a.bind(a, 91295)))),
                w = (0, n.Z)((() => a.e(5472).then(a.bind(a, 65472)))),
                k = (0, n.Z)((() => a.e(7810).then(a.bind(a, 17810)))),
                T = (0, n.Z)((() => Promise.all([a.e(1773), a.e(178)]).then(a.bind(a, 97091)))),
                C = (0, n.Z)((() => a.e(1345).then(a.bind(a, 48497)))),
                R = (0, n.Z)((() => a.e(152).then(a.bind(a, 49346)))),
                L = (0, n.Z)((() => a.e(394).then(a.bind(a, 40394)))),
                A = (0, n.Z)((() => Promise.all([a.e(1773), a.e(1033)]).then(a.bind(a, 32708)))),
                P = (0, n.Z)((() => Promise.all([a.e(1773), a.e(6336)]).then(a.bind(a, 17709)))),
                D = (0, n.Z)((() => Promise.all([a.e(1773), a.e(7367)]).then(a.bind(a, 21272)))),
                N = (0, n.Z)((() => a.e(3608).then(a.bind(a, 67087)))),
                O = (0, n.Z)((() => a.e(9522).then(a.bind(a, 59522)))),
                x = (0, n.Z)((() => a.e(552).then(a.bind(a, 68820)))),
                F = (0, n.Z)((() => a.e(9018).then(a.bind(a, 16307)))),
                M = (0, n.Z)((() => Promise.all([a.e(1773), a.e(8010)]).then(a.bind(a, 92463)))),
                U = (0, n.Z)((() => a.e(1570).then(a.bind(a, 39555)))),
                H = (0, n.Z)((() => a.e(1977).then(a.bind(a, 22095)))),
                G = (0, n.Z)((() => Promise.all([a.e(9518), a.e(8890)]).then(a.bind(a, 77792)))),
                V = (0, n.Z)((() => a.e(8017).then(a.bind(a, 44993)))),
                B = (0, n.Z)((() => a.e(7250).then(a.bind(a, 95414)))),
                z = (0, n.Z)((() => Promise.all([a.e(8470), a.e(9210)]).then(a.bind(a, 62379)))),
                Z = (0, n.Z)((() => Promise.all([a.e(8470), a.e(9946)]).then(a.bind(a, 96867)))),
                W = (0, n.Z)((() => Promise.all([a.e(1773), a.e(3708)]).then(a.bind(a, 98730)))),
                $ = (0, n.Z)((() => a.e(9730).then(a.bind(a, 86480)))),
                j = e => {
                    switch (e) {
                        case "AVATARS_INTRODUCTION":
                            return o;
                        case "AVATARS_SAVE_CONFIRM":
                            return l;
                        case "CONFIRM":
                            return c(e);
                        case "CONFIRM_SKIP_ALPHABET_GATE":
                            return d(e);
                        case "EASIER_LESSON_NUDGE":
                            return p;
                        case "FRIENDS_QUEST_GIFT":
                            return _;
                        case "GENERIC_NOTIFICATION":
                            return f(e);
                        case "LEGENDARY_WITH_GEMS":
                            return y(e);
                        case "PRACTICE_HUB_SESSION_NOTIFICATION":
                            return R;
                        case "REACTIONS":
                            return L;
                        case "SEND_NUDGE":
                            return O;
                        case "STREAK_EARNBACK":
                            return x;
                        case "STREAK_PANEL_EXPANDED":
                            return G;
                        case "SUPER_OFFBOARDING":
                            return V;
                        case "charactersTabCallout":
                            return;
                        case "dogfoodingPreview":
                            return u;
                        case "dynamic":
                            return g;
                        case "emailVerified":
                            return m;
                        case "guidebookCallout":
                            return;
                        case "immersivePlusPromo":
                            return S;
                        case "kudosOffer":
                        case "kudosReceive":
                            return B;
                        case "leaderboardsIntro":
                            return;
                        case "legendaryRebrandGoldColor":
                            return b;
                        case "maintenanceBreak":
                            return $;
                        case "marketingOptIn":
                            return I;
                        case "mobileWebToAppConversion":
                            return w;
                        case "mobileWebToAppConversionAggressive":
                            return k;
                        case "newYearsDiscount":
                            return C;
                        case "pathChange":
                            return E;
                        case "pathMigration":
                        case "pathSectionsCallout":
                        case "pathSkipping":
                        case "plusBadge":
                        case "plusBadgeFamily":
                        case "plusBadgeMigration":
                            return;
                        case "plusBottomSheetFamilyFollowUp":
                            return v;
                        case "reactivatedWelcome":
                            return W;
                        case "resurrectedWelcome":
                            return D;
                        case "schoolsJoinedClassroom":
                            return N;
                        case "shakeToReportAlert":
                            return A;
                        case "skillTreeMigration":
                            return T;
                        case "streakFreezeFromDuo":
                            return F;
                        case "streakFreezeRecurringOffer":
                            return M;
                        case "streakFreezeUsed":
                            return U;
                        case "streakRepairOffer":
                            return H;
                        case "superFamilyPlanInvite":
                            return h;
                        case "superPreviewEndingCallout":
                            return;
                        case "turningNotificationsOn":
                            return P;
                        case "webToAppConversion":
                            return Z;
                        case "webToAppConversionAggressive":
                            return z;
                        case void 0:
                            return;
                        default:
                            throw (0, s.RJ)(e), Error()
                    }
                }
        },
        25447: (e, t, a) => {
            "use strict";
            a.d(t, {
                c: () => s
            });
            const s = e => {
                const t = Object.entries(e.message)[0],
                    a = t[0],
                    s = t[1];
                return {
                    displayText: e.displayText,
                    id: a,
                    payload: s
                }
            }
        },
        99644: (e, t, a) => {
            "use strict";
            a.d(t, {
                _u: () => o,
                g2: () => l,
                yY: () => i
            });
            var s = a(99369),
                n = a(68903),
                r = a(11811);
            const i = (e, t, a, n, r, i) => {
                    const o = e[a.unitIndex].levels[a.levelIndex];
                    if ("active" !== o.state) return {
                        updatedPath: e,
                        updatedPathSectioned: i
                    };
                    let l = e,
                        c = i;
                    if (t && (l = (0, s.setIn)(l, [a.unitIndex, "levels", a.levelIndex, "finishedSessions"], o.totalSessions), void 0 !== c && void 0 !== r && (c = (0, s.setIn)(c, [r, "units", a.unitNumber - 1, "levels", a.levelIndex, "finishedSessions"], o.totalSessions))), l = (0, s.setIn)(l, [a.unitIndex, "levels", a.levelIndex, "state"], "passed"), void 0 !== c && void 0 !== r && (c = (0, s.setIn)(c, [r, "units", a.unitNumber - 1, "levels", a.levelIndex, "state"], "passed")), n && "duo_radio" === o.type) {
                        const t = e[a.unitIndex].levels.findIndex((e => "locked" === e.state));
                        if (t >= 0 || a.unitIndex + 1 < e.length) {
                            const e = t >= 0 ? a.unitIndex : a.unitIndex + 1,
                                n = t >= 0 ? t : 0;
                            l = (0, s.setIn)(l, [e, "levels", n, "state"], "active"), void 0 !== c && void 0 !== r && (c = (0, s.setIn)(c, [r, "units", a.unitNumber - 1, "levels", n, "state"], "active"))
                        }
                        return {
                            updatedPath: l,
                            updatedPathSectioned: c
                        }
                    }
                    const d = e[a.unitIndex].levels.length - 1 === a.levelIndex,
                        u = a.unitIndex + (d ? 1 : 0);
                    if (u < e.length) {
                        const e = d ? 0 : a.levelIndex + 1;
                        l = (0, s.setIn)(l, [u, "levels", e, "state"], "active"), void 0 !== c && void 0 !== r && (c = (0, s.setIn)(c, [r, "units", a.unitNumber - 1, "levels", e, "state"], "active"))
                    }
                    return {
                        updatedPath: l,
                        updatedPathSectioned: c
                    }
                },
                o = (e, t, a, o, l) => {
                    let c = a,
                        d = o;
                    switch (e) {
                        case r.FF.AlphabetLesson:
                        case r.FF.AlphabetPractice:
                        case r.FF.Legendary:
                        case r.FF.LegendaryLevel:
                        case r.FF.LegendaryLexemePractice:
                        case r.FF.Lesson:
                        case r.FF.LexemePractice:
                        case r.FF.LevelReview:
                        case "story":
                            {
                                const a = Math.min(t.level.totalSessions, Math.max(t.level.finishedSessions, t.level.finishedSessions + 1));
                                if (a === t.level.totalSessions)
                                    if ((0, n.gB)(e, [r.FF.Legendary, r.FF.LegendaryLevel, r.FF.LegendaryLexemePractice])) c = (0, s.setIn)(c, [t.unitIndex, "levels", t.levelIndex, "state"], "legendary"), d = (0, s.setIn)(d, [l, "units", t.unitNumber - 1, "levels", t.levelIndex, "state"], "legendary");
                                    else {
                                        const {
                                            updatedPath: e,
                                            updatedPathSectioned: a
                                        } = i(c, !0, t, !1, l, d);
                                        c = e, d = null != a ? a : d
                                    }
                                else c = (0, s.setIn)(c, [t.unitIndex, "levels", t.levelIndex, "finishedSessions"], a),
                                d = (0, s.setIn)(d, [l, "units", t.unitNumber - 1, "levels", t.levelIndex, "finishedSessions"], a);
                                break
                            }
                        case r.FF.UnitReview:
                            {
                                const {
                                    updatedPath: e,
                                    updatedPathSectioned: a
                                } = i(c, !0, t, !1, l, d);c = e,
                                void 0 !== a && (d = a);
                                break
                            }
                        default:
                            throw Error(`Offline path update not implemented for session type ${e}`)
                    }
                    return [c, d]
                },
                l = (e, t, a) => {
                    if (void 0 === e.skillId) return a;
                    let n = a[e.skillId];
                    return void 0 === n ? a : (t.level.finishedSessions + 1 === t.level.totalSessions ? (n = (0, s.set)(n, "finishedLevels", n.finishedLevels + 1), n = (0, s.set)(n, "finishedLessons", 0)) : n = (0, s.set)(n, "finishedLessons", n.finishedLessons + 1), { ...a,
                        [e.skillId]: n
                    })
                }
        },
        93890: (e, t, a) => {
            "use strict";
            a.d(t, {
                KA: () => l,
                m3: () => d,
                ul: () => r,
                zK: () => o
            });
            var s = a(80254),
                n = a(17135);
            const r = (e, t, a) => {
                    const s = c(a.xpSummaries),
                        n = [],
                        r = t.inventory.society_streak_freeze,
                        i = u(r, s, a.timezoneOffset),
                        o = Math.min(i, e);
                    void 0 !== r && o > 0 && n.push({ ...r,
                        quantity: r.quantity - o
                    });
                    const l = e - o,
                        d = t.inventory.streak_freeze,
                        g = u(d, s, a.timezoneOffset),
                        p = Math.min(g, l);
                    if (void 0 !== d && p > 0 && n.push({ ...d,
                            quantity: d.quantity - p
                        }), o + p !== e) throw Error("Streak freezes consumed does not match streak freezes to use");
                    return n
                },
                i = (e, t) => {
                    const a = (0, n.zM)(e, t);
                    return (0, n.VV)(a) / 1e3
                },
                o = (e, t, a) => {
                    const s = c(a.xpSummaries);
                    if (void 0 === s) return 0;
                    const r = i(e, a.timezoneOffset),
                        o = Math.max(0, (0, n.aW)(1e3 * s, 1e3 * r) - 1),
                        l = u(t.inventory.society_streak_freeze, s, a.timezoneOffset),
                        d = u(t.inventory.streak_freeze, s, a.timezoneOffset);
                    return Math.min(o, l + d)
                },
                l = (e, t, a) => {
                    const {
                        streakData: s,
                        xpSummaries: r
                    } = a;
                    if (!s.currentStreak) return {
                        streakData: s,
                        xpSummaries: r
                    };
                    const o = c(r);
                    if (void 0 === o) return {
                        streakData: s,
                        xpSummaries: r
                    };
                    const l = (0, n.zM)(o),
                        d = {
                            dailyGoalXp: a.xpGoal,
                            frozen: !1,
                            gainedXp: 0,
                            numSessions: 0,
                            repaired: !1,
                            streakExtended: !1,
                            userId: a.id
                        },
                        u = {};
                    for (let e = 0; e < t; e++) {
                        l.setDate(l.getDate() + 1);
                        const e = { ...d,
                            date: (0, n.g8)(l),
                            frozen: !0
                        };
                        u[(0, n.zK)(e.date)] = e
                    }
                    const g = i(e, a.timezoneOffset);
                    return {
                        streakData: Math.max(0, (0, n.aW)(1e3 * (0, n.g8)(l), 1e3 * g) - 1) < 1 ? {
                            currentStreak: { ...s.currentStreak,
                                endDate: (0, n.zK)((0, n.g8)(l))
                            },
                            longestStreak: s.longestStreak,
                            previousStreak: s.previousStreak
                        } : {
                            currentStreak: null,
                            longestStreak: s.longestStreak,
                            previousStreak: s.currentStreak
                        },
                        xpSummaries: { ...r,
                            ...u
                        }
                    }
                },
                c = e => {
                    const t = s.VO(e).filter((e => void 0 !== e && (e.frozen || e.repaired || e.streakExtended)));
                    if (0 !== t.length) return Math.max(...t.map((e => e.date)))
                },
                d = (e, t) => {
                    var a, s;
                    const {
                        streakData: r,
                        xpSummaries: o
                    } = t, l = c(o), d = i(e.time, t.timezoneOffset), u = Math.max(0, (0, n.aW)(1e3 * (null != l ? l : 0), 1e3 * d)), g = (0, n.zK)(d), p = o[g], m = void 0 === p ? {
                        dailyGoalXp: t.xpGoal,
                        date: d,
                        frozen: !1,
                        gainedXp: e.xp,
                        numSessions: 0,
                        repaired: !1,
                        streakExtended: !0,
                        userId: t.id
                    } : { ...p,
                        gainedXp: (null !== (a = null == p ? void 0 : p.gainedXp) && void 0 !== a ? a : 0) + e.xp
                    }, h = { ...o,
                        [g]: m
                    };
                    return {
                        streakData: u > 1 || null === r.currentStreak ? {
                            currentStreak: {
                                endDate: g,
                                length: 1,
                                startDate: g
                            },
                            longestStreak: r.longestStreak,
                            previousStreak: r.currentStreak
                        } : u > 0 ? {
                            currentStreak: { ...r.currentStreak,
                                endDate: g,
                                length: (null === (s = r.currentStreak) || void 0 === s ? void 0 : s.length) + 1
                            },
                            longestStreak: r.longestStreak,
                            previousStreak: r.previousStreak
                        } : r,
                        xpSummaries: h
                    }
                },
                u = (e, t, a) => {
                    if (void 0 === e) return 0;
                    const s = i(e.purchaseDate, a);
                    return t && s > t ? 0 : e.quantity
                }
        },
        36914: (e, t, a) => {
            "use strict";
            a.d(t, {
                Av: () => g,
                BA: () => c,
                hF: () => S,
                iR: () => y,
                id: () => p,
                kL: () => u,
                lE: () => m,
                qB: () => f,
                u$: () => d,
                uv: () => v,
                x$: () => _,
                xc: () => h
            });
            var s = a(68903),
                n = a(8654),
                r = a(93746),
                i = a(58576),
                o = a(79465),
                l = a(41631);
            const c = ["hi", "getStarted", "coursePicker", "hdyhau", "learningReason", "proficiency", "courseOverview", "dailyGoal", "notificationPrimer", "accountLink", "choosePath", "pathReactionOptional", "pathReaction"],
                d = (0, s.p)(["hi", "getStarted", "pathReactionOptional", "pathReaction"]);
            var u;
            ! function(e) {
                e[e.Casual = 10] = "Casual", e[e.Intense = 50] = "Intense", e[e.Regular = 20] = "Regular", e[e.Serious = 30] = "Serious"
            }(u || (u = {}));
            const g = (e, t) => {
                    if (t <= 1) return {
                        level: e[0].units[0].levels[0],
                        levelIndex: 0,
                        unitIndex: 0,
                        unitNumber: e[0].units[0].unitNumber
                    };
                    const a = e[t - 2];
                    if (void 0 === a) return;
                    const s = a.units.flatMap((e => e.levels.map(((t, a) => ({
                        level: t,
                        levelIndex: a,
                        unitIndex: e.unitIndex,
                        unitNumber: e.unitNumber
                    }))))).filter((e => "unit_review" === e.level.type));
                    return 0 !== s.length ? s[s.length - 1] : void 0
                },
                p = (e, t) => {
                    if (void 0 === e) return (0, i.vU)("getRecommendedSectionFromProficiency called with undefined pathSectioned"), 0;
                    if (void 0 === t) return (0, i.vU)("getRecommendedSectionFromProficiency called with undefined proficiency"), 0;
                    const a = e.filter((e => ![l.t.CHAMPION, l.t.DAILY_REFRESH].includes(e.type))).length,
                        s = (() => {
                            switch (t) {
                                case 1:
                                case 2:
                                    return 2;
                                case 3:
                                    return 3;
                                case 4:
                                    return 4;
                                default:
                                    return 1
                            }
                        })();
                    return Math.min(s, a)
                },
                m = "welcomeStep",
                h = (e, t = {}, a = !1) => {
                    var r, i, o, l, c, d, g;
                    switch (e) {
                        case "hi":
                            return (0, n.H8)(38600);
                        case "getStarted":
                            return (0, n.H8)(38601);
                        case "coursePicker":
                            return (0, n.H8)(38599);
                        case "hdyhau":
                            return (0, n.H8)(25725);
                        case "learningReason":
                            switch (t.learningReason) {
                                case void 0:
                                    return (0, n.H8)(34656, {
                                        language_name: null !== (r = t.languageName) && void 0 !== r ? r : ""
                                    });
                                case "brain":
                                    return (0, n.H8)(38581);
                                case "fun":
                                    return (0, n.H8)(38585);
                                case "family":
                                    return (0, n.H8)(38580);
                                case "school":
                                    return (0, n.H8)(38582);
                                case "travel":
                                    return (0, n.H8)(38584);
                                case "work":
                                    return (0, n.H8)(38583);
                                default:
                                    return (0, n.H8)(38586)
                            }
                        case "proficiency":
                            switch (t.proficiency) {
                                case void 0:
                                    return (0, n.H8)(29828, {
                                        language_name: null !== (i = t.languageName) && void 0 !== i ? i : ""
                                    });
                                case 1:
                                    return (0, n.H8)(38590);
                                case 2:
                                    return a ? (0, n.H8)(38590) : (0, n.H8)(38591);
                                case 3:
                                    return a ? (0, n.H8)(38591) : (0, n.H8)(38592);
                                case 4:
                                    return (0, n.H8)(38591);
                                default:
                                    return (0, n.H8)(38589)
                            }
                        case "courseOverview":
                            return (0, n.H8)(38587);
                        case "dailyGoal":
                            switch (t.dailyGoal) {
                                case void 0:
                                    return (0, n.H8)(38579);
                                case u.Regular:
                                    return (0, n.H8)(43420, {
                                        num: 50
                                    }, {
                                        exportTags: !0
                                    });
                                case u.Serious:
                                    return (0, n.H8)(43420, {
                                        num: 75
                                    }, {
                                        exportTags: !0
                                    });
                                case u.Intense:
                                    return (0, n.H8)(43420, {
                                        num: 100
                                    }, {
                                        exportTags: !0
                                    });
                                default:
                                    return (0, n.H8)(43420, {
                                        num: 25
                                    }, {
                                        exportTags: !0
                                    })
                            }
                        case "notificationPrimer":
                            return (0, n.H8)(38578);
                        case "accountLink":
                            return (0, n.H8)(20676);
                        case "choosePath":
                            return (0, n.H8)(38572);
                        case "pathReactionOptional":
                            return (0, n.H8)(38866);
                        case "pathReaction":
                            if ("start" === t.pathChoice) return (0, n.H8)(38867);
                            if (a) {
                                const e = p(t.pathSectioned, t.proficiency);
                                switch (t.proficiency) {
                                    case 1:
                                        return (0, n.H8)(51459, {
                                            language_name: null !== (o = t.languageName) && void 0 !== o ? o : "",
                                            section: e
                                        }, {
                                            exportTags: !0
                                        });
                                    case 2:
                                        return (0, n.H8)(51460, {
                                            language_name: null !== (l = t.languageName) && void 0 !== l ? l : "",
                                            section: e
                                        }, {
                                            exportTags: !0
                                        });
                                    case 3:
                                        return (0, n.H8)(51461, {
                                            language_name: null !== (c = t.languageName) && void 0 !== c ? c : "",
                                            section: e
                                        }, {
                                            exportTags: !0
                                        });
                                    case 4:
                                        return (0, n.H8)(51464, {
                                            language_name: null !== (d = t.languageName) && void 0 !== d ? d : "",
                                            section: e
                                        }, {
                                            exportTags: !0
                                        });
                                    default:
                                        return (0, n.H8)(45525, {
                                            language_name: null !== (g = t.languageName) && void 0 !== g ? g : "",
                                            section: e
                                        }, {
                                            exportTags: !0
                                        })
                                }
                            }
                            return (0, n.H8)(38573);
                        default:
                            return (0, s.RJ)(e), ""
                    }
                },
                v = e => e <= 1 ? "/lesson" : `/onboarding/placement/${e}`,
                _ = e => {
                    switch (e) {
                        case "accountLink":
                            return (0, n._i)(7827);
                        case "dailyGoal":
                        case "choosePath":
                        case "courseOverview":
                        case "coursePicker":
                        case "getStarted":
                        case "hdyhau":
                        case "hi":
                        case "learningReason":
                        case "notificationPrimer":
                        case "pathReaction":
                        case "pathReactionOptional":
                        case "proficiency":
                            return (0, n._i)(4906);
                        default:
                            return (0, s.RJ)(e), (0, n._i)(4906)
                    }
                },
                f = (e, t, a) => {
                    if ("en" === t) return (0, n._i)(43008);
                    const s = a.find((a => a.fromLanguageId === e && a.learningLanguageId === t));
                    if (!s) return;
                    const i = (0, r.vY)(t),
                        o = s.numLearners;
                    if (o < 1e6) return (0, n._i)(42628, {
                        language_name: i,
                        num: (1e3 * Math.floor(o / 1e3)).toLocaleString()
                    });
                    const l = Math.floor(o / 1e6);
                    return l < 10 ? (0, n._i)(42665, {
                        language_name: i,
                        num: l
                    }) : l < 100 ? (0, n._i)(42666, {
                        language_name: i,
                        num: l
                    }) : (0, n._i)(42667, {
                        language_name: i,
                        num: l
                    })
                },
                S = e => {
                    var t;
                    return "placement" === (null === (t = e.sessionRouteParams) || void 0 === t ? void 0 : t.type) && e.numChallengesAnswered >= 5 && e.coachDuo.currentIncorrectStreak >= 1 && e.numChallengesCorrect / e.numChallengesAnswered <= .5 && !e.hasShownEasierLessonNudge
                },
                y = (e, t, a = {}) => {
                    switch (e) {
                        case "hi":
                            (0, o.track)("duo_introduction_tap", {
                                target: t
                            });
                            break;
                        case "getStarted":
                            (0, o.track)("journey_introduction_tap", {
                                target: t
                            });
                            break;
                        case "coursePicker":
                            (0, o.track)("course_picker_tap", {
                                target: t,
                                via: "onboarding"
                            });
                            break;
                        case "hdyhau":
                            (0, o.track)("acquisition_survey_reason_tap", "continue" === t ? {
                                selected_value: a.surveyChoice,
                                target: t
                            } : {
                                target: t
                            });
                            break;
                        case "learningReason":
                            (0, o.track)("learning_reason_tap", "continue" === t ? {
                                selected_value: a.learningReason,
                                target: t
                            } : {
                                target: t
                            });
                            break;
                        case "proficiency":
                            (0, o.track)("prior_proficiency_tap", {
                                target: t
                            });
                            break;
                        case "courseOverview":
                            (0, o.track)("continue" === t ? "course_preview_next_click" : "course_preview_back_click", {});
                            break;
                        case "dailyGoal":
                            (0, o.track)("daily_goal_tap", "continue" === t ? {
                                selected_value: a.dailyGoal,
                                target: t
                            } : {
                                target: t
                            });
                            break;
                        case "notificationPrimer":
                            (0, o.track)("notification_primer_tap", {
                                target: t
                            });
                            break;
                        case "accountLink":
                            (0, o.track)("welcome_signup_tap", {
                                target: "continue" === t ? "skip" : "back"
                            });
                            break;
                        case "choosePath":
                            (0, o.track)("welcome_fork_tap", "continue" === t ? {
                                selected_value: "start" === a.pathChoice ? "basics" : "placement",
                                target: t
                            } : {
                                target: t
                            });
                            break;
                        case "pathReactionOptional":
                        case "pathReaction":
                            break;
                        default:
                            (0, s.RJ)(e)
                    }
                }
        },
        89803: (e, t, a) => {
            "use strict";
            a.d(t, {
                Bf: () => g,
                VB: () => d,
                o7: () => u,
                u6: () => p,
                vi: () => c
            });
            var s = a(80254),
                n = a(54412),
                r = a(53229),
                i = a(93746),
                o = a(79465),
                l = a(16086);
            const c = s.IH((() => {
                    if ((0, n.d8)(n.Vj.TimeSiteLoaded, Date.now().toString()), (0, l.Pc)())(0, n.ej)(n.Vj.LandingPage) || (0, n.d8)(n.Vj.LandingPage, n.m_), (0, n.ej)(n.Vj.LandingURL) || (0, n.d8)(n.Vj.LandingURL, n.m_), (0, n.ej)(n.Vj.InitialReferrer) || (0, n.d8)(n.Vj.InitialReferrer, n.m_);
                    else if ((0, n.ej)(n.Vj.LandingURL) || (0, n.d8)(n.Vj.LandingURL, window.location.href), (0, n.ej)(n.Vj.InitialReferrer) || (0, n.d8)(n.Vj.InitialReferrer, window.document.referrer || "$direct"), !(0, n.ej)(n.Vj.LastReferrer)) {
                        const e = document.referrer;
                        /duolingo\.(cn|com)/.test(e) || (0, n.d8)(n.Vj.LastReferrer, document.referrer)
                    }
                })),
                d = e => {
                    let t = !0;
                    (0, n.ej)(n.Vj.LandingPage) ? t = !1: (0, n.d8)(n.Vj.LandingPage, e), (0, o.track)("landing_page_load", {
                        initial_landing: t,
                        page: e,
                        ui_language: (0, i.D3)(i.h9)
                    })
                },
                u = e => {
                    const t = (0, r.vl)(e.search),
                        a = t.email_type;
                    if (a) {
                        const e = t.day_offset;
                        (0, o.track)("email_tap", {
                            day_offset: e ? parseInt(e, 10) : void 0,
                            email_type: a,
                            target: t.target
                        })
                    }
                },
                g = (e, t) => {
                    (0, o.track)("splash load", { ...(0, o.getCampaignInfo)("acquisition_"),
                        ...(0, o.getCampaignInfo)("latest_"),
                        has_cookie: !!(0, n.ej)(n.Vj.LoggedOutUUID),
                        subpage: t,
                        use_nweb: !0
                    }), d(t), u(e)
                },
                p = s.IH((() => {
                    const e = (0, n.ej)(n.Vj.TimeSiteLoaded),
                        t = {};
                    if (e) try {
                        const a = parseInt(e, 10);
                        t.time_since_open = Math.round((Date.now() - a) / 1e3)
                    } catch {}(0, o.track)("app_close", t)
                }))
        },
        74971: (e, t, a) => {
            "use strict";
            a.d(t, {
                JZ: () => g,
                U9: () => o,
                Xb: () => u,
                ZX: () => p
            });
            var s = a(50548),
                n = a(79465),
                r = a(74597),
                i = a(16086);
            const o = void 0 !== window.OptanonWrapper,
                l = "onetrust-banner-sdk";
            const c = () => {
                var e, t, a;
                return !((0, i.Pc)() || null !== (a = null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.IsAlertBoxClosed) || void 0 === t ? void 0 : t.call(e)) && void 0 !== a && a)
            };
            o && new class {
                constructor() {
                    this.updateBannerVisibility = () => {
                        const e = !r.Z.desktop && window.location.pathname.startsWith("/year-in-review/"),
                            t = !r.Z.desktop && window.location.pathname.startsWith("/weekly-report"),
                            a = (0, i.Pc)() || e || t;
                        void 0 === this.hidingStyleComponent ? a && (this.hidingStyleComponent = (e => {
                            const t = document.createElement("style");
                            return t.textContent = e, document.head.append(t), t
                        })(`#${l} { display: none !important; }`)) : a || (this.hidingStyleComponent.remove(), this.hidingStyleComponent = void 0)
                    }, this.updateBannerHeight = () => {
                        var e;
                        const t = document.getElementById(l),
                            a = null !== (e = null == t ? void 0 : t.clientHeight) && void 0 !== e ? e : 0;
                        document.body.style.setProperty("--onetrust-banner-height", `${a}px`)
                    }, this.startWatchingForBannerUpdates = (e = !1) => {
                        if (window.clearInterval(this.bannerUpdateInterval), !c() && !e) return;
                        let t = 20;
                        this.bannerUpdateInterval = window.setInterval((() => {
                            this.updateBannerHeight(), t -= 1, 0 === t && window.clearInterval(this.bannerUpdateInterval)
                        }), 100)
                    }, s.m8.listen(this.updateBannerVisibility), window.OptanonWrapper = () => {
                        this.startWatchingForBannerUpdates(!0), window.OnetrustActiveGroups && (0, n.track)("cookie_consent_updated", {
                            cookie_consent_groups: window.OnetrustActiveGroups
                        })
                    }, window.addEventListener("resize", (() => this.startWatchingForBannerUpdates())), this.updateBannerVisibility(), this.startWatchingForBannerUpdates()
                }
            };
            const d = {
                    targeting: "C0004"
                },
                u = e => {
                    var t, a;
                    return !o || null !== (a = null === (t = window.OnetrustActiveGroups) || void 0 === t ? void 0 : t.includes(`,${d[e]},`)) && void 0 !== a && a
                },
                g = () => {
                    var e, t;
                    null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.ToggleInfoDisplay) || void 0 === t || t.call(e)
                },
                p = () => {
                    var e, t, a;
                    return null !== (a = null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.GetDomainData) || void 0 === t ? void 0 : t.call(e).CookieSettingButtonText) && void 0 !== a ? a : "Cookie Settings"
                }
        },
        23275: (e, t, a) => {
            "use strict";
            a.d(t, {
                $: () => z,
                B9: () => I,
                Bm: () => _,
                E0: () => V,
                EH: () => F,
                Eb: () => ee,
                G7: () => $,
                II: () => y,
                Ib: () => J,
                Kq: () => G,
                Mj: () => W,
                Nc: () => j,
                Nk: () => v,
                OE: () => P,
                Ol: () => b,
                P6: () => D,
                TH: () => Z,
                Tw: () => Y,
                U8: () => w,
                Wc: () => B,
                aw: () => ne,
                cy: () => H,
                d$: () => f,
                dN: () => K,
                e4: () => X,
                eK: () => M,
                f: () => se,
                f2: () => O,
                kL: () => U,
                m8: () => L,
                mH: () => q,
                mo: () => T,
                pG: () => N,
                qM: () => ae,
                tX: () => x,
                tr: () => R,
                u6: () => C,
                w1: () => A,
                xV: () => te,
                xY: () => Q,
                yK: () => k,
                yP: () => h
            });
            var s = a(80254),
                n = a(97544),
                r = a(64115),
                i = a(81149),
                o = a(68903),
                l = a(8654),
                c = a(93746),
                d = a(37825),
                u = a(53171),
                g = a(12125),
                p = a(11811),
                m = a(97106);
            const h = 500,
                v = (e, t) => e.unitIndex !== t.unitIndex ? e.unitIndex - t.unitIndex : e.levelIndex - t.levelIndex,
                _ = e => L(e, (e => "active" === e.state)),
                f = e => L(e, (e => ["active", "passed"].includes(e.state) && S(e)), void 0, {
                    findLast: !0
                }),
                S = e => ["skill", "story", "practice"].includes(e.type) || "unit_review" === e.type && !B(e.state),
                y = ({
                    levelType: e,
                    path: t
                }) => t.flatMap((e => e.levels)).some((t => t.type === e)),
                E = ({
                    levelType: e,
                    path: t
                }) => t.flatMap(((e, t) => e.levels.map((e => ({
                    unitIndex: t,
                    ...e
                }))))).filter((t => !e || t.type === e)),
                b = ({
                    levelType: e,
                    path: t
                }) => {
                    const a = _(t),
                        s = null == a ? void 0 : a.unitIndex,
                        n = t.slice(0, void 0 === s ? -1 : s + 1);
                    return E({
                        levelType: e,
                        path: n
                    }).filter((e => B(e.state)))
                },
                I = ({
                    section: e
                }) => E({
                    path: e
                }).filter((e => B(e.state))).length,
                w = ({
                    levelType: e,
                    path: t
                }) => {
                    const a = _(t),
                        s = null == a ? void 0 : a.unitIndex,
                        n = t.slice(0, void 0 === s ? -1 : s + 1);
                    return E({
                        levelType: e,
                        path: n
                    }).map((e => e.finishedSessions)).reduce(((e, t) => e + t), 0)
                },
                k = (e, t) => {
                    const a = b({
                            levelType: "skill",
                            path: e
                        }).map((e => {
                            const t = e.pathLevelClientData;
                            return {
                                finishedSessions: e.finishedSessions,
                                levelId: e.id,
                                skillId: t.skillId,
                                state: e.state,
                                subtype: e.subtype,
                                type: e.type,
                                unitIndex: e.unitIndex
                            }
                        })),
                        n = _(e),
                        r = n && "skill" === n.level.type ? [...a, {
                            finishedSessions: n.level.finishedSessions,
                            levelId: n.level.id,
                            skillId: n.level.pathLevelClientData.skillId,
                            state: n.level.state,
                            subtype: n.level.subtype,
                            type: n.level.type,
                            unitIndex: n.unitIndex
                        }] : a;
                    if (!0 === t) return s.jj(r, !1, s.Cb("skillId")).reverse();
                    const i = [...r].reverse();
                    return s.jj(i, !1, s.Cb("skillId"))
                },
                T = (e, t = -1, a = []) => {
                    const n = k(e).filter((e => !a.includes(e.type) && !a.includes(e.subtype) && !!e.skillId)).slice(0, t);
                    return n[s.MX(0, n.length - 1)]
                },
                C = (e, {
                    alignment: t,
                    blocksHomeMessages: a,
                    focus: s,
                    id: n,
                    isPathVisible: r,
                    offset: i
                } = {}) => {
                    const o = [{
                        alignment: t,
                        behavior: r ? "smooth" : void 0,
                        blocksHomeMessages: null == a || a,
                        id: n,
                        ignoreBlocker: !r,
                        levelId: e,
                        name: "PATH_LEVEL_CENTER",
                        offset: i
                    }];
                    return s && o.push({
                        blocksHomeMessages: !0,
                        levelId: e,
                        name: "PATH_LEVEL_FOCUS"
                    }), o
                },
                R = e => L(e, (e => "passed" === e.state && (0, d.d)(e.type))),
                L = (e, t, a, s) => {
                    var n;
                    if (a) {
                        const s = null === (n = e[a.unitIndex]) || void 0 === n ? void 0 : n.levels[a.levelIndex];
                        if (s && t(s)) return { ...a,
                            level: e[a.unitIndex].levels[a.levelIndex],
                            unitNumber: e[a.unitIndex].unitNumber
                        }
                    }
                    if (null == s ? void 0 : s.findLast) {
                        for (let a = e.length - 1; a >= 0; a--)
                            for (let s = e[a].levels.length - 1; s >= 0; s--)
                                if (t(e[a].levels[s])) return {
                                    level: e[a].levels[s],
                                    levelIndex: s,
                                    unitIndex: a,
                                    unitNumber: e[a].unitNumber
                                }
                    } else
                        for (let a = 0; a < e.length; a++)
                            for (let s = 0; s < e[a].levels.length; s++)
                                if (t(e[a].levels[s])) return {
                                    level: e[a].levels[s],
                                    levelIndex: s,
                                    unitIndex: a,
                                    unitNumber: e[a].unitNumber
                                }
                },
                A = e => {
                    var t;
                    const a = q(e);
                    if ((0, r.gQ)("lessonIndex")) return parseInt(null !== (t = (0, r.ky)("lessonIndex")) && void 0 !== t ? t : "", 10);
                    if ((0, g.R0)(null == a ? void 0 : a.status) && void 0 !== (null == a ? void 0 : a.lessonsCompleted)) return Math.min(a.lessonsCompleted, e.totalSessions);
                    if (("grammar" === e.subtype || "practice" === e.type) && B(te(e))) {
                        const t = e.totalSessions - (e.hasLevelReview ? 1 : 0);
                        return s.MX(t - 1)
                    }
                    return e.finishedSessions
                },
                P = (e, t) => {
                    const a = e[t.unitIndex].levels[t.levelIndex + 1],
                        s = e[t.unitIndex].unitNumber;
                    if (a) return {
                        level: a,
                        levelIndex: t.levelIndex + 1,
                        unitIndex: t.unitIndex,
                        unitNumber: s
                    };
                    const n = e[t.unitIndex + 1];
                    return n ? {
                        level: n.levels[0],
                        levelIndex: 0,
                        unitIndex: t.unitIndex + 1,
                        unitNumber: n.unitNumber
                    } : void 0
                },
                D = (e, t, a = {}) => {
                    const s = [...C(e.id, a), {
                        blocksHomeMessages: !0,
                        delay: a.isPathVisible ? void 0 : h,
                        levelId: e.id,
                        name: "PATH_LEVEL_STATE",
                        prevState: "active"
                    }];
                    return t && (s.push(...C(t.id, {
                        focus: !0,
                        isPathVisible: !0
                    })), s.push({
                        blocksHomeMessages: !0,
                        levelId: t.id,
                        name: "PATH_LEVEL_STATE",
                        prevState: "locked"
                    }), "practice" !== t.type && "skill" !== t.type && "alphabet" !== t.type || s.push({
                        blocksHomeMessages: !0,
                        levelId: t.id,
                        name: "PATH_LEVEL_PROGRESS_FADE"
                    }), s.push({
                        blocksHomeMessages: !0,
                        levelId: t.id,
                        name: "PATH_LEVEL_TOOLTIP_FADE"
                    })), s
                },
                N = (e, t, a = {}) => {
                    const s = [...C(e.id, a), {
                        blocksHomeMessages: !0,
                        delay: a.isPathVisible ? void 0 : h,
                        levelId: e.id,
                        name: "PATH_LEVEL_STATE",
                        prevIsActiveAssignment: !0,
                        prevState: "active"
                    }];
                    return t && (s.push(...C(t.id, {
                        focus: !0,
                        isPathVisible: !0
                    })), "skill" === t.type && s.push({
                        blocksHomeMessages: !0,
                        levelId: t.id,
                        name: "PATH_LEVEL_PROGRESS_FADE"
                    }), s.push({
                        blocksHomeMessages: !0,
                        levelId: t.id,
                        name: "PATH_LEVEL_TOOLTIP_FADE"
                    })), s
                },
                O = e => [...C(e.levels[0].id, {
                    alignment: "top"
                }), {
                    blocksHomeMessages: !0,
                    delay: h,
                    name: "PATH_UNIT_STATE",
                    prevState: "passed",
                    unitIndex: e.unitIndex
                }, ...e.levels.map((e => ({
                    blocksHomeMessages: !0,
                    levelId: e.id,
                    name: "PATH_LEVEL_STATE",
                    prevState: "passed"
                })))],
                x = ({
                    level: e,
                    levelIndex: t,
                    unitIndex: a,
                    isEarnbackSession: s = !1,
                    isLegendary: n = !1,
                    isSectionTest: i = !1,
                    sectionIndex: o = 0,
                    storyMode: l
                }) => {
                    if ("alphabet_gate" === e.type) return "/characters";
                    const c = (0, r.gQ)("debugPath"),
                        d = void 0 !== q(e);
                    if (n) return `/lesson/unit/${a+1}/legendary/${t+1}`;
                    if (i && void 0 !== o) return `/lesson/section/${o+1}/test`;
                    if (c || B(e.state) || d || s) return `/lesson/unit/${a+1}/level/${t+1}${c?"?debugPath=1":""}`;
                    switch (e.state) {
                        case "active":
                            return l ? `/lesson?mode=${l}` : "/lesson";
                        case "unit_test":
                            return `/lesson/unit/${a+1}/test`;
                        default:
                            throw Error(`Unable to retrieve URL for ${e.state} level.`)
                    }
                },
                F = (e, t, a) => {
                    var s, n, r, i, o;
                    const l = G(null !== (s = null == t ? void 0 : t.unitIndex) && void 0 !== s ? s : 0, e),
                        c = e[l],
                        d = e.length,
                        u = null === (n = null == c ? void 0 : c.units) || void 0 === n ? void 0 : n.length,
                        g = [p.FF.PlacementTest, p.FF.SectionTest].includes(a) || void 0 === (null == t ? void 0 : t.unitIndex) || null === (i = null === (r = null == c ? void 0 : c.units[null == t ? void 0 : t.unitIndex]) || void 0 === r ? void 0 : r.levels) || void 0 === i ? void 0 : i.length,
                        m = ![p.FF.PlacementTest, p.FF.UnitTest, p.FF.SectionTest].includes(a) && (null == t ? void 0 : t.level) ? t.level.totalSessions : void 0;
                    return {
                        absolute_unit_index: null == t ? void 0 : t.unitIndex,
                        num_nodes_in_unit: g,
                        num_sections: d,
                        num_sessions_in_node: m,
                        num_units_in_section: u,
                        path_level_id: null === (o = null == t ? void 0 : t.level) || void 0 === o ? void 0 : o.id,
                        section_index: l,
                        unit_in_section_index: (null == t ? void 0 : t.unitNumber) ? (null == t ? void 0 : t.unitNumber) - 1 : void 0,
                        unit_index: null == t ? void 0 : t.unitIndex
                    }
                },
                M = e => {
                    let t = 0,
                        a = 0,
                        s = 0,
                        n = 0,
                        r = 0,
                        i = !1;
                    for (const o of e) {
                        n++;
                        let e = !0,
                            l = !0;
                        for (const s of o.levels) {
                            const n = B(s.state);
                            i || void 0 === s.dailyRefreshInfo || (i = !0), n && (t++, "skill" === s.type && a++), e = e && n, l = l && "legendary" === s.state
                        }
                        e && s++, l && r++
                    }
                    return {
                        num_levels_completed: t,
                        num_skill_levels_completed: a,
                        num_units_completed: s,
                        num_units_legendary: r,
                        path_complete: i ? s >= n - 1 : s === n
                    }
                },
                U = e => {
                    var t, a;
                    return null !== (a = null !== (t = _(e)) && void 0 !== t ? t : R(e)) && void 0 !== a ? a : (e => {
                        const t = e[e.length - 1],
                            a = t.levels.length - 1;
                        return {
                            level: t.levels[a],
                            levelIndex: a,
                            unitIndex: e.length - 1,
                            unitNumber: t.unitNumber
                        }
                    })(e)
                },
                H = e => [...C(e.id, {
                    focus: !0
                }), {
                    blocksHomeMessages: !0,
                    delay: h,
                    levelId: e.id,
                    name: "PATH_LEVEL_STATE",
                    prevState: "unit_test"
                }, {
                    blocksHomeMessages: !0,
                    levelId: e.id,
                    name: "PATH_LEVEL_PROGRESS_FADE"
                }, {
                    blocksHomeMessages: !0,
                    levelId: e.id,
                    name: "PATH_LEVEL_TOOLTIP_FADE"
                }],
                G = (e, t) => t.findIndex((t => t.units.some((t => t.unitIndex === e)))),
                V = e => e.levels.findIndex((e => "unit_test" === e.state)),
                B = e => !!e && ["legendary", "passed"].includes(e),
                z = e => e.hasLevelReview && A(e) === e.totalSessions - 1,
                Z = e => "unit_test" === e.state,
                W = e => e ? "isPathExtension" in e.pathLevelClientData && e.pathLevelClientData.isPathExtension : void 0,
                $ = e => "skill" === (null == e ? void 0 : e.type) ? e.pathLevelClientData.crownLevelIndex : void 0,
                j = (e, t, a) => {
                    if (B(a.level.state)) return !1;
                    const n = ((e, t) => {
                        const a = [],
                            {
                                unitIndex: s,
                                levelIndex: n
                            } = t;
                        for (let r = s; r < e.length; r++)
                            for (let i = r === s ? n : 0; i < e[r].levels.length; i++) {
                                const s = e[r].levels[i];
                                if (s.id !== t.level.id) {
                                    if (s.isInProgressSequence) return a;
                                    a.push(s.id)
                                }
                            }
                        return a
                    })(e, a);
                    if (0 === n.length) return !1;
                    const r = b({
                            path: e
                        }).map((e => e.id)),
                        i = b({
                            path: t
                        }).map((e => e.id)),
                        o = s.e5(i, r),
                        l = [a.level.id, ...n];
                    return !!s.Xy(o, l)
                },
                q = e => {
                    let t;
                    switch (e.type) {
                        case "skill":
                        case "story":
                            t = e.pathLevelClientData.assignmentInfo
                    }
                    return null != t ? t : void 0
                },
                Q = e => {
                    const t = q(e);
                    return !(void 0 === t || !(0, g.R0)(t.status)) && 0 !== t.lessonsCompleted && t.lessonsCompleted < t.lessonsToComplete
                },
                K = e => {
                    const t = q(e);
                    return !(void 0 === t || !(0, g.R0)(t.status) || t.type !== n.bu.AssignmentType.SKILL) && t.lessonsCompleted === t.lessonsToComplete - 1
                },
                Y = e => e[0].toLocaleUpperCase(c.h9) + e.slice(1),
                J = (e, t) => void 0 !== t && void 0 !== e && t.assignmentId === e.assignmentId,
                X = (e, t, a, s) => {
                    var n;
                    switch (e.type) {
                        case "adventures":
                            return e.pathLevelClientData.adventuresEpisodeSummary.localizedTitle;
                        case "alphabet":
                            return e.pathLevelClientData.title;
                        case "alphabet_gate":
                        case "chest":
                            return;
                        case "duo_radio":
                            return e.pathLevelClientData.duoRadioSummary.name;
                        case "practice":
                            if ("unit_practice" === e.subtype && s) {
                                const t = null === (n = e.pathLevelClientData) || void 0 === n ? void 0 : n.skillIds[0],
                                    a = s.levels.find((e => "skill" === e.type && e.pathLevelClientData.skillId === t && void 0 !== e.pathLevelClientData.teachingObjective));
                                if (void 0 === a) return (0, l.H8)(39844);
                                const r = a.pathLevelClientData.teachingObjective;
                                return Y(r)
                            }
                            return (0, l.H8)(39844);
                        case "skill":
                            {
                                const t = "teachingObjective" in e.pathLevelClientData ? e.pathLevelClientData.teachingObjective : void 0;
                                return t ? Y(t) : B(e.state) ? (0, l.H8)(36805) : (0, l.H8)(39121)
                            }
                        case "story":
                            return "storyName" in e.pathLevelClientData ? e.pathLevelClientData.storyName : void 0;
                        case "unit_review":
                            return a ? (0, l.H8)(43037) : (0, l.H8)(38614, {
                                unit_num: t
                            });
                        default:
                            return void(0, o.RJ)(e.type)
                    }
                },
                ee = e => {
                    const t = q(e);
                    return (0, g.Zv)(null == t ? void 0 : t.status) && !["unit_test", "active"].includes(e.state)
                },
                te = (e, t) => {
                    const a = q(e),
                        s = (0, g.R0)(null == a ? void 0 : a.status),
                        n = (0, g.Zv)(null == a ? void 0 : a.status);
                    if ("duo_radio" === e.type && t && (0, u.yf)(t)) return "legendary";
                    const r = n && !["unit_test", "active"].includes(e.state);
                    return s ? "assigned" : r ? "passed" : e.state
                },
                ae = e => "unit_test" === e.state,
                se = e => "adventures" === e.type ? B(te(e)) ? m.bG : m.on : "unit_review" === e.type ? m.mX : "alphabet" === e.type ? B(te(e)) && "experiment" === (0, i.j6)("writing_adjust_practice_xp_v2", "frontend") ? m.t1 : m.ct : "duo_radio" === e.type ? e.finishedSessions < e.totalSessions ? m.dY : m.tL : B(te(e)) ? m.ix : "story" === e.type && "fixedXpAward" in e.pathLevelClientData ? e.pathLevelClientData.fixedXpAward : z(e) ? m.pu : m.Lu,
                ne = e => "INTRO" === e ? "A1" : e
        },
        89065: (e, t, a) => {
            "use strict";
            a.d(t, {
                Fz: () => l,
                U_: () => c,
                df: () => d,
                uu: () => o,
                y2: () => u
            });
            var s = a(68903),
                n = a(8654),
                r = a(23275),
                i = a(41631);
            const o = [i.t.ROOKIE, i.t.EXPLORER, i.t.TRAVELER, i.t.TRAILBLAZER, i.t.ADVENTURER, i.t.DISCOVERER, i.t.DAREDEVIL, i.t.NAVIGATOR, i.t.CHAMPION, i.t.DAILY_REFRESH],
                l = 6,
                c = e => {
                    var t;
                    return "personalized_practice" === e.type ? i.t.CHAMPION : "daily_refresh" === e.type ? i.t.DAILY_REFRESH : null !== (t = o[e.index]) && void 0 !== t ? t : i.t.CHAMPION
                },
                d = e => {
                    const t = e.units.flatMap((e => e.levels.map((e => e.state))));
                    return t.includes("active") ? "active" : t.every((e => (0, r.Wc)(e))) ? "complete" : "locked"
                },
                u = (e, t) => {
                    switch (e) {
                        case i.t.ROOKIE:
                            return (0, n.H8)(40024);
                        case i.t.EXPLORER:
                            return (0, n.H8)(40025);
                        case i.t.TRAVELER:
                            return (0, n.H8)(40026);
                        case i.t.TRAILBLAZER:
                            return (0, n.H8)(40027);
                        case i.t.ADVENTURER:
                            return (0, n.H8)(40028);
                        case i.t.DISCOVERER:
                            return (0, n.H8)(40029);
                        case i.t.DAREDEVIL:
                            return (0, n.H8)(40030);
                        case i.t.NAVIGATOR:
                            return (0, n.H8)(40031);
                        case i.t.DAILY_REFRESH:
                            return (0, n.H8)(42996);
                        case i.t.CHAMPION:
                            return (0, n.H8)(40032, {
                                language_name: t
                            });
                        default:
                            throw (0, s.RJ)(e), Error(`Unexpected Path Section type: ${e}`)
                    }
                }
        },
        53171: (e, t, a) => {
            "use strict";
            a.d(t, {
                $V: () => v,
                Hi: () => o,
                L4: () => r,
                YP: () => i,
                Zi: () => l,
                b1: () => h,
                in: () => m,
                lg: () => d,
                lo: () => u,
                qM: () => c,
                wM: () => p,
                wP: () => s,
                yf: () => _
            });
            var s, n = a(5768);
            ! function(e) {
                e[e.Left = 0] = "Left", e[e.CenterLeft = .1794] = "CenterLeft", e[e.Center = .5] = "Center", e[e.CenterRight = .8206] = "CenterRight", e[e.Right = 1] = "Right"
            }(s || (s = {}));
            const r = {
                    height: 93,
                    width: 98
                },
                i = {
                    height: 83,
                    width: 99
                },
                o = {
                    height: 90,
                    width: 80
                },
                l = {
                    height: 80,
                    width: 100
                },
                c = {
                    height: 93,
                    width: 112
                },
                d = {
                    height: 65,
                    width: 70
                },
                u = {
                    height: 89,
                    width: 105
                },
                g = [{
                    assets: [n.Z.DUO_TWIRL, n.Z.DUO_WHISTLING, n.Z.DUO_JUMPFLAP],
                    character: "duo"
                }, {
                    assets: [n.Z.LILY_SHIRTS, n.Z.LILY_RAINCLOUD, n.Z.LILY_DOOMSCROLL],
                    character: "lily"
                }, {
                    assets: [n.Z.OSCAR_FLOWER, n.Z.OSCAR_COMB, n.Z.OSCAR_BONSAI],
                    character: "oscar"
                }, {
                    assets: [n.Z.DUO_GLOBE, n.Z.DUO_BALL, n.Z.DUO_GEM],
                    character: "duo"
                }, {
                    assets: [n.Z.JUNIOR_ICECREAM, n.Z.JUNIOR_SLEEP, n.Z.JUNIOR_FROG],
                    character: "junior"
                }, {
                    assets: [n.Z.ZARI_KICK, n.Z.ZARI_LOLLIPOP, n.Z.ZARI_GAMING],
                    character: "zari"
                }, {
                    assets: [n.Z.DUO_JUMPFLAP, n.Z.DUO_HEADPHONES, n.Z.DUO_POTION],
                    character: "duo"
                }, {
                    assets: [n.Z.LUCY_WALKIETALKIE, n.Z.LUCY_CAT, n.Z.LUCY_WALKIETALKIE],
                    character: "lucy"
                }, {
                    assets: [n.Z.EDDY_BASKETBALL, n.Z.EDDY_JUMPROPE, n.Z.EDDY_BASKETBALL],
                    character: "eddy"
                }, {
                    assets: [n.Z.DUO_BOOKS, n.Z.DUO_GEM, n.Z.DUO_WHISTLING],
                    character: "duo"
                }, {
                    assets: [n.Z.BEA_SMORES, n.Z.BEA_TENNIS, n.Z.BEA_SMORES],
                    character: "bea"
                }, {
                    assets: [n.Z.VIKRAM_GRILL, n.Z.VIKRAM_PANSIES, n.Z.VIKRAM_NOODLES],
                    character: "vikram"
                }, {
                    assets: [n.Z.DUO_POTION, n.Z.DUO_SUNGLASSES, n.Z.DUO_TWIRL],
                    character: "duo"
                }, {
                    assets: [n.Z.LIN_BIKE, n.Z.LIN_BIKEKISS, n.Z.LIN_BIKE],
                    character: "lin"
                }, {
                    assets: [n.Z.FALSTAFF_EATING, n.Z.FALSTAFF_SNOOZE, n.Z.FALSTAFF_SNEEZING],
                    character: "falstaff"
                }, {
                    assets: [n.Z.DUO_BUTTERFLY, n.Z.DUO_CHEER, n.Z.DUO_HEADPHONES],
                    character: "duo"
                }, {
                    assets: [n.Z.LILY_DOOMSCROLL, n.Z.LILY_SHIRTS, n.Z.LILY_RAINCLOUD],
                    character: "lily"
                }, {
                    assets: [n.Z.OSCAR_PAINTING, n.Z.OSCAR_BONSAI, n.Z.OSCAR_FLOWER],
                    character: "oscar"
                }, {
                    assets: [n.Z.DUO_GLOBE, n.Z.DUO_BALL, n.Z.DUO_BOOKS],
                    character: "duo"
                }, {
                    assets: [n.Z.JUNIOR_FROG, n.Z.JUNIOR_POGO, n.Z.JUNIOR_ICECREAM],
                    character: "junior"
                }, {
                    assets: [n.Z.ZARI_GAMING, n.Z.ZARI_KICK, n.Z.ZARI_LOLLIPOP],
                    character: "zari"
                }, {
                    assets: [n.Z.DUO_JUMPFLAP, n.Z.DUO_HEADPHONES, n.Z.DUO_POTION],
                    character: "duo"
                }, {
                    assets: [n.Z.LUCY_WALKIETALKIE, n.Z.LUCY_CAT, n.Z.LUCY_WALKIETALKIE],
                    character: "lucy"
                }, {
                    assets: [n.Z.EDDY_BASKETBALL, n.Z.EDDY_JUMPROPE, n.Z.EDDY_BASKETBALL],
                    character: "eddy"
                }, {
                    assets: [n.Z.DUO_BOOKS, n.Z.DUO_GEM, n.Z.DUO_WHISTLING],
                    character: "duo"
                }, {
                    assets: [n.Z.BEA_SMORES, n.Z.BEA_TENNIS, n.Z.BEA_SMORES],
                    character: "bea"
                }, {
                    assets: [n.Z.VIKRAM_NOODLES, n.Z.VIKRAM_PANCAKES, n.Z.VIKRAM_GRILL],
                    character: "vikram"
                }, {
                    assets: [n.Z.DUO_POTION, n.Z.DUO_SUNGLASSES, n.Z.DUO_GLOBE],
                    character: "duo"
                }, {
                    assets: [n.Z.LIN_BIKE, n.Z.LIN_BIKEKISS, n.Z.LIN_BIKE],
                    character: "lin"
                }, {
                    assets: [n.Z.FALSTAFF_FISHING, n.Z.FALSTAFF_SNEEZING, n.Z.FALSTAFF_SNOOZE],
                    character: "falstaff"
                }, {
                    assets: [n.Z.DUO_WHISTLING, n.Z.DUO_TWIRL, n.Z.DUO_JUMPFLAP],
                    character: "duo"
                }],
                p = (e, t) => e.reduce(((e, a, s) => e + (s < t ? a.height + a.marginBottom + a.marginTop : s === t ? a.marginTop : 0)), 0),
                m = e => 0 === e ? g[0] : g[(e - 1) % (g.length - 1) + 1],
                h = () => [{
                    assets: [n.Z.DUO_BOOKS],
                    character: "duo"
                }],
                v = e => e.levels.every((e => "passed" === e.state)),
                _ = e => e.levels.every((e => "legendary" === e.state || "duo_radio" === e.type))
        },
        71371: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => h
            });
            var s = a(64115),
                n = a(58576),
                r = a(2064),
                i = a(18804),
                o = a(79465);
            const l = {
                    challenge_continue: 800,
                    challenge_grade: 300,
                    challenge_typing: 60,
                    character_animation_play: 300,
                    explanation_open: 3e3,
                    first_render: 1e3,
                    language_switch: 1e3,
                    lesson_start: 3e3,
                    login_success_or_fail: 1e3,
                    open_leaderboard_profile: 300,
                    open_profile: 300,
                    pre_init: 2e3,
                    purchase_item_in_shop: 1e3,
                    registration_success_or_fail: 3e3,
                    session_end_grade: 1e3,
                    speech_grade: 300,
                    splash_to_home: 3e3,
                    splash_to_intro: 5e3,
                    story_completion_delay: 3e3,
                    story_start: 3e3,
                    stripe_elements_load: 3e3,
                    subscription_delivery: 3e3,
                    trial_user_creation: 3e3,
                    tts_play: 50,
                    welcome_fork_to_session_start: 3e3
                },
                c = {
                    stripe_elements_load: 1,
                    subscription_delivery: 1
                },
                d = {},
                u = e => {
                    if (!p(e)) return void((0, s.Au)() && console.warn(`Timer event "${e}" finished but it was never started. Please make sure you start the timer on all relevant code paths. If the timer was intentionally removed or you reloaded the page you can ignore this warning.`));
                    const t = window.performance.now(),
                        a = t - d[e];
                    a >= 0 ? g(e, a) : (0, n.Kp)(`Performance timer negative for ${e}`, {
                        data: {
                            duration: a,
                            endTime: t,
                            startTime: d[e]
                        }
                    }), m(e)
                },
                g = (e, t) => {
                    var a, d, u, g;
                    t = Math.round(t), (0, s.Au)() && t > l[e] && ((0, n.cM)("timer", `${e}`, {
                        duration: t
                    }), console.warn(`Timer event "${e}" took ${t}ms. This exceeds the allowed event duration of ${l[e]}ms.`));
                    try {
                        const s = null !== (u = null !== (a = c[e]) && void 0 !== a ? a : null === (d = (0, i.globalGetState)()) || void 0 === d ? void 0 : d.config.featureFlags.web_timer_tracker_sampling_rate) && void 0 !== u ? u : 0;
                        if (Math.random() < s) {
                            const a = null === (g = (0, i.globalGetState)()) || void 0 === g ? void 0 : g.player,
                                n = r.q.getPersistedStateVersion();
                            (0, o.track)("app_performance_timer", {
                                challenge_index: (null == a ? void 0 : a.session) ? a.currentIndex : void 0,
                                challenge_type: (null == a ? void 0 : a.session) ? a.session.challenges[a.currentIndex].type : void 0,
                                millisecond_duration: t,
                                performance_timer_subtype: e,
                                restored_state_version: "state-persisted" === n.type ? `${n.version}` : void 0,
                                sampling_rate: s
                            })
                        }
                    } catch (t) {
                        (0, n.vU)(`Failed to track performance timer for ${e}`, {
                            ex: t
                        })
                    }
                },
                p = e => void 0 !== d[e],
                m = e => delete d[e],
                h = {
                    finish: u,
                    finishOptional: e => {
                        p(e) && u(e)
                    },
                    has: p,
                    remove: m,
                    start: (e, {
                        startTime: t
                    } = {}) => d[e] = null != t ? t : window.performance.now(),
                    track: (e, t) => g(e, t)
                }
        },
        97755: (e, t, a) => {
            "use strict";
            a.d(t, {
                n: () => i
            });
            var s = a(60106),
                n = a(68903),
                r = a(96786);
            class i {
                constructor(e, t) {
                    this.initialize = (0, n.LU)((async (e, t) => {
                        const a = t => (console.log(`${t}; using new blank state`), this.didUsePersistedState = !1, e()),
                            i = await (async () => {
                                const e = await this.storage.get();
                                if (!e) return a("No local state found");
                                if (e.version !== this.supportedVersion) return a("Local state outdated");
                                const s = null == t ? void 0 : t(e.state);
                                return void 0 !== s ? a(s) : (console.log("Using locally persisted state"), this.didUsePersistedState = !0, e.state)
                            })();
                        this.substateCache = new s.Z(i);
                        const o = (0, r.n)((() => this.storage.set((() => ({
                                state: this.getSubstateCache().getAll(),
                                version: this.supportedVersion
                            })))), {
                                replace: !0,
                                size: 1
                            }),
                            l = (0, n.rw)((async () => {
                                try {
                                    await o()
                                } catch (e) {
                                    if (e instanceof r.k) return void console.error(e);
                                    throw e
                                }
                            }), 100);
                        this.substateCache.subscribe(l)
                    })), this.bindSubstate = e => this.getSubstateCache().substate(e), this.getCurrentState = () => this.getSubstateCache().getAll(), this.getPersistedStateVersion = () => void 0 === this.didUsePersistedState ? {
                        type: "unknown"
                    } : this.didUsePersistedState ? {
                        type: "state-persisted",
                        version: this.supportedVersion
                    } : {
                        type: "state-was-reset"
                    }, this.persistState = (e, t) => {
                        this.getSubstateCache().substate(e).set(t)
                    }, this.getSubstateCache = () => {
                        if (void 0 === this.substateCache) throw Error("Persister not initialized");
                        return this.substateCache
                    }, this.supportedVersion = e, this.storage = t
                }
            }
        },
        2064: (e, t, a) => {
            "use strict";
            a.d(t, {
                q: () => r
            });
            var s = a(97755),
                n = a(30839);
            const r = new s.n(73, {
                get: () => (0, n.pn)(n.Qt.State),
                set: e => (0, n.HJ)(n.Qt.State, e())
            })
        },
        44637: (e, t, a) => {
            "use strict";
            a.d(t, {
                Dk: () => b,
                GR: () => y,
                Ks: () => I,
                L1: () => S,
                SB: () => T,
                UV: () => f,
                ct: () => E,
                gZ: () => C,
                vx: () => R,
                yn: () => k
            });
            var s = a(80254),
                n = a(42659),
                r = a(93540),
                i = a(50888),
                o = a(4368),
                l = a(95332),
                c = a(8698),
                d = a(17135),
                u = a(37971),
                g = a(68903),
                p = a(23275),
                m = a(89260),
                h = a(79465),
                v = a(34704),
                _ = a(11811);
            const f = 1e3 * parseFloat(o.Z["duration-slide"]),
                S = (e, t) => {
                    let a = 0,
                        s = 0;
                    for (let n = 0; n < e.session.challenges.length; n++) {
                        const r = {
                            challenge: e.session.challenges[n],
                            challengeIndex: n,
                            sectionChallengeIndex: s,
                            sectionIndex: a
                        };
                        if (t(r)) return r;
                        s < e.challengeIdSections[a].length - 1 ? s++ : (a++, s = 0)
                    }
                    return {
                        challenge: void 0,
                        challengeIndex: void 0,
                        sectionChallengeIndex: void 0,
                        sectionIndex: void 0
                    }
                },
                y = e => {
                    const [t] = b(e), a = [], s = e.sessionParams.isFinalLevel && !e.session.failed && !e.session.shouldLearnThings;
                    return S(e, (({
                        challenge: e,
                        sectionIndex: n
                    }) => !(void 0 !== e.gradingResult && (!s || void 0 === t || t > n) && (a.push(e), 1)))), a
                },
                E = (e, t) => (0, c.j4)({
                    challenge: e,
                    challengeState: t
                }) ? u.c.Guessing : u.c.Showing,
                b = e => {
                    const {
                        sectionIndex: t,
                        sectionChallengeIndex: a
                    } = S(e, (({
                        challengeIndex: t
                    }) => t === e.currentIndex));
                    return [t, a]
                },
                I = e => {
                    const t = (0, n.jv)(e),
                        a = (0, n.B8)(e),
                        s = (0, i.mu)(e, Date.now()),
                        o = (0, n.Oz)(e).placementTestAvailable,
                        c = (0, r.HF)(e),
                        u = (0, r.DN)(e),
                        g = (0, n.lA)(e),
                        h = (0, v.hg)(e),
                        {
                            coachDuo: f,
                            completedWithHeartsRemaining: S,
                            numInLessonTipOpens: y,
                            levelData: E,
                            session: {
                                challenges: b,
                                startTime: I
                            },
                            sessionParams: {
                                alphabetId: k,
                                isFinalLevel: T
                            },
                            sessionPrefetchedTimestamp: C,
                            speakIneligibleReasons: R = [],
                            via: L
                        } = g,
                        {
                            globalPlacementSessionStarts: A
                        } = a,
                        P = b.some((e => (0, m.tq)().includes(e.type))),
                        D = b.some((e => (0, m.bc)().includes(e.type)));
                    return { ...w({
                            path: c,
                            pathSectioned: u,
                            player: g
                        }),
                        alphabet_id: k,
                        already_completed: (0, p.Wc)(null == E ? void 0 : E.level.state),
                        coach_shown: f.allShowReasons.length > 0,
                        contained_listen_challenge: P,
                        contained_speak_challenge: D,
                        did_complete_all_segments: T ? S : void 0,
                        disabled_listen_challenges: I < t.listenDisabledUntil && P,
                        disabled_speak_challenges: I < t.speakDisabledUntil && D,
                        is_first_session_in_course: o,
                        num_challenges_skipped: b.filter((e => e.skipped)).length,
                        num_characters_shown: b.map((e => l.yH.includes(e.type) ? e.type === _.Sm.Dialogue ? e.dialogue.filter((e => {
                            var t;
                            return void 0 !== (null === (t = e.character) || void 0 === t ? void 0 : t.avatarIconImage)
                        })).length : e.character ? 1 : 0 : 0)).reduce(((e, t) => e + t), 0),
                        num_explanation_opens: y,
                        num_placement_starts: null != A ? A : 0,
                        num_times_transliteration_toggled: g.numTimesTransliterationToggled,
                        offlined_session: void 0 !== C,
                        offlined_session_timestamp: C,
                        speak_count: (0, m.A2)(b),
                        speak_ineligible: R.length > 0,
                        speak_ineligible_reasons: R.join(","),
                        time: (0, d.Zo)(),
                        transliteration_setting: h ? h.enabled ? h.trackingName : "off" : void 0,
                        upload_timestamp: 0,
                        via: L,
                        xp_boost_equipped: s
                    }
                },
                w = ({
                    path: e,
                    pathSectioned: t,
                    player: a
                }) => {
                    var n, r, i, o, l;
                    const {
                        currentIndex: c,
                        levelData: d,
                        sessionParams: u,
                        session: {
                            adaptiveChallenges: m,
                            challenges: h
                        }
                    } = a, v = h.slice(0, c + 1), _ = m ? s.ZP.intersection(m.map((e => e.id)), v.map((e => e.id))).length : 0, f = null !== (n = null == u ? void 0 : u.generatorIdentifiersOfRecentMistakes) && void 0 !== n ? n : [], S = v.filter((e => {
                        var t;
                        return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
                    })).filter((e => e.challengeGeneratorIdentifier)).map((e => e.challengeGeneratorIdentifier)), y = f.filter((e => (0, g.cY)(S, e))).length;
                    return { ...s.ZP.pick((0, p.eK)(e), "num_levels_completed", "num_skill_levels_completed", "num_units_completed", "path_complete"),
                        ...s.ZP.pick((0, p.EH)(t, d, u.type), "absolute_unit_index", "path_level_id", "section_index", "unit_in_section_index", "unit_index", "num_sections", "num_units_in_section", "num_nodes_in_unit", "num_sessions_in_node"),
                        contained_adaptive_challenge: _ > 0,
                        level_index: u.levelIndex,
                        level_index_in_unit: null === (r = a.levelData) || void 0 === r ? void 0 : r.levelIndex,
                        level_session_index: u.levelSessionIndex,
                        num_adaptive_challenges: _,
                        num_mistakes_completed: y,
                        path_extension: !!(0, p.Mj)(null === (i = a.levelData) || void 0 === i ? void 0 : i.level),
                        session_is_legendary: u.isFinalLevel,
                        session_subtype: u.isGrammarSkill ? "grammar" : void 0,
                        skill_id: u.skillId,
                        skill_ids: null === (o = u.skillIds) || void 0 === o ? void 0 : o.join(","),
                        unit_index: null === (l = a.levelData) || void 0 === l ? void 0 : l.levelIndex
                    }
                },
                k = ({
                    challenge: e,
                    challengeState: t,
                    isDesktop: a,
                    session: s,
                    sessionParams: n
                }) => {
                    switch (s.type) {
                        case _.FF.AlphabetLesson:
                        case _.FF.AlphabetPractice:
                        case _.FF.GlobalPractice:
                        case _.FF.MistakesReview:
                        case _.FF.Legendary:
                        case _.FF.LegendaryLevel:
                        case _.FF.LegendaryLexemePractice:
                        case _.FF.LegendaryUnitPractice:
                        case _.FF.Lesson:
                        case _.FF.LevelReview:
                        case _.FF.LexemePractice:
                        case _.FF.LexemeSkillLevelPractice:
                        case _.FF.Placement:
                        case _.FF.SectionTest:
                        case _.FF.SpecifiedMatchPractice:
                        case _.FF.TargetPractice:
                        case _.FF.UnitReview:
                        case _.FF.UnitRewind:
                        case _.FF.UnitTest:
                        case _.FF.UnitPractice:
                            if (t.hasBrokenTts) return "broken-tts";
                            if ((0, m.bc)().includes(e.type)) return "cant-speak";
                            if ((0, m.tq)().includes(e.type) && !s.disableCantListenOverride) return "cant-listen";
                            if (!0 === n.isGrammarSkill || n.isFinalLevel || s.type === _.FF.Legendary || s.type === _.FF.LegendaryLevel || s.type === _.FF.LegendaryLexemePractice || s.type === _.FF.LegendaryUnitPractice || s.type === _.FF.SectionTest || s.type === _.FF.SpecifiedMatchPractice || s.type === _.FF.TargetPractice || s.type === _.FF.UnitTest || s.type === _.FF.UnitReview || s.type === _.FF.UnitRewind) return;
                            if (a) return "skip";
                            break;
                        case _.FF.PlacementTest:
                            return "skip";
                        case _.FF.Adventures:
                        case _.FF.DuoRadio:
                        case _.FF.ListeningPractice:
                        case _.FF.SpeakingPractice:
                        case _.FF.Story:
                            return;
                        default:
                            return (0, g.RJ)(s.type)
                    }
                },
                T = e => e >= 11 ? "fox" : e >= 6 ? "bee" : "owl",
                C = (e, t) => {
                    var a;
                    const s = (() => {
                        if (e.response) {
                            switch (e.response.status) {
                                case 401:
                                    return "authentication_error";
                                case 403:
                                    return "forbidden_error";
                                case 404:
                                    return "not_found_error";
                                case 410:
                                    return "route_gone_error"
                            }
                            return e.response.status >= 500 && e.response.status < 600 ? "server_error" : "unknown_error"
                        }
                        return "ECONNABORTED" === e.code ? "timeout_error" : "network_error"
                    })();
                    (0, h.track)("session_end_fail", {
                        http_status_code: null === (a = e.response) || void 0 === a ? void 0 : a.status,
                        request_error_type: s,
                        type: t
                    })
                },
                R = ({
                    currentCourseHistory: e,
                    hasXpBoost: t,
                    isFirstSessionInCourse: a,
                    path: s,
                    pathSectioned: n,
                    player: r,
                    transliterationSetting: i
                }) => {
                    const {
                        currentIndex: o,
                        levelData: l,
                        session: c,
                        session: {
                            challenges: d,
                            challengeTimeTakenCutoff: u
                        },
                        sessionParams: {
                            alphabetId: g
                        },
                        speakIneligibleReasons: v = []
                    } = r, {
                        globalPlacementSessionStarts: f
                    } = e, S = c.type === _.FF.Adventures ? Date.now() - c.startTime : d.map((e => e.timeTaken ? Math.min(u, e.timeTaken) / 1e3 : 0)).reduce(((e, t) => e + t)), y = d.slice(0, o + 1);
                    (0, h.track)("session_quit", { ...w({
                            path: s,
                            pathSectioned: n,
                            player: r
                        }),
                        ...c.trackingProperties,
                        alphabet_id: g,
                        already_completed: (0, p.Wc)(null == l ? void 0 : l.level.state),
                        is_first_session_in_course: a,
                        num_challenges_at: d.length,
                        num_challenges_ct: r.session.challenges.filter((e => {
                            var t;
                            return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
                        })).length,
                        num_challenges_skipped: d.filter((e => e.skipped)).length,
                        num_placement_starts: null != f ? f : 0,
                        num_times_transliteration_toggled: r.numTimesTransliterationToggled,
                        speak_count: (0, m.A2)(y),
                        speak_ineligible: v.length > 0,
                        speak_ineligible_reasons: v.join(","),
                        sum_time_taken: S,
                        transliteration_setting: i ? i.enabled ? i.trackingName : "off" : void 0,
                        xp_boost_equipped: t
                    })
                }
        },
        84401: (e, t, a) => {
            "use strict";
            a.d(t, {
                GU: () => L,
                O0: () => A,
                dY: () => f,
                Fb: () => _,
                Am: () => G,
                Dk: () => p,
                g3: () => P,
                hz: () => K,
                Br: () => F,
                $7: () => S,
                pj: () => E,
                az: () => m,
                sU: () => h,
                tL: () => Z,
                qv: () => k,
                W7: () => j,
                Jk: () => ee,
                gw: () => $,
                a8: () => y,
                d0: () => W,
                FG: () => x,
                w: () => M,
                gv: () => V,
                rK: () => z,
                Mn: () => J,
                z8: () => I,
                Hk: () => H,
                yi: () => U,
                Lf: () => b,
                qL: () => w,
                PH: () => D,
                fN: () => N,
                J_: () => T,
                T8: () => q
            });
            var s = a(80254),
                n = a(17135),
                r = a(64115),
                i = a(59815),
                o = a(68903),
                l = a(8654),
                c = a(23275),
                d = a(11811),
                u = a(97544),
                g = a(79465);
            const p = "READ",
                m = e => (e ? (0, c.Ol)({
                    levelType: "story",
                    path: e
                }) : []).map((e => e.pathLevelClientData.storyId)),
                h = async (e, t, a, n) => {
                    var r, i;
                    const o = j(n);
                    if (void 0 === o) throw Error("Tried to update practice hub stories without practice hub data.");
                    const l = null === (r = null == o ? void 0 : o.featuredStory) || void 0 === r ? void 0 : r.storyId;
                    if (void 0 !== l) {
                        const n = await (async ({
                                featuredStoryId: e,
                                fromLanguage: t,
                                learningLanguage: a
                            }) => {
                                try {
                                    return await u.Mw.getPracticeHubStories(e, t, a)
                                } catch (e) {
                                    (0, g.trackAndLogApiError)("stories_listing_update", "Failed to fetch practice hub stories", e)
                                }
                            })({
                                featuredStoryId: l,
                                fromLanguage: t,
                                learningLanguage: a
                            }),
                            r = s.HK(null !== (i = null == n ? void 0 : n.stories) && void 0 !== i ? i : [], "id");
                        if (void 0 !== n) return {
                            featuredStory: n.featuredStory,
                            featuredStoryId: l,
                            libraryStories: e.flatMap((e => {
                                const t = r[e];
                                return void 0 === t ? [] : [t]
                            }))
                        }
                    }
                    return {
                        featuredStory: void 0,
                        featuredStoryId: "",
                        libraryStories: []
                    }
                };
            var v = a(58576);
            const _ = 10,
                f = 30,
                S = async ({
                    countLimit: e,
                    courseId: t,
                    includeListening: a,
                    includeSpeaking: s
                }) => {
                    if (void 0 === t) return [];
                    const n = await u.wO.getMistakes({
                        countLimit: e,
                        courseId: t,
                        includeListening: a,
                        includeSpeaking: s
                    });
                    return null != n ? n : []
                },
                y = async ({
                    countLimit: e,
                    courseId: t,
                    cutOffTimestamp: a,
                    includeListening: s,
                    includeSpeaking: n
                }) => void 0 !== t ? (await u.wO.getMistakes({
                    countLimit: e,
                    courseId: t,
                    includeListening: s,
                    includeSpeaking: n
                })).filter((e => e.inInboxSinceTimestamp / 1e3 > a)) : [],
                E = e => {
                    const t = e.challengeIdentifier.specificType,
                        a = e.prompt;
                    switch (t) {
                        case "assist":
                            return (0, l._i)(19598, {
                                word: a
                            });
                        case "character_intro":
                            return (0, l._i)(15437);
                        case "character_select":
                            return (0, l._i)(25329, {
                                string_1: a
                            });
                        case "complete_reverse_translation":
                            return (0, l._i)(21271);
                        case "definition":
                            return (0, l._i)(1831, {
                                string_1: a
                            });
                        case "form":
                            return (0, l._i)(20300);
                        case "judge":
                            return (0, l._i)(8914);
                        case "listen":
                            return (0, l._i)(6961);
                        case "listen_comprehension":
                            return (0, l._i)(8769);
                        case "listen_tap":
                            return (0, l._i)(10461);
                        case "name":
                            return (0, l._i)(24291, {
                                word: a
                            });
                        case "select":
                            return (0, l._i)(28895);
                        case "select_pronunciation":
                        case "select_transcription":
                            return (0, l._i)(21070);
                        case "speak":
                            return (0, l._i)(11803);
                        case "tap":
                        case "tap_gap":
                        case "translate":
                        case "reverse_tap":
                        case "reverse_translate":
                            return (0, l._i)(9221);
                        case "transliterate":
                            return (0, l._i)(20190);
                        default:
                            return void(0, v.Kp)(`Unsupported mistakes challenge specific type ${t} was returned`, {
                                once: !0
                            })
                    }
                },
                b = e => {
                    const t = e.challengeIdentifier.specificType;
                    return !["assist", "character_select", "definition", "name"].includes(t)
                },
                I = e => {
                    switch (e.challengeIdentifier.specificType) {
                        case "assist":
                        case "character_select":
                        case "definition":
                        case "form":
                        case "name":
                        case "select":
                        case "select_pronunciation":
                        case "select_transcription":
                            return void 0 !== E(e);
                        case "character_intro":
                        case "complete_reverse_translation":
                        case "judge":
                        case "listen":
                        case "listen_comprehension":
                        case "listen_tap":
                        case "speak":
                        case "tap":
                        case "tap_gap":
                        case "translate":
                        case "reverse_tap":
                        case "reverse_translate":
                            return void 0 !== E(e) && null !== e.prompt;
                        default:
                            return !1
                    }
                },
                w = (e, t) => {
                    const a = 1e3 * t;
                    return 0 !== a && a < e.inInboxSinceTimestamp
                },
                k = ({
                    isListenEnabled: e,
                    isSpeakEnabled: t,
                    sessionType: a
                }) => {
                    switch (a) {
                        case d.FF.ListeningPractice:
                            if (!e) return "listen-disabled";
                            break;
                        case d.FF.SpeakingPractice:
                            if (!t) return "speak-disabled";
                        case d.FF.TargetPractice:
                        case d.FF.UnitRewind:
                    }
                },
                T = ({
                    dispatch: e,
                    isListenEnabled: t,
                    isSpeakEnabled: a,
                    sessionName: s
                }) => {
                    const n = k({
                        isListenEnabled: t,
                        isSpeakEnabled: a,
                        sessionType: W(s)
                    });
                    return void 0 !== n && (e({
                        options: {
                            allowSwitchSession: !1,
                            name: "PRACTICE_HUB_SESSION_NOTIFICATION",
                            sessionName: s,
                            type: n
                        },
                        type: "TOGGLE_DRAWER"
                    }), !0)
                };
            var C = a(93746),
                R = a(97106);
            const L = 16,
                A = 8,
                P = 5 + L + A,
                D = ({
                    fromLanguage: e,
                    hasActiveNYPDiscount: t,
                    learningLanguage: a,
                    supportedCoursesInfo: s
                }) => !t && O(e, a, null == s ? void 0 : s.wordsListView),
                N = (e, t, a) => O(e, t, null == a ? void 0 : a.wordsPracticeSession),
                O = (e, t, a) => {
                    const s = null == a ? void 0 : a.supportedCourses;
                    if (void 0 === s) return !1;
                    const n = (0, C.vI)(t, !1),
                        r = (0, C.vI)(e, !1);
                    return n in s && s[n].includes(r)
                },
                x = e => void 0 === e ? [] : (0, c.yK)(e, !0).reverse().filter((e => e.skillId)).map((e => (["locked", "unit_test"].includes(e.state) && (0, v.vU)("Unexpected locked level when fetching words list lexeme data.", {
                    data: e,
                    once: !0
                }), {
                    finishedLevels: "active" === e.state ? 0 : 1,
                    finishedSessions: e.finishedSessions,
                    skillId: {
                        id: e.skillId
                    }
                }))),
                F = e => {
                    var t, a;
                    const n = j(e),
                        r = null !== (a = null === (t = null == n ? void 0 : n.wordsList) || void 0 === t ? void 0 : t.sessionLexemePairs) && void 0 !== a ? a : [];
                    0 === r.length && (0, v.vU)("Words list lexeme data was not fetched before requesting a practice session.", {
                        data: n,
                        once: !0
                    });
                    const i = s.TV([...r]).slice(0, 5).map((e => {
                        var t;
                        return {
                            lexemeId: null !== (t = e.lexemeId) && void 0 !== t ? t : "",
                            translation: e.translation,
                            word: e.word
                        }
                    }));
                    return {
                        specifiedWordTranslationPairs: i,
                        type: d.FF.SpecifiedMatchPractice
                    }
                },
                M = e => {
                    const t = e.wordsListSessionCompleteTimeStampMs;
                    return t && (0, n.zk)((0, n.Gz)(t)) ? R.KM : R.ZS
                },
                U = (e, t, a) => void 0 !== e && (!!(0, r.gQ)("forceShowPracticeHub") || !(!a.hasPlus && !t) && (0, c.Ol)({
                    levelType: "skill",
                    path: e
                }).length >= 1),
                H = (e, t) => t && void 0 !== e,
                G = ["listen-up", "perfect-pronunciation", "target-practice", "unit-rewind"],
                V = (0, o.p)(G),
                B = (0, o.p)(["listening-practice", "speaking-practice"]),
                z = e => [d.FF.ListeningPractice, d.FF.SpeakingPractice, d.FF.SpecifiedMatchPractice, d.FF.TargetPractice, d.FF.UnitRewind].includes(e),
                Z = e => {
                    switch (e) {
                        case d.FF.ListeningPractice:
                            return "listen-up";
                        case d.FF.SpeakingPractice:
                            return "perfect-pronunciation";
                        case d.FF.TargetPractice:
                            return "target-practice";
                        case d.FF.UnitRewind:
                            return "unit-rewind";
                        default:
                            throw Error(`Unrecognized practice hub session type: ${e}`)
                    }
                },
                W = e => {
                    switch (e) {
                        case "listen-up":
                        case "listening-practice":
                            return d.FF.ListeningPractice;
                        case "perfect-pronunciation":
                        case "speaking-practice":
                            return d.FF.SpeakingPractice;
                        case "target-practice":
                            return d.FF.TargetPractice;
                        case "unit-rewind":
                            return d.FF.UnitRewind;
                        default:
                            throw (0, o.RJ)(e), Error(`Unrecognized practice hub session path name: ${e}`)
                    }
                },
                $ = e => {
                    switch (e) {
                        case "listen-up":
                            return "listening_practice";
                        case "perfect-pronunciation":
                            return "speaking_practice";
                        case "target-practice":
                            return "target_practice";
                        case "unit-rewind":
                            return "unit_rewind";
                        case "mistakes-review":
                            return "mistakes_review_collections";
                        case "listening-practice":
                            return "listening_practice_collections";
                        case "speaking-practice":
                            return "speaking_practice_collections";
                        default:
                            throw (0, o.RJ)(e), Error(`Unrecognized practice hub session path name: ${e}`)
                    }
                },
                j = e => {
                    var t;
                    const a = e.currentCourseId;
                    return null === (t = e.practiceHubInfo) || void 0 === t ? void 0 : t[null != a ? a : ""]
                },
                q = ({
                    dispatch: e,
                    forceRefresh: t,
                    includeListening: a,
                    includeSpeaking: r,
                    path: i,
                    user: o
                }) => {
                    const l = o.currentCourseId,
                        d = j(o),
                        u = null == d ? void 0 : d.timestampGenerated;
                    if (!t && u && (0, n.zk)((0, n.zM)(u))) return;
                    if (void 0 === l || void 0 === i || (0, c.U8)({
                            levelType: "skill",
                            path: i
                        }) < 1) return;
                    const g = Q({
                            includeListening: a,
                            includeSpeaking: r,
                            path: i
                        }),
                        p = Y({
                            includeListening: a,
                            includeSpeaking: r,
                            path: i,
                            practiceType: g
                        });
                    if (void 0 === g || void 0 === p) throw Error("Tried to refresh practice hub featured session when no practice types are eligible");
                    var h;
                    e({
                        courseId: l,
                        practiceHubCourseInfo: {
                            courseId: l,
                            featuredSession: {
                                completed: !1,
                                sessionParams: p
                            },
                            featuredStory: {
                                completed: !1,
                                storyId: (h = m(i), s.UP(h.slice(Math.max(h.length - 30, 0))))
                            },
                            timestampGenerated: Date.now() / 1e3
                        },
                        type: "REFRESH_PRACTICE_HUB"
                    })
                },
                Q = ({
                    excludedSessions: e,
                    includeListening: t,
                    includeSpeaking: a,
                    path: n
                }) => {
                    const r = G.filter((s => !(null == e ? void 0 : e.includes(s)) && J({
                        includeListening: t,
                        includeSpeaking: a,
                        path: n,
                        sessionType: W(s)
                    })));
                    return s.UP(r)
                },
                K = ({
                    dispatch: e,
                    includeListening: t,
                    includeSpeaking: a,
                    path: s,
                    practiceType: n,
                    user: r
                }) => {
                    if (!r.hasPlus) throw new i.w(`Non subscriber user tried to load ${n} session`);
                    if (B(n)) {
                        const e = Y({
                            includeListening: t,
                            includeSpeaking: a,
                            path: s,
                            practiceType: n
                        });
                        if (void 0 === e) throw Error(`Tried to load ${n} session when unavailable`);
                        return e
                    }
                    q({
                        dispatch: e,
                        includeListening: t,
                        includeSpeaking: a,
                        path: s,
                        user: r
                    });
                    const o = j(r);
                    if (void 0 === o) throw Error("Failed to update and save practice hub sessions for the current course");
                    const l = o.featuredSession;
                    if (void 0 === l) throw Error(`Tried to load ${n} featured session when unavailable`);
                    if (n !== Z(l.sessionParams.type)) throw Error("Tried to load a non-featured practice hub session type");
                    return l.sessionParams
                },
                Y = ({
                    includeListening: e,
                    includeSpeaking: t,
                    path: a,
                    practiceType: s
                }) => {
                    if (J({
                            includeListening: e,
                            includeSpeaking: t,
                            path: a,
                            sessionType: W(s)
                        })) switch (s) {
                        case "listen-up":
                        case "listening-practice":
                            return {
                                skillId: (0, c.mo)(a, 10, ["grammar"]).skillId,
                                type: d.FF.ListeningPractice
                            };
                        case "perfect-pronunciation":
                        case "speaking-practice":
                            return {
                                skillId: (0, c.mo)(a, 10, ["grammar"]).skillId,
                                type: d.FF.SpeakingPractice
                            };
                        case "target-practice":
                            {
                                const e = (0, c.mo)(a, 10, ["grammar"]);
                                return {
                                    skillIds: [e.skillId],
                                    type: d.FF.TargetPractice,
                                    unitIndex: e.unitIndex
                                }
                            }
                        case "unit-rewind":
                            return X(a);
                        default:
                            throw (0, o.RJ)(s), Error(`Unrecognized practice hub session type: ${s}`)
                    }
                },
                J = ({
                    includeListening: e,
                    includeSpeaking: t,
                    path: a,
                    sessionType: s
                }) => {
                    const n = (0, c.Bm)(a),
                        r = null == n ? void 0 : n.unitIndex;
                    switch (s) {
                        case d.FF.ListeningPractice:
                            return e;
                        case d.FF.SpeakingPractice:
                            return t;
                        case d.FF.TargetPractice:
                            return !0;
                        case d.FF.UnitRewind:
                            return void 0 !== r && r >= 1 || (0, c.Ol)({
                                path: a
                            }).length > 1;
                        default:
                            throw Error(`Unrecognized practice hub session type: ${s}`)
                    }
                },
                X = e => {
                    var t, a;
                    const n = (0, c.Ol)({
                            path: e
                        }),
                        r = null !== (a = null === (t = n[n.length - 1]) || void 0 === t ? void 0 : t.unitIndex) && void 0 !== a ? a : 0,
                        i = s.MX(Math.max(r - 3, 0), r - 1),
                        o = e[i].levels;
                    return {
                        skillIds: o[o.length - 1].pathLevelClientData.skillIds,
                        type: d.FF.UnitRewind,
                        unitIndex: i
                    }
                },
                ee = e => {
                    switch (e) {
                        case d.FF.ListeningPractice:
                            return (0, l._i)(39413, {
                                num: 10
                            });
                        case d.FF.SpeakingPractice:
                            return (0, l._i)(31472, {
                                num: 10
                            });
                        case d.FF.SpecifiedMatchPractice:
                            return (0, l._i)(37048);
                        case d.FF.TargetPractice:
                            return (0, l._i)(39368, {
                                num: 10
                            });
                        case d.FF.UnitRewind:
                            return (0, l._i)(39371, {
                                num: 10
                            });
                        default:
                            throw Error(`Unrecognized practice hub session type: ${e}`)
                    }
                }
        },
        2439: (e, t, a) => {
            "use strict";
            a.d(t, {
                jF: () => r,
                qj: () => o,
                uN: () => i
            });
            var s = a(35160),
                n = a(79465);
            const r = (e, t) => {
                    (0, n.track)("premium_ad_click", e.trackingProps), o(e, t)
                },
                i = (e, t, a = !1, s) => {
                    o({
                        customStartStep: s,
                        hideCancelPlanButton: a,
                        isCrossgrade: !0,
                        trackingProps: {
                            iap_context: t
                        }
                    }, e)
                },
                o = (e, t, a) => {
                    t({
                        options: { ...e,
                            name: a ? s.t.PremiumPurchaseSecondary : s.t.PremiumPurchase
                        },
                        type: a ? "TOGGLE_SECONDARY_MODAL" : "TOGGLE_MODAL"
                    })
                }
        },
        67280: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ay: () => c,
                p4: () => l,
                xp: () => o
            });
            var s = a(64115),
                n = a(68903),
                r = a(11811);
            const i = e => void 0 !== e && (0, n.gB)(e.discountType, r.SP),
                o = e => (0, s.gQ)("debugNypDisabled") || null == e ? void 0 : e.find(i),
                l = (e, t) => {
                    const a = o(e);
                    return a && t < a.expirationTime ? a : void 0
                },
                c = (e, t = Date.now()) => void 0 !== l(e, t)
        },
        77747: (e, t, a) => {
            "use strict";
            a.d(t, {
                AW: () => i,
                Ak: () => d,
                BY: () => r,
                m6: () => l,
                sP: () => c,
                zh: () => u
            });
            var s = a(97544),
                n = a(79465);
            const r = 10,
                i = 1e3,
                o = "https://forms.gle/6S9RV1pyxZBZQ28M6",
                l = e => ({
                    ar: "https://forms.gle/s9G48vL74JHABGiWA",
                    bn: o,
                    cs: "https://forms.gle/Qp7R8kVhvg6Y9n6u5",
                    de: "https://forms.gle/6FsEyLmecYH5nviA7",
                    el: "https://forms.gle/iJvbmQziwriaJgfP6",
                    en: o,
                    es: "https://forms.gle/Ep43BcZyn8Mz5m2H7",
                    fr: "https://forms.gle/brGLWurDEubHijSE6",
                    hi: "https://forms.gle/GjDnx9es4r7GBDgN8",
                    hu: "https://forms.gle/H8ens9JVNh5NMVtF9",
                    id: "https://forms.gle/BnCiKkkEfzsSAeED6",
                    it: "https://forms.gle/ZmTRJi3ewWot7KjUA",
                    ja: "https://forms.gle/SAbMtGDZG9ZDmKkV7",
                    ko: "https://forms.gle/k7oC7tFwVc3iZkc48",
                    "nl-NL": "https://forms.gle/Zwmwywphainrux3x7",
                    pa: o,
                    pl: "https://forms.gle/EVsSmifCJb5Uuy1J6",
                    pt: "https://forms.gle/zswjrRH6KBY6VR8E8",
                    ro: "https://forms.gle/vsmCw6taXvxYmdTs7",
                    ru: "https://forms.gle/xSmogNiMiFMXrtJr8",
                    te: o,
                    th: "https://forms.gle/PB6EeexbfJyPAdQw7",
                    tl: "https://forms.gle/G9hDUwW8xxfpcNCh8",
                    tr: "https://forms.gle/dXhLaHkSoAkJixRY9",
                    uk: "https://forms.gle/1dJxFALxadvDS2LP9",
                    vi: "https://forms.gle/aiRf8jEJ1rzYdkXA9",
                    "zh-CN": "https://forms.gle/TFpQd2zvya3Sch8W9",
                    "zh-TW": "https://forms.gle/TFpQd2zvya3Sch8W9"
                }[null != e ? e : "en"]),
                c = "business_landing_page",
                d = e => {
                    var t;
                    return null === (t = e.web_enable_b2b_page) || void 0 === t || t
                },
                u = async e => {
                    let t;
                    try {
                        t = await s.a1.getB2BPricingData(e)
                    } catch (a) {
                        (0, n.trackAndLogApiError)("b2b_pricing_failed", "Unable to fetch B2B pricing data from subscriptions-backend", a, {
                            queryParams: {
                                countryCode: e
                            },
                            response: t
                        })
                    }
                    return t
                }
        },
        69243: (e, t, a) => {
            "use strict";
            a.d(t, {
                $g: () => o,
                GC: () => l,
                Us: () => u,
                a: () => m,
                cH: () => d,
                cz: () => g,
                tU: () => p,
                vV: () => i,
                wk: () => c
            });
            var s = a(97544),
                n = a(81149),
                r = a(79465);
            const i = () => "experiment" === (0, n.j6)("mochi_web_fp_in_app_invites_v2", void 0),
                o = () => "experiment" === (0, n.j6)("mochi_web_family_plan_copysolidate", void 0),
                l = () => "experiment" === (0, n.j6)("mochi_web_family_add_home_message", void 0),
                c = (e, t) => e.ownerId === t,
                d = e => {
                    const t = (() => {
                        switch (e) {
                            case s.qF.lV.SUPER:
                            case s.qF.lV.MAX:
                                return "has_real_subscription";
                            case s.qF.lV.IMMERSIVE_SUPER:
                                return "has_immersive_subscription";
                            default:
                                return "invalid_link"
                        }
                    })();
                    (0, r.track)("family_plan_invalid_invite_show", {
                        reason: t
                    })
                },
                u = async e => {
                    try {
                        return await s.jk.getFamilyPlanUserInvite(e)
                    } catch (t) {
                        return void(0, r.trackAndLogApiError)("family_plan_direct_invite_fetch_failed", "Unable to fetch family plan direct invite", t, {
                            ownerId: e
                        })
                    }
                },
                g = async e => {
                    try {
                        return await s.jk.acceptFamilyPlanDirectInvite(e)
                    } catch (t) {
                        return void(0, r.trackAndLogApiError)("family_plan_direct_invite_accept_failed", "Unable to accept family plan direct invite", t, {
                            ownerId: e
                        })
                    }
                },
                p = async e => {
                    try {
                        return await s.jk.sendFamilyPlanDirectInvite(e)
                    } catch (t) {
                        return void(0, r.trackAndLogApiError)("family_plan_direct_invite_send_failed", "Unable to send family plan direct invite", t, {
                            toUserId: e
                        })
                    }
                },
                m = async e => {
                    try {
                        return await s.jk.withdrawFamilyPlanDirectInvite(e)
                    } catch (t) {
                        return void(0, r.trackAndLogApiError)("family_plan_direct_invite_withdraw_failed", "Unable to withdraw family plan direct invite", t, {
                            toUserId: e
                        })
                    }
                }
        },
        6545: (e, t, a) => {
            "use strict";
            a.d(t, {
                N2: () => P,
                Nh: () => x,
                Pr: () => M,
                Sz: () => y,
                UZ: () => R,
                ZQ: () => T,
                dS: () => A,
                eH: () => S,
                ew: () => L,
                fQ: () => v,
                h: () => D,
                r: () => N,
                sK: () => f,
                uS: () => U,
                z: () => F
            });
            var s = a(27378),
                n = a(33467),
                r = a(80164),
                i = a(50498),
                o = a(17135),
                l = a(64115),
                c = a(42464),
                d = a(8654),
                u = a(58576),
                g = a(2439),
                p = a(67280),
                m = a(18804),
                h = a(11811);
            const v = 2024,
                _ = ["debugNypExpiresAt", "debugNypExpiresIn"],
                f = () => !(0, l.gQ)("debugNypDisabled") && _.some((e => (0, l.gQ)(e))),
                S = () => async e => {
                    const t = (() => {
                        if ((0, l.gQ)("debugNypExpiresAt")) {
                            const e = (0, l.ky)("debugNypExpiresAt");
                            return void 0 !== e ? Date.parse(e) - Date.now() : NaN
                        }
                        if ((0, l.gQ)("debugNypExpiresIn")) {
                            const e = (0, l.ky)("debugNypExpiresIn");
                            return e ? (0, o.iN)(e) : void 0
                        }
                    })();
                    var a;
                    void 0 !== t && ((isNaN(t) || t < 0) && (0, u.vU)(`Invalid expiration when trying to create fake NYP discount with ${a=_.find((e=>(0,l.gQ)(e))),a&&`${a}: ${(0,l.ky)(a)}`}`, {
                        once: !0
                    }), e({
                        apiDiscount: {
                            discountType: h.tm.NewYears2024Fake,
                            secondsUntilExpiration: t / 1e3
                        },
                        type: "ADD_SUPER_DISCOUNT"
                    }), await (0, i._v)(100))
                },
                y = () => {
                    const [e, t] = s.useState(Date.now() + (0, l.nn)()), a = () => t(Date.now() + (0, l.nn)());
                    return s.useEffect((() => (w(a), () => k(a))), []), e
                };
            let E, b, I = [];
            const w = e => {
                    I.push(e), E || b || (b = setTimeout((() => {
                        E = setInterval((() => I.forEach((e => e()))), 1e3)
                    }), 1e3 - (0, o.Ux)().getMilliseconds()))
                },
                k = e => {
                    I = I.filter((t => t !== e)), 0 === I.length && (b && (clearTimeout(b), b = void 0), E && (clearInterval(E), E = void 0))
                },
                T = e => {
                    const t = (0, m.Fx)(r.I9),
                        a = (0, m.Fx)(r.tE),
                        n = "registration_soft_wall" === e || "redeem" === e,
                        [i, o] = s.useState((() => a ? (0, p.p4)(t, Date.now()) : void 0));
                    if ((0, c.Z)((() => {
                            i && i.expirationTime < Date.now() && o(void 0)
                        }), void 0 === i ? void 0 : 5e3), s.useEffect((() => {
                            o(a ? (0, p.p4)(t, Date.now()) : void 0)
                        }), [t, a]), !n) return i
                },
                C = (e, t) => {
                    const a = e.expirationTime - t;
                    return a < o.Mb || a < 2 * o.Mb && a < 1e3 * (0, o.dz)({
                        hours: 48
                    })
                },
                R = e => {
                    const t = T(e),
                        [a, n] = s.useState((() => void 0 !== t && C(t, Date.now())));
                    return s.useEffect((() => {
                        void 0 === t && n(!1)
                    }), [t]), (0, c.Z)((() => {
                        n(void 0 !== t && C(t, Date.now()))
                    }), t ? 5e3 : void 0), a
                },
                L = e => void 0 !== T(e),
                A = (e, t, a) => e && t && a,
                P = ({
                    discount: e,
                    product: t,
                    step: a,
                    withPlusContext: s,
                    hasUsNypPlan: r
                }) => {
                    const i = a && [n.K.Packages, n.K.BillingInfo].includes(a);
                    switch (e ? i ? "package-selection" : "default-new-years" : "default-plus") {
                        case "package-selection":
                            return (null == t ? void 0 : t.isNewYears) ? (0, d._i)(34149, {
                                discount: U(r)
                            }) : (0, d._i)(34199);
                        case "default-new-years":
                            return s ? (0, d._i)(34149, {
                                discount: U(r)
                            }) : (0, d._i)(1819, {
                                discount: U(r)
                            });
                        default:
                            return (0, d._i)(34199)
                    }
                },
                D = (e, t, a) => {
                    if (!e) return null;
                    const {
                        hoursTotal: s,
                        minutes: n,
                        seconds: r
                    } = O(e, t), i = s <= 0 && n <= 0 ? (0, d.H8)(27121, {
                        minutes: n,
                        seconds: r
                    }) : (0, d.H8)(2519, {
                        hours: s,
                        minutes: n
                    });
                    return ["PF", "Package"].includes(a) ? (0, d._i)(49290, {
                        remaining: i
                    }) : (0, d._i)(27637, {
                        duration: i
                    })
                },
                N = e => {
                    const t = y(),
                        a = (0, m.Fx)(r.I9);
                    return ((e, t, a) => ["HM" === a ? (0, d._i)(49288) : (0, d._i)(49289), D(e, t, a)])((0, p.p4)(a, t), t, e)
                },
                O = (e, t) => (0, o.zj)(e.expirationTime - t),
                x = () => {
                    const e = (0, m.Fx)(r.I9),
                        t = y(),
                        a = (0, p.p4)(e, t);
                    return a ? ((e, t) => {
                        const {
                            hoursTotal: a,
                            minutes: s,
                            seconds: n
                        } = (0, o.zj)(e.expirationTime - t);
                        return `${a<10?"0":""}${a}:${s<10?"0":""}${s}:${n<10?"0":""}${n}`
                    })(a, t) : ""
                },
                F = e => ["new_years_home_drawer", "new_years_shop_banner"].includes(e) ? n.K.FeaturesChecklist : n.K.FeaturesLongScroll,
                M = (e, t) => () => {
                    (0, g.jF)({
                        customStartStep: F(t),
                        trackingProps: {
                            iap_context: t
                        }
                    }, e)
                },
                U = e => 60
        },
        25062: (e, t, a) => {
            "use strict";
            a.d(t, {
                B5: () => I,
                G$: () => S,
                H7: () => s,
                J_: () => h,
                Rg: () => y,
                T4: () => b,
                XL: () => n,
                eV: () => m,
                hp: () => v,
                k0: () => E,
                kk: () => p,
                uJ: () => f
            });
            var s, n, r = a(61079),
                i = a(80254),
                o = a(97544),
                l = a(64115),
                c = a(93746),
                d = a(58576),
                u = a(79465);
            ! function(e) {
                e.AmericanExpress = "AMERICAN_EXPRESS", e.DinersClub = "DINERS_CLUB", e.Discover = "DISCOVER", e.JCB = "JCB", e.MasterCard = "MASTERCARD", e.Unknown = "UNKNOWN", e.Visa = "VISA"
            }(s || (s = {})),
            function(e) {
                e.StripeVendor = "STRIPE"
            }(n || (n = {}));
            const g = {
                    AT: "EUR",
                    AU: "AUD",
                    BE: "EUR",
                    BR: "BRL",
                    CA: "CAD",
                    CY: "EUR",
                    DE: "EUR",
                    EE: "EUR",
                    ES: "EUR",
                    FI: "EUR",
                    FR: "EUR",
                    GB: "GBP",
                    GR: "EUR",
                    IE: "EUR",
                    IT: "EUR",
                    JP: "JPY",
                    LT: "EUR",
                    LU: "EUR",
                    LV: "EUR",
                    MX: "MXN",
                    NL: "EUR",
                    PT: "EUR",
                    SI: "EUR",
                    SK: "EUR",
                    US: "USD"
                },
                p = e => {
                    var t;
                    return null !== (t = g[e]) && void 0 !== t ? t : "USD"
                },
                m = (s.AmericanExpress, s.DinersClub, s.Discover, s.JCB, s.MasterCard, s.Visa, {
                    [s.AmericanExpress]: "amex",
                    [s.DinersClub]: "diners",
                    [s.Discover]: "discover",
                    [s.JCB]: "jcb",
                    [s.MasterCard]: "mastercard",
                    [s.Visa]: "visa"
                }),
                h = {
                    [s.AmericanExpress]: "American Express",
                    [s.DinersClub]: "Diners Club",
                    [s.Discover]: "Discover",
                    [s.JCB]: "JCB",
                    [s.MasterCard]: "MasterCard",
                    [s.Visa]: "Visa"
                };
            var v;
            ! function(e) {
                e.Schools = "DUOLINGO_SCHOOLS", e.Duolingo = "DUOLINGO"
            }(v || (v = {}));
            const _ = async (e, t) => {
                    const a = (0, l.gQ)("debugStripe") ? t : e;
                    r.loadStripe.setLoadParameters({
                        advancedFraudSignals: !1
                    });
                    const s = await (0, r.loadStripe)(a, {
                        betas: ["elements_enable_deferred_intent_beta_1"]
                    });
                    if (null === s) throw Error("stripe could not be loaded");
                    return s
                },
                f = i.IH((async () => await _("pk_live_wGV2ziRFq7KJLNaVUAJgrzDf", "pk_test_bpwxgxXy49mckw94PW2hhVnS"))),
                S = i.IH((async () => await _("pk_live_51LsRThCLCQAemjDAxnfWuDhC82PfhQ4l7iOkoytUPpkDEiNEpDge4l8umm5BZHtCTTfAtBjIULU5ft0G3MNVSlk000nW3pIJse", "pk_test_51LsRThCLCQAemjDAJSRyXRbH24iEVGIUBnK5VKr34QEO5MTwJn9Cub0RLzJ3jC7nXXky2Ie8KT5dhxTVh1jCGfEM005g2c0iKg"))),
                y = i.IH((async () => {
                    const e = await f(),
                        t = window.ApplePaySession;
                    if (t && (t.canMakePaymentsWithActiveCard = () => Promise.resolve(t.canMakePayments())), e) {
                        const t = e.paymentRequest({
                                country: "US",
                                currency: "usd",
                                total: {
                                    amount: 1e3,
                                    label: "Test Amount"
                                }
                            }),
                            a = await t.canMakePayment();
                        (0, u.track)("supported_web_payment_options", {
                            supported_web_payment_options: a ? a.applePay ? "ApplePay" : "PaymentRequestAPI" : "None"
                        })
                    }
                })),
                E = async (e, t, a) => {
                    var s;
                    if (!e) throw Error("no cardNumberElement provided"); {
                        const n = await f(),
                            {
                                token: r,
                                error: i
                            } = await n.createToken(e, {
                                name: t,
                                ...a && {
                                    address_zip: a
                                }
                            });
                        if (i) throw Error(null !== (s = i.code) && void 0 !== s ? s : "unknown error creating token");
                        if (r) return r.id
                    }
                    throw Error("unknown error creating token")
                },
                b = (e, t, a, s) => {
                    const n = `${(0,c.M$)(window.duo.uiLanguage)}-${null!=a?a:"US"}`,
                        r = Intl.NumberFormat.supportedLocalesOf(n, {
                            localeMatcher: "lookup"
                        }).length > 0 ? n : (0, c.BE)(),
                        i = s ? {
                            maximumFractionDigits: 0,
                            minimumFractionDigits: 0
                        } : {};
                    if ("" === t) return (0, d.Kp)("formatPrice called with empty currency", {
                        data: {
                            country: a,
                            price: e
                        },
                        once: !0
                    }), `$${new Intl.NumberFormat(r,{currency:"USD",style:"currency",...i}).format(e/100).replace(/[A-Z]*/,"")}`;
                    const o = new Intl.NumberFormat(r, {
                        currency: t,
                        style: "currency",
                        ...i
                    }).format(e / 100);
                    return "AUD" !== t || o.includes("A") ? "CAD" !== t || o.includes("CA") ? "MXN" !== t || o.includes("MX") ? "USD" !== t || o.includes("US") ? o : `${o} USD` : `${o} MXN` : `${o} CAD` : `${o} AUD`
                },
                I = e => [o.qF.LE.Admin, o.qF.LE.IOS, o.qF.LE.Android].includes(e)
        },
        74541: (e, t, a) => {
            "use strict";
            a.d(t, {
                $M: () => i,
                KX: () => r,
                l1: () => n
            });
            var s = a(97544);
            const n = (e, t, a) => {
                    switch (null == e ? void 0 : e.itemName) {
                        case s.qF.lV.SUPER:
                        case s.qF.lV.IMMERSIVE_SUPER:
                            return t;
                        case s.qF.lV.MAX:
                            return a;
                        default:
                            return
                    }
                },
                r = e => {
                    switch (null == e ? void 0 : e.itemName) {
                        case s.qF.lV.SUPER:
                            return s.qF.lV.SUPER;
                        case s.qF.lV.IMMERSIVE_SUPER:
                            return s.qF.lV.IMMERSIVE_SUPER;
                        case s.qF.lV.MAX:
                            return s.qF.lV.MAX;
                        default:
                            return
                    }
                },
                i = e => (null == e ? void 0 : e.itemName) === s.qF.lV.MAX
        },
        32499: (e, t, a) => {
            "use strict";
            a.d(t, {
                $2: () => Z,
                DK: () => q,
                G4: () => R,
                Iv: () => $,
                Jc: () => k,
                Nf: () => y,
                RD: () => A,
                SY: () => v,
                V8: () => z,
                Wt: () => _,
                X0: () => f,
                XZ: () => Q,
                _A: () => O,
                _C: () => I,
                _r: () => E,
                b1: () => C,
                dR: () => N,
                dY: () => D,
                eA: () => S,
                eh: () => b,
                ek: () => M,
                fE: () => w,
                gD: () => x,
                hJ: () => F,
                jF: () => T,
                kI: () => W,
                kY: () => P,
                oi: () => j,
                tA: () => U,
                tJ: () => L,
                z4: () => B
            });
            var s = a(33467),
                n = a(9249),
                r = a(97544),
                i = a(17135),
                o = a(68903),
                l = a(93746),
                c = a(58576),
                d = a(2439),
                u = a(25062),
                g = a(88868),
                p = a(79465),
                m = a(16086),
                h = a(20028);
            const v = (e, t) => {
                    var a;
                    if (!e) return !1;
                    const s = null !== (a = e.subscriptionInfo) && void 0 !== a ? a : {
                            renewer: void 0,
                            renewing: void 0
                        },
                        i = s.renewer,
                        o = i && (i !== r.qF.LE.Stripe || void 0 !== s.renewing);
                    return o || t(n.w4(e.purchaseId)), !!o
                },
                _ = (e, t) => !(e.inventory.premium_subscription || e.inventory.gold_subscription || e.inventory.schools_pro_subscription || (0, h.d1)(t) || (0, h.pN)(t)),
                f = (e, t) => {
                    var a;
                    return _(e, t) && !e.inventory.immersive_subscription && !window.duo.disableMonetization && ((null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) ? e.subscriptions.subscriptionPlans.length > 0 : void 0)
                },
                S = "com.duolingo.subscription.premium.prepaid",
                y = "com.duolingo.subscription.premium.b2b_universal_clock";
            var E;
            ! function(e) {
                e[e.OneMonth = 0] = "OneMonth", e[e.TwelveMonth = 1] = "TwelveMonth", e[e.FamilyPlan = 2] = "FamilyPlan"
            }(E || (E = {}));
            const b = (e, t) => (0, u.T4)(Math.ceil(e.priceInCents / e.periodLengthInMonths), e.planCurrency, t),
                I = (e, t) => (0, u.T4)(e.priceInCents, e.planCurrency, t),
                w = 14,
                k = 2,
                T = (e, t) => {
                    var a;
                    return null !== (a = e.find((e => e.planType === (null != t ? t : E.TwelveMonth)))) && void 0 !== a ? a : e[0]
                },
                C = e => void 0 === e ? 0 : e.length,
                R = e => void 0 !== e && ["PREPAID", "B2B_UNIVERSAL_CLOCK"].includes(e.type),
                L = "com.duolingo.immersive_free_trial_subscription",
                A = e => e === L,
                P = e => "USD" !== e.planCurrency,
                D = e => {
                    var t, a, s, n, r, o, l;
                    const d = null !== (a = null === (t = e.subscriptionInfo) || void 0 === t ? void 0 : t.expectedExpiration) && void 0 !== a ? a : i.wD,
                        u = null !== (n = null === (s = e.subscriptionInfo) || void 0 === s ? void 0 : s.extendedFreeTrialLength) && void 0 !== n ? n : (0, i.dz)({
                            days: w
                        }),
                        g = e.purchaseDate + u <= d;
                    return g !== (null === (r = e.subscriptionInfo) || void 0 === r ? void 0 : r.isFreeTrialPeriod) && (0, c.Kp)("Unexpected difference between isFreeTrialPeriod and manually calculated free trial period", {
                        data: {
                            subscription: e
                        },
                        once: !0
                    }), null !== (l = null === (o = e.subscriptionInfo) || void 0 === o ? void 0 : o.isFreeTrialPeriod) && void 0 !== l ? l : g
                },
                N = e => !!e.subscriptionInfo && e.subscriptionInfo.renewer === r.qF.LE.Stripe,
                O = e => !!e.familyPlanInfo,
                x = e => e.subscriptionInfo ? (0, i.zM)(e.subscriptionInfo.expectedExpiration).toLocaleString((0, l.M$)(window.duo.uiLanguage), {
                    day: "numeric",
                    month: "long",
                    year: "numeric"
                }) : "",
                F = (e, t) => {
                    if (!t.subscriptionInfo) return 0;
                    const a = t.subscriptionInfo.expectedExpiration;
                    return (0, i.t8)(e, 1e3 * a, "ceil")
                },
                M = (e, t) => {
                    if (!t.subscriptionInfo) return;
                    const a = (0, i.zM)(t.subscriptionInfo.expectedExpiration);
                    return (0, i.J8)(e, a)
                },
                U = async (e, t) => {
                    await r.Vi.patchUserShopItem(e.purchaseId, {
                        subscriptionInfo: {
                            renewing: !0
                        }
                    }), await t(n.w4(e.purchaseId))
                },
                H = e => {
                    switch (e.periodLengthInMonths) {
                        case 1:
                            return "one_month";
                        case 6:
                            return "six_month";
                        case 12:
                            return "twelve_month";
                        default:
                            throw Error(`Unknown premium product period length ${(0,o.RJ)(e.periodLengthInMonths)}`)
                    }
                },
                G = e => {
                    switch (e.type) {
                        case "gold":
                            return "gold";
                        case "premium":
                            return "premium";
                        default:
                            throw (0, o.RJ)(e.type), Error(`Unknown product type: ${e.type}`)
                    }
                },
                V = e => e.isFamilyPlan ? "family" : "individual",
                B = e => ({
                    subscription_level: void 0 === e.type ? void 0 : G(e),
                    subscription_tier: void 0 === e.periodLengthInMonths ? void 0 : H(e),
                    subscription_type: void 0 === e.isFamilyPlan ? void 0 : V(e)
                }),
                z = e => ({
                    previous_subscription_level: void 0 === e.type ? void 0 : G(e),
                    previous_subscription_tier: void 0 === e.periodLengthInMonths ? void 0 : H(e),
                    previous_subscription_type: void 0 === e.isFamilyPlan ? void 0 : V(e)
                }),
                Z = e => (0, m.Pc)() ? s.K.FeaturesLongScroll : e,
                W = (e, t, a, n) => {
                    (0, p.track)("premium_ad_show", {
                        iap_context: "registration_soft_wall"
                    }), (0, d.qj)({
                        customStartStep: s.K.FeaturesChecklist,
                        didClickFreeTrial: !0,
                        onBeforeClose: a,
                        trackingProps: {
                            iap_context: "registration_soft_wall"
                        },
                        welcomeRedirect: () => {
                            e.push(g.B6), t({
                                options: void 0,
                                type: "TOGGLE_MODAL"
                            })
                        }
                    }, t, n)
                },
                $ = () => !1,
                j = (e, t, a, s, n) => s && n && $() ? {
                    closeModalOnLogin: !1,
                    goBack: () => W(e, t, a, !0)
                } : {},
                q = 2,
                Q = (e, t) => e && t && t.length > 0
        },
        88787: (e, t, a) => {
            "use strict";
            a.d(t, {
                Hd: () => S,
                S1: () => f,
                ZK: () => _,
                eV: () => y,
                og: () => E,
                r1: () => v
            });
            var s = a(97544),
                n = a(50498),
                r = a(58576),
                i = a(79465),
                o = a(74597),
                l = a(16086);
            let c, d = !1,
                u = null;
            const g = e => {
                    const t = e.endpoint;
                    return t.startsWith("https://android.googleapis.com/gcm/send") && e.subscriptionId && !t.includes(e.subscriptionId) ? e.subscriptionId : t.split("/").pop()
                },
                p = () => {
                    if (void 0 === c) throw Error("Push notifications not initialized yet");
                    return c
                },
                m = async e => {
                    try {
                        return void await h()
                    } catch (e) {
                        (0, r.Kp)("Failed to subscribe to push notifications", {
                            ex: e
                        })
                    }
                    try {
                        if (await v(!1), null == e ? void 0 : e.aborted) return;
                        await h()
                    } catch (e) {
                        (0, r.Kp)("Failed to update notification subscription", {
                            ex: e
                        })
                    }
                },
                h = async () => {
                    const e = p(),
                        t = (e => {
                            const t = (e + "=".repeat(1)).replace(/-/g, "+").replace(/_/g, "/"),
                                a = atob(t),
                                s = new Uint8Array(a.length);
                            for (let e = 0; e < a.length; ++e) s[e] = a.charCodeAt(e);
                            return s
                        })("BOfu40JfHSmIGu-08T0bvngwcoDkpA3hwdQiQnQxyCHQTpZjI5v_bNND-ERl5UYNZ9l4S2VCmEjKSgTeZxDsHgk"),
                        a = await e.pushManager.subscribe({
                            applicationServerKey: t,
                            userVisibleOnly: !0
                        });
                    console.log("Subscribed to push notifications"), s._s.registerDevice(g(a), JSON.stringify(a)), u = a
                },
                v = async e => {
                    if (null === u) return;
                    const t = p(),
                        a = await t.pushManager.getSubscription();
                    a && (await a.unsubscribe(), console.log("Unsubscribed from push notifications"), e || s._s.unregisterDevice(g(a)).catch((e => (0, i.trackAndLogApiError)("unregister_device_failed", "Failed to unregister device", e))), u = null)
                },
                _ = async e => {
                    (0, i.track)("chrome_notification_dialog_load", {
                        via: e
                    });
                    const t = (async () => {
                        const t = await new Promise((e => {
                            try {
                                Notification.requestPermission().then(e)
                            } catch (t) {
                                Notification.requestPermission(e)
                            }
                        }));
                        (0, i.track)("chrome_notification_dialog_tap", {
                            target: {
                                default: "close",
                                denied: "deny",
                                granted: "allow"
                            }[t],
                            via: e
                        }), m()
                    })();
                    if (!o.Z.safari) {
                        const a = new AbortController,
                            s = a.signal;
                        (0, n._v)(1e4).then((() => {
                            s.aborted || (0, r.Kp)("requestPermission is taking a long time (10+ seconds)", {
                                data: {
                                    userAgent: navigator.userAgent,
                                    via: e
                                }
                            })
                        })), await t, a.abort()
                    }
                },
                f = async e => {
                    if (null === u) {
                        if (!("serviceWorker" in navigator)) throw Error("Browser doesn't support service workers");
                        c = await navigator.serviceWorker.getRegistration(), await navigator.serviceWorker.ready, e.aborted || await (async e => {
                            if (!("showNotification" in window.ServiceWorkerRegistration.prototype)) throw Error("Notifications unsupported");
                            const t = window.Notification.permission;
                            if ("denied" !== t) {
                                if (!("PushManager" in window)) throw Error("Push messaging unsupported");
                                console.log("Push notifications initialized"), d = !0, "granted" === t && (0, l.Pc)() && await m(e)
                            } else console.log("User denied notification permission")
                        })(e)
                    } else console.log("Push notifications already initialized")
                },
                S = () => d,
                y = async e => {
                    e({
                        isVisible: !0,
                        type: "TOGGLE_REQUEST_NOTIFICATION_PERMISSION"
                    });
                    try {
                        await _("notification_primer")
                    } catch (e) {
                        console.error(e)
                    }
                    e({
                        isVisible: !1,
                        type: "TOGGLE_REQUEST_NOTIFICATION_PERMISSION"
                    })
                },
                E = e => e && S() && "default" === window.Notification.permission
        },
        96786: (e, t, a) => {
            "use strict";
            a.d(t, {
                k: () => r,
                n: () => i
            });
            var s = a(50498),
                n = a(59815);
            class r extends n.pY {
                constructor() {
                    super("Function was removed from queue")
                }
            }
            const i = (e, {
                replace: t = !1,
                size: a = 1 / 0
            } = {}) => {
                let n = !1;
                const i = [],
                    o = (...o) => {
                        var l;
                        const {
                            promise: c,
                            reject: d,
                            resolve: u
                        } = (0, s.Bw)(), g = async t => {
                            if (void 0 === t) try {
                                u(await e(...o))
                            } catch (e) {
                                d(e)
                            } else d(t)
                        };
                        if (i.length < a) i.push(g);
                        else {
                            if (!t) return Promise.reject(Error("Maximum queue length reached"));
                            null === (l = i.shift()) || void 0 === l || l(new r), i.push(g)
                        }
                        return n || (async () => {
                            var e;
                            for (n = !0; i.length;) await (null === (e = i.shift()) || void 0 === e ? void 0 : e(void 0));
                            n = !1
                        })(), c
                    };
                return Object.defineProperty(o, "queueLength", {
                    get: () => i.length
                }), o
            }
        },
        2072: (e, t, a) => {
            "use strict";
            a.d(t, {
                G1: () => N,
                kl: () => k,
                Gq: () => G,
                GH: () => H,
                Sk: () => w,
                OC: () => B,
                f7: () => U,
                gW: () => I,
                vI: () => V,
                Zp: () => b,
                Se: () => x,
                Pe: () => F,
                be: () => M
            });
            var s = a(80254),
                n = a(86518),
                r = a(42659),
                i = a(73520),
                o = a(54174),
                l = a(50888),
                c = a(97544),
                d = a(17135),
                u = a(41831),
                g = a(68903),
                p = a(60752),
                m = a(51551),
                h = a(6947),
                v = a(79465);
            const _ = "LINGOTS",
                f = "GEMS";
            var S = a(97106);
            const y = ({
                    goals: e,
                    monthlyChallengeThreshold: t,
                    progress: a,
                    user: s
                }) => (n, r) => {
                    n({
                        payload: {
                            updates: a
                        },
                        type: "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE"
                    });
                    const o = e.progress && e.monthlyQuest ? e.progress[e.monthlyQuest] : void 0,
                        l = void 0 === o ? void 0 : o + a,
                        c = (0, i.gD)(r());
                    void 0 !== o && o < t && void 0 !== l && a >= t && c && n({
                        earnedBadges: [...e.earnedBadges, {
                            badgeId: c,
                            earned: !0,
                            earnedTimestamp: (0, d.Ux)().toISOString(),
                            earnedTimezone: s.timezone
                        }],
                        type: "SET_EARNED_BADGES"
                    })
                },
                E = async ({
                    isZombieMode: e,
                    progress: t,
                    user: a
                }) => {
                    if (e) {
                        const e = await (0, p.b)();
                        await e.add("submittableRequests", {
                            request: {
                                batchUpdate: {
                                    metricUpdates: [{
                                        metric: "QUESTS",
                                        quantity: t
                                    }]
                                },
                                timestamp: (0, d.Ux)(),
                                timezone: a.timezone
                            },
                            type: "goals-progress"
                        })
                    } else await c.JV.sendBatchUpdate(a.id, {
                        metricUpdates: [{
                            metric: "QUESTS",
                            quantity: t
                        }]
                    }, (0, d.Ux)(), a.timezone)
                },
                b = (e, t) => e.rewardBundles.find((e => e.rewardBundleType === t)),
                I = e => {
                    const t = b(e, "DAILY_GOAL_DOUBLE");
                    if (void 0 !== t && t.rewards.length > 0) return t.rewards[0]
                },
                w = (e, t, a) => {
                    c.Vi.consumeReward(t, a.id), e({
                        gems: a.amount,
                        type: "UPDATE_USER_GEMS"
                    }), e({
                        type: "CONSUME_DAILY_GOAL_REWARD"
                    })
                },
                k = ({
                    availableQuests: e,
                    goals: t,
                    items: a,
                    monthlyChallengeThreshold: s,
                    updateLocally: n = !0,
                    user: r
                }) => (i, c) => {
                    var d;
                    const g = c(),
                        p = (0, o.d)(g),
                        m = (0, l.mu)(g, Date.now()),
                        h = null === (d = t.progressUpdate) || void 0 === d ? void 0 : d.updates;
                    (0, u.i3)({
                        difficulty: t.difficulty,
                        oldProgress: t.progress,
                        progress: h,
                        quests: e
                    });
                    const _ = e.flatMap(((e, a) => (0, u.wU)({
                            difficulty: t.difficulty,
                            oldProgress: t.progress,
                            progress: h,
                            quest: e
                        }) ? [u.xD[a]] : [])),
                        f = C({
                            hasXpBoost: m,
                            items: a,
                            slotsCompleted: _,
                            user: r
                        });
                    i({
                        dailyQuestRewards: f,
                        type: "SET_PENDING_DAILY_QUEST_REWARDS"
                    });
                    const S = f.map((e => e.reward));
                    S.forEach((e => {
                        const t = x(e) ? "gems" : F(e) ? "streak_freeze" : M(e) ? "xp_boost" : void 0;
                        t && (0, v.track)("daily_quest_reward_claim", {
                            context: "session_end",
                            reward_amount: x(e) ? e.amount : void 0,
                            reward_type: t
                        })
                    })), n && S.forEach((e => {
                        i(N(e))
                    }));
                    const E = S.length;
                    i(y({
                        goals: t,
                        monthlyChallengeThreshold: s,
                        progress: E,
                        user: r
                    })), T({
                        dispatch: i,
                        isZombieMode: p,
                        rewards: S,
                        user: r
                    })
                },
                T = async ({
                    dispatch: e,
                    isZombieMode: t,
                    rewards: a,
                    user: s
                }) => {
                    if (t) {
                        const e = await (0, p.b)();
                        for (const t of a) await e.add("submittableRequests", {
                            rewardRequest: {
                                rewardId: t.id,
                                source: "daily-quest",
                                userPartial: {
                                    fromLanguage: s.fromLanguage,
                                    id: s.id,
                                    learningLanguage: s.learningLanguage
                                }
                            },
                            type: "reward"
                        })
                    } else await Promise.all(a.map((e => c.Vi.consumeReward(s, e.id)))), a.some((e => M(e) || F(e))) && e((0, n.J0)());
                    a.length > 0 && E({
                        isZombieMode: t,
                        progress: a.length,
                        user: s
                    })
                },
                C = ({
                    hasXpBoost: e,
                    items: t,
                    slotsCompleted: a,
                    user: s
                }) => {
                    const n = [],
                        r = [];
                    for (const i of a) {
                        let a;
                        switch (i) {
                            case "DAILY":
                                a = b(s, u.bf[0]);
                                break;
                            case "CORE":
                                a = b(s, u.bf[1]);
                                break;
                            case "HARD":
                                a = b(s, u.bf[2]);
                                break;
                            default:
                                (0, g.RJ)(i)
                        }
                        if (a) {
                            const o = R(a, {
                                hasXpBoost: e,
                                items: t,
                                rewardsSoFar: n,
                                user: s
                            });
                            o && (n.push(o), r.push({
                                reward: o,
                                slotType: i
                            }))
                        }
                    }
                    return r
                },
                R = (e, {
                    hasXpBoost: t,
                    items: a,
                    rewardsSoFar: s,
                    user: n
                }) => {
                    const r = e.rewardBundleType;
                    switch (r) {
                        case "DAILY_QUEST_FIRST":
                            {
                                const t = A(e, {
                                    items: a,
                                    rewardsSoFar: s,
                                    user: n
                                });
                                return void 0 !== t ? t : L(e)
                            }
                        case "DAILY_QUEST_SECOND":
                            return L(e);
                        case "DAILY_QUEST_THIRD":
                            {
                                const r = A(e, {
                                    ignoreProbability: !0,
                                    items: a,
                                    rewardsSoFar: s,
                                    user: n
                                });
                                if (void 0 !== r) return r;
                                if (!t) {
                                    const t = D(e);
                                    if (void 0 !== t) return t
                                }
                                return L(e)
                            }
                        default:
                            return void(0, g.RJ)(r)
                    }
                },
                L = e => s.MR(e.rewards.filter(x), (e => e.amount))[0],
                A = (e, {
                    ignoreProbability: t,
                    items: a,
                    rewardsSoFar: s,
                    user: n
                }) => {
                    var r, i;
                    const o = P(e);
                    if (o && !s.find((e => O(e) && "STREAK_FREEZE" === e.itemId)) && !(0, h.pS)(null !== (i = null === (r = n.streakData.currentStreak) || void 0 === r ? void 0 : r.length) && void 0 !== i ? i : 0) && (0, m.RB)(a, n, t)) return o
                },
                P = e => {
                    const t = e.rewards.filter((e => O(e) && "STREAK_FREEZE" === e.itemId));
                    return t.length > 0 ? t[0] : void 0
                },
                D = e => {
                    const t = e.rewards.filter((e => O(e) && e.itemId === S.zL.ITEM_NAME_15_MIN));
                    return t.length > 0 ? t[0] : void 0
                },
                N = e => t => {
                    x(e) && t({
                        gems: e.amount,
                        type: "UPDATE_USER_GEMS"
                    }), t({
                        rewardId: e.id,
                        type: "CONSUME_DAILY_QUEST_REWARD"
                    })
                },
                O = e => "itemId" in e,
                x = e => (e => "currency" in e)(e) && [_, f].includes(e.currency),
                F = e => O(e) && "STREAK_FREEZE" === e.itemId,
                M = e => "itemId" in e && Object.values(S.zL).some((t => t === e.itemId)),
                U = e => b(e, "SKILL_COMPLETION"),
                H = ({
                    receivingBoost: e,
                    user: t
                }) => async (a, s) => {
                    if ((0, l.mu)(s(), Date.now()) || e) {
                        const e = b(s().user, "SKILL_COMPLETION");
                        if (e) {
                            const s = e.rewards[0];
                            await c.Vi.consumeReward(t, s.id), a({
                                gems: s.amount,
                                type: "UPDATE_USER_GEMS"
                            })
                        }
                    } else try {
                        await c.Vi.purchaseUserShopItem(S.zL.ITEM_NAME_15_MIN, {
                            isFree: !0,
                            learningLanguage: t.learningLanguage
                        }), await a((0, n.J0)())
                    } catch (e) {
                        (0, v.trackAndLogApiError)("purchase_user_shop_item_failed", `Failed to purchase xp boost item ${S.zL.ITEM_NAME_15_MIN}`, e)
                    }
                },
                G = () => (e, t) => {
                    var a;
                    const s = (0, i.D_)(t()),
                        l = (0, i.Ap)(t()),
                        u = (0, r.np)(t()),
                        g = u.rewardBundles.find((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType)),
                        m = u.rewardBundles.find((e => "FRIENDS_QUEST_XP_BOOST" === e.rewardBundleType)),
                        h = (0, o.d)(t()),
                        v = V(u);
                    if (!(null === (a = s.friendsQuest) || void 0 === a ? void 0 : a.details) || !(null == g ? void 0 : g.rewards.length) || !(null == m ? void 0 : m.rewards.length) || g.rewards.some((e => e.consumed)) || m.rewards.some((e => e.consumed)) || void 0 === v) return;
                    const {
                        goalId: _,
                        questId: f,
                        questPoints: S
                    } = s.friendsQuest.details;
                    e({
                        type: "ACKNOWLEDGE_FRIENDS_QUEST_COMPLETE"
                    }), e({
                        gems: v,
                        type: "UPDATE_USER_GEMS"
                    }), e(y({
                        goals: s,
                        monthlyChallengeThreshold: l,
                        progress: S,
                        user: u
                    })), E({
                        isZombieMode: h,
                        progress: S,
                        user: u
                    }), h ? (async () => {
                        const e = await (0, p.b)();
                        await e.add("submittableRequests", {
                            rewardRequest: {
                                rewardId: g.rewards[0].id,
                                source: "friends-quest",
                                userPartial: {
                                    fromLanguage: u.fromLanguage,
                                    id: u.id,
                                    learningLanguage: u.learningLanguage
                                }
                            },
                            type: "reward"
                        }), await e.add("submittableRequests", {
                            rewardRequest: {
                                rewardId: m.rewards[0].id,
                                source: "friends-quest",
                                userPartial: {
                                    fromLanguage: u.fromLanguage,
                                    id: u.id,
                                    learningLanguage: u.learningLanguage
                                }
                            },
                            type: "reward"
                        })
                    })() : (c.Vi.consumeReward(u, g.rewards[0].id), c.JV.postQuestComplete({
                        goalId: _,
                        questId: f,
                        questSlot: "FRIENDS",
                        timestamp: (0, d.Ux)(),
                        timezone: u.timezone,
                        userId: u.id
                    }), (async () => {
                        await B((0, r.__)(t()), "Friends Quest Reward"), await c.Vi.consumeReward(u, m.rewards[0].id), e((0, n.J0)())
                    })(), e({
                        type: "CONSUME_FRIENDS_QUEST_GEMS"
                    }), e({
                        type: "CONSUME_FRIENDS_QUEST_XP_BOOST"
                    }))
                },
                V = e => {
                    var t, a, s;
                    const n = null === (s = null === (a = null === (t = e.rewardBundles.find((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType))) || void 0 === t ? void 0 : t.rewards[0]) || void 0 === a ? void 0 : a.items) || void 0 === s ? void 0 : s[0];
                    if (void 0 !== n && ("GEM" === n.itemType || "LINGOT" === n.itemType)) return n.count
                },
                B = async (e, t) => {
                    for (const a of Object.values(S.zL))
                        if (void 0 !== e.inventory[a]) try {
                            await c.Vi.useUserShopItem(a)
                        } catch (e) {
                            (0, v.trackAndLogApiError)("use_user_shop_item_failed", `Failed to delete xp boost item ${a} from ${t}`, e)
                        }
                }
        },
        56366: (e, t, a) => {
            "use strict";
            a.d(t, {
                Lm: () => b,
                H_: () => I,
                Sf: () => E
            });
            var s = a(40893),
                n = a(81149),
                r = a(19172);
            const i = (e, t, a) => {
                const s = (0, r.f)(`${t.keyString}.entry`).selected(e, (e => e.entries.get(t.keyString))).build();
                return (0, r.f)(t.keyString).derived((e => {
                    var n;
                    const r = e(s);
                    return null !== (n = r ? t.deserializeValue(r.value) : null) && void 0 !== n ? n : a
                })).write(((a, s, n) => {
                    s(e, a(e).setValue(t, n))
                })).build()
            };
            var o = a(97544),
                l = a(68903),
                c = a(20716),
                d = a(74901),
                u = a(96786);
            const g = e => "zero" in e;
            class p {
                constructor(e, t, a = 0, s = null) {
                    this.dirtyValue = a, this.key = e, this.value = t, this.versionIdentifier = s
                }
                get isDirty() {
                    return this.dirtyValue > 0
                }
                static fromJSON(e) {
                    return new p(e.key, e.value, e.dirtyValue, e.version)
                }
                clean() {
                    return new p(this.key, this.value, 0, this.versionIdentifier)
                }
                clearVersion() {
                    return new p(this.key, this.value, this.dirtyValue)
                }
                doesConflictWith(e) {
                    var t, a;
                    return this.isDirty && this.versionIdentifier !== (null !== (a = null === (t = e.entries.get(this.key)) || void 0 === t ? void 0 : t.versionIdentifier) && void 0 !== a ? a : null)
                }
                setValue(e, t) {
                    return new p(this.key, e, t, this.versionIdentifier)
                }
                toJSON() {
                    return {
                        dirtyValue: this.dirtyValue,
                        key: this.key,
                        value: this.value,
                        version: this.versionIdentifier
                    }
                }
            }
            class m {
                constructor(e) {
                    this.keyString = e
                }
                deserializeValue(e) {
                    return e
                }
                resolveConflict(e, t) {
                    return t
                }
                serializeValue(e) {
                    return e
                }
            }
            class h {
                constructor(e = new Map, t = null) {
                    if (Array.isArray(e)) {
                        const t = e.find(((t, a) => e.findIndex((e => e.key === t.key)) !== a));
                        if (t) throw Error(`Rocks: All entries should have unique keys: ${t.key}`);
                        this.entries = new Map(e.map((e => [e.key, e])))
                    } else this.entries = new Map(e);
                    this.generation = t
                }
                get allEntries() {
                    return [...this.entries.values()]
                }
                get isDirty() {
                    for (const e of this.entries.values())
                        if (e.isDirty) return !0;
                    return !1
                }
                get isEmpty() {
                    return 0 === this.entries.size
                }
                get maximumDirtyValue() {
                    let e = 0;
                    for (const t of this.entries.values()) t.dirtyValue > e && (e = t.dirtyValue);
                    return e
                }
                get modifiedEntries() {
                    return [...this.entries.values()].filter((e => e.isDirty))
                }
                static fromJSON(e) {
                    return new h(e.entries.map((e => p.fromJSON(e))), e.generation_id)
                }
                canMergeChanges(e) {
                    return this.generation === e.generation || null === this.generation
                }
                async deleteFrom(e) {
                    const t = await e.deleteContainer();
                    return new h(new Map, t)
                }
                getValue(e) {
                    var t, a;
                    return e.deserializeValue(null !== (a = null === (t = this.entries.get(e.keyString)) || void 0 === t ? void 0 : t.value) && void 0 !== a ? a : null)
                }
                mergeEntries(e, t) {
                    var a, s;
                    for (const t of e.entries.values()) {
                        if (t.isDirty) throw Error("Rocks: Backend entries contain a dirty value");
                        if (void 0 === t.versionIdentifier) throw Error("Rocks: Missing version identifier from backend")
                    }
                    if (!this.canMergeChanges(e)) return new h(e.entries, e.generation);
                    const n = new Map(this.entries);
                    for (const r of e.entries.values()) {
                        const e = this.entries.get(r.key);
                        if (null == e ? void 0 : e.isDirty) e.dirtyValue <= t && n.set(r.key, r);
                        else {
                            const t = null !== (a = null == e ? void 0 : e.versionIdentifier) && void 0 !== a ? a : 0,
                                i = null !== (s = r.versionIdentifier) && void 0 !== s ? s : 0;
                            if (e && "number" == typeof t && "number" == typeof i && t > i) continue;
                            n.set(r.key, r)
                        }
                    }
                    return new h(n, e.generation)
                }
                resetEntries(e) {
                    const t = this.maximumDirtyValue + 1,
                        a = new Map(this.entries);
                    for (const [s, n] of a) {
                        const r = e.get(s);
                        r && g(r) && a.set(s, n.setValue(r.serializeValue(r.zero), t))
                    }
                    return new h(a, this.generation)
                }
                resolveConflicts(e, t) {
                    var a;
                    const s = new Map(this.entries);
                    for (const n of this.entries.values()) {
                        if (!n.doesConflictWith(e)) continue;
                        const r = e.entries.get(n.key);
                        if (r) {
                            const e = null !== (a = t.get(n.key)) && void 0 !== a ? a : new m(n.key),
                                i = e.deserializeValue(n.value),
                                o = e.deserializeValue(r.value),
                                l = e.serializeValue(e.resolveConflict(i, o));
                            s.set(n.key, r.setValue(l, n.dirtyValue))
                        } else t.get(n.key) ? s.set(n.key, n.clearVersion()) : s.delete(n.key)
                    }
                    return new h(s, this.generation)
                }
                setValue(e, t) {
                    var a;
                    const s = e.serializeValue(t),
                        n = this.maximumDirtyValue + 1,
                        r = this.entries.get(e.keyString);
                    return new h(new Map(this.entries).set(e.keyString, null !== (a = null == r ? void 0 : r.setValue(s, n)) && void 0 !== a ? a : new p(e.keyString, s, n)), this.generation)
                }
                async syncWith(e, t = 100) {
                    if (!this.isDirty) return {
                        box: await e.getContainer(),
                        success: !0
                    };
                    let a;
                    for (const s of function*(e, t) {
                            for (let a = 0; a < e.length; a += t) yield e.slice(a, a + t)
                        }(this.modifiedEntries, t)) {
                        const {
                            box: t,
                            success: n
                        } = await e.updateContainer(new h(s, this.generation));
                        if (!n) return {
                            box: t,
                            success: !this.canMergeChanges(t)
                        };
                        a = t
                    }
                    if (!a) throw Error("Rocks: Didn't receive a backend container");
                    return {
                        box: a,
                        success: !0
                    }
                }
                toJSON() {
                    return {
                        entries: [...this.entries.values()].map((e => e.toJSON())),
                        generation_id: this.generation
                    }
                }
            }
            class v {
                constructor(e, t, a) {
                    this.throwOnError = e => {
                        if (!(e.status >= 200 && e.status <= 299)) switch (e.status) {
                            case 401:
                                throw Error("Rocks: Unauthorized");
                            case 404:
                                throw Error("Rocks: Container not found");
                            case 409:
                                return;
                            default:
                                throw Error(`Rocks: HTTP error ${e.status}`)
                        }
                    }, this.client = e, this.namespace = t, this.userId = a
                }
                get url() {
                    return `/1/containers/${this.namespace}/users/${this.userId}`
                }
            }
            class _ extends v {
                async deleteContainer() {
                    const e = await this.client.delete(this.url);
                    return this.throwOnError(e), e.data.generation_id
                }
                async getContainer() {
                    const e = await this.client.get(this.url);
                    return this.throwOnError(e), h.fromJSON(e.data)
                }
                async updateContainer(e) {
                    const t = await this.client.patch(this.url, e.toJSON());
                    return this.throwOnError(t), {
                        box: h.fromJSON(t.data),
                        success: 200 === t.status
                    }
                }
            }
            var f = a(30839);
            const S = {
                    deserializeValue: e => null === e ? null : JSON.parse(e),
                    keyString: "coachEnabled",
                    resolveConflict: (e, t) => t,
                    serializeValue: e => JSON.stringify(e),
                    zero: !0
                },
                y = {
                    deserializeValue: e => e,
                    keyString: "darkModeWeb",
                    resolveConflict: (e, t) => t,
                    serializeValue: e => e,
                    zero: "system"
                },
                E = ((e, t, a, n = {}) => ((e, t, a, n, {
                    autoSync: i = !0,
                    fetchOnMount: d = !0,
                    getMigrations: g
                } = {}) => {
                    let p, m, h = 0;
                    const v = (0, r.f)(e).derived((e => e(t))).write(((e, a, s) => {
                            a(t, s), i && S()
                        })).build(),
                        f = (0, r.f)(`${e}.isInitialized`).primitive(!1).build(),
                        S = (0, l.rw)((() => b()), 500),
                        y = async () => {
                            var e;
                            if (!m) throw Error("Sync shouldn't happen when atom isn't mounted");
                            const r = p.signal,
                                i = (0, o.Np)("/rocks").dontThrowOnError(),
                                l = m.get(s.DW);
                            if (void 0 === l) throw Error("Cannot sync without a user ID");
                            const c = new _(i, a, l),
                                d = m.get(t),
                                {
                                    box: u,
                                    success: g
                                } = await d.syncWith(c);
                            if (r.aborted) throw null !== (e = r.reason) && void 0 !== e ? e : new DOMException("The operation was aborted");
                            if (g) m.set(t, m.get(t).mergeEntries(u, d.maximumDirtyValue)), m.set(f, !0), h = 0;
                            else {
                                if (m.set(t, m.get(t).resolveConflicts(u, n)), m.set(f, !0), 2 === h) throw h = 0, Error("Too many conflict resolution retries");
                                h++, await y()
                            }
                        },
                        E = (0, u.n)(y, {
                            replace: !0,
                            size: 1
                        }),
                        b = async () => {
                            try {
                                await E()
                            } catch (e) {
                                if (e instanceof u.k) return void console.error(e);
                                throw e
                            }
                        };
                    return (0, c.bI)(v, f), (0, c.it)(v, (e => {
                        if (void 0 !== m) throw Error("coordinatedRocksAtom cannot be shared between multiple stores");
                        h = 0, p = new AbortController, m = e;
                        let a = m.get(t);
                        if (void 0 !== g) {
                            const e = g(m.get.bind(m));
                            n.forEach((t => {
                                if (!a.entries.has(t.keyString)) {
                                    const s = e.find((e => e.key.keyString === t.keyString));
                                    s && (a = a.setValue(t, s.value), s.cleanUp())
                                }
                            })), m.set(t, a)
                        }
                        return [...n.values()].every((e => a.entries.has(e.keyString))) && m.set(f, !0), d && b(), () => {
                            S.cancel(), p.abort(), m = void 0
                        }
                    })), (0, c.XV)(v, (0, r.f)(`${e}.refetch`).write((() => b())).build()), v
                })(`boxAtom.${e}`, (0, d.u)(t).selectPersistedValue((e => e.toJSON())).transformInitialValue((e => e ? h.fromJSON(e) : new h)).build(), e, a, n))("learning_app_ui_preferences", "uiPreferences", new Map([
                    ["coachEnabled", S],
                    ["darkModeWeb", y]
                ]), {
                    getMigrations: e => {
                        const t = e(s.DW);
                        if (void 0 === t) throw Error("Cannot run migrations when logged out");
                        if ((0, f.No)(f.Qt.REDUX_DarkMode)) {
                            const e = (0, f.rV)(f.Qt.REDUX_DarkMode)[t];
                            if (void 0 !== e && "experiment" === (0, n.j6)("web_delight_sync_settings", void 0)) return [{
                                cleanUp: () => {
                                    if ((0, f.No)(f.Qt.REDUX_DarkMode)) {
                                        const e = (0, f.rV)(f.Qt.REDUX_DarkMode);
                                        delete e[t], (0, f.LS)(f.Qt.REDUX_DarkMode, e)
                                    }
                                },
                                key: y,
                                value: "boolean" == typeof e ? e ? "on" : "off" : e
                            }]
                        }
                        return []
                    }
                }),
                b = i(E, S, S.zero),
                I = i(E, y, y.zero)
        },
        88868: (e, t, a) => {
            "use strict";
            a.d(t, {
                $R: () => b,
                B6: () => p,
                Eg: () => y,
                Eq: () => S,
                Gk: () => c,
                Iw: () => D,
                KE: () => w,
                Oy: () => R,
                PG: () => h,
                Ql: () => d,
                UG: () => E,
                Vb: () => u,
                Z2: () => g,
                Zs: () => L,
                a9: () => f,
                a_: () => C,
                cd: () => P,
                gg: () => A,
                o_: () => N,
                op: () => v,
                sg: () => m,
                v$: () => T,
                wl: () => _
            });
            var s = a(3620),
                n = a(80254),
                r = a(50498),
                i = a(53229),
                o = a(58576),
                l = a(16086);
            const c = "/settings/avatar",
                d = {
                    de: "https://blog.duolingo.com/de",
                    en: "https://blog.duolingo.com",
                    es: "https://blog.duolingo.com/es",
                    pt: "https://blog.duolingo.com/pt"
                }[window.duo.uiLanguage],
                u = "incubator-testbed.duolingo.com",
                g = "www.duolingo.com",
                p = "/learn",
                m = "/sections",
                h = "/welcome?welcomeStep=choosePath",
                v = "/settings/super",
                _ = "/super",
                f = ["/plus", "/getplus", "/youtubeplus", _],
                S = "/practice-hub",
                y = "/practice-hub/stories",
                E = "/practice-hub/mistakes",
                b = "/practice-hub/words",
                I = [...f, v, "/family-plan", "/redeem", "/welcome", "/classroom/:classroomCode", "/bango/:reseller/:token", "/family", "/business/checkout", "/business/admin/:page", "/lesson", "/lesson/unit/:pathUnitNumber/level/:pathLevelNumber", "/stories/:storyId"],
                w = e => I.some((t => (0, s.LX)(e, {
                    exact: !0,
                    path: t
                }))),
                k = [...f, "/attribution", "/auto-renewal-agreement", "/bango/:reseller/:token", "/classroom/:classroomCode", "/cookies", "/cross-border-data-transfer-agreement", "/duocon", "/duocon2022", "/duocon2021", "/duocon2020", "/duocon2019", "/family", "/family-plan", "/logout", "/privacy", "/redeem", "/register", "/terms", "/welcome", "/business/checkout", "/business/admin/:page"],
                T = e => k.some((t => (0, s.LX)(e, {
                    exact: !0,
                    path: t
                }))),
                C = "preview.duolingo.com",
                R = ["", "/errors/404.html"].join(""),
                L = async (e, t) => {
                    void 0 === e ? window.location.reload(!0) : t ? window.location.replace(e) : window.location.href = e, await (0, r.f)()
                },
                A = e => e.replace(window.location.host, C),
                P = (e = (0, l.Pc)()) => e ? p : "/",
                D = n.HP((e => {
                    if (e.startsWith("javascript:") || e.startsWith("//")) return !1;
                    try {
                        const t = document.createElement("a");
                        return t.href = e, t.origin === window.location.origin
                    } catch {
                        return !1
                    }
                })),
                N = (e, t = !0) => {
                    let {
                        pathname: a
                    } = e, s = new URLSearchParams(e.search);
                    const n = a,
                        r = e.hash;
                    if (r && "/" === a && (a = r.replace(/^#\/*(.*)/, "/$1"), console.log("Removed # from URL"), t && (0, o.um)("Removed # from URL", {
                            data: {
                                hash: r,
                                originalPathname: n,
                                pathname: a,
                                searchParams: s
                            }
                        })), a.includes("$") && a.includes("=") && !a.includes("?") && (a = a.replace("$", "?"), console.log("Replaced $ with ? in URL"), t && (0, o.um)("Replaced $ with ? in URL", {
                            data: {
                                hash: r,
                                originalPathname: n,
                                pathname: a,
                                searchParams: s
                            }
                        })), a.includes("?")) {
                        const e = a.split("?");
                        a = e[0], s = new URLSearchParams((0, i.Lm)(e[1])), t && (0, o.um)("Split ? from new path", {
                            data: {
                                hash: r,
                                originalPathname: n,
                                pathname: a,
                                searchParams: s
                            }
                        })
                    }(0, l.Pc)() && s.delete("isLoggingIn");
                    const c = s.toString();
                    return {
                        pathname: a,
                        search: 0 === c.length ? "" : `?${c}`
                    }
                }
        },
        12125: (e, t, a) => {
            "use strict";
            a.d(t, {
                wn: () => c,
                Qs: () => h,
                YN: () => p,
                XU: () => m,
                Nx: () => d,
                R0: () => v,
                Zv: () => _,
                S2: () => u,
                Y: () => g
            });
            var s = a(80254);
            const n = a.p + "images/schools/leaderboards/0e0f9617bdef7c1e2e6f82363e093eb7.svg",
                r = a.p + "images/schools/leaderboards/7417a8ffc61c46d8ea49c3a209f2bf81.svg",
                i = a.p + "images/schools/leaderboards/8d3ba3746a937cee2a89b1b71b586980.svg";
            var o = a(17135),
                l = a(8654);
            const c = 6,
                d = (e, t, a) => s.MR(t.map((t => t.userId === e ? { ...t,
                    score: t.score + a
                } : t)), "score").reverse(),
                u = (e, t, a) => {
                    if (!(null == t ? void 0 : t.active) || a <= 0) return !1;
                    const s = g(t.active.cohort.rankings),
                        n = s.findIndex((t => t.userId === e));
                    return 0 !== n && -1 !== n && s[n].score + a > s[n - 1].score
                },
                g = e => [...e].sort(((e, t) => e.score === t.score ? e.displayName.localeCompare(t.displayName, void 0, {
                    sensitivity: "base"
                }) : e.score < t.score ? 1 : -1)),
                p = e => {
                    switch (e) {
                        case 0:
                            return "GOLD";
                        case 1:
                            return "SILVER";
                        case 2:
                            return "BRONZE";
                        default:
                            return "GREEN"
                    }
                },
                m = e => {
                    switch (e) {
                        case 0:
                            return n;
                        case 1:
                            return r;
                        case 2:
                            return i;
                        default:
                            return
                    }
                },
                h = e => {
                    const t = (0, o.pY)(e),
                        a = (0, o.Gz)(e);
                    if (t) return (0, l._i)(30308, {
                        date: a.getDate(),
                        day: (0, l.Q7)()[a.getDay()],
                        month: (0, l.mD)()[a.getMonth()]
                    });
                    const {
                        days: s,
                        hours: n
                    } = (0, o.zj)(e - Date.now());
                    return s > 0 ? (0, l._i)(30308, {
                        date: a.getDate(),
                        day: (0, l.Q7)()[a.getDay()],
                        month: (0, l.mD)()[a.getMonth()]
                    }) : (0, l._i)(30309, {
                        num: n
                    })
                },
                v = e => void 0 !== e && "completed" !== e && "late" !== e,
                _ = e => void 0 !== e && ("completed" === e || "late" === e)
        },
        89260: (e, t, a) => {
            "use strict";
            a.d(t, {
                A2: () => j,
                HI: () => A,
                LJ: () => L,
                TD: () => ee,
                Uj: () => U,
                VC: () => $,
                Xd: () => W,
                Z6: () => X,
                ZX: () => N,
                bc: () => D,
                kL: () => J,
                l$: () => R,
                mi: () => C,
                oT: () => K,
                tq: () => P,
                u4: () => O
            });
            var s = a(80254),
                n = a(42659),
                r = a(54174),
                i = a(93540),
                o = a(40387),
                l = a(97544),
                c = a(8698),
                d = a(16970),
                u = a(95351),
                g = a(17135),
                p = a(64115),
                m = a(94786),
                h = a(68903),
                v = a(53229),
                _ = a(58576),
                f = a(23275),
                S = a(84401),
                y = a(80820),
                E = a(59096),
                b = a(68564),
                I = a(36571),
                w = a(39837),
                k = a(79465),
                T = a(11811);
            const C = e => {
                    const [, t, a, s, n, r] = e.split("/");
                    return {
                        lessonType: n,
                        levelNumber: r,
                        pathType: t,
                        scopeType: a,
                        unitOrSectionNumber: s
                    }
                },
                R = e => e === T.FF.PlacementTest,
                L = e => R(e) || (e => e === T.FF.SectionTest)(e) || (e => e === T.FF.UnitTest)(e),
                A = e => [T.FF.LegendaryLevel, T.FF.LegendaryLexemePractice].includes(e),
                P = () => [T.Sm.ExtendedListenMatch, T.Sm.Listen, T.Sm.ListenComplete, T.Sm.ListenComprehension, T.Sm.ListenMatch, T.Sm.ListenIsolation, T.Sm.ListenSpeak, T.Sm.ListenTap, T.Sm.SameDifferent, T.Sm.SelectPronunciation, T.Sm.SelectTranscription],
                D = () => [T.Sm.Speak, T.Sm.ListenSpeak],
                N = e => [T.FF.GlobalPractice, T.FF.Lesson, T.FF.LevelReview, T.FF.LexemePractice, T.FF.LexemeSkillLevelPractice, T.FF.ListeningPractice, T.FF.PlacementTest, T.FF.SectionTest, T.FF.TargetPractice, T.FF.UnitTest, T.FF.UnitRewind].includes(e),
                O = async ({
                    dispatch: e,
                    getState: t,
                    includeFreeform: a,
                    includeListening: s,
                    includeSmartTips: c,
                    includeSpeaking: d,
                    params: m,
                    levelData: h,
                    sessionWillStartRightAway: v
                }) => {
                    var f, S;
                    const E = t(),
                        b = (0, n.Oz)(E),
                        w = (0, n.B8)(E),
                        C = (0, r.d)(E),
                        R = (0, n.oe)(E),
                        L = (0, n.np)(E),
                        {
                            fromLanguage: A,
                            learningLanguage: N
                        } = L,
                        O = (0, g.Zo)(),
                        G = (0, i.DN)(E),
                        V = (0, i.HF)(E),
                        B = "mistakes-review" === m.type ? (await l.wO.getMistakes({
                            countLimit: 10,
                            courseId: b.id,
                            includeListening: s,
                            includeSpeaking: d
                        })).map((e => e.challengeIdentifier)) : void 0;
                    let z;
                    "practice" === m.type ? z = (0, u.K)({
                        currentCourseHistory: w,
                        sessionType: T.FF.GlobalPractice,
                        timestamp: O
                    }) : "path-level" === m.type && (z = (0, u.K)({
                        currentCourseHistory: w,
                        levelData: h,
                        sessionType: T.FF.LevelReview
                    }));
                    let W = !1;
                    if (h && "skill" === h.level.type) {
                        const {
                            skillId: e
                        } = h.level.pathLevelClientData;
                        W = U(L, e)
                    }
                    const $ = x(),
                        j = await F($),
                        q = M(),
                        Q = (0, p.ky)("levelIndex"),
                        K = (0, p.ky)("skillId"),
                        Y = H({
                            alphabetsPathProgressKey: b.alphabetsPathProgressKey,
                            crowns: b.crowns,
                            debugChallengeTypes: $,
                            debugChallenges: j,
                            debugGeneratorIds: q,
                            debugLevelIndex: Q,
                            debugSkillId: K,
                            dispatch: e,
                            flattenedPath: V,
                            fromLanguage: A,
                            generatorIdentifiersOfRecentMistakes: z,
                            includeListening: s,
                            includeSmartTips: c,
                            includeSpeaking: d,
                            isExplanationSeen: W,
                            learningLanguage: N,
                            levelData: h,
                            mistakeGeneratorIds: B,
                            params: m,
                            pathExperiments: b.pathExperiments,
                            sectionedPath: G,
                            skills: R,
                            user: L
                        }),
                        J = $.length > 0 || j.length > 0 || q.length > 0 || void 0 !== Q || void 0 !== K || (0, p.gQ)("latest") || (0, p.gQ)("debugShowAllStoryChallenges") || (0, p.gQ)("debugShowStoriesOnboarding"),
                        X = !h || !(0, y.tr)(h.level) || "isEarnbackSession" in m && m.isEarnbackSession ? void 0 : (0, y.gL)({
                            currentStoryMode: "story" === Y.type ? Y.mode : void 0,
                            generatorIdsOfRecentMistakes: null == z ? void 0 : z.map((e => e.generatorId)),
                            includeSmartTips: c,
                            isExplanationSeen: W,
                            pathLevel: h.level
                        });
                    let ee, te;
                    if (X && !J) try {
                        te = await (0, y.vS)(X)
                    } catch (e) {
                        (0, _.Kp)("Unable to retrieve cached session", {
                            ex: e
                        })
                    }
                    if ((null == te ? void 0 : te.stale) && !C && (te = void 0), te) void 0 !== X && !te.stale && v && await (0, y.yI)(X);
                    else {
                        if (C) throw Error("Cannot fetch a new session in Zombie mode");
                        try {
                            const t = Y.type === T.FF.Adventures ? l.Wm.getAdventuresSession(A, N, (null == h ? void 0 : h.level.pathLevelClientData).adventuresEpisodeSummary.archiveUrl) : "story" === Y.type ? l.Mw.getStory(Y) : l.Vi.sessionCreate(Y);
                            v || !X || J ? ee = await t : (te = await (0, y.fB)(X, t, (0, g.Zo)(), e), ee = te.session), "type" in ee && ee.type === T.FF.SectionTest && Y.type === T.FF.SectionTest && void 0 !== Y.sectionIndex ? ee.sectionIndex = Y.sectionIndex - 1 : "type" in ee && ee.type === T.FF.Placement && Y.type === T.FF.Placement && void 0 !== Y.sectionIndex && (ee.sectionIndex = Y.sectionIndex), "type" in ee && ee.type === T.FF.MistakesReview && l.wO.clearUngeneratableMistakes({
                                courseId: b.id,
                                expectedMistakes: B,
                                session: ee
                            })
                        } catch (e) {
                            throw "story" === Y.type ? (0, k.trackAndLogApiError)("stories_load_story", "Failed to load story", e) : ((0, k.trackAndLogApiError)("create_session_failed", "Failed to create session", e), "mistakes-review" === m.type && l.wO.clearUngeneratableMistakes({
                                courseId: b.id,
                                expectedMistakes: B,
                                session: void 0
                            }), "practice-hub" === m.type && (0, _.Kp)("Failed to create practice hub session", {
                                data: {
                                    sessionParams: Y,
                                    sessionRouteParams: m
                                }
                            })), e
                        }
                    }
                    const ae = "story" === Y.type ? {
                        cacheType: null == te ? void 0 : te.cacheType,
                        session: null !== (f = null == te ? void 0 : te.session) && void 0 !== f ? f : ee,
                        sessionParams: Y,
                        sessionPrefetchedTimestamp: null == te ? void 0 : te.prefetchTimestamp,
                        type: "story"
                    } : {
                        cacheType: null == te ? void 0 : te.cacheType,
                        session: null !== (S = null == te ? void 0 : te.session) && void 0 !== S ? S : ee,
                        sessionParams: Y,
                        sessionPrefetchedTimestamp: null == te ? void 0 : te.prefetchTimestamp,
                        type: "regular"
                    };
                    return "regular" === ae.type ? (s || ae.session.disableCantListenOverride || (ae.session = (0, o.qz)(ae.session, P())), d || (ae.session = (0, o.qz)(ae.session, D())), ae.session.type === T.FF.GlobalPractice && (null == z ? void 0 : z.length) && (ae.session.isMistakesGlobalPractice = !0), await Z({
                        debugChallengeTypes: $,
                        debugChallenges: j,
                        debugGeneratorIds: q,
                        levelData: h,
                        session: ae.session,
                        sessionParams: ae.sessionParams
                    })) : "story" !== ae.type || a && !C || (ae.session.elements = ae.session.elements.filter((e => !(0, I.Eo)(e)))), ae
                },
                x = () => {
                    let e = [];
                    return (0, p.gQ)("type") && (e = (0, v.vl)().type.split(",").filter((e => c.KT.includes(e))), e.length || console.warn("Unknown debug challenge type(s)")), e
                },
                F = async e => {
                    var t;
                    const s = (0, p.ky)("sampleSession");
                    return s ? (await a(63198)(`./sampleChallenges${null!==(t={ar_puzzle:"PuzzleArabic",es:"Spanish",ja:"Japanese",ko:"Korean",ko_puzzle:"PuzzleKorean",speak:"Speak",svg_puzzle:"SvgPuzzle",trace:"Trace",write:"CharacterWrite"}[s])&&void 0!==t?t:""}.json`)).default.filter((t => 0 === e.length || e.includes(t.type))) : []
                },
                M = () => {
                    const e = (0, p.ky)("generatorId");
                    return e ? e.split(",") : []
                },
                U = (e, t) => {
                    const {
                        explanationsSeen: a
                    } = e;
                    return !!(null == a ? void 0 : a[t])
                },
                H = ({
                    alphabetsPathProgressKey: e,
                    crowns: t,
                    debugChallengeTypes: a,
                    debugChallenges: s,
                    debugGeneratorIds: n,
                    debugLevelIndex: r,
                    debugSkillId: i,
                    dispatch: o,
                    flattenedPath: l,
                    fromLanguage: u,
                    generatorIdentifiersOfRecentMistakes: g,
                    includeListening: p,
                    includeSmartTips: m,
                    includeSpeaking: v,
                    isExplanationSeen: _,
                    learningLanguage: y,
                    levelData: b,
                    mistakeGeneratorIds: I,
                    params: k,
                    pathExperiments: C,
                    sectionedPath: R,
                    skills: L,
                    user: A
                }) => {
                    const P = (0, f.Wc)(null == b ? void 0 : b.level.state);
                    let D;
                    switch (void 0 !== R && R.length > 0 && (l = R.flatMap((e => e.units))), k.type) {
                        case "alphabets":
                            {
                                const t = k.groupId ? (0, d.i_)(k.alphabetSessionId, k.groupId) : k.alphabetSessionId;D = {
                                    alphabetId: k.alphabetSessionId,
                                    alphabetSessionId: t,
                                    alphabetsPathProgressKey: e,
                                    groupId: k.groupId,
                                    type: T.FF.AlphabetLesson
                                };
                                break
                            }
                        case "legendary":
                            {
                                const e = z(t, null == b ? void 0 : b.level);
                                if ("story" === e.type) return e;D = e;
                                break
                            }
                        case "mistakes-review":
                            D = {
                                generatorIdentifiersOfRecentMistakes: I,
                                type: T.FF.MistakesReview
                            };
                            break;
                        case "placement-test":
                            D = {
                                type: T.FF.PlacementTest
                            };
                            break;
                        case "practice":
                            D = {
                                generatorIdentifiersOfRecentMistakes: g,
                                type: T.FF.GlobalPractice
                            };
                            break;
                        case "practice-hub":
                            if (!l) throw Error("Missing path information for practice hub session request.");
                            if ("words" === k.practiceType) {
                                D = (0, S.Br)(A);
                                break
                            }
                            D = (0, S.hz)({
                                dispatch: o,
                                includeListening: p,
                                includeSpeaking: v,
                                path: l,
                                practiceType: k.practiceType,
                                user: A
                            });
                            break;
                        case "preview":
                            D = {
                                lessonIndex: k.lesson ? parseInt(k.lesson, 10) : 0,
                                levelIndex: 0,
                                skillId: k.skillId,
                                type: T.FF.Lesson
                            };
                            break;
                        case "path-level":
                            if (!b) throw Error("Missing level information for V2 session request.");
                            if ("story" === b.level.type) {
                                const {
                                    mode: e,
                                    storyId: a
                                } = b.level.pathLevelClientData;
                                return B({
                                    crowns: t,
                                    mode: e.toUpperCase(),
                                    storyId: a
                                })
                            }
                            D = G({
                                alphabetsPathProgressKey: e,
                                debugLevelIndex: r ? parseInt(r, 10) : void 0,
                                flattenedPath: l,
                                fromLanguage: u,
                                generatorIdentifiersOfRecentMistakes: g,
                                isEarnbackSession: k.isEarnbackSession,
                                isExplanationSeen: _,
                                isRedoingPassedNode: P,
                                learningLanguage: y,
                                levelData: b,
                                pathExperiments: C,
                                sectionedPath: R,
                                skills: L
                            });
                            break;
                        case "placement":
                            if (!b) throw Error("Missing level information for placement session.");
                            if (!R) throw Error("Missing path information for placement session.");
                            D = V({
                                levelData: b,
                                sectionedPath: R
                            });
                            break;
                        case "story":
                            return B({
                                crowns: t,
                                mode: k.mode,
                                storyId: k.storyId
                            });
                        default:
                            throw (0, h.RJ)(k), Error("Unknown session type.")
                    }
                    const N = /^zh-(hant|hk|mo|tw)/.exec(navigator.language.toLowerCase()) ? "zt" : /^zh-(cn|hans|my|sg)/.exec(navigator.language.toLowerCase()) ? "zs" : void 0,
                        O = {};
                    return !s.length && n.length && (O.challengeIds = n, O.forceChallengeTypes = !0), !s.length && a.length && (O.challengeTypes = a, O.forceChallengeTypes = !0), !s.length && i && (O.skillId = i), {
                        challengeTypes: "duo_radio" === (null == b ? void 0 : b.level.type) ? c.fM : c.KT,
                        fromLanguage: u,
                        isFinalLevel: !1,
                        isV2: !0,
                        juicy: !0,
                        learningLanguage: y,
                        locale: N,
                        smartTipsVersion: m ? E.fH : void 0,
                        streakEarnbackLessonLength: "isEarnbackSession" in k && k.isEarnbackSession ? w.Av : void 0,
                        ...D,
                        ...O
                    }
                },
                G = ({
                    alphabetsPathProgressKey: e,
                    debugLevelIndex: t,
                    flattenedPath: a,
                    fromLanguage: s,
                    generatorIdentifiersOfRecentMistakes: n,
                    isEarnbackSession: r,
                    isExplanationSeen: i,
                    isRedoingPassedNode: o,
                    learningLanguage: l,
                    levelData: c,
                    pathExperiments: d,
                    sectionedPath: u,
                    skills: g
                }) => {
                    var p, m;
                    const v = c.level,
                        _ = (0, f.w1)(v),
                        S = "assigned" === (0, f.xV)(v);
                    let y;
                    if ((0, f.TH)(v) && !S && a) {
                        const {
                            skillIds: e
                        } = v.pathLevelClientData;
                        if (u && u.length > 0 && "locked" === u[(0, f.Kq)(c.unitIndex, u)].status) {
                            const t = (0, f.Kq)(c.unitIndex, u);
                            y = {
                                sectionIndex: t,
                                sectionType: u[t].type,
                                skillIds: e,
                                type: T.FF.SectionTest
                            }
                        } else y = {
                            skillIds: e,
                            type: T.FF.UnitTest
                        }
                    } else switch (v.type) {
                        case "adventures":
                            y = {
                                adventuresArchiveUrl: c.level.pathLevelClientData.adventuresEpisodeSummary.archiveUrl,
                                adventuresEpisodeId: c.level.pathLevelClientData.adventuresEpisodeSummary.id,
                                pathExperiments: d,
                                type: T.FF.Adventures
                            };
                            break;
                        case "alphabet_gate":
                        case "chest":
                        case "story":
                            throw Error(`Tried to create regular session params for unsupported level type: ${v.type}`);
                        case "alphabet":
                            {
                                const {
                                    alphabetId: t,
                                    alphabetSessionId: a,
                                    explanationUrl: s
                                } = v.pathLevelClientData;y = {
                                    alphabetId: t,
                                    alphabetSessionId: a,
                                    alphabetsPathProgressKey: e,
                                    showAlphabetTipSplash: null !== s,
                                    type: (0, f.Wc)((0, f.xV)(c.level)) ? T.FF.AlphabetPractice : T.FF.AlphabetLesson
                                };
                                break
                            }
                        case "duo_radio":
                            y = {
                                duoRadioEpisodeId: v.pathLevelClientData.duoRadioSummary.episode_id,
                                duoRadioSessionId: v.pathLevelClientData.duoRadioSummary.id,
                                pathExperiments: d,
                                type: T.FF.DuoRadio
                            };
                            break;
                        case "practice":
                            {
                                const {
                                    finishedSessions: e,
                                    hasLevelReview: t,
                                    pathLevelClientData: a,
                                    subtype: s,
                                    totalSessions: r
                                } = v,
                                {
                                    skillIds: i
                                } = a;y = {
                                    generatorIdentifiersOfRecentMistakes: n,
                                    lexemePracticeType: t && e === r - 1 ? "practice_level_review" : "practice_level",
                                    pathExperiments: d,
                                    skillIds: i,
                                    type: "unit_practice" === s ? T.FF.UnitPractice : T.FF.LexemePractice
                                };
                                break
                            }
                        case "skill":
                            {
                                const {
                                    skillId: e,
                                    crownLevelIndex: a
                                } = v.pathLevelClientData,
                                u = null != t ? t : a,
                                h = g[e],
                                _ = "custom_intro" === v.subtype,
                                E = "grammar" === v.subtype,
                                b = o && E,
                                I = (0, f.Eb)(v);y = (0, f.$)(v) ? {
                                    generatorIdentifiersOfRecentMistakes: n,
                                    levelIndex: u,
                                    pathExperiments: d,
                                    skillId: e,
                                    type: T.FF.LevelReview
                                } : !E && (o && !S || I || r) ? {
                                    levelIndex: u,
                                    pathExperiments: d,
                                    skillIds: [e],
                                    type: T.FF.LexemeSkillLevelPractice
                                } : {
                                    isCustomIntroSkill: _,
                                    isGrammarSkill: E,
                                    levelIndex: u,
                                    pathExperiments: d,
                                    showGrammarSkillSplash: q({
                                        hasExplanation: !!(null === (p = h.explanation) || void 0 === p ? void 0 : p.url),
                                        isExplanationSeen: i,
                                        isGrammarSkill: E,
                                        isRedoingGrammarSkill: b,
                                        pathLevelState: v.state
                                    }) || Q({
                                        fromLanguage: s,
                                        hasExplanation: !!(null === (m = h.explanation) || void 0 === m ? void 0 : m.url),
                                        isCustomIntroSkill: _,
                                        isExplanationSeen: i,
                                        learningLanguage: l,
                                        levelData: c
                                    }),
                                    skillId: e,
                                    type: T.FF.Lesson
                                };
                                break
                            }
                        case "unit_review":
                            {
                                const {
                                    skillIds: e
                                } = v.pathLevelClientData;
                                if ("passed" === v.state) throw Error("Tried to create session for passed unit_review level");y = {
                                    skillIds: e,
                                    type: T.FF.UnitReview
                                };
                                break
                            }
                        default:
                            throw (0, h.RJ)(v.type), Error(`Unrecognized level type: ${v.type}`)
                    }
                    return { ...y,
                        levelSessionIndex: _
                    }
                },
                V = ({
                    levelData: e,
                    sectionedPath: t
                }) => {
                    const {
                        skillIds: a
                    } = e.level.pathLevelClientData;
                    return {
                        sectionIndex: (0, f.Kq)(e.unitIndex, t),
                        skillIds: a,
                        type: T.FF.Placement
                    }
                },
                B = ({
                    crowns: e,
                    isLegendaryMode: t = !1,
                    mode: a,
                    storyId: s
                }) => ({
                    crowns: e,
                    debugShowAllChallenges: (0, p.gQ)("debugShowAllStoryChallenges"),
                    debugShowOnboarding: (0, p.gQ)("debugShowStoriesOnboarding") ? "newUser" : void 0,
                    illustrationFormat: "svg",
                    isDesktop: !0,
                    isLegendaryMode: t,
                    masterVersion: "true" === (0, p.ky)("latest"),
                    mode: a,
                    storyId: s,
                    supportedElements: (0, I.b5)().join(","),
                    type: "story"
                }),
                z = (e, t) => {
                    if (void 0 === t) throw Error("Tried to create legendary per node session params for undefined level");
                    if ("passed" !== t.state && void 0 === t.dailyRefreshInfo) throw Error("Tried to create legendary per node session params for non-passed node & not in Daily Refresh");
                    switch (t.type) {
                        case "adventures":
                        case "alphabet":
                        case "alphabet_gate":
                        case "chest":
                        case "duo_radio":
                        case "unit_review":
                            throw Error(`Tried to create legendary per node session params for unsupported level type: ${t.type}`);
                        case "practice":
                            {
                                const {
                                    skillIds: e
                                } = t.pathLevelClientData;
                                return {
                                    isFinalLevel: !0,
                                    skillIds: e,
                                    type: "unit_practice" === t.subtype ? T.FF.LegendaryUnitPractice : T.FF.LegendaryLexemePractice
                                }
                            }
                        case "skill":
                            {
                                const {
                                    skillId: e,
                                    crownLevelIndex: a
                                } = t.pathLevelClientData;
                                return {
                                    isFinalLevel: !0,
                                    levelIndex: a,
                                    skillId: e,
                                    type: T.FF.LegendaryLevel
                                }
                            }
                        case "story":
                            {
                                const {
                                    mode: a,
                                    storyId: s
                                } = t.pathLevelClientData;
                                return B({
                                    crowns: e,
                                    isLegendaryMode: !0,
                                    mode: a.toUpperCase(),
                                    storyId: s
                                })
                            }
                        default:
                            throw (0, h.RJ)(t.type), Error(`Unrecognized legendary per node level type: ${t.type}`)
                    }
                },
                Z = async ({
                    debugChallengeTypes: e,
                    debugChallenges: t,
                    debugGeneratorIds: n,
                    levelData: r,
                    session: i,
                    sessionParams: o
                }) => {
                    var l, c, d;
                    const u = t.length ? (0, p.gQ)("adaptiveChallenges") && "0" !== (0, p.ky)("adaptiveChallenges") ? "force" : "remove" : (0, p.gQ)("adaptiveChallenges") ? "0" === (0, p.ky)("adaptiveChallenges") ? "remove" : "force" : "preserve";
                    let g, m = "force" === u ? (await a.e(1711).then(a.t.bind(a, 40430, 19))).default : [];
                    switch (e.length && (m = m.filter((t => e.includes(t.type)))), t.length && (i.challenges = t), u) {
                        case "force":
                            i.adaptiveChallenges = m;
                            break;
                        case "preserve":
                            break;
                        case "remove":
                            i.adaptiveChallenges = void 0
                    }
                    if (n.length && (i.challenges = i.challenges.filter((e => {
                            var t;
                            const a = null === (t = e.challengeGeneratorIdentifier) || void 0 === t ? void 0 : t.generatorId;
                            return a && n.includes(a)
                        }))), e.length && (i.challenges.sort(((t, a) => e.indexOf(t.type) - e.indexOf(a.type))), null === (l = i.adaptiveChallenges) || void 0 === l || l.sort(((t, a) => e.indexOf(t.type) - e.indexOf(a.type)))), (0, p.gQ)("length")) {
                        const e = parseInt(null !== (c = (0, p.ky)("length")) && void 0 !== c ? c : "-1", 10);
                        e > 0 && (i.challenges = i.challenges.slice(0, o.isFinalLevel ? Math.max(2, e) : e))
                    }
                    if ((0, p.gQ)("debugCharacters"))
                        if ("0" === (0, p.ky)("debugCharacters")) i.challenges = i.challenges.map((e => e.type === T.Sm.Dialogue ? { ...e,
                            dialogue: e.dialogue.map((e => ({ ...e,
                                character: void 0
                            })))
                        } : { ...e,
                            character: void 0
                        }));
                        else {
                            const e = (await a.e(1711).then(a.t.bind(a, 88877, 19))).default;
                            i.challenges = i.challenges.map(((t, a) => ({ ...t,
                                character: e[a % e.length]
                            })))
                        }
                    if ([i.challenges, g] = s.uK(i.challenges, (e => (0, p.gQ)("sampleSession") ? e.type !== T.Sm.Speak || b.c : o.challengeTypes.includes(e.type))), g.length) {
                        const e = s.jj(s.jg(g, "type")).sort();
                        (0, _.vU)("Received unwanted challenge types", {
                            data: {
                                levelType: null === (d = null == r ? void 0 : r.level) || void 0 === d ? void 0 : d.type,
                                sessionType: i.type,
                                types: e
                            },
                            sample: .01
                        })
                    }
                },
                W = e => {
                    switch (e) {
                        case T.FF.Adventures:
                            return m.Q.Adventures;
                        case T.FF.AlphabetLesson:
                            return m.Q.AlphabetLesson;
                        case T.FF.AlphabetPractice:
                            return m.Q.AlphabetPractice;
                        case T.FF.DuoRadio:
                            return m.Q.DuoRadio;
                        case T.FF.GlobalPractice:
                            return m.Q.GlobalPractice;
                        case T.FF.Lesson:
                            return m.Q.Lesson;
                        case T.FF.MistakesReview:
                            return m.Q.MistakesReview;
                        case T.FF.PlacementTest:
                            return m.Q.PlacementTest;
                        case T.FF.SpeakingPractice:
                            return m.Q.SpeakingPractice;
                        case T.FF.Legendary:
                            return m.Q.Legendary;
                        case T.FF.LegendaryLevel:
                            return m.Q.LegendaryLevel;
                        case T.FF.LegendaryLexemePractice:
                            return m.Q.LegendaryLexemePractice;
                        case T.FF.LegendaryUnitPractice:
                            return m.Q.LegendaryUnitPractice;
                        case T.FF.LevelReview:
                            return m.Q.LevelReview;
                        case T.FF.LexemePractice:
                            return m.Q.LexemePractice;
                        case T.FF.LexemeSkillLevelPractice:
                            return m.Q.LexemeSkillLevelPractice;
                        case T.FF.ListeningPractice:
                            return m.Q.ListeningPractice;
                        case T.FF.Placement:
                            return m.Q.Placement;
                        case T.FF.SectionTest:
                            return m.Q.SectionTest;
                        case T.FF.SpecifiedMatchPractice:
                            return m.Q.SpecifiedMatchPractice;
                        case T.FF.Story:
                            return m.Q.Stories;
                        case T.FF.TargetPractice:
                            return m.Q.TargetPractice;
                        case T.FF.UnitPractice:
                            return m.Q.UnitPractice;
                        case T.FF.UnitReview:
                            return m.Q.UnitReview;
                        case T.FF.UnitRewind:
                            return m.Q.UnitRewind;
                        case T.FF.UnitTest:
                            return m.Q.UnitTest;
                        default:
                            return (0, h.RJ)(e), m.Q.Lesson
                    }
                },
                $ = e => e.type === T.FF.MistakesReview ? -e.challenges.filter((e => e.correct)).length : [T.FF.Lesson, T.FF.LexemePractice, T.FF.GlobalPractice, T.FF.LevelReview].includes(e.type) ? s.jj(e.challenges.filter((e => !e.correct)), !1, (e => e.id)).length : 0,
                j = e => s.jj(e.filter((e => !e.skipped && D().includes(e.type))), !1, (e => e.id)).length,
                q = ({
                    hasExplanation: e,
                    isExplanationSeen: t,
                    isGrammarSkill: a,
                    isRedoingGrammarSkill: s,
                    pathLevelState: n
                }) => a && e && !t && !(0, f.Wc)(n) && !s,
                Q = ({
                    fromLanguage: e,
                    hasExplanation: t,
                    isCustomIntroSkill: a,
                    isExplanationSeen: s,
                    learningLanguage: n,
                    levelData: r
                }) => a && "ja" === n && "en" === e && t && 0 === r.level.finishedSessions && r.unitIndex < 7 && !s,
                K = (e, t) => {
                    const a = Math.floor(e.length / t),
                        s = new Array(t),
                        n = e.length % t;
                    let r = t - 1,
                        i = 0;
                    for (let o = e.length - 1; o >= 0; o--) {
                        const l = e[o];
                        (s[r] = s[r] || []).unshift(l.id), i++, i >= a + (n > 0 && t - r >= n ? 1 : 0) && (r--, i = 0)
                    }
                    return s
                },
                Y = e => e.type === T.Sm.Match,
                J = e => [T.Sm.ExtendedListenMatch, T.Sm.ExtendedMatch].includes(e.type),
                X = (e, t) => {
                    const a = e.filter(Y),
                        n = a[0],
                        r = s.TV(a.slice(1));
                    if (a.length < 6) throw Error("Not enough Match challenges provided to create words practice session");
                    const i = [n],
                        o = n.pairs,
                        l = s.TV(s.jj(r.map((e => e.pairs)).flat(), !1, s.Cb("fromToken"))),
                        c = (() => {
                            if (!t || !n.pairs[0].tts) return [];
                            const e = s.jj(o.concat(l.slice(0, S.O0)), !1, s.Cb("fromToken"));
                            return [r[0]].map((t => ({ ...t,
                                pairs: e.map((e => {
                                    var t;
                                    return {
                                        translation: e.fromToken,
                                        tts: null !== (t = e.tts) && void 0 !== t ? t : ""
                                    }
                                })),
                                type: T.Sm.ExtendedListenMatch
                            })))
                        })(),
                        d = (() => {
                            const e = s.jj(o.concat(l.slice(0, S.GU)), !1, s.Cb("fromToken"));
                            return [r[1]].map((t => ({ ...t,
                                pairs: e,
                                type: T.Sm.ExtendedMatch
                            })))
                        })();
                    return {
                        challengeIdSections: [i.map((e => e.id)), ...c.length > 0 ? [c.map((e => e.id))] : [], d.map((e => e.id))],
                        challenges: [i, c, d].flat()
                    }
                },
                ee = e => {
                    var t, a;
                    return {
                        activity_uuid: e.session.trackingProperties.activity_uuid,
                        skill_id: e.session.skillId,
                        skill_name: e.session.trackingProperties.skill_name,
                        skill_tree_id: e.session.trackingProperties.skill_tree_id,
                        type: "grammar" === (null === (t = e.session.sessionContext) || void 0 === t ? void 0 : t.contextType) ? "strength_practice" : W(e.session.type),
                        unit_index: null === (a = e.levelData) || void 0 === a ? void 0 : a.unitIndex
                    }
                }
        },
        80820: (e, t, a) => {
            "use strict";
            a.d(t, {
                _x: () => m,
                fB: () => p,
                gL: () => _,
                rb: () => E,
                tr: () => f,
                vS: () => v,
                yI: () => S
            });
            var s = a(80715),
                n = a(42659),
                r = a(93540),
                i = a(17135),
                o = a(68903),
                l = a(60752),
                c = a(58576),
                d = a(23275);
            const u = (0, i.dz)({
                    days: 30
                }),
                g = {},
                p = async (e, t, a, s) => {
                    const n = t.then((async t => {
                        const n = {
                            prefetchTimestamp: a,
                            session: t,
                            stale: !1
                        };
                        try {
                            const t = await (0, l.b)();
                            return await t.put("prefetchedSessions", n, e), s({
                                key: e,
                                type: "sessionCache/ADD"
                            }), { ...n,
                                cacheType: "fresh"
                            }
                        } catch (e) {
                            return (0, c.Kp)("Unable to store prefetched session", {
                                ex: e
                            }), { ...n,
                                cacheType: "error"
                            }
                        } finally {
                            delete g[e]
                        }
                    }));
                    return g[e] = n, n
                },
                m = async e => {
                    const t = e.dispatch.bind(e),
                        a = (0, r.cb)(e.getState()),
                        s = (0, n.Rv)(e.getState()),
                        o = (0, n.iH)(e.getState()),
                        c = (0, r.HF)(e.getState()),
                        g = await (0, l.b)();
                    let p = await g.transaction("prefetchedSessions").store.openCursor();
                    const m = e => {
                            if (!c) throw Error("Cannot determine level position without path");
                            if (!a) return !0;
                            const t = (0, d.m8)(c, (t => t.id === e));
                            return !t || (0, d.Nk)(t, a) < 0
                        },
                        v = [];
                    for (; p;)((0, i.pY)(1e3 * (p.value.prefetchTimestamp + u)) || p.value.session.fromLanguage !== s || p.value.session.learningLanguage !== o || m(y(p.key).pathLevel.id)) && v.push(p.key), p = await p.continue();
                    await Promise.all(v.map((e => h(e, t))))
                },
                h = async (e, t) => {
                    const a = await (0, l.b)();
                    await a.delete("prefetchedSessions", e), t({
                        key: e,
                        type: "sessionCache/REMOVE"
                    })
                },
                v = async e => {
                    const t = g[e];
                    if (void 0 !== t) return t;
                    const a = await (0, l.b)(),
                        s = await a.get("prefetchedSessions", e);
                    return s ? { ...s,
                        cacheType: "existing"
                    } : void 0
                },
                _ = ({
                    currentStoryMode: e,
                    generatorIdsOfRecentMistakes: t,
                    includeSmartTips: a,
                    isExplanationSeen: s,
                    pathLevel: n
                }) => JSON.stringify({
                    currentStoryMode: e,
                    generatorIdsOfRecentMistakes: t,
                    includeSmartTips: a,
                    isExplanationSeen: s,
                    pathLevelFinishedSessions: n.finishedSessions,
                    pathLevelId: n.id,
                    pathLevelState: n.state
                }),
                f = e => "active" === e.state && (0, o.gB)(e.type, ["practice", "skill", "story", "unit_review", "alphabet"]),
                S = async e => {
                    const t = await (0, l.b)(),
                        a = await t.get("prefetchedSessions", e);
                    a && await t.put("prefetchedSessions", { ...a,
                        stale: !0
                    }, e)
                },
                y = e => {
                    const {
                        currentStoryMode: t,
                        generatorIdsOfRecentMistakes: a,
                        includeSmartTips: s,
                        isExplanationSeen: n,
                        pathLevelFinishedSessions: r,
                        pathLevelId: i,
                        pathLevelState: o
                    } = JSON.parse(e);
                    return {
                        currentStoryMode: t,
                        generatorIdsOfRecentMistakes: a,
                        includeSmartTips: s,
                        isExplanationSeen: n,
                        pathLevel: {
                            finishedSessions: r,
                            id: i,
                            state: o
                        }
                    }
                },
                E = async e => {
                    const t = e.dispatch.bind(e),
                        a = e.getState().sessionCache.keys,
                        n = await (0, l.b)(),
                        r = await n.getAllKeys("prefetchedSessions");
                    (0, s.dC)((() => {
                        const e = r.filter((e => !a.includes(e)));
                        for (const a of e) t({
                            key: a,
                            type: "sessionCache/ADD"
                        });
                        const s = a.filter((e => !r.includes(e)));
                        for (const e of s) t({
                            key: e,
                            type: "sessionCache/REMOVE"
                        })
                    }))
                }
        },
        51551: (e, t, a) => {
            "use strict";
            a.d(t, {
                Fk: () => d,
                K: () => E,
                N4: () => m,
                PR: () => h,
                RB: () => _,
                SG: () => c,
                Wp: () => y,
                cy: () => S,
                sz: () => f
            });
            var s = a(17135),
                n = a(64115),
                r = a(81149),
                i = a(30839),
                o = a(6947),
                l = a(97106);
            const c = 2,
                d = 200,
                u = "web_streak_wager_session_end";
            var g;
            ! function(e) {
                e[e.SUNDAY = 0] = "SUNDAY", e[e.MONDAY = 1] = "MONDAY", e[e.TUESDAY = 2] = "TUESDAY", e[e.WEDNESDAY = 3] = "WEDNESDAY", e[e.THURSDAY = 4] = "THURSDAY", e[e.FRIDAY = 5] = "FRIDAY", e[e.SATURDAY = 6] = "SATURDAY"
            }(g || (g = {}));
            const p = (e, t) => `duo.experiments.${t}.last_shown_${e}`,
                m = e => {
                    ((e, t) => {
                        const a = p(e, t),
                            n = (0, s.Zo)();
                        (0, i.LS)(a, n)
                    })(e, u)
                },
                h = (e, t, a) => {
                    var n, r;
                    const o = void 0 === e.inventory.gem_wager,
                        c = e.shop.misc.gem_wager,
                        d = t.gemsConfig.gems,
                        g = !!c && c.price <= d,
                        {
                            timezoneOffset: m,
                            xpGains: h,
                            xpGoal: v
                        } = t,
                        _ = (0, l.ab)(m, h) + a >= v,
                        f = ((e, t) => {
                            const a = p(e, t),
                                n = (0, i.rV)(a);
                            return "number" == typeof n && (0, s.zk)((0, s.zM)(n))
                        })(t.id, u);
                    return (null !== (r = null === (n = t.streakData.currentStreak) || void 0 === n ? void 0 : n.length) && void 0 !== r ? r : 0) < 7 && o && !!c && g && _ && !f
                },
                v = (e, t = 1) => {
                    const a = e.shop.misc.streak_freeze,
                        s = a ? e.inventory[a.id] : void 0;
                    return !!s && s.quantity >= t
                },
                _ = (e, t, a = !1) => {
                    var s, r;
                    return !v(e, c) && (!!(0, n.gQ)("dailyGoalStreakFreeze") || (null !== (r = null === (s = t.streakData.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== r ? r : 0) >= 2 && (a || Math.random() < .75))
                },
                f = (e, t) => !v(e) && 1 === t,
                S = e => e.shop.misc.final_level_attempt,
                y = (e, t, a) => {
                    const n = e.shop.misc.duo_streak_freeze;
                    if (!(t < 3 || void 0 !== e.inventory.duo_streak_freeze || void 0 === (null == n ? void 0 : n.lastUsedDate) || (0, s.v4)(a, -7) < n.lastUsedDate) && "control" !== (0, r.j6)("retention_web_streak_freeze_from_duo", "session_end")) return n
                },
                E = (e, t) => {
                    var a, s, n;
                    if (!(0, o.pS)(e) || !(null === (a = t.shop.misc.streak_freeze) || void 0 === a ? void 0 : a.id) || v(t, c)) return 0;
                    const r = c - (null !== (n = null === (s = t.inventory.streak_freeze) || void 0 === s ? void 0 : s.quantity) && void 0 !== n ? n : 0);
                    return Math.max(r, 0)
                }
        },
        6986: (e, t, a) => {
            "use strict";
            a.d(t, {
                MG: () => u,
                gT: () => d,
                oV: () => o,
                ub: () => i,
                vK: () => l,
                yI: () => g
            });
            var s = a(97544),
                n = a(8654),
                r = a(30839);
            const i = () => (0, r.cl)(r.Qt.LastLogin),
                o = (e, t) => {
                    const a = c(e, t);
                    (0, r.LS)(r.Qt.LastLogin, a)
                },
                l = e => {
                    const t = u();
                    t && (t.picture = e, (0, r.LS)(r.Qt.LastLogin, t))
                },
                c = (e, t) => t.email ? {
                    email: t.email,
                    hasFacebook: "social" === e ? !!t.facebookId : void 0,
                    hasGoogle: "social" === e ? !!t.googleId : void 0,
                    name: "email" === e && t.email ? t.email : t.name,
                    picture: t.picture,
                    type: e
                } : null,
                d = async e => {
                    var t, a;
                    const n = await s.Vi.userSearchByEmail(e),
                        r = n && n.length > 0 ? n[0] : null;
                    return r ? {
                        hasFacebook: !!r.hasFacebookId,
                        hasGoogle: !!r.hasGoogleId,
                        name: null !== (a = null !== (t = r.name) && void 0 !== t ? t : r.username) && void 0 !== a ? a : "",
                        picture: r.picture
                    } : null
                },
                u = () => (0, r.rV)(r.Qt.LastLogin),
                g = (e, t, a) => a && !t && (0, n.k_)(e)
        },
        59096: (e, t, a) => {
            "use strict";
            a.d(t, {
                C8: () => y,
                P9: () => E,
                RZ: () => R,
                U: () => m,
                b0: () => S,
                cz: () => I,
                fH: () => p,
                pT: () => w,
                qj: () => b,
                r8: () => _,
                u5: () => C,
                vT: () => f
            });
            var s = a(80254),
                n = a(97544),
                r = a(83719),
                i = a(18728),
                o = a(17135),
                l = a(68903),
                c = a(43633),
                d = a(58576),
                u = a(79465),
                g = a(11811);
            const p = 2,
                m = 86400,
                h = [g.Sm.CompleteReverseTranslation, g.Sm.Form, g.Sm.GapFill, g.Sm.Translate],
                v = (0, i.md)("smartTip", (e => n.s3.getSmartTip(e))),
                _ = e => w(e.identifier, e.trigger.smart_tip.variables),
                f = e => {
                    const t = v.getAtom(e);
                    return (0, c.h0)().get(t).value
                },
                S = e => ((0, i.Lv)(v, e.smartTips.map((e => e.url))), null),
                y = (e, t, a, n, i, l, c) => {
                    const {
                        session: {
                            type: p
                        },
                        sessionParams: {
                            levelIndex: m,
                            skillId: v
                        },
                        shownSmartTipIds: S
                    } = i;
                    if (!h.includes(t.type)) return;
                    if (!n || 0 === n.length) return;
                    if (e && [r.Oj.MissingWord, r.Oj.WrongWord].includes(e)) return void(0, u.track)("smart_tips_rules_fired", {
                        blame: e,
                        challenge_type: t.type,
                        did_match_any_rule: !1,
                        fired_rules: "[]",
                        has_content: !0,
                        number_of_matched_rules: 0,
                        probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                        type: p
                    });
                    const y = n,
                        E = y.map((e => {
                            var t;
                            const s = null === (t = a.smartTips) || void 0 === t ? void 0 : t.find((t => t.smartTipId === e.smart_tip.id)),
                                n = s ? f(s.url) : void 0;
                            if (n) return { ...n,
                                correctSolution: w(n.correctSolution, e.smart_tip.variables),
                                trigger: e
                            };
                            (0, u.track)("smart_tip_failure", {
                                reason: "no_content_was_fetched",
                                rule_id: e.smart_tip.id
                            })
                        })).filter((e => void 0 !== e)).filter((e => k(e)));
                    if ((0, u.track)("smart_tips_rules_fired", {
                            blame: e,
                            challenge_type: t.type,
                            did_match_any_rule: y.length > 0,
                            fired_rules: JSON.stringify(y.map((e => e.smart_tip.id))),
                            has_content: E.length > 0,
                            number_of_matched_rules: y.length,
                            probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                            type: p
                        }), 0 === E.length || S.length > 3 || void 0 === m || void 0 === v) return;
                    const b = l[v].row,
                        I = E.filter((e => !S.includes(e.identifier))).filter((e => {
                            var t, a;
                            return e.policy.allowedSkillLevels.includes(m) && b >= (null !== (t = e.policy.earliestRow) && void 0 !== t ? t : 0) && b <= (null !== (a = e.policy.latestRow) && void 0 !== a ? a : Number.MAX_VALUE)
                        })).filter((e => {
                            var t;
                            const a = _(e);
                            return !(null === (t = c.recentlySeenSmartTips) || void 0 === t ? void 0 : t[a]) || c.recentlySeenSmartTips[a] > (0, o.Zo)()
                        }));
                    if (0 === I.length) return;
                    const T = I[0],
                        C = T.elements.filter((e => "challenge" === e.type));
                    if (1 !== C.length) return void(0, d.vU)("Smart Tip doesn't have exactly one challenge.", {
                        data: {
                            smartTipId: T.identifier
                        }
                    });
                    const R = C[0].element.options.map((e => w(e.text, T.trigger.smart_tip.variables)));
                    if (2 === R.length)
                        if (R.length === s.jj(R).length) {
                            if (T) return (0, u.track)("smart_tip_will_show", {
                                blame: e,
                                challenge_type: t.type,
                                for_rule_with_id: T.identifier,
                                level_index: m,
                                method: "graph_based",
                                num_tips_shown_so_far: S.length,
                                probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                                smart_tip_id: T.identifier,
                                smart_tip_name: T.name,
                                tree_level: v ? l[v].row : void 0,
                                type: p
                            }), T
                        } else(0, d.vU)("Smart Tip challenge options are not unique.", {
                            data: {
                                challengeId: t.id,
                                smartTipId: T.identifier
                            }
                        });
                    else(0, d.vU)("Smart Tip challenge has incorrect number of options.", {
                        data: {
                            numOptions: R.length,
                            smartTipId: T.identifier
                        }
                    })
                },
                E = e => {
                    const t = e.elements.filter((e => "challenge" === e.type));
                    if (1 !== t.length) return (0, d.vU)("Smart Tip that doesn't have exactly one challenge", {
                        data: {
                            smartTipId: e.identifier
                        }
                    }), 0;
                    const a = t[0].element.options.findIndex((e => e.isCorrect));
                    return -1 === a ? ((0, d.vU)("Smart Tip that doesn't have a correct answer", {
                        data: {
                            smartTipId: e.identifier
                        }
                    }), 0) : a
                },
                b = new RegExp("({{ .*? }})", "g"),
                I = e => `{{ ${e.name} }}`,
                w = (e, t) => {
                    if (void 0 === t) return e;
                    let a = e;
                    return t.forEach((e => {
                        a = a.replace(new RegExp(I(e), "g"), e.value)
                    })), a
                },
                k = e => {
                    const t = e.trigger.smart_tip.variables.map((e => I(e))),
                        a = [e.correctSolution, ...e.elements.map((e => T(e))).flat()].every((e => {
                            var a;
                            return (null !== (a = e.match(b)) && void 0 !== a ? a : []).every((e => t.includes(e)))
                        }));
                    return a || (0, u.track)("smart_tip_failure", {
                        reason: "template_filling_failed",
                        rule_id: e.identifier
                    }), a
                },
                T = e => {
                    const t = e => {
                        var t;
                        return [e.text.styledString.text, ...e.subtext ? [null === (t = e.subtext) || void 0 === t ? void 0 : t.styledString.text] : []]
                    };
                    switch (e.type) {
                        case "audioSample":
                            return [e.element.sampleText.text, e.element.description.styledString.text];
                        case "captionedImage":
                            return [e.element.text.styledString.text];
                        case "challenge":
                            return e.element.options.map((e => e.text));
                        case "dialogue":
                            return e.element.phrases.flatMap((e => t(e)));
                        case "example":
                            return t(e.element);
                        case "exampleCaptionedImage":
                            return e.element.examples.map(t).flat();
                        case "expandable":
                            return e.element.elements.map(T).flat();
                        case "pathSectionsCefrTable":
                        case "lineBreak":
                        case "verticalSpace":
                            return [];
                        case "table":
                            return e.element.cells.map((e => e.map((e => e.styledString.text)))).flat();
                        case "text":
                            return [e.element.styledString.text];
                        default:
                            throw (0, l.RJ)(e), Error(`Unexpected explanation item type "${e.type}"`)
                    }
                },
                C = (e, t) => {
                    var a, s;
                    return null === (s = null === (a = e.options.find((({}, e) => t === e))) || void 0 === a ? void 0 : a.smartTips) || void 0 === s ? void 0 : s.map((e => ({
                        smart_tip: e
                    })))
                },
                R = (e, t) => {
                    switch (e) {
                        case g.FF.LexemeSkillLevelPractice:
                            return !0;
                        case g.FF.GlobalPractice:
                        case g.FF.Lesson:
                        case g.FF.LexemePractice:
                        case g.FF.MistakesReview:
                        case g.FF.UnitReview:
                            return !t.isFinalLevel;
                        case g.FF.Adventures:
                        case g.FF.AlphabetLesson:
                        case g.FF.AlphabetPractice:
                        case g.FF.DuoRadio:
                        case g.FF.LevelReview:
                        case g.FF.Legendary:
                        case g.FF.LegendaryLevel:
                        case g.FF.LegendaryLexemePractice:
                        case g.FF.LegendaryUnitPractice:
                        case g.FF.ListeningPractice:
                        case g.FF.Placement:
                        case g.FF.PlacementTest:
                        case g.FF.SectionTest:
                        case g.FF.SpeakingPractice:
                        case g.FF.SpecifiedMatchPractice:
                        case g.FF.Story:
                        case g.FF.TargetPractice:
                        case g.FF.UnitPractice:
                        case g.FF.UnitTest:
                        case g.FF.UnitRewind:
                            return !1;
                        default:
                            return (0, l.RJ)(e), void(0, d.vU)("Received invalid session type", {
                                data: e
                            })
                    }
                }
        },
        419: (e, t, a) => {
            "use strict";
            a.d(t, {
                Q: () => s
            });
            const s = e => {
                const t = {
                        link: "https://www.facebook.com/duolingo"
                    },
                    a = {
                        link: "https://www.instagram.com/duolingo"
                    },
                    s = {
                        link: "https://www.tiktok.com/@duolingo"
                    },
                    n = {
                        link: "https://twitter.com/duolingo"
                    };
                switch (e) {
                    case "de":
                        return {
                            facebook: {
                                link: "https://www.facebook.com/DuolingoDeutschland"
                            },
                            instagram: {
                                link: "https://www.instagram.com/duolingodeutschland/"
                            },
                            tiktok: s,
                            twitter: n
                        };
                    case "es":
                        return {
                            facebook: {
                                link: "https://www.facebook.com/duolingoespanol"
                            },
                            instagram: {
                                link: "https://www.instagram.com/duolingoespanol/"
                            },
                            tiktok: s,
                            twitter: {
                                link: "https://twitter.com/duolingoespanol"
                            }
                        };
                    case "fr":
                        return {
                            facebook: {
                                link: "https://www.facebook.com/duolingofrance"
                            },
                            instagram: {
                                link: "https://www.instagram.com/duolingofrance"
                            },
                            tiktok: s,
                            twitter: {
                                link: "https://twitter.com/duolingofrance"
                            }
                        };
                    case "hi":
                        return {
                            facebook: {
                                link: "https://www.facebook.com/Duolingo-India-108456034999544"
                            },
                            instagram: {
                                link: "https://www.instagram.com/duolingo_india/"
                            },
                            tiktok: s,
                            twitter: {
                                link: "https://twitter.com/duolingoindia"
                            }
                        };
                    case "ja":
                        return {
                            facebook: t,
                            instagram: a,
                            tiktok: s,
                            twitter: {
                                link: "https://twitter.com/Duolingo_Japan"
                            }
                        };
                    case "pt":
                        return {
                            facebook: {
                                link: "https://www.facebook.com/duolingobrasil"
                            },
                            instagram: {
                                link: "https://www.instagram.com/duolingobrasil"
                            },
                            tiktok: {
                                link: "https://www.tiktok.com/@duolingobrasil"
                            },
                            twitter: {
                                link: "https://twitter.com/duolingobrasil"
                            }
                        };
                    default:
                        return {
                            facebook: t,
                            instagram: a,
                            tiktok: s,
                            twitter: n
                        }
                }
            }
        },
        92209: (e, t, a) => {
            "use strict";
            a.d(t, {
                B: () => s,
                z: () => n
            });
            const s = 8,
                n = 24
        },
        68564: (e, t, a) => {
            "use strict";
            a.d(t, {
                c: () => n
            });
            var s = a(74597);
            const n = !!window.webkitSpeechRecognition && (s.Z.chrome || s.Z.edge)
        },
        14437: (e, t, a) => {
            "use strict";
            a.d(t, {
                r: () => n
            });
            const s = (0, a(73573).V)((e => JSON.stringify(e, (({}, e) => Array.isArray(e) || "object" != typeof e || null === e ? e : Object.keys(e).sort().reduce(((t, a) => (t[a] = e[a], t)), {}))))),
                n = e => {
                    switch (typeof e) {
                        case "boolean":
                        case "number":
                        case "string":
                            return JSON.stringify(e);
                        case "undefined":
                            return "undefined";
                        case "object":
                            return null === e ? "null" : s(e);
                        default:
                            throw Error("Unhandled type " + typeof e)
                    }
                }
        },
        30839: (e, t, a) => {
            "use strict";
            a.d(t, {
                Qt: () => s,
                pn: () => d,
                rV: () => u,
                No: () => p,
                cl: () => m,
                HJ: () => h,
                LS: () => v
            });
            var s, n = a(80231),
                r = a(58576),
                i = a(79465);
            ! function(e) {
                e.REDUX_AgeRestrictedLeaderboardsIntro = "duo.ageRestrictedLeaderboards", e.REDUX_AvatarsIntro = "duo.avatarsIntro", e.REDUX_DailyQuests = "duo.dailyQuests", e.REDUX_DarkMode = "duo.darkMode", e.REDUX_FriendsQuestNextStart = "duo.friendsQuestNextStart", e.REDUX_LastSeenMonthlyChallengeId = "duo.lastSeenMonthlyChallengeId", e.ArchSampleState = "duo.archSample.state", e.ArchSampleBackendNumberPreferences = "duo.archSample.backend.numberPreferences", e.BrowserSessionDebugFlags = "duo.sessionDebugFlags", e.DebugExperimentOverrides = "duo.experimentOverrides", e.DebugFlags = "duo.persistentDebugFlags", e.DisableBigRedButton = "duo.disableBrb", e.GradingConfig = "duo.clientSideGradingConfig", e.GradingConfigTimestamp = "duo.clientSideGradingConfig.timestamp", e.InviteCode = "duo.inviteCode", e.LanguageTokens = "duo.languageTokens", e.LastAppCrashes = "duo.lastAppCrashes", e.LastLogin = "duo.lastLogin", e.LoggedOutExperiments = "duo.loggedOutExperiments", e.SentryThrottling = "duo.sentryThrottling", e.State = "duo.state"
            }(s || (s = {}));
            let o = !1;
            const l = (() => {
                const e = new Map;
                return {
                    clear: () => e.clear(),
                    getItem: t => {
                        var a;
                        return null !== (a = e.get(t)) && void 0 !== a ? a : null
                    },
                    key: t => Array.from(e.keys())[t],
                    get length() {
                        return e.size
                    },
                    removeItem: t => e.delete(t),
                    setItem: (t, a) => e.set(t, a)
                }
            })();
            let c = !1;
            const d = async (e, t) => {
                    const a = u(e, t);
                    if ("string" == typeof a && n.DS.isValid(a)) {
                        const e = n.DS.toUint8Array(a);
                        if ((e => e.byteLength >= 10 && 31 === e[0] && 139 === e[1])(e) && "DecompressionStream" in window) return (async e => {
                            const t = new Blob([e]).stream().pipeThrough(new DecompressionStream("gzip"));
                            return new Response(t).json()
                        })(e)
                    }
                    return a
                },
                u = (e, t) => {
                    try {
                        const a = g(t).getItem(e);
                        if (a) return JSON.parse(a)
                    } catch (e) {
                        (0, r.vU)("Failed to retrieve item from storage", {
                            ex: e
                        })
                    }
                },
                g = e => (null == e ? void 0 : e.useSessionStorage) ? sessionStorage : localStorage || (c || ((0, r.um)("localStorage unavailable. Falling back to memoryStorage."), c = !0), l),
                p = (e, t) => {
                    try {
                        return e in g(t)
                    } catch {
                        return !1
                    }
                },
                m = (e, t) => {
                    try {
                        g(t).removeItem(e)
                    } catch {}
                },
                h = async (e, t, a) => {
                    if ("CompressionStream" in window) {
                        const s = n.DS.fromUint8Array(new Uint8Array(await (async e => {
                            const t = new Blob([JSON.stringify(e)]).stream().pipeThrough(new CompressionStream("gzip"));
                            return new Response(t).arrayBuffer()
                        })(t)));
                        v(e, s, a)
                    } else v(e, t, a)
                },
                v = (e, t, a) => {
                    const s = JSON.stringify(t);
                    try {
                        g(a).setItem(e, s)
                    } catch (t) {
                        let l;
                        const c = (null == a ? void 0 : a.useSessionStorage) ? "session" : "local";
                        try {
                            n = g(), l = Object.entries(n).map((([e, t]) => ({
                                key: e,
                                size: t.length
                            })))
                        } catch {
                            l = `error accessing ${c}Storage`
                        }(0, r.Kp)(`Failed to set ${c}Storage item`, {
                            data: {
                                key: e,
                                keySizes: l,
                                newItemSize: s.length
                            },
                            ex: t,
                            once: !0,
                            sample: .001
                        }), o || ((0, i.track)("browser_storage_full", {
                            browser_storage_type: c
                        }), o = !0)
                    }
                    var n
                }
        },
        18804: (e, t, a) => {
            "use strict";
            a.d(t, {
                CC: () => w,
                Fx: () => I,
                Gl: () => _,
                globalDispatch: () => f,
                globalGetState: () => S,
                tX: () => b,
                xC: () => k
            });
            var s = a(80715),
                n = a(45106),
                r = a(35870),
                i = a(99369),
                o = a(80254),
                l = a(9990),
                c = a(42659),
                d = a(54174),
                u = a(17135),
                g = a(64115),
                p = a(58729),
                m = a(58576),
                h = a(30839);
            const v = ["achievementsV3", "brb", "browserSettings", "characters", "config", "courseHistories", "courses", "friends", "goals", "items", "notifications", "paymentMethods", "sessionCache", "skills", "student", "subscriptions", "uiPersisted", "user", "heartsState"],
                _ = () => (0, i.from)({}),
                f = e => null == y ? void 0 : y.dispatch(e),
                S = () => null == y ? void 0 : y.getState();
            let y;
            const E = (e, t, a, s = ((e, t) => e === t)) => {
                    let n;
                    const r = () => {
                            const r = t(e.getState());
                            s(n, r) || a(r), n = r
                        },
                        i = e.subscribe(r);
                    return r(), i
                },
                b = () => (0, s.I0)(),
                I = (0, s.gR)(),
                w = (0, s.fw)(),
                k = ({
                    persister: e,
                    rootReducer: t
                }) => {
                    const a = (0, g.Au)() && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || n.qC,
                        s = (0, n.MT)(t, e.get(), a((0, n.md)(r.Z, (e => t => a => {
                            const s = e.getState(),
                                n = (0, u.Ux)();
                            let r, i;
                            try {
                                r = t(a)
                            } catch (e) {
                                i = e
                            }
                            if ((0, p.cj)(s, a, e.getState(), {
                                    duration: (0, u.Ux)().getTime() - n.getTime(),
                                    timestamp: n
                                }), i) throw i;
                            return r
                        })))),
                        i = (0, c.dY)(s.getState());
                    return void 0 !== i && (s.dispatch((0, l.AO)(i)), s.dispatch((0, l.LQ)(i)), s.dispatch((0, l.iU)(i))), E(s, (e => o.ei(e, v)), (t => e.set((() => t))), ((e, t) => void 0 !== e && o.BD(e, t))), E(s, d.d, (e => (0, m.yB)(e))), E(s, c.np, (e => {
                        const t = e.experiments ? Object.fromEntries(o.XP(e.experiments).filter((t => e.experiments[t].treated)).map((t => [t, e.experiments[t].condition]))) : void 0;
                        (0, m.av)(e, t)
                    })), E(s, (e => [(0, c.dY)(e), e.browserSettings.darkMode]), (([e, t]) => {
                        e && (0, h.LS)(h.Qt.REDUX_DarkMode, { ...(0, h.rV)(h.Qt.REDUX_DarkMode),
                            [e]: t
                        })
                    }), o.Xy), E(s, (e => [(0, c.dY)(e), e.goals.lastSeenMonthlyChallengeId]), (([e, t]) => {
                        e && t && (0, h.LS)(h.Qt.REDUX_LastSeenMonthlyChallengeId, { ...(0, h.rV)(h.Qt.REDUX_LastSeenMonthlyChallengeId),
                            [e]: t
                        })
                    }), o.Xy), E(s, (e => [(0, c.dY)(e), e.ui.canShowAgeRestrictedLeaderboardsIntro]), (([e, t]) => {
                        e && (0, h.LS)(h.Qt.REDUX_AgeRestrictedLeaderboardsIntro, { ...(0, h.rV)(h.Qt.REDUX_AgeRestrictedLeaderboardsIntro),
                            [e]: t
                        })
                    }), o.Xy), E(s, (e => [(0, c.dY)(e), e.avatars.canShowAvatarsIntro]), (([e, t]) => {
                        e && (0, h.LS)(h.Qt.REDUX_AvatarsIntro, { ...(0, h.rV)(h.Qt.REDUX_AvatarsIntro),
                            [e]: t
                        })
                    }), o.Xy), E(s, (e => [(0, c.dY)(e), e.goals.lastSeenNextFriendsQuestStart]), (([e, t]) => {
                        e && 0 !== t && (0, h.LS)(h.Qt.REDUX_FriendsQuestNextStart, { ...(0, h.rV)(h.Qt.REDUX_FriendsQuestNextStart),
                            [e]: t
                        })
                    }), o.Xy), E(s, (e => [(0, c.dY)(e), {
                        coreQuest: e.goals.coreQuest,
                        dailyQuest: e.goals.dailyQuest,
                        hardQuest: e.goals.hardQuest,
                        lastUpdated: e.goals.lastUpdated
                    }]), (([e, {
                        coreQuest: t,
                        dailyQuest: a,
                        hardQuest: s,
                        lastUpdated: n
                    }]) => {
                        [t, a, s, n, e].some((e => void 0 === e)) || (0, h.LS)(h.Qt.REDUX_DailyQuests, { ...(0, h.rV)(h.Qt.REDUX_DailyQuests),
                            [e]: {
                                coreQuest: t,
                                dailyQuest: a,
                                hardQuest: s,
                                lastUpdated: n
                            }
                        })
                    }), o.Xy), y = s, s
                }
        },
        8718: (e, t, a) => {
            "use strict";
            a.d(t, {
                Au: () => E,
                BT: () => C,
                Bc: () => A,
                C7: () => T,
                E$: () => N,
                HD: () => v,
                IG: () => R,
                JW: () => f,
                P3: () => u,
                WF: () => S,
                Xq: () => L,
                YL: () => h,
                _L: () => g,
                aJ: () => k,
                dM: () => D,
                e: () => I,
                f1: () => y,
                j0: () => l,
                sB: () => _,
                yy: () => w,
                z$: () => p,
                z_: () => b
            });
            var s = a(80254),
                n = a(64115),
                r = a(68903),
                i = a(93746),
                o = a(58576);
            const l = 5,
                c = ["ARRANGE", "SELECT_PHRASE", "TYPE_TEXT", "SUBHEADING", "HINT_ONBOARDING"],
                d = ["ARRANGE", "FREEFORM_WRITING", "MATCH", "MULTIPLE_CHOICE", "POINT_TO_PHRASE", "SELECT_PHRASE", "TYPE_TEXT"],
                u = e => void 0 !== e && d.includes(e.type),
                g = e => {
                    if (!u(e)) return !1;
                    switch (e.type) {
                        case "ARRANGE":
                        case "POINT_TO_PHRASE":
                        case "SELECT_PHRASE":
                        case "TYPE_TEXT":
                            return !0;
                        case "MULTIPLE_CHOICE":
                            return !e.question;
                        case "MATCH":
                        case "FREEFORM_WRITING":
                            return !1;
                        default:
                            return (0, r.RJ)(e), !1
                    }
                },
                p = e => void 0 !== e && c.includes(e.type) || (e => "MULTIPLE_CHOICE" === (null == e ? void 0 : e.type) && void 0 === e.question)(e),
                m = ["POINT_TO_PHRASE", "MULTIPLE_CHOICE", "FREEFORM_WRITING"],
                h = e => void 0 !== e && m.includes(e.type),
                v = e => {
                    var t, a;
                    let r = 1;
                    if (!e.storyElements) return r;
                    const i = null === (t = e.storyElements) || void 0 === t ? void 0 : t.filter((e => "LINE" === e.type)).length,
                        o = (0, n.gQ)("debugSkipToStoryLine") ? parseInt(null !== (a = (0, n.ky)("debugSkipToStoryLine")) && void 0 !== a ? a : "", 10) : void 0;
                    return void 0 !== o ? o >= 1 && o <= i ? r = o : console.error(`Cannot skip to lineIndex ${o} because it's out of bounds.`) : (0, n.gQ)("debugSkipToLastStoryLine") && (r = i), ((e, t) => {
                        let a = 0;
                        return s.cx(t, (t => ["LINE", "HEADER"].includes(t.type) && ++a === e))
                    })(r, e.storyElements)
                },
                _ = (e, t) => {
                    var a, n;
                    const r = e.text,
                        i = e.hints,
                        o = s.MR(e.hintMap, (e => e.rangeFrom)).filter((e => !t || t.every((t => e.rangeTo < t.start || e.rangeFrom > t.end)))),
                        l = [];
                    let c = 0,
                        d = 0;
                    for (; c < r.length;) {
                        let e;
                        o[d] && c >= o[d].rangeFrom ? (e = Math.min(o[d].rangeTo, r.length - 1), l.push({
                            hint: i[o[d].hintIndex],
                            rangeFrom: c,
                            rangeTo: e,
                            text: r.slice(c, e + 1)
                        }), d++) : (e = (null !== (n = null === (a = o[d]) || void 0 === a ? void 0 : a.rangeFrom) && void 0 !== n ? n : r.length) - 1, l.push({
                            rangeFrom: c,
                            rangeTo: e,
                            text: r.slice(c, e + 1)
                        })), c = e + 1
                    }
                    return l
                },
                f = e => ((0, n.gQ)("debugSlides") || (e.some((e => "streakFreezeChestReward" === e.type)) && (e = e.filter((e => "chestLingotsReward" !== e.type))), e.some((e => "streakSocietyFreezes" === e.type)) && (e = e.filter((e => "milestoneStreakFreeze" !== e.type)))), e),
                S = e => e.flatMap((e => "attachedSlides" in e ? [e, ...e.attachedSlides] : [e])),
                y = (e, t) => {
                    if (e.length > 0)
                        for (let a = 0; a < e.length; a++)
                            if ((null == t ? void 0 : t[a].type) !== e[a].type) return (0, o.Kp)("Expected attached slides to follow main slide, but found a mismatch", {
                                data: {
                                    expected: e[a],
                                    found: null == t ? void 0 : t[a]
                                }
                            }), !1;
                    return !0
                },
                E = e => ({
                    keypoints: [{
                        audioStart: 0,
                        rangeEnd: e.content.text.length
                    }],
                    url: e.ttsURL
                }),
                b = e => {
                    switch (e.type) {
                        case "HEADER":
                            return e.learningLanguageTitleContent;
                        case "LINE":
                            return e.line.content;
                        case "FREEFORM_WRITING_EXAMPLE_RESPONSE":
                            return { ...e.content,
                                audio: E(e)
                            };
                        default:
                            return
                    }
                },
                I = e => e ? "custom" : "generic",
                w = (e, t) => {
                    const a = e.elementIndex - t;
                    return a > 0 ? {
                        elementIndex: t + 1
                    } : a < 0 ? {
                        elementIndex: t - 1
                    } : e
                },
                k = (e, t) => {
                    var a, s;
                    if (e) {
                        const n = e.filter((e => "MATCH" === e.type))[0];
                        if ("MATCH" === (null == n ? void 0 : n.type)) {
                            const e = null === (a = n.matches) || void 0 === a ? void 0 : a.map((e => e.phrase)).filter((e => t.toLowerCase().includes(e.toLowerCase())));
                            return null !== (s = null == e ? void 0 : e.length) && void 0 !== s ? s : 0
                        }
                    }
                    return 0
                },
                T = e => {
                    if (e) {
                        const t = e.filter((e => "FREEFORM_WRITING" === e.type))[0];
                        if ("FREEFORM_WRITING" === (null == t ? void 0 : t.type)) return {
                            custom_prompt_option: t.customPromptOption,
                            custom_prompt_type: t.customPromptType,
                            generic_prompt_type: t.genericPromptType,
                            has_freeform_writing_examples: t.hasExamples,
                            prompt_type: I(t.customPrompt)
                        }
                    }
                    return []
                },
                C = (e, t) => t.findIndex((t => "LINE" === t.type && R(t) === e + 1)),
                R = e => {
                    if ("LINE" === e.type) return e.trackingProperties.line_index;
                    throw Error(`Tried to get line index for ${e.type} element`)
                },
                L = (e, t, a, s) => {
                    const n = [e, ...null != s ? s : []],
                        r = [t, ...a];
                    return n.includes(t) && n.every((e => r.includes(e)))
                },
                A = e => {
                    const t = [];
                    let a = null;
                    for (const s of e) {
                        if ("CHALLENGE_PROMPT" === (null == a ? void 0 : a.type) && "LINE" === s.type && s.line.content.imageUrl) {
                            const e = {
                                imageUrl: s.line.content.imageUrl,
                                trackingProperties: s.trackingProperties,
                                type: "ILLUSTRATION"
                            };
                            t.splice(t.length - 1, 0, e);
                            const a = { ...s
                            };
                            a.line.content.imageUrl = void 0, t.push(a)
                        } else t.push(s);
                        a = s
                    }
                    return t
                },
                P = e => {
                    if (0 === e.length) return !1;
                    return e.split("").some((e => e.charCodeAt(0) >= 1536 && e.charCodeAt(0) <= 1791))
                },
                D = (e, t, a) => {
                    var s, n, r, o, l;
                    if (!e || !t || !a) return !1;
                    switch (null == e ? void 0 : e.type) {
                        case "type-text":
                        case "freeform-writing":
                            return P(e.answer);
                        case "multiple-choice":
                            return P(null !== (n = null === (s = e.answers[0]) || void 0 === s ? void 0 : s.text) && void 0 !== n ? n : "");
                        case "select-phrases":
                            return P(null !== (r = e.answers[0]) && void 0 !== r ? r : "");
                        case "point-to-phrase":
                            return P(null !== (l = null === (o = e.parts[0]) || void 0 === o ? void 0 : o.text) && void 0 !== l ? l : "");
                        case "match":
                            return "rtl" === (0, i.Ux)(a);
                        default:
                            return "rtl" === (0, i.Ux)(t)
                    }
                },
                N = e => {
                    const t = O(e);
                    return t.filter((e => P(e))).length / t.length > .5
                },
                O = e => e.map((e => e.text)).join(" ").replace(/[\p{P}\p{S}]/gu, "").split(" ").filter((e => e.trim().length > 0))
        },
        77042: (e, t, a) => {
            "use strict";
            a.d(t, {
                EU: () => i,
                FG: () => r,
                xL: () => n
            });
            var s = a(69501);
            const n = (e, t) => {
                    const a = Date.now(),
                        n = e,
                        r = a;
                    for (const e of n) {
                        if (a !== r) return;
                        const n = {};
                        for (const i of e.audioInfos) {
                            const o = () => {
                                n[i.url] = !0, e.audioInfos.every((({
                                    url: e
                                }) => n[e])) && a === r && t(e.elementIndex)
                            };
                            (async () => {
                                try {
                                    await (0, s.IZ)(i.url)
                                } catch (e) {
                                    throw (0, s.N$)(i), e
                                }
                                o()
                            })()
                        }
                        if (a !== r) return
                    }
                },
                r = e => {
                    e.forEach((e => {
                        if ("LINE" === e.type) {
                            const t = e.line.content;
                            (0, s.Ms)(t.audio.url), t.audioPrefix && (0, s.Ms)(t.audioPrefix.url), t.audioSuffix && (0, s.Ms)(t.audioSuffix.url)
                        }
                    }))
                },
                i = e => t => ({
                    audioSyncModel: e.audioSyncModel,
                    duration: e.duration,
                    fadeDown: e.fadeDown,
                    instructionId: t.instructionId + 1,
                    playState: e.playState,
                    seekTo: e.seekTo,
                    speed: e.speed
                })
        },
        18513: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ag: () => C,
                Bv: () => A,
                FE: () => y,
                M6: () => u,
                Om: () => k,
                PH: () => S,
                Q5: () => E,
                S5: () => b,
                WF: () => L,
                a3: () => I,
                pg: () => T,
                tE: () => R,
                v5: () => g,
                vX: () => w
            });
            var s = a(99369),
                n = a(80254),
                r = a(83719),
                i = a(68903),
                o = a(8654),
                l = a(58576),
                c = a(8718),
                d = a(79465);
            const u = (e, t) => {
                    (0, d.track)("stories_challenge_start", { ...e.trackingProperties,
                        ...t.trackingProperties
                    })
                },
                g = e => {
                    var t, a;
                    return (0, s.merge)(e, {
                        storySession: (0, s.merge)(e.storySession, {
                            timeline: [...null !== (a = null === (t = e.storySession) || void 0 === t ? void 0 : t.timeline) && void 0 !== a ? a : [], {
                                time: Date.now() / 1e3,
                                type: "challenge-start"
                            }]
                        })
                    })
                },
                p = e => e.replace(/\([^()]*\)\s*/g, "").trim(),
                m = e => p(e).toLowerCase(),
                h = e => /^\d+$/.test(e),
                v = e => e ? 13 : 19,
                _ = (e, t, a) => (t = n.XP(t).reduce(((e, t) => (e[m(t)] = !0, e)), {}), e.map((e => ({ ...e,
                    translation: p(e.translation)
                }))).filter((e => {
                    const s = v(a);
                    if (e.phrase.length > s || e.translation.length > s) return !1;
                    const n = m(e.phrase),
                        r = m(e.translation);
                    return !(h(n) || h(r) || t[n] || t[r] || (t[n] = !0, t[r] = !0, 0))
                }))),
                f = (e, t) => {
                    if ("POINT_TO_PHRASE" !== e.type) return -1;
                    let a = -1;
                    return n.cx(e.transcriptParts, (e => (e.selectable && a++, a === t)))
                },
                S = (e, t) => {
                    var a, s;
                    const n = null === (a = e.storySession) || void 0 === a ? void 0 : a.hintsUsed;
                    if ("POINT_TO_PHRASE" !== (null == t ? void 0 : t.type) || !n || 0 === n.length) return !1;
                    const r = null === (s = t.transcriptParts[f(t, t.correctAnswerIndex)]) || void 0 === s ? void 0 : s.text;
                    return !r || n.some((e => e.phrase === r))
                },
                y = (e, t, a, s, r, i) => {
                    const o = {
                        completed: !1,
                        elementIndex: t,
                        mistakeCount: 0,
                        trackingProperties: e.trackingProperties
                    };
                    return (() => {
                        var t, l;
                        switch (e.type) {
                            case "ARRANGE":
                                return { ...o,
                                    arrangedPhrases: 0,
                                    phraseOrder: e.phraseOrder,
                                    selectedIncorrectIndices: [],
                                    shuffledPhrases: e.selectablePhrases,
                                    type: "arrange"
                                };
                            case "MATCH":
                                {
                                    const l = 5;
                                    let c = [];
                                    const d = v(s),
                                        u = null === (t = e.matches) || void 0 === t ? void 0 : t.filter((e => e.phrase.length <= d && e.translation.length <= d));
                                    if (u && u.length >= l) c = n.TV([...u]).slice(0, l);
                                    else {
                                        c = n.TV(_([...a], {}, s)).slice(0, l);
                                        const t = [...e.fallbackHints];
                                        if (c.length < l) {
                                            const e = {};
                                            c.forEach((t => {
                                                e[t.phrase] = !0, e[t.translation] = !0
                                            }));
                                            const a = n.TV(_(t, e, s)).slice(0, l - c.length);
                                            c = [...c, ...a]
                                        }
                                    }
                                    const g = {},
                                        p = [];
                                    return c.forEach((e => {
                                        g[`from:${e.phrase}`] = e.translation, g[`from:${e.translation}`] = e.phrase, p.push({
                                            language: i,
                                            status: "initial",
                                            text: e.phrase
                                        }), p.push({
                                            language: r,
                                            status: "initial",
                                            text: e.translation
                                        })
                                    })),
                                    { ...o,
                                        dictionary: g,
                                        tokens: n.TV(p),
                                        type: "match"
                                    }
                                }
                            case "MULTIPLE_CHOICE":
                                return { ...o,
                                    additionalCorrectAnswerIndices: e.additionalCorrectAnswerIndices,
                                    answers: e.answers,
                                    correctAnswerIndex: e.correctAnswerIndex,
                                    question: e.question,
                                    selectedIndices: [],
                                    type: "multiple-choice"
                                };
                            case "POINT_TO_PHRASE":
                                {
                                    let t = 0;
                                    const a = e.transcriptParts.map((e => (t += e.text.length, { ...e,
                                            rangeTo: t
                                        }))),
                                        s = f(e, e.correctAnswerIndex),
                                        n = [];
                                    return null === (l = e.additionalCorrectAnswerIndices) || void 0 === l || l.forEach((t => n.push(f(e, t)))),
                                    { ...o,
                                        additionalCorrectAnswerIndices: n,
                                        correctAnswerIndex: s,
                                        parts: a,
                                        question: e.question,
                                        selectedIndices: [],
                                        type: "point-to-phrase"
                                    }
                                }
                            case "SELECT_PHRASE":
                                return { ...o,
                                    answers: e.answers,
                                    correctAnswerIndex: e.correctAnswerIndex,
                                    selectedIndices: [],
                                    type: "select-phrases"
                                };
                            case "TYPE_TEXT":
                                return { ...o,
                                    answer: "",
                                    grading: e.grading,
                                    text: e.text,
                                    type: "type-text"
                                };
                            case "FREEFORM_WRITING":
                                return { ...o,
                                    answer: "",
                                    characterMinimum: e.characterCount,
                                    customPrompt: e.customPrompt,
                                    customPromptType: e.customPromptType,
                                    didScroll: !1,
                                    genericPromptType: e.genericPromptType,
                                    hasExamples: e.hasExamples,
                                    numberOfCorrectionsDismissed: 0,
                                    prompt: e.promptContent.prompt,
                                    showPrompt: e.showPrompt,
                                    skipped: !1,
                                    starterPhrases: e.promptContent.starterPhrases,
                                    type: "freeform-writing"
                                };
                            case "LINE":
                                return { ...o,
                                    skipped: !1,
                                    type: "speak"
                                };
                            default:
                                return void console.error("no setup for challenge type: ", e.type)
                        }
                    })()
                },
                E = e => {
                    var t, a, s;
                    if (null === (a = null === (t = e.storySession) || void 0 === t ? void 0 : t.challengeSession) || void 0 === a ? void 0 : a.completed) throw Error("Challenge already completed");
                    if (!(null === (s = e.storySession) || void 0 === s ? void 0 : s.challengeSession)) throw Error("No challenge session found when grading challenge");
                    const n = e.storySession.challengeSession;
                    if (null == n ? void 0 : n.completed) throw Error("Challenge already completed");
                    const r = 0 !== n.mistakeCount || ("speak" === n.type || "freeform-writing" === n.type) && n.skipped ? 0 : 1;
                    let i = e.storySession.speakCount;
                    "speak" === n.type && i++;
                    const o = "freeform-writing" === n.type ? {
                        customPromptType: n.customPromptType,
                        freeformChallengePrompt: n.prompt.text,
                        freeformChallengePromptType: (0, c.e)(n.customPrompt),
                        freeformChallengeSubmittedResponse: n.answer,
                        freeformChallengeSumTimeTaken: (Date.now() - n.startTime) / 1e3,
                        genericPromptType: n.genericPromptType,
                        hasExamples: n.hasExamples
                    } : {};
                    return { ...e,
                        storySession: { ...e.storySession,
                            ...o,
                            challengeSession: { ...n,
                                completed: !0
                            },
                            completedBonusChallenge: "freeform-writing" === n.type || e.storySession.completedBonusChallenge,
                            maxScore: e.storySession.maxScore + 1,
                            score: e.storySession.score + r,
                            speakCount: i
                        }
                    }
                },
                b = e => {
                    var t, a, s, n, r, i, o;
                    const l = null === (t = e.storySession) || void 0 === t ? void 0 : t.score;
                    return (0, d.track)("stories_challenge_complete", { ...e.trackingProperties,
                        ...null === (s = null === (a = e.storySession) || void 0 === a ? void 0 : a.challengeSession) || void 0 === s ? void 0 : s.trackingProperties,
                        challenge_type: null === (r = null === (n = e.storySession) || void 0 === n ? void 0 : n.challengeSession) || void 0 === r ? void 0 : r.type,
                        success: !l || !!(null === (i = e.storySession) || void 0 === i ? void 0 : i.score) && e.storySession.score > l,
                        used_keyboard: null === (o = e.storySession) || void 0 === o ? void 0 : o.usedKeyboardForMatchChallenge
                    }), e
                },
                I = e => {
                    var t;
                    if (e.completed) switch (e.type) {
                        case "freeform-writing":
                            return {
                                correct: !0,
                                sticky: !1,
                                title: r.zD
                            };
                        case "arrange":
                        case "match":
                            return {
                                correct: !0,
                                sticky: !1,
                                title: (0, o.H8)((0, r.ub)())
                            };
                        case "multiple-choice":
                        case "point-to-phrase":
                        case "select-phrases":
                            return 0 === e.mistakeCount ? {
                                correct: !0,
                                sticky: !1,
                                title: (0, o.H8)((0, r.ub)())
                            } : void 0;
                        case "type-text":
                            {
                                const a = e.gradingResult;
                                if (a) {
                                    let s, n = null !== (t = a.closestSolution) && void 0 !== t ? t : e.text,
                                        i = a.correct || !1;
                                    const l = a.highlights;
                                    if (a.blameType) switch (a.blameType) {
                                        case "accent":
                                            s = 18634;
                                            break;
                                        case "missing_word":
                                            i = !1, s = 8435;
                                            break;
                                        case "wrong_word":
                                            i = !1, s = 576;
                                            break;
                                        case "missing_space":
                                            i = !0, s = 18757;
                                            break;
                                        case "extra_space":
                                            i = !0, s = 4476;
                                            break;
                                        case "typo":
                                            s = 4081;
                                            break;
                                        default:
                                            return
                                    } else a.correct ? (i = !0, s = (0, r.ub)(), n = void 0) : (i = !1, s = 23926);
                                    return {
                                        blame: n,
                                        blameHighlight: l,
                                        correct: i,
                                        sticky: !0,
                                        title: (0, o.H8)(s)
                                    }
                                }
                                return void(0, l.vU)("Missing Stories type challenge grading information")
                            }
                        case "speak":
                            if (e.skipped) return {
                                blame: (0, o.H8)(15747),
                                correct: void 0,
                                skipped: !0,
                                sticky: !1,
                                title: (0, o.H8)(12946)
                            };
                            if (0 === e.mistakeCount) return;
                            return {
                                correct: !1,
                                sticky: !1,
                                title: (0, o.H8)(6840)
                            };
                        default:
                            return void(0, i.RJ)(e)
                    }
                },
                w = (e, t) => {
                    var a, n;
                    const r = null === (a = e.storySession) || void 0 === a ? void 0 : a.challengeSession;
                    if ("type-text" !== (null == r ? void 0 : r.type)) throw Error("Unexpected type");
                    if (!(null === (n = r.grading) || void 0 === n ? void 0 : n.automaton)) throw Error("No grading automaton found for type text challenge");
                    return (0, s.merge)(e, {
                        storySession: (0, s.merge)(e.storySession, {
                            challengeSession: (0, s.merge)(r, {
                                editDistance: t.highlights && "accent" !== t.blameType ? t.highlights.length : 0,
                                gradingResult: t,
                                mistakeCount: t.correct ? 0 : 1
                            })
                        })
                    })
                },
                k = e => {
                    var t;
                    const a = null === (t = e.storySession) || void 0 === t ? void 0 : t.challengeSession;
                    if ("freeform-writing" !== (null == a ? void 0 : a.type)) throw Error("Unexpected type");
                    return e
                },
                T = 300,
                C = 60,
                R = e => {
                    switch (e) {
                        case 50:
                        case 60:
                            return 10;
                        case 70:
                        case 80:
                        case 90:
                            return 15;
                        default:
                            return 20
                    }
                },
                L = e => e.trim().split(/\s+/).filter((e => "" !== e)).length,
                A = e => {
                    const t = e.answer,
                        a = L(t),
                        s = e.characterMinimum;
                    return a >= R(s) && a <= C
                }
        },
        20662: (e, t, a) => {
            "use strict";
            a.d(t, {
                Bu: () => i,
                IN: () => l,
                YE: () => r,
                gu: () => o
            });
            var s = a(68903),
                n = a(8718);
            const r = e => {
                    switch (e) {
                        case "READ":
                            return "normal";
                        case "LISTEN":
                            return "listen";
                        case "CONVERSATION":
                            return "conversation";
                        default:
                            throw (0, s.RJ)(e), Error(`Unexpected line mode "${e}"`)
                    }
                },
                i = e => {
                    switch (e) {
                        case "READ":
                            return 0;
                        case "LISTEN":
                            return 1;
                        case "REVIEW":
                        case "CONVERSATION":
                            return 2;
                        default:
                            throw (0, s.RJ)(e), Error(`Unexpected story mode "${e}"`)
                    }
                },
                o = ({
                    mode: e,
                    listenModeCharacterIds: t,
                    conversationModeSpeakCharacterIds: a,
                    line: s,
                    nextElement: r,
                    lineIndex: i,
                    conversationModeSpeakLineIds: o
                }) => "READ" === e || "CHARACTER" !== s.type || (0, n._L)(r) ? "READ" : o.includes(i) && a.includes(s.characterId) ? "SPEAK" : (({
                    listenModeCharacterIds: e,
                    line: t,
                    nextElement: a
                }) => !("CHARACTER" !== t.type || !e.includes(t.characterId) || (0, n._L)(a)))({
                    line: s,
                    listenModeCharacterIds: t,
                    nextElement: r
                }) ? "LISTEN" : "READ",
                l = ({
                    storyId: e,
                    mode: t,
                    practiceHubStoryType: a
                }) => {
                    const s = a ? `&practiceHubStory=${a}` : "";
                    return `/stories/${e}?mode=${t.toLowerCase()}${s}`
                }
        },
        36571: (e, t, a) => {
            "use strict";
            a.d(t, {
                Eo: () => d,
                b5: () => o,
                cG: () => l,
                fC: () => c
            });
            var s = a(64115);
            const n = ["FREEFORM_WRITING", "FREEFORM_WRITING_EXAMPLE_RESPONSE", "FREEFORM_WRITING_PROMPT"],
                r = ["ARRANGE", "CHALLENGE_PROMPT", "DUO_POPUP", ...n, "HEADER", "HINT_ONBOARDING", "LINE", "MATCH", "MULTIPLE_CHOICE", "POINT_TO_PHRASE", "SECTION_HEADER", "SELECT_PHRASE", "SENDER_RECEIVER", "SUBHEADING", "TYPE_TEXT"],
                i = ["ILLUSTRATION", "SENDER_RECEIVER"],
                o = () => (0, s.gQ)("debugSkipStoriesFinalMatchChallenge") ? r.filter((e => "MATCH" !== e)) : r,
                l = e => void 0 !== e && r.includes(e.type),
                c = e => void 0 !== e && i.includes(e.type),
                d = e => void 0 !== e && n.includes(e.type) || "DUO_POPUP" === (null == e ? void 0 : e.type) && "BONUS_XP" === e.popupType
        },
        43094: (e, t, a) => {
            "use strict";
            a.d(t, {
                D5: () => u,
                DG: () => c,
                Nh: () => l,
                O$: () => g,
                SU: () => p,
                cw: () => i,
                lo: () => d,
                tl: () => o
            });
            var s = a(99369),
                n = a(80254),
                r = a(8718);
            const i = (e, t) => !e && !t || !(!e || !t) && e.elementIndex === t.elementIndex && e.textIndex === t.textIndex,
                o = (e, t) => {
                    const a = e => null != e ? e : -1;
                    return !(!e || t && (e.elementIndex < t.elementIndex || !(e.elementIndex > t.elementIndex || a(e.textIndex) > a(t.textIndex))))
                },
                l = (e, t) => o(t, e),
                c = (e, t) => {
                    let a = (0, s.merge)(e.storySession, {
                        selectedPosition: t
                    });
                    return a && o(t, a.furthestPosition) && (a = (0, s.set)(a, "furthestPosition", t)), (0, s.set)(e, "storySession", a)
                },
                d = (e, t, a) => {
                    for (let s = t; s >= 0; s--) {
                        if (["LINE", "FREEFORM_WRITING_EXAMPLE_RESPONSE"].includes(e[s].type)) return s;
                        if ("FREEFORM_WRITING" === e[s].type && a) return s
                    }
                    return 0
                },
                u = (e, t) => t.filter(((t, a) => "LINE" === t.type && a <= e)).length - 1,
                g = (e, t) => n.cx(e.slice(t), r.P3) + t,
                p = (e, t) => {
                    var a;
                    const s = e.keypoints.find((e => e.rangeEnd >= t));
                    return null !== (a = null == s ? void 0 : s.audioStart) && void 0 !== a ? a : e.keypoints.slice(-1)[0].audioStart
                }
        },
        6947: (e, t, a) => {
            "use strict";
            a.d(t, {
                Yt: () => C,
                xv: () => I,
                _s: () => k,
                kD: () => B,
                $t: () => W,
                wW: () => N,
                cA: () => D,
                lw: () => L,
                eU: () => x,
                wh: () => V,
                KJ: () => G,
                gm: () => O,
                Yv: () => M,
                NE: () => F,
                Po: () => U,
                pS: () => A,
                dr: () => H,
                Iv: () => P
            });
            var s = a(80254);
            const n = a.p + "images/39dedd7d8fdeeca9e1533134495b5ce0.svg";
            var r = a(21778);
            const i = a.p + "images/streakCalendar/409e32ae79150d9809948154defb09f5.svg",
                o = a.p + "images/streakCalendar/4e0a0177dbfbbcf30f6a633d825a1460.svg",
                l = a.p + "images/streakCalendar/fdfafca4c421c6ab3c0c8b10a4ae4ff6.svg",
                c = a.p + "images/streakCalendar/1a7bd9123609523cb07efd902a0ee2d5.svg",
                d = a.p + "images/streakCalendar/1137fd970b51b6219b90fce9896e55c9.svg",
                u = a.p + "images/streakCalendar/fbdc5a60b0f33c7d4beb3af40f2287d5.svg";
            var g = a(26219),
                p = a(57127),
                m = a(34049);
            const h = a.p + "images/streakCalendar/b708a2274da80a9dbe333a7a0d090aa6.svg";
            var v = a(17135),
                _ = a(8654),
                f = a(93746),
                S = a(76578),
                y = a(37111),
                E = a(97106);
            const b = [99.7, 98.3, 97.7, 97.2, 96.8, 96.4, 96.2, 95.9, 95.7, 95.5, 95.3, 95.2, 95, 94.9, 94.8, 94.7, 94.6, 94.6, 94.5, 94.4, 94.3, 94.3, 94.2, 94.2, 94.1, 94, 94, 93.9, 93.8, 93.7, 93.6, 93.5, 93.4, 93.2, 93, 92.8, 92.6, 92.2, 91.8, 91.4, 90.9, 90.3, 89.7, 89, 88.3, 87.5, 86.6, 85.8, 84.9, 84, 83.1, 82.2, 81.3, 80.4, 79.6, 78.7, 77.9, 77.1, 76.3, 75.5, 74.8, 74, 73.2, 72.5, 71.8, 71.1, 70.4, 69.7, 69, 68.3, 67.7, 67, 66.4, 65.8, 65.1, 64.5, 63.8, 63.2, 62.5, 61.9, 61.3, 60.7, 60.1, 59.4, 58.8, 58.2, 57.6, 57, 56.4, 55.8, 55.2, 54.6, 54, 53.4, 52.8, 52.2, 51.6, 50.9, 50.3, 49.66, 49, 48.33, 47.66, 46.99, 46.3, 45.6, 44.9, 44.18, 43.45, 42.72, 41.98, 41.22, 40.44, 39.63, 38.8, 37.94, 37.04, 36.11, 35.14, 34.12, 33.08, 31.98, 30.87, 29.74, 28.58, 27.37, 26.14, 24.79, 23.38, 21.92, 20.43, 18.93, 17.4, 15.8, 13.98, 12.11, 10.26, 8.46, 6.78, 5.4, 4.15, 2.99, 1.92, .9, 0],
                I = [10, 11, 12, 13],
                w = [7, 14, 30, 50, 75, 100, 125, 150, 200, 250, 300, 365];
            var k;
            ! function(e) {
                e[e.FROZEN = 0] = "FROZEN", e[e.UNEXTENDED = 1] = "UNEXTENDED", e[e.STREAK_SOCIETY = 2] = "STREAK_SOCIETY", e[e.MILESTONE = 3] = "MILESTONE", e[e.EXTENDED = 4] = "EXTENDED"
            }(k || (k = {}));
            const T = e => {
                    const t = Math.max(1, Math.min(R.length, e)) - 1,
                        a = R[t];
                    return (0, _.H8)(a.stringId, a.variables)
                },
                C = 5,
                R = [{
                    stringId: 14029,
                    variables: void 0
                }, {
                    stringId: 22012,
                    variables: {
                        days: 3
                    }
                }, {
                    stringId: 8314,
                    variables: {
                        days: 5
                    }
                }, {
                    stringId: 22012,
                    variables: {
                        days: 5
                    }
                }, {
                    stringId: 8314,
                    variables: {
                        days: 7
                    }
                }, {
                    stringId: 22012,
                    variables: {
                        days: 7
                    }
                }, {
                    stringId: 13734,
                    variables: void 0
                }],
                L = e => {
                    const t = {
                            days: e,
                            streak: e,
                            streak_plus_one: e + 1
                        },
                        a = {
                            title: (0, _.H8)(17672, t),
                            titleID: "session_end_miltstone_title_lower_no_dash"
                        },
                        n = s.UP([{ ...a,
                            body: (0, _.H8)(26206),
                            bodyID: "session_end_explain_streak_body_1"
                        }, { ...a,
                            body: (0, _.H8)(26205),
                            bodyID: "session_end_explain_streak_body_2"
                        }, { ...a,
                            body: (0, _.H8)(26204),
                            bodyID: "session_end_explain_streak_body_3"
                        }]),
                        r = [{ ...a,
                            body: T(e),
                            bodyID: "session_end_one_day_from_streak"
                        }, { ...a,
                            body: T(e),
                            bodyID: "session_end_two_days_from_streak"
                        }][e % 2],
                        i = s.UP([{ ...a,
                            body: (0, _.H8)(20415, t),
                            bodyID: "session_end_streak_body_6"
                        }, { ...a,
                            body: (0, _.H8)(21798, t),
                            bodyID: "session_end_streak_body_7"
                        }, { ...a,
                            body: (0, _.H8)(296, t),
                            bodyID: "session_end_streak_body_8"
                        }, {
                            body: (0, _.H8)(10404, t),
                            bodyID: "session_end_streak_body_9",
                            title: (0, _.H8)(20343, t),
                            titleID: "session_end_streak_title_2"
                        }, {
                            body: (0, _.H8)(19216, t),
                            bodyID: "session_end_streak_body_10",
                            title: (0, _.H8)(23641, t),
                            titleID: "session_end_streak_title_4"
                        }]),
                        o = { ...a,
                            body: (0, _.H8)(1916, t),
                            bodyID: "session_end_streak_body_milestone"
                        };
                    return A(e) ? o : e <= 3 ? n : e < 7 ? r : i
                },
                A = e => e <= 365 ? w.includes(e) : e % 100 == 0,
                P = (e, t, a) => e > 0 && !t && (0, v.L3)(a) < 4,
                D = (e, t, a) => {
                    const s = (0, _.k8)(),
                        n = (e.getDay() - s + 7) % 7,
                        r = t.slice(0, n).every(E.Qb);
                    return r && a ? n + 1 : r ? n : 0
                },
                N = (e, t) => t ? (0, _._i)(30433) : 6 === e ? (0, _._i)(30432) : 3 === e ? (0, _._i)(30431) : (0, _._i)(30430),
                O = (e, t) => {
                    const a = (0, _.k8)(),
                        s = (e.getDay() - a + 7) % 7,
                        n = t.slice(0, s).findIndex((e => !(0, E.Qb)(e)));
                    return -1 !== n && t.slice(n, s).every((e => !(0, E.Qb)(e)))
                },
                x = e => {
                    const t = {
                            num: e + 1
                        },
                        [a, n] = s.UP([
                            [(0, _.H8)(49798, t), "se_streak_nudge_title_1"],
                            [(0, _.H8)(49799, t), "se_streak_nudge_title_2"],
                            [(0, _.H8)(49800, t), "se_streak_nudge_title_3"]
                        ]),
                        [r, i] = s.UP([
                            [(0, _.H8)(43653, t), "se_streak_nudge_body_1"],
                            [(0, _.H8)(43654, t), "se_streak_nudge_body_2"],
                            [(0, _.H8)(43655, t), "se_streak_nudge_body_3"]
                        ]);
                    return {
                        body: r,
                        bodyID: i,
                        title: a,
                        titleID: n
                    }
                },
                F = (e, t, a, s, n) => !e && t >= 1 && t <= 3 && ((null != a ? a : 0) < 3 || s !== n),
                M = (e, t, a) => 1 === e && (null != t ? t : 0) < 3 && (null != a ? a : 0) / 1e3 < (0, v.RF)({
                    days: 30
                }),
                U = e => e >= y.ev,
                H = e => !!e && (e.frozen || e.repaired) && !(null == e ? void 0 : e.streakExtended),
                G = (e, t, a, s, n) => {
                    if (n) return n;
                    if (!a) {
                        const t = (0, v.$$)(e.getFullYear(), e.getMonth(), e.getDate() - 1);
                        return H((0, E.$W)(t, s)) ? k.FROZEN : k.UNEXTENDED
                    }
                    return t === y.ev ? k.STREAK_SOCIETY : A(t) ? k.MILESTONE : k.EXTENDED
                },
                V = ({
                    currentTime: e,
                    excludeId: t,
                    isHover: a,
                    longestStreakData: s,
                    minutesAfterMidnight: E,
                    numStreakFreezeEquipped: I,
                    panelState: T,
                    showStreakCallout: C,
                    streakExtendedTimes: R,
                    streakLength: L,
                    streakRepairOffer: P,
                    userTimezoneOffset: D,
                    xpSummariesTwoWeeks: N
                }) => {
                    var O, x, F;
                    const M = (null !== (O = null == P ? void 0 : P.expirationTime) && void 0 !== O ? O : 0) - e;
                    if (P && M > 0) {
                        const e = a ? (0, _._i)(52691, {
                            num: P.length
                        }) : Math.ceil(M / v.Mb) > 1 ? (0, _._i)(45118, {
                            num: P.length
                        }) : (0, _._i)(45119, {
                            num: P.length
                        });
                        return {
                            ctaType: "streakEarnback",
                            icon: n,
                            message: e,
                            trackingId: "streak_earnback"
                        }
                    }
                    if (C) {
                        const e = v.rE - E;
                        return Math.max(e, 0) <= 60 ? {
                            ctaType: "extendStreak",
                            icon: g,
                            message: (0, _._i)(28048, {
                                num: e
                            }),
                            trackingId: 1
                        } : {
                            ctaType: "extendStreak",
                            icon: g,
                            message: (0, _._i)(28049, {
                                num: Math.floor(e / 60)
                            }),
                            trackingId: 1
                        }
                    }
                    if (T === k.STREAK_SOCIETY) return {
                        ctaType: "seeBenefits",
                        icon: h,
                        message: (0, _._i)(34819),
                        trackingId: 2
                    };
                    if (y.jL.includes(L)) return {
                        icon: h,
                        message: (0, _._i)(43358),
                        trackingId: 3
                    };
                    const U = null !== (x = null == s ? void 0 : s.length) && void 0 !== x ? x : 0;
                    if (L > U || (null == s ? void 0 : s.achieveDate) && (0, v.zk)((0, v.$I)(s.achieveDate))) return {
                        icon: o,
                        message: (0, _._i)(43360),
                        trackingId: 4
                    };
                    if (T === k.UNEXTENDED) return L > 0 ? {
                        ctaType: "extendStreak",
                        icon: u,
                        message: (0, _._i)(43361),
                        trackingId: 5
                    } : {
                        ctaType: "extendStreak",
                        icon: u,
                        message: (0, _._i)(45579),
                        trackingId: 5
                    };
                    if (T === k.FROZEN) return {
                        ctaType: "extendStreak",
                        icon: p,
                        message: (0, _._i)(43362),
                        trackingId: 5
                    };
                    if (I < 2) return {
                        ctaType: "getStreakFreeze",
                        icon: m,
                        message: (0, _._i)(49512, {
                            num: I
                        }),
                        trackingId: "streak_freeze_available"
                    };
                    if (T === k.MILESTONE) return {
                        icon: d,
                        message: (0, _._i)(43363),
                        trackingId: 6
                    };
                    const H = U + 1 - L;
                    if ([3, 5, 10].includes(H)) return {
                        icon: o,
                        message: (0, _._i)(43364, {
                            num: H
                        }),
                        trackingId: 8
                    };
                    const G = (0, v.Ux)();
                    G.setDate(G.getDate() + (e => {
                        var t;
                        return (null !== (t = w.find((t => t > e))) && void 0 !== t ? t : 100 * (Math.floor(e / 100) + 1)) - e
                    })(L));
                    const V = G.toLocaleString((0, f.M$)(window.duo.uiLanguage), {
                        day: "numeric",
                        month: "long"
                    });
                    if (A(L - 1)) return {
                        icon: d,
                        message: (0, _._i)(43365, {
                            date: V
                        }),
                        trackingId: 9
                    };
                    const B = z(R),
                        W = R.filter((e => (0, v.zk)((0, v.QB)(e.utcIsoDateString)))),
                        $ = z(W)[0],
                        j = B.filter((e => e < 12)).length;
                    if (void 0 !== $ && j > 1 && $ < 12 && 10 !== t) return {
                        icon: c,
                        message: (0, _._i)(43366, {
                            num: j
                        }),
                        trackingId: 10
                    };
                    const q = (0, S.J6)(N.map((e => {
                            var t;
                            return null !== (t = e.gainedXp) && void 0 !== t ? t : 0
                        }))),
                        Q = null === (F = N.find((e => {
                            const t = e.date - (0, v.Rw)(D) * v.Xx;
                            return (0, v.bC)((0, v.zM)(t), -1)
                        }))) || void 0 === F ? void 0 : F.gainedXp;
                    if (q > 0 && Q && Q > q && 11 !== t) return {
                        icon: r,
                        message: (0, _._i)(43367),
                        trackingId: 11
                    };
                    const K = z(R.filter((e => !(0, v.zk)((0, v.QB)(e.utcIsoDateString))))),
                        Y = Math.round((0, S.J6)(K));
                    if (void 0 !== $ && B.length > 0 && $ < Y && 12 !== t) return {
                        icon: i,
                        message: (0, _._i)(43368, {
                            num: Y - $
                        }),
                        trackingId: 12
                    };
                    const J = B.filter((e => e === $)).length;
                    if (J > 1 && 13 !== t) return {
                        icon: i,
                        message: (0, _._i)(43369, {
                            num: J
                        }),
                        trackingId: 13
                    };
                    const X = Z(W)[0];
                    if (void 0 !== X) {
                        const e = X / 10,
                            t = b[Math.floor(e)],
                            a = b[Math.ceil(e)],
                            s = Math.round(100 * (0, S.t7)(t, a, X % 10 / 10)) / 100;
                        return {
                            icon: l,
                            message: (0, _._i)(43370, {
                                percentage: s.toLocaleString((0, f.M$)(window.duo.uiLanguage))
                            }),
                            trackingId: 14
                        }
                    }
                    return {
                        icon: d,
                        message: (0, _._i)(43365, {
                            date: V
                        }),
                        trackingId: 9
                    }
                },
                B = (e, t, a) => {
                    const s = (0, v.QB)(e.utcIsoDateString);
                    return s.setUTCMinutes(s.getUTCMinutes() + e.timezoneOffsetMinutes), a.filter((e => {
                        const a = (0, v.QB)(e.utcIsoDateString);
                        return a.setUTCMinutes(a.getUTCMinutes() + e.timezoneOffsetMinutes), s.getUTCDate() - a.getUTCDate() <= t
                    }))
                },
                z = e => e.map((e => {
                    const t = (0, v.QB)(e.utcIsoDateString);
                    return t.setUTCMinutes(t.getUTCMinutes() - e.timezoneOffsetMinutes), t.getUTCHours()
                })),
                Z = e => e.map((e => {
                    const t = (0, v.QB)(e.utcIsoDateString);
                    return t.setUTCMinutes(t.getUTCMinutes() - e.timezoneOffsetMinutes), 60 * t.getUTCHours() + t.getUTCMinutes()
                })),
                W = e => {
                    const t = y.jL.find((t => t > e)),
                        a = 100 * (Math.floor(e / 100) + 1);
                    return t ? Math.min(t, a) : a
                }
        },
        39837: (e, t, a) => {
            "use strict";
            a.d(t, {
                Av: () => n,
                E6: () => d,
                FD: () => m,
                Jb: () => g,
                PZ: () => i,
                SZ: () => u,
                TT: () => o,
                _m: () => l,
                tL: () => p,
                xY: () => r,
                zg: () => c
            });
            var s = a(23275);
            const n = 10,
                r = 3,
                i = "streak_repair_gems",
                o = e => e <= 10 ? 3 : e <= 30 ? 4 : e <= 100 ? 5 : 6,
                l = (e, t) => {
                    const a = e => ["skill", "practice"].includes(e.type) && "grammar" !== e.subtype,
                        n = (0, s.m8)(t, (e => "passed" === e.state && a(e)), void 0, {
                            findLast: !0
                        });
                    if (void 0 === n) return t[0].levels[0].finishedSessions > 0 ? "/practice" : (0, s.tX)({
                        isEarnbackSession: !0,
                        level: t[0].levels[0],
                        levelIndex: 0,
                        unitIndex: 0
                    });
                    if (0 === e) return (0, s.tX)({ ...n,
                        isEarnbackSession: !0
                    });
                    let r = 0,
                        i = n.levelIndex,
                        o = n.unitIndex;
                    for (; r < e;) {
                        if (i <= 0) {
                            if (o--, o < 0) return "/practice";
                            i = t[o].levels.length - 1
                        } else i--;
                        const e = t[o].levels[i];
                        "passed" === e.state && a(e) && r++
                    }
                    const l = (0, s.m8)(t, (e => "passed" === e.state && a(e)), {
                        levelIndex: i,
                        unitIndex: o
                    }, {
                        findLast: !0
                    });
                    return void 0 === l ? "/practice" : (0, s.tX)({ ...l,
                        isEarnbackSession: !0
                    })
                },
                c = e => e.shop.in_app_purchase.some((e => "streak_repair_instant" === e.id)),
                d = e => void 0 !== e && e.sessionsCompleted >= e.totalSessions,
                u = e => e.sessionsCompleted < e.totalSessions,
                g = (e, t = !1) => {
                    var a, s;
                    return void 0 !== e.streakRepairOffer && (null !== (s = null === (a = e.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) === (t ? 0 : 1)
                },
                p = e => "streakExtended" === (null == e ? void 0 : e.type) && e.showEarnbackOffer,
                m = e => "streakExtended" === (null == e ? void 0 : e.type) && e.showEarnbackOffer
        },
        37111: (e, t, a) => {
            "use strict";
            a.d(t, {
                E6: () => m,
                ME: () => l,
                P5: () => _,
                TK: () => o,
                ev: () => c,
                fI: () => r,
                jL: () => d,
                kA: () => v,
                mx: () => i,
                wD: () => h
            });
            var s = a(68903),
                n = a(8654);
            const r = 30,
                i = 100,
                o = 3,
                l = 365,
                c = 7,
                d = [r, i, l],
                u = [15, 7, 3],
                g = [49, 21, 10, 5],
                p = [182, 30, 21, 14, 7, 3],
                m = e => e >= l,
                h = e => {
                    if (null != e && 0 !== e) return e >= l ? (0, n._i)(38404, {
                        num: Math.floor(e / l)
                    }) : void 0
                },
                v = e => {
                    const t = l - e;
                    if ((0, s.p)(p)(t)) switch (t) {
                        case 182:
                            return (0, n._i)(35596);
                        case 30:
                            return (0, n._i)(35597, {
                                num: 1
                            });
                        case 21:
                        case 14:
                        case 7:
                            return (0, n._i)(35598, {
                                num: Math.floor(t / 7)
                            });
                        case 3:
                            return (0, n._i)(35599, {
                                num: t
                            });
                        default:
                            return void(0, s.RJ)(t)
                    }
                    const a = i - e;
                    if ((0, s.p)(g)(a)) switch (a) {
                        case 49:
                            return (0, n._i)(35594);
                        case 21:
                            return (0, n._i)(39578, {
                                num: 3
                            });
                        case 10:
                        case 5:
                            return (0, n._i)(35595, {
                                num: a
                            });
                        default:
                            return void(0, s.RJ)(a)
                    }
                    const o = r - e;
                    if ((0, s.p)(u)(o)) switch (o) {
                        case 15:
                            return (0, n._i)(35591);
                        case 7:
                            return (0, n._i)(35592, {
                                num: 1
                            });
                        case 3:
                            return (0, n._i)(35593, {
                                num: o
                            });
                        default:
                            return void(0, s.RJ)(o)
                    }
                },
                _ = (e, t, a) => void 0 !== a && a >= l || void 0 !== t && e.some((e => {
                    var a;
                    return (null !== (a = t[e.userId]) && void 0 !== a ? a : 0) >= l
                }))
        },
        43006: (e, t, a) => {
            "use strict";
            a.d(t, {
                Dg: () => i,
                HZ: () => l,
                RF: () => c,
                ls: () => r,
                nx: () => n,
                qv: () => s
            });
            const s = "___",
                n = "-\\'!*()_|\\\\~=`{}\\[\\]:\";?,.‐¡¿·«»“”„–▶’。，、､‚｡；：「」『』（）？！─…《》〈〉．～،؟।—‧",
                r = `${n}@#$%^&+<>\\/`,
                i = (e, t = " ") => e.replace(new RegExp(`[${r}]`, "g"), t).replace(/\s+/g, t).trim().toLowerCase(),
                o = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                l = e => o.test(e.toLowerCase()),
                c = e => [...e].length
        },
        54448: (e, t, a) => {
            "use strict";
            a.d(t, {
                G: () => r,
                g: () => i
            });
            var s = a(11811),
                n = a(64591);
            const r = (e, t, a, n) => {
                    const r = t.map(i),
                        o = e.type !== s.FF.SpecifiedMatchPractice && n;
                    return { ...e,
                        challenges: r,
                        dailyRefreshInfo: null == a ? void 0 : a.dailyRefreshInfo,
                        pathLevelSpecifics: null == a ? void 0 : a.pathLevelMetadata,
                        ...o ? {
                            hasBoost: n,
                            xpPromised: void 0
                        } : {},
                        ...e.type === s.FF.GlobalPractice ? {
                            shouldAward5XpFromGlobalPractice: !0
                        } : {}
                    }
                },
                i = e => {
                    var t;
                    const a = (0, n.Xh)(e);
                    null === (t = a.gradingResult) || void 0 === t || delete t.blameSubtext, delete a.startTime, !1 === a.skipped && delete a.skipped;
                    const s = a.gradingResult ? { ...a,
                        ...a.gradingResult
                    } : { ...a,
                        correct: void 0
                    };
                    return delete s.gradingResult, "grader" in s && delete s.grader, "smartTipsGraderV2" in s && delete s.smartTipsGraderV2, s
                }
        },
        7113: (e, t, a) => {
            "use strict";
            a.d(t, {
                J: () => r,
                w: () => n
            });
            var s = a(43006);
            const n = e => {
                    const t = e.match(/"[^"]*"|[^\s"]+/g),
                        a = [];
                    return null == t || t.forEach(((e, s) => {
                        let n = e;
                        i(n[0]) && (a.push(n[0]), n = n.slice(1)), i(n[n.length - 1]) ? (n.length > 1 && a.push(n.slice(0, n.length - 1)), a.push(n[n.length - 1])) : n.length > 0 && a.push(n), s !== t.length - 1 && a.push(" ")
                    })), a
                },
                r = e => {
                    const t = e.match(/"[^"]*"|[^\s"]+/g),
                        a = [];
                    let s = 0;
                    return null == t || t.forEach(((e, n) => {
                        let r = e;
                        i(r[0]) && (a.push({
                            endIndexWithinSentence: s + 1,
                            startIndexWithinSentence: s,
                            word: r[0]
                        }), r = r.slice(1), s += 1), i(r[r.length - 1]) ? (r.length > 1 && (a.push({
                            endIndexWithinSentence: s + r.length - 1,
                            startIndexWithinSentence: s,
                            word: r.slice(0, r.length - 1)
                        }), s += r.length - 1), a.push({
                            endIndexWithinSentence: s + 1,
                            startIndexWithinSentence: s,
                            word: r[r.length - 1]
                        }), s += 1) : r.length > 0 && (a.push({
                            endIndexWithinSentence: s + r.length,
                            startIndexWithinSentence: s,
                            word: r
                        }), s += r.length), n !== t.length - 1 && (a.push({
                            endIndexWithinSentence: s + 1,
                            startIndexWithinSentence: s,
                            word: " "
                        }), s += 1)
                    })), a
                },
                i = e => s.ls.includes(e)
        },
        79465: (e, t, a) => {
            "use strict";
            a.r(t), a.d(t, {
                CAMPAIGN_PARAMETERS: () => F,
                FULL_STORY_EXCLUDE: () => k,
                accumulateTime: () => X,
                alias: () => O,
                canSetCampaignInfo: () => M,
                getCampaignInfo: () => G,
                getDistinctId: () => P,
                getEngagementType: () => J,
                removeCampaignInfo: () => V,
                resetTime: () => ee,
                setCampaignInfo: () => U,
                setDistinctId: () => A,
                startTracking: () => R,
                totalTimes: () => Y,
                track: () => z,
                trackAndLogApiError: () => W,
                trackHomeShow: () => q,
                trackLeaderboardApiEvent: () => ae,
                trackRawEvent: () => Z,
                trackRedirection: () => j,
                trackUserActive2022: () => Q
            });
            var s = a(80254),
                n = a(70488),
                r = a(42659),
                i = a(54174),
                o = a(70220),
                l = a(97544),
                c = a(54412),
                d = a(17135),
                u = a(94358),
                g = a(67899),
                p = a(68903),
                m = a(43633),
                h = a(10300),
                v = a(58576);
            const _ = "app-info://platform/microsoft-store";
            var f = a(18804),
                S = a(6947),
                y = a(74597),
                E = a(16086),
                b = a(20028),
                I = a(97106);
            const w = ["DISABLE_PERSONALIZED_ADS", "DISABLE_THIRD_PARTY_TRACKING"],
                k = "fs-exclude";
            let T;
            const C = new Promise((e => {
                    T = e
                })).then((e => (console.log("Received fresh user model; tracking begins now"), e))),
                R = () => {
                    const e = (0, f.globalGetState)();
                    if (!e) throw Error("Store should be initialized set before calling startTracking.");
                    const t = (0, r.Mb)(e),
                        a = (0, i.d)(e),
                        s = (0, r.np)(e),
                        n = (0, r.Lm)(e);
                    if (!a) {
                        const e = "1" === navigator.doNotTrack;
                        l.Vi.registerTrackingStatus(!e, P())
                    }(() => {
                        const e = (0, f.globalGetState)();
                        return (e && (0, r.np)(e).privacySettings ? (0, r.np)(e).privacySettings : w).some((e => w.includes(e)))
                    })() || (0, g.dl)(), n && !(0, b.jq)(s) && (!0 === t.featureFlags.is_fullstory_recording_enabled || (0, b.ms)(s) || (0, b.Sk)(s)) ? u.IM(s.id) : u.sT(), T()
                },
                L = s.IH((() => {
                    n.init(), n.setDebug(!1)
                })),
                A = e => {
                    L(), console.log(`Set distinct user id ${e}`), n.identify(`${e}`), (0, c.d8)(c.Vj.LoggedOutUUID, `${e}`), (0, E.Pc)() && (0, c.d8)(c.Vj.LoggedIn, "true")
                },
                P = () => (L(), `${n.getDistinctId()}`),
                D = async e => {
                    if (e) try {
                        (0, E.Jb)(), await C
                    } catch (e) {}
                    return (0, f.globalGetState)() ? !window.location.search.includes("dnt=1") && (L(), !0) : ((0, v.vU)("Failed to track event: no store provided"), !1)
                },
                N = (e, t) => (0, v.bP)("track", e, [{
                    data: t,
                    name: "properties"
                }], {
                    excludeFromTelemetry: !0
                }),
                O = async e => {
                    if (await D(!1)) {
                        const t = n.getDistinctId();
                        N("$create_alias", {
                            alias: e,
                            distinct_id: t
                        }), n.alias(`${e}`)
                    }
                },
                x = {
                    utm_campaign: "campaign_name",
                    utm_content: "campaign_content",
                    utm_medium: "campaign_medium",
                    utm_source: "campaign_source",
                    utm_term: "campaign_keywords"
                },
                F = s.XP(x),
                M = e => s.jV(s.XP(e), F).length > 0,
                U = e => {
                    const t = s.ei(e, ...F);
                    (0, c.d8)(c.Vj.UTMParameters, JSON.stringify(t))
                },
                H = (0, p.p)(F),
                G = e => {
                    const t = {},
                        a = (0, c.ej)(c.Vj.UTMParameters);
                    if (void 0 !== a) {
                        const n = JSON.parse(a);
                        for (const [a, r] of Object.entries(n)) H(a) && (t[(s = a, `${e}${x[s]}`)] = r)
                    }
                    var s;
                    const n = {
                        referrer: /"\$initial_referrer":[ ]*"(.+?)"/,
                        referring_domain: /"\$initial_referring_domain":[ ]*"(.+?)"/
                    };
                    return document.cookie.split(";").forEach((a => {
                        a = decodeURIComponent(a), / ?mp_.+?_mixpanel=/.test(a) && Object.entries(n).forEach((([s, n]) => {
                            const r = n.exec(a);
                            r && (t[e + s] = r[1])
                        }))
                    })), t
                },
                V = () => {
                    (0, c.nJ)(c.Vj.UTMParameters)
                },
                B = e => {
                    var t;
                    const a = (0, d.Zo)(),
                        s = "Notification" in window ? window.Notification.permission : "unsupported",
                        n = {
                            $app_version: window.duo.version,
                            $current_url: window.location.href,
                            Client: "web",
                            app_version_hash: window.duo.versionHash,
                            client_utc_datetime: a,
                            cn_extension: !1,
                            current_hearts_segments: e.heartsState.hearts,
                            dark_mode_setting: "system" === e.browserSettings.darkMode ? "default" : e.browserSettings.darkMode,
                            from_internet_org: !1,
                            is_from_microsoft_store: (0, c.ej)(c.Vj.InitialReferrer) === _ || document.referrer === _,
                            is_pwa: window.matchMedia("(display-mode: standalone)").matches,
                            is_zombie_mode: (0, i.d)(e),
                            leaderboard_alias: null === (t = (0, m.h0)().get(h.RT).value) || void 0 === t ? void 0 : t.alias,
                            logged_in: (0, E.Pc)(),
                            mobile: !1,
                            mobile_web_view: y.Z.mobile,
                            notifications_enabled: "granted" === s,
                            notifications_system_status: s,
                            prefers_reduced_motion: !e.user.animationEnabled || o.H,
                            product: "learning_app",
                            streak_extended: (0, I.ab)(e.user.timezoneOffset, e.user.xpGains) > 0,
                            time: a,
                            user_agent: navigator.userAgent
                        };
                    window.location.hash && (n.location_hash = window.location.hash.slice(1));
                    const l = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
                    "object" == typeof l && ("downlink" in l && (n.network_downlink = 1e3 * l.downlink), "effectiveType" in l && (n.network_quality = l.effectiveType));
                    const u = (0, g.Nf)();
                    void 0 !== u && (n.is_google_tag_manager_enabled = u);
                    const p = (0, r.np)(e);
                    Object.assign(n, p.trackingProperties);
                    const v = (0, r.Oz)(e);
                    v && Object.assign(n, v.trackingProperties), p.creationDate && (n.creation_age = Date.now() - 1e3 * p.creationDate), n.email_opt_out = !p.emailPromotion;
                    const f = (0, r.Mb)(e);
                    return f.ipCountry && (n.billing_country_code = f.ipCountry), n
                },
                z = async (e, t, a = !0) => {
                    const s = (0, f.globalGetState)();
                    if (await D(a) && s) {
                        const a = { ...B(s),
                            ...t
                        };
                        return (0, g.KU)(e, a), N(e, a), new Promise((t => {
                            n.track(e, a, t)
                        }))
                    }
                },
                Z = async (e, t) => {
                    const a = t;
                    return ((e, t) => {
                        (0, v.bP)("track", e, [{
                            data: t,
                            name: "properties"
                        }], {
                            excludeFromTelemetry: !0
                        })
                    })(e, a), new Promise((t => {
                        n.track(e, a, t)
                    }))
                },
                W = (e, t, a, s, n) => {
                    var r;
                    (0, l.Hx)(a) && void 0 !== (null === (r = a.response) || void 0 === r ? void 0 : r.status) && v.fZ.includes(a.response.status) ? console.warn("Not reporting unactionable server error event") : navigator.onLine && ((0, v.Kp)(t, {
                        data: {
                            trackingEvent: "api_error",
                            trackingReason: e,
                            ...s
                        },
                        ex: a,
                        fingerprint: ["api_error", t],
                        ...n
                    }), z("api_error", {
                        reason: e
                    }))
                },
                $ = e => {
                    let t;
                    if (e instanceof URL) t = e;
                    else try {
                        t = new URL(e)
                    } catch (a) {
                        t = new URL(e, new URL(window.location.href).origin)
                    }
                    return t
                },
                j = (e, t, a, s = !0) => {
                    const n = $(e);
                    n.search = "";
                    const r = $(t);
                    return r.search = "", z("client_side_redirection", {
                        from_url: n.toString(),
                        redirection_type: a,
                        to_url: r.toString()
                    }, s)
                },
                q = (e, t) => {
                    var a, s;
                    const n = (0, I.ab)(e.timezoneOffset, e.xpGains) > 0,
                        r = (0, S.Iv)(null !== (s = null === (a = e.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0, n, e.timezoneOffset);
                    z("show home", {
                        is_dark_mode: window.matchMedia("(prefers-color-scheme: dark)").matches,
                        streak_icon: r,
                        ...t
                    })
                },
                Q = e => {
                    const t = (0, E.Pc)(),
                        a = document.hidden,
                        s = window.location.pathname;
                    if (a || !t || "/reset_password" === s) return !1;
                    const n = {
                        activity_screen: s,
                        activity_trigger: null,
                        is_foregrounded: !a,
                        logged_in: t,
                        product: "learning_app",
                        ...e
                    };
                    return z("user_active_2022", n), !0
                },
                K = [
                    ["admin", [/^debug\//, /^enroll/, /^o\//, /^logout$/, /^pearson$/, /^partner/, /^settings/, /^welcome/, /^admin_tools$/, /^juicy$/, /^courses/, /^course\//, /^referred$/, /^register_user$/, /^log-in/, /^register/]],
                    ["ads", [/^placeholderRegex/]],
                    ["game", [/^show_store/, /^shop/]],
                    ["learning", [/^alphabets\//, /^guidebook\//, /^lesson($|\/)/, /^placement\//, /^practice\//, /^preview\//, /^new-comment$/, /^words$/, /^skill\//, /^stories/]],
                    ["loading", [/^placeholderRegex/]],
                    ["promos", [/^duocon/, /^abc(-privacy)?$/, /^redeem/, /^plus$/, /^getplus$/, /^youtubeplus$/]],
                    ["social", [/^profile\//]],
                    ["tree", [/^characters/, /^learn/]]
                ],
                Y = {
                    admin: 0,
                    ads: 0,
                    deepest_node_learning: 0,
                    game: 0,
                    learning: 0,
                    loading: 0,
                    promos: 0,
                    skill_deepest_node_listening: 0,
                    skill_deepest_node_reading: 0,
                    skill_deepest_node_speaking: 0,
                    skill_deepest_node_writing: 0,
                    skill_listening: 0,
                    skill_reading: 0,
                    skill_speaking: 0,
                    skill_writing: 0,
                    social: 0,
                    tree: 0,
                    unknown: 0
                },
                J = (e = window.location.pathname) => {
                    const t = K.find((([{}, t]) => t.find((t => t.test(e.slice(1))))));
                    return t ? t[0] : "unknown"
                },
                X = (e, t, a) => {
                    const s = t || J();
                    ["speaking", "writing", "reading", "listening"].includes(s) ? (Y[`skill_${s}`] += e, a && (Y[`skill_deepest_node_${s}`] += e)) : Y[s] += e, "learning" === s && a && (Y.deepest_node_learning += e)
                },
                ee = () => {
                    s.XP(Y).forEach((e => {
                        Y[e] = 0
                    }))
                };
            let te = {};
            const ae = async (...e) => {
                var t, a;
                await C;
                const s = e => {
                    var t;
                    te[e] = (null !== (t = te[e]) && void 0 !== t ? t : 0) + 1
                };
                switch (s("leaderboard_stat_api_total"), e[0]) {
                    case "fetch":
                        s("leaderboard_stat_api_fetch_total"), e[1].unlocked ? s("leaderboard_stat_api_fetch_unlocked") : s("leaderboard_stat_api_fetch_locked");
                        break;
                    case "join":
                        s("leaderboard_stat_api_join");
                        break;
                    case "clear_ended":
                        s("leaderboard_stat_api_clear_ended");
                        break;
                    case "set_reaction":
                        s("leaderboard_stat_api_set_reaction_total"), e[1].cohorted ? s("leaderboard_stat_api_set_reaction_cohorted") : s("leaderboard_stat_api_set_reaction_uncohorted");
                        break;
                    case "fetch_reaction_uncohorted":
                        s("leaderboard_stat_api_fetch_reaction_uncohort");
                        break;
                    default:
                        (0, p.RJ)(e)
                }
                Math.random() > (null !== (a = null === (t = (0, f.globalGetState)()) || void 0 === t ? void 0 : t.config.featureFlags.web_leaderboard_stats_sampling_rate) && void 0 !== a ? a : .1) || (z("leaderboard_stats_aggregate", te), te = {})
            }
        },
        34704: (e, t, a) => {
            "use strict";
            a.d(t, {
                LP: () => i,
                _G: () => c,
                dN: () => l,
                hg: () => d,
                iZ: () => o,
                lL: () => u
            });
            var s = a(42659),
                n = (a(81149), a(11811));
            const r = ["ja<en", "zh<en"],
                i = (e, t) => `${e}<${t}`,
                o = (e, t) => {
                    var a;
                    return null === (a = e.transliterationTexts.find((e => e.type === t))) || void 0 === a ? void 0 : a.text
                },
                l = (e, t, a, s = !1) => !(!a || !((e, t) => !!r.includes(i(e, t)))(e, t)) && (a.enabled || s),
                c = e => ![n.FF.AlphabetLesson, n.FF.AlphabetPractice, n.FF.PlacementTest, n.FF.SectionTest, n.FF.UnitTest].includes(e),
                d = e => {
                    const t = (0, s.iH)(e),
                        a = (0, s.Rv)(e);
                    return e.browserSettings.transliterationsSettings[i(t, a)]
                },
                u = {
                    hiragana: {
                        lang: "ja-Hira",
                        trackingName: "hiragana",
                        transliterateNewWordsOnly: !1,
                        type: "hiragana"
                    },
                    pinyin_all: {
                        lang: "zh-Latn-pinyin",
                        trackingName: "pinyin_all",
                        transliterateNewWordsOnly: !1,
                        type: "pinyin"
                    },
                    pinyin_new: {
                        lang: "zh-Latn-pinyin",
                        trackingName: "pinyin_new",
                        transliterateNewWordsOnly: !0,
                        type: "pinyin"
                    },
                    romaji: {
                        lang: "ja-Latn",
                        trackingName: "romaji",
                        transliterateNewWordsOnly: !1,
                        type: "romaji"
                    }
                }
        },
        11811: (e, t, a) => {
            "use strict";
            var s, n, r;
            a.d(t, {
                    A: () => n,
                    FF: () => l,
                    O4: () => c,
                    SP: () => i,
                    Sm: () => s,
                    tm: () => r,
                    y1: () => o
                }),
                function(e) {
                    e.Assist = "assist", e.CharacterIntro = "characterIntro", e.CharacterMatch = "characterMatch", e.CharacterPuzzle = "characterPuzzle", e.CharacterSelect = "characterSelect", e.CharacterTrace = "characterTrace", e.CharacterWrite = "characterWrite", e.CompleteReverseTranslation = "completeReverseTranslation", e.Definition = "definition", e.Dialogue = "dialogue", e.ExtendedMatch = "extendedMatch", e.ExtendedListenMatch = "extendedListenMatch", e.Form = "form", e.FreeResponse = "freeResponse", e.GapFill = "gapFill", e.Judge = "judge", e.Listen = "listen", e.ListenComplete = "listenComplete", e.ListenComprehension = "listenComprehension", e.ListenIsolation = "listenIsolation", e.ListenMatch = "listenMatch", e.ListenSpeak = "listenSpeak", e.ListenTap = "listenTap", e.Match = "match", e.Name = "name", e.OrderTapComplete = "orderTapComplete", e.PartialListen = "partialListen", e.PartialReverseTranslate = "partialReverseTranslate", e.PatternTapComplete = "patternTapComplete", e.RadioBinary = "radioBinary", e.RadioImageSelect = "radioImageSelect", e.RadioListenMatch = "radioListenMatch", e.RadioListenRecognize = "radioListenRecognize", e.RadioSelect = "radioSelect", e.ReadComprehension = "readComprehension", e.ReverseAssist = "reverseAssist", e.SameDifferent = "sameDifferent", e.Select = "select", e.SelectPronunciation = "selectPronunciation", e.SelectTranscription = "selectTranscription", e.SvgPuzzle = "svgPuzzle", e.SyllableListenTap = "syllableListenTap", e.SyllableTap = "syllableTap", e.Speak = "speak", e.TapCloze = "tapCloze", e.TapClozeTable = "tapClozeTable", e.TapComplete = "tapComplete", e.TapCompleteTable = "tapCompleteTable", e.TapDescribe = "tapDescribe", e.Translate = "translate", e.Transliterate = "transliterate", e.TransliterationAssist = "transliterationAssist", e.TypeCloze = "typeCloze", e.TypeClozeTable = "typeClozeTable", e.TypeComplete = "typeComplete", e.TypeCompleteTable = "typeCompleteTable", e.WriteComprehension = "writeComprehension"
                }(s || (s = {})),
                function(e) {
                    e.HardChallenge = "HARD_CHALLENGE", e.LimitedTts = "LIMITED_TTS", e.NewPattern = "NEW_PATTERN", e.NewWord = "NEW_WORD", e.PastMistake = "PAST_MISTAKE", e.ReviewChallenge = "REVIEW_CHALLENGE", e.WeakWord = "WEAK_WORD"
                }(n || (n = {})),
                function(e) {
                    e.NewYears2020Percent50 = "NEW_YEARS_2020_50", e.NewYears2020Percent60 = "NEW_YEARS_2020_60", e.NewYears2020Percent50Intro = "NEW_YEARS_2020_50_INTRO", e.NewYears2020Percent60Intro = "NEW_YEARS_2020_60_INTRO", e.NewYears2021Percent60 = "NEW_YEARS_2021", e.NewYears2021FT90 = "NEW_YEARS_2021_3MO", e.NewYears2022 = "NEW_YEARS_2022", e.NewYears2022FT = "NEW_YEARS_2022_FT", e.NewYears2023 = "NEW_YEARS_2023_60", e.NewYears2023Fake = "NEW_YEARS_2023_FAKE", e.NewYears2024 = "NEW_YEARS_2024", e.NewYears2024Fake = "NEW_YEARS_2024_FAKE", e.Student = "STUDENT_DISCOUNT_50", e.Winback25 = "WINBACK_25"
                }(r || (r = {}));
            const i = [r.NewYears2024, r.NewYears2024Fake],
                o = [r.NewYears2024Fake];
            var l, c;
            ! function(e) {
                e.AlphabetLesson = "ALPHABET_LESSON", e.AlphabetPractice = "ALPHABET_PRACTICE", e.GlobalPractice = "GLOBAL_PRACTICE", e.Lesson = "LESSON", e.MistakesReview = "MISTAKES_REVIEW", e.PlacementTest = "PLACEMENT_TEST", e.Adventures = "ADVENTURES", e.DuoRadio = "DUORADIO", e.Legendary = "LEGENDARY", e.LegendaryLevel = "LEGENDARY_LEVEL", e.LegendaryLexemePractice = "LEGENDARY_LEXEME_PRACTICE", e.LegendaryUnitPractice = "LEGENDARY_UNIT_PRACTICE", e.LevelReview = "LEVEL_REVIEW", e.LexemeSkillLevelPractice = "LEXEME_SKILL_LEVEL_PRACTICE", e.LexemePractice = "LEXEME_PRACTICE", e.ListeningPractice = "LISTENING_PRACTICE", e.Placement = "PLACEMENT", e.SectionTest = "SECTION_TEST", e.SpeakingPractice = "SPEAKING_PRACTICE", e.SpecifiedMatchPractice = "SPECIFIED_MATCH_PRACTICE", e.Story = "STORY", e.TargetPractice = "TARGET_PRACTICE", e.UnitPractice = "UNIT_PRACTICE", e.UnitReview = "UNIT_REVIEW", e.UnitRewind = "UNIT_REWIND", e.UnitTest = "UNIT_TEST"
            }(l || (l = {})),
            function(e) {
                e[e.Green = 1] = "Green", e[e.Gold = 2] = "Gold"
            }(c || (c = {}))
        },
        55829: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    S: () => s
                }),
                function(e) {
                    e.ACTIVE = "ACTIVE", e.FINISHED = "FINISHED", e.NOT_STARTED = "NOT_STARTED"
                }(s || (s = {}))
        },
        41631: (e, t, a) => {
            "use strict";
            var s;
            a.d(t, {
                    t: () => s
                }),
                function(e) {
                    e.ROOKIE = "rookie", e.EXPLORER = "explorer", e.TRAVELER = "traveler", e.TRAILBLAZER = "trailblazer", e.ADVENTURER = "adventurer", e.DISCOVERER = "discoverer", e.DAREDEVIL = "daredevil", e.NAVIGATOR = "navigator", e.CHAMPION = "champion", e.DAILY_REFRESH = "daily_refresh"
                }(s || (s = {}))
        },
        3800: (e, t, a) => {
            "use strict";
            a.d(t, {
                N: () => s,
                h: () => n
            });
            const s = {
                    autoCapitalize: "off",
                    autoComplete: "off",
                    autoCorrect: "off",
                    spellCheck: !1
                },
                n = window.location.search.includes("wantsPlainInfo=1")
        },
        81621: (e, t, a) => {
            "use strict";
            a.d(t, {
                AO: () => h,
                EO: () => k,
                N9: () => v,
                Nr: () => f,
                P2: () => b,
                P_: () => _,
                Ud: () => p,
                VY: () => u,
                eU: () => I,
                fb: () => m,
                i5: () => R,
                o7: () => g,
                pu: () => T,
                sL: () => S,
                tU: () => c,
                yS: () => w,
                z_: () => d
            });
            var s = a(80254),
                n = a(17135),
                r = a(81149),
                i = a(87471),
                o = (a(16086), a(20028)),
                l = a(97106);
            const c = "//s3.amazonaws.com/duolingo-images/avatar/default_2",
                d = e => e.includes("default_"),
                u = e => !(e.privacySettings || []).includes("DISABLE_SOCIAL") && !(0, o.pN)(e),
                g = e => !(e.privacySettings || []).includes("DISABLE_MATURE_WORDS"),
                p = e => !(e.privacySettings || []).includes("DISABLE_LEADERBOARDS"),
                m = e => (0, o.jq)(e) && "experiment" === (0, r.j6)("connect_enable_social_underage_v2", void 0),
                h = e => !(!(0, o.jq)(e) && u(e)) && (0, o.jq)(e) && !(0, o.zZ)(e),
                v = (e, t) => {
                    var a;
                    return !!(null === (a = null == e ? void 0 : e.featureFlags) || void 0 === a ? void 0 : a.enable_user_privacy_settings) && (!(0, o.jq)(t) || (0, i.d0)(t, e) || "experiment" === (0, r.j6)("connect_enable_social_underage_v2", void 0))
                },
                _ = e => {
                    var t, a;
                    return "CN" === e.ipCountry && null !== (a = null === (t = e.featureFlags) || void 0 === t ? void 0 : t.china_compliance_control) && void 0 !== a && a
                },
                f = (e, t) => {
                    const a = [{
                        streakFreezeUsed: !1
                    }];
                    e[e.length - 1] > 0 && t--;
                    for (let s = e.length - 2; s >= 0 && t > 0; s--) {
                        const n = 0 === e[s];
                        a.unshift({
                            streakFreezeUsed: n
                        }), n || t--
                    }
                    return a
                },
                S = e => e,
                y = (e, t) => {
                    const a = [],
                        s = (0, n.Ux)();
                    for (let r = 0; r <= t; ++r) {
                        const t = (0, l.$W)((0, n.$$)(s.getFullYear(), s.getMonth(), s.getDate() - r), e);
                        a.push(t)
                    }
                    const r = a.findIndex((e => void 0 !== e && e.gainedXp > 0));
                    return -1 === r ? void 0 : r
                },
                E = e => {
                    var t;
                    return Math.max(...(null !== (t = e.xpGains) && void 0 !== t ? t : []).filter((e => e.xp > 0)).map((e => e.time)))
                },
                b = (e, t) => {
                    if (t) {
                        if (void 0 === e.xpSummaries) return;
                        const t = y(e.xpSummaries, 29);
                        return void 0 !== t && t >= 7
                    }
                    const a = E(e),
                        s = (0, n.M)(a, Date.now());
                    return s >= 7 && s < 30
                },
                I = (e, t) => {
                    if (t) {
                        if (void 0 === e.xpSummaries) return;
                        return void 0 === y(e.xpSummaries, 29) && Object.keys(e.xpSummaries).length > 0
                    }
                    const a = E(e),
                        s = (0, n.M)(a, Date.now());
                    return void 0 !== e.xpGains && e.xpGains.length > 0 && s >= 30
                },
                w = e => {
                    var t;
                    const a = (0, n.RF)({
                            days: 1
                        }),
                        s = (0, n.RF)({
                            days: 7
                        });
                    return (null !== (t = e.xpGains) && void 0 !== t ? t : []).some((e => e.xp > 0 && e.time < a && e.time > s))
                },
                k = e => (0, n.aW)(1e3 * e.creationDate, Date.now()) <= 30,
                T = e => C(e, Date.now()),
                C = (e, t) => s.VO(e.xpSummaries).filter((e => void 0 !== e && (0, n.M)(e.date, t) <= 30 && e.gainedXp > 0)).length,
                R = e => {
                    const t = e.lastResurrectionTimestamp;
                    return t ? (0, n.M)(t, Date.now()) : Number.MAX_SAFE_INTEGER
                }
        },
        74597: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => r
            });
            const s = a(23630).getParser(navigator.userAgent),
                n = void 0 !== navigator.brave,
                r = {
                    android: "Android" === s.getOSName(),
                    chrome: "Chrome" === s.getBrowserName() && !n,
                    desktop: "desktop" === s.getPlatformType(),
                    edge: "Microsoft Edge" === s.getBrowserName(),
                    firefox: "Firefox" === s.getBrowserName(),
                    hasMobileApp: "iOS" === s.getOSName() || "Android" === s.getOSName() && "Amazon Silk" !== s.getBrowserName(),
                    inwechat: navigator.userAgent.toLowerCase().includes("micromessenger"),
                    ios: "iOS" === s.getOSName(),
                    macOS: "macOS" === s.getOSName(),
                    mobile: "mobile" === s.getPlatformType(),
                    safari: "Safari" === s.getBrowserName(),
                    silk: "Amazon Silk" === s.getBrowserName(),
                    windowsPhone: "Windows Phone" === s.getOSName()
                }
        },
        16086: (e, t, a) => {
            "use strict";
            a.d(t, {
                Jb: () => o,
                MJ: () => i,
                Pc: () => l
            });
            var s = a(80231),
                n = a(54412),
                r = a(58576);
            const i = e => {
                    try {
                        return parseInt(JSON.parse(s.DS.decode(e.split(".")[1])).sub, 10)
                    } catch (t) {
                        return void(0, r.vU)("Failed to parse saved JWT", {
                            data: {
                                jwt: e
                            },
                            once: !0
                        })
                    }
                },
                o = () => {
                    const e = (0, n.ej)(n.Vj.JWT),
                        t = e ? i(e) : void 0;
                    if (!t) throw Error("JWT missing");
                    return t
                },
                l = () => {
                    try {
                        return o(), !0
                    } catch {
                        return !1
                    }
                }
        },
        20028: (e, t, a) => {
            "use strict";
            a.d(t, {
                AE: () => p,
                B8: () => f,
                E4: () => _,
                GJ: () => n,
                Go: () => v,
                Jd: () => u,
                Sk: () => c,
                d1: () => m,
                dE: () => g,
                jq: () => r,
                ms: () => l,
                pN: () => h,
                u: () => d,
                vb: () => o,
                zZ: () => i
            });
            var s = a(80254);
            const n = e => (e.roles || []).includes("admin"),
                r = e => {
                    var t;
                    return (null !== (t = e.privacySettings) && void 0 !== t ? t : []).includes("AGE_RESTRICTED")
                },
                i = e => {
                    var t;
                    return (null !== (t = e.privacySettings) && void 0 !== t ? t : []).includes("COPPA_WAIVED")
                },
                o = e => (e.roles || []).includes("community-admin"),
                l = e => "ENROLLED" === e.betaStatus || d(e),
                c = e => (e.roles || []).some((e => "admin" === e || "engineering-contractor" === e)),
                d = e => !s.xb(e.globalAmbassadorStatus),
                u = e => (e.roles || []).includes("moderators"),
                g = e => !s.xb(e.joinedClassroomIds),
                p = e => !s.xb(e.observedClassroomIds),
                m = e => g(e) || p(e),
                h = e => !e.username,
                v = e => {
                    var t;
                    return c(e) || (null === (t = e.roles) || void 0 === t ? void 0 : t.some((e => "ios-builds-download" === e || "localization-translator" === e)))
                },
                _ = e => !!e.canUseModerationTools,
                f = e => n(e) || o(e)
        },
        64591: (e, t, a) => {
            "use strict";
            a.d(t, {
                $f: () => i,
                FL: () => o,
                Xh: () => r
            });
            var s = a(99369),
                n = a(80254);
            const r = e => JSON.parse(JSON.stringify(e)),
                i = (e, t, a, r) => {
                    if (!t.length) return (0, s.merge)(e, a, r);
                    const i = t.reduce(((e, t) => {
                        var a;
                        return null !== (a = e[t]) && void 0 !== a ? a : {}
                    }), e);
                    return (0, s.setIn)(e, t, n.xb(i) ? a : (0, s.merge)(i, a, r))
                },
                o = (e, t, a) => i(e, t, a, {
                    deep: !0
                })
        },
        97106: (e, t, a) => {
            "use strict";
            a.d(t, {
                $W: () => G,
                $Z: () => q,
                BX: () => C,
                CT: () => m,
                Cz: () => F,
                DI: () => V,
                Ig: () => h,
                JE: () => $,
                K3: () => D,
                KM: () => x,
                Lu: () => b,
                MR: () => U,
                Ms: () => R,
                Qb: () => Z,
                R7: () => _,
                W0: () => z,
                ZS: () => O,
                Zy: () => M,
                ab: () => v,
                bG: () => S,
                ct: () => y,
                dY: () => w,
                dp: () => g,
                dr: () => L,
                fu: () => N,
                g3: () => K,
                h0: () => Q,
                ix: () => P,
                jB: () => u,
                mX: () => T,
                nF: () => A,
                o6: () => p,
                on: () => f,
                pu: () => I,
                t1: () => E,
                tL: () => k,
                tV: () => W,
                uD: () => B,
                xc: () => H,
                zL: () => j
            });
            var s = a(50888),
                n = (a(97544), a(17135)),
                r = a(11883),
                i = a(8654),
                o = a(23275),
                l = a(84401),
                c = a(18804),
                d = a(11811);
            const u = 9e5,
                g = 18e5,
                p = (e, t) => {
                    for (const a of [1, 2, 5])
                        if (Math.ceil(e / a) <= t) return a;
                    return 10 * Math.ceil(e / t / 10)
                },
                m = (e, t) => void 0 === t ? 0 : Math.ceil(5 * t / e),
                h = (e, t, a) => {
                    const {
                        enableBonusPoints: s,
                        maxInLessonStreak: n,
                        session: r
                    } = e, i = r.xpGain;
                    return {
                        bonusXp: s && e.completedWithHeartsRemaining ? m(r.challenges.length, n) : 0,
                        hasXpBoost: a,
                        totalXpThisSession: i,
                        totalXpToday: t
                    }
                },
                v = (e, t) => _(e, t)[6],
                _ = (e, t, a = "0") => {
                    const s = [0, 0, 0, 0, 0, 0, 0];
                    if (!t) return s;
                    const r = (0, n.Ko)(e),
                        i = -1 * (0, n.Rw)(a) * 3600,
                        o = (0, n.Zo)();
                    for (const e of t) {
                        const t = o - r + 86400 - 1,
                            a = Math.floor((t - (e.time + i)) / 86400);
                        a >= 0 && a <= 6 && (s[6 - a] += e.xp)
                    }
                    return s
                },
                f = 30,
                S = 15,
                y = 10,
                E = 5,
                b = 10,
                I = 20,
                w = 30,
                k = 15,
                T = 40,
                C = 40,
                R = C / 2,
                L = 4,
                A = 3,
                P = 5,
                D = 2,
                N = 20,
                O = 10,
                x = 5,
                F = 10,
                M = 20,
                U = 5,
                H = (e, t, a) => {
                    var s, n;
                    if ((null === (s = e.levelData) || void 0 === s ? void 0 : s.level) && (0, o.$)(e.levelData.level)) return I + m(e.session.challenges.length, e.maxInLessonStreak);
                    if ((0, o.Wc)(null === (n = e.levelData) || void 0 === n ? void 0 : n.level.state) && ["LEXEME_PRACTICE", "LESSON"].includes(e.session.type)) return P + m(e.session.challenges.length, e.maxInLessonStreak);
                    if (e.sessionParams.isFinalLevel) return !e.completedWithHeartsRemaining && void 0 !== e.partialXpGiven && e.partialXpGiven > 0 ? e.partialXpGiven : C + (e.enableBonusPoints ? m(e.session.challenges.length, e.maxInLessonStreak) : 0);
                    if ((0, l.rK)(e.session.type)) {
                        if (e.session.type === d.FF.SpecifiedMatchPractice) {
                            const e = a ? D : 1;
                            return (0, l.w)(t) * e
                        }
                        return N
                    }
                },
                G = (e, t) => {
                    const a = (0, n.cz)(e);
                    return null == t ? void 0 : t[a]
                },
                V = (e, t, a) => {
                    const s = [],
                        r = (0, n.Gz)(e);
                    for (; r <= (0, n.Gz)(t);) s.push(G(r, a)), r.setDate(r.getDate() + 1);
                    return s
                },
                B = (e, t) => {
                    const a = e.getFullYear(),
                        s = e.getMonth(),
                        r = e.getDate(),
                        o = (0, n.kJ)(a, s, (0, i.k8)()),
                        l = 7 * Math.floor((r - 1 + o) / 7) - o + 1,
                        c = [];
                    for (let e = 0; e < 7; ++e) c.push(G((0, n.$$)(a, s, l + e), t));
                    return c
                },
                z = (e, t) => {
                    const a = [],
                        s = (0, n.Ux)();
                    for (let r = 1; r <= e; ++r) {
                        const e = G((0, n.$$)(s.getFullYear(), s.getMonth(), s.getDate() - r), t);
                        void 0 !== e && a.push(e)
                    }
                    return a
                },
                Z = e => {
                    var t;
                    return null !== (t = null == e ? void 0 : e.streakExtended) && void 0 !== t && t
                },
                W = e => !!e && (e.streakExtended || e.frozen || e.repaired),
                $ = (e, t) => e.map((e => {
                    const a = e[0],
                        s = a.getFullYear(),
                        r = a.getMonth(),
                        i = a.getDate(),
                        o = (0, n.$$)(s, r, i - 1),
                        l = (0, n.$$)(s, r, i + 7);
                    return [G(o, t), ...e.map((e => G(e, t))), G(l, t)]
                }));
            var j;
            ! function(e) {
                e.ITEM_NAME_15_MIN = "xp_boost_15", e.ITEM_NAME_30_MIN = "general_xp_boost"
            }(j || (j = {}));
            const q = {
                    [j.ITEM_NAME_15_MIN]: u,
                    [j.ITEM_NAME_30_MIN]: g
                },
                Q = e => {
                    const t = Object.entries(q).map((([t, a]) => {
                        var s;
                        const n = null === (s = e[t]) || void 0 === s ? void 0 : s.purchaseDate;
                        return [t, void 0 === n ? void 0 : 1e3 * n + a]
                    })).filter((([, e]) => void 0 !== e));
                    return t.length > 0 ? t.sort((([, e], [, t]) => t - e))[0][0] : void 0
                },
                K = () => {
                    const e = (0, r.Z)(1e4);
                    return (0, c.Fx)((t => (0, s.mu)(t, e)))
                }
        },
        10391: (e, t, a) => {
            "use strict";
            a.d(t, {
                iY: () => n,
                jL: () => i,
                mH: () => s,
                tW: () => r
            });
            const s = (e, t) => {
                    const a = Math.max(e.top, t.top),
                        s = Math.min(e.bottom, t.bottom),
                        n = Math.max(e.left, t.left),
                        r = Math.min(e.right, t.right) - n,
                        i = s - a;
                    if (!(r < 0 || i < 0)) return new DOMRect(n, a, r, i)
                },
                n = (e, t) => {
                    const a = t.map(((t, a) => "px" === t.unit ? t.value : t.value * (a % 2 ? e.width : e.height) / 100)),
                        s = e.bottom + a[2],
                        n = e.left - a[3],
                        r = e.right + a[1],
                        i = e.top - a[0];
                    return new DOMRect(n, i, r - n, s - i)
                },
                r = e => e instanceof Element ? e.getBoundingClientRect() : new DOMRect(0, 0, window.innerWidth, window.innerHeight),
                i = (e = "0px") => {
                    const t = e.split(/\s+/).map((e => {
                        const t = /^(-?\d*\.?\d+)(px|%)$/.exec(e);
                        if (!t) throw Error("rootMargin must be specified in pixels or percent");
                        return {
                            unit: t[2],
                            value: parseFloat(t[1])
                        }
                    }));
                    return t[1] = t[1] || t[0], t[2] = t[2] || t[0], t[3] = t[3] || t[1], t
                }
        },
        5768: (e, t, a) => {
            "use strict";
            a.d(t, {
                Z: () => ca
            });
            const s = a.p + "images/pathCharacters/active/f6716f60d235309775505d851d765c85.svg",
                n = a.p + "images/pathCharacters/active/bdb3ba49eeb7f68dcd4b4310996757df.svg",
                r = a.p + "images/pathCharacters/active/c085c27e83dae9c384a1fa5623caf378.svg",
                i = a.p + "images/pathCharacters/active/2b8208acfd8a19539a7f1f0f583eedaa.svg",
                o = a.p + "images/pathCharacters/active/5fc71197a1416e4be54c4b5b29499f94.svg",
                l = a.p + "images/pathCharacters/active/2d9777e95d5de19a2093d197c46c1c0e.svg",
                c = a.p + "images/pathCharacters/active/349d9719f6303f61230e835ed661dbb5.svg",
                d = a.p + "images/pathCharacters/active/940d8a1e046b65de37bec0cbbd0cb7d5.svg",
                u = a.p + "images/pathCharacters/active/82bf5cd118b395613c530684ba24875d.svg",
                g = a.p + "images/pathCharacters/active/f5021878026faa91fba2d00ad725e595.svg",
                p = a.p + "images/pathCharacters/active/1d0f3d4cac09ecc764b48e4216971340.svg",
                m = a.p + "images/pathCharacters/active/1f3c7406207c51a83e70f51a8b278c9a.svg",
                h = a.p + "images/pathCharacters/active/a506d9752e476f9e29b898c8350e21c6.svg",
                v = a.p + "images/pathCharacters/active/7165a21f9d59c20266995311eac2b85b.svg",
                _ = a.p + "images/pathCharacters/active/41ac3c186ece34d11eead4b83018deec.svg",
                f = a.p + "images/pathCharacters/active/e586e997ac5f61e9efc539a897ea97fa.svg",
                S = a.p + "images/pathCharacters/active/017db225b5af3a57e8c96ad6e68407f5.svg",
                y = a.p + "images/pathCharacters/active/6b1c65328a8b08a992ddfdac410f1e59.svg",
                E = a.p + "images/pathCharacters/active/505dc128d86274a4ae042aaff86e9ee8.svg",
                b = a.p + "images/pathCharacters/active/e8ca616fcc85da2b7103c5d3dab47c9e.svg",
                I = a.p + "images/pathCharacters/active/70f2dc0e9b24a7c1b75dcc4f06220def.svg",
                w = a.p + "images/pathCharacters/active/f33931b2e9c90975dc4f16385e3b9986.svg",
                k = a.p + "images/pathCharacters/active/b14deaeb92aba09a8db341eed854a510.svg",
                T = a.p + "images/pathCharacters/active/b130575f6cf5010b979252cc7082bff0.svg",
                C = a.p + "images/pathCharacters/active/bf0ea3175ff65517dbbcda2a51088310.svg",
                R = a.p + "images/pathCharacters/active/97f5073db4f9edb223cc3745fb101189.svg",
                L = a.p + "images/pathCharacters/active/42d8973fd7661278e821e6b443e3cd04.svg",
                A = a.p + "images/pathCharacters/active/f8ce8a90aa5638e8f8c6f911cab769c5.svg",
                P = a.p + "images/pathCharacters/active/8377ccd0d783587c5b29afba076dda3f.svg",
                D = a.p + "images/pathCharacters/active/768e7ac6704417d6a979e4f051ee4cfc.svg",
                N = a.p + "images/pathCharacters/active/68f281ca714a348cd289484f8922e06a.svg",
                O = a.p + "images/pathCharacters/active/c4ca05b766187c339c99a5e574a28ce4.svg",
                x = a.p + "images/pathCharacters/active/586f98637f46d0832a67b074714149dc.svg",
                F = a.p + "images/pathCharacters/active/0421ab9ac2e358694cf788b984f0a0f4.svg",
                M = a.p + "images/pathCharacters/active/b2c48eddbd0646c3c89d042125ef31e0.svg",
                U = a.p + "images/pathCharacters/active/b53ad129e94857a2d4c2affca721b2c8.svg",
                H = a.p + "images/pathCharacters/active/71d4f6db082a480c6e223c20a3e960af.svg",
                G = a.p + "images/pathCharacters/active/09b658f65939dd745b7c74c90ab26818.svg",
                V = a.p + "images/pathCharacters/active/c2fa6ca1ce048c415513d495475eec41.svg",
                B = a.p + "images/pathCharacters/active/8751c385f1b3a57ce6af336091dfcd4d.svg",
                z = a.p + "images/pathCharacters/active/ee46ea4ca925eaab1e5e02e9c3ac85e1.svg",
                Z = a.p + "images/pathCharacters/active/ceb30a4743ccd7ac766338cc7a66b752.svg",
                W = a.p + "images/pathCharacters/guidebook/53c8fcd21f5e6f8d4e532213964806fa.svg",
                $ = a.p + "images/pathCharacters/guidebook/8f43a38bf751cb8dff793a838c89df0d.svg",
                j = a.p + "images/pathCharacters/guidebook/73d5e4f9fa2f1941ab8d05060e190940.svg",
                q = a.p + "images/pathCharacters/guidebook/939ebad747027f1a9d365e15fda3a4e1.svg",
                Q = a.p + "images/pathCharacters/guidebook/efc93544fcf3855e11f88bb2cfa5ae6a.svg",
                K = a.p + "images/pathCharacters/guidebook/cb8f7d0a6699de6bef9bfd462d137c2a.svg",
                Y = a.p + "images/pathCharacters/guidebook/b6c0d8b501a7f39c054475e567f2cd86.svg",
                J = a.p + "images/pathCharacters/guidebook/a0c36a29597aaa9f405737994609e4bf.svg",
                X = a.p + "images/pathCharacters/guidebook/9a365074d115c04b61aa34afba7d2bd5.svg",
                ee = a.p + "images/pathCharacters/guidebook/1ea369918b8e64958448ad6e7efc7344.svg",
                te = a.p + "images/pathCharacters/guidebook/f86794ff3b20c42b827f8f4e8bf28fc2.svg",
                ae = a.p + "images/pathCharacters/guidebook/40c909d8f85e07ad2f7d9d8d6da75902.svg",
                se = a.p + "images/pathCharacters/guidebook/61e3a5ac98e388bf0de9244e10da39cb.svg",
                ne = a.p + "images/pathCharacters/guidebook/c2c4bf353572100fb3f67e195e63c351.svg",
                re = a.p + "images/pathCharacters/guidebook/d0d8dc7a1a4e8e0a95ff0484fb9b17ae.svg",
                ie = a.p + "images/pathCharacters/guidebook/315a044a2d6f81b9c832db26bf62b215.svg",
                oe = a.p + "images/pathCharacters/guidebook/37f70fb52e74cb666f289cf53d520cc5.svg",
                le = a.p + "images/pathCharacters/guidebook/ff005cafd223412b5bfd7ad2d2ee0cdf.svg",
                ce = a.p + "images/pathCharacters/guidebook/120cbef6f780776c0022d557813e5f74.svg",
                de = a.p + "images/pathCharacters/guidebook/dcdb3d27bf8b8cb6cd6cf830964a39c8.svg",
                ue = a.p + "images/pathCharacters/guidebook/03f7ef1e0cb60e21264ca58ca9d71e03.svg",
                ge = a.p + "images/pathCharacters/guidebook/efacf57a4e0d5050d284ba87aa1c6c02.svg",
                pe = a.p + "images/pathCharacters/guidebook/b75147787f7b6802fd1586fe1c2cd41e.svg",
                me = a.p + "images/pathCharacters/guidebook/d5f85b5af625ee3ac0bf1649f76cd56f.svg",
                he = a.p + "images/pathCharacters/guidebook/c878e993696ae48c101701e1b724d53b.svg",
                ve = a.p + "images/pathCharacters/guidebook/156abbe091927eb035122b8e3761848b.svg",
                _e = a.p + "images/pathCharacters/guidebook/4eaafed54241c1649af93bd8c9a4d2f7.svg",
                fe = a.p + "images/pathCharacters/guidebook/9de3ba3ddfc50cfa99c5bd1afac683df.svg",
                Se = a.p + "images/pathCharacters/guidebook/f840f12b8161bb2c8fcbbf303fad60fb.svg",
                ye = a.p + "images/pathCharacters/guidebook/98e0df0e56367f7642df7a1ffa127faf.svg",
                Ee = a.p + "images/pathCharacters/guidebook/f75ac5f895a988580dc58c17440092f9.svg",
                be = a.p + "images/pathCharacters/guidebook/d16b76c27fcfaabd59f258018d3cf8bb.svg",
                Ie = a.p + "images/pathCharacters/guidebook/34e2fb16e4c6ad068a2004dc08823397.svg",
                we = a.p + "images/pathCharacters/guidebook/0a7807397bc9125928ba9c642aec48b3.svg",
                ke = a.p + "images/pathCharacters/guidebook/83d237fc9ab23cadf31b0923048de22d.svg",
                Te = a.p + "images/pathCharacters/guidebook/16c6a73cb17b74b555c33b8ba90130b1.svg",
                Ce = a.p + "images/pathCharacters/guidebook/8304c27670dcb005c76d2a2f858f3238.svg",
                Re = a.p + "images/pathCharacters/guidebook/e1216e99a0b4f3e2b41220dba8805cc4.svg",
                Le = a.p + "images/pathCharacters/guidebook/6b51686fcb4d14ca3ea3dedaf6a120ef.svg",
                Ae = a.p + "images/pathCharacters/guidebook/86b2ffcca31cec80a8f443a03ab7a552.svg",
                Pe = a.p + "images/pathCharacters/guidebook/d982595bad4aeecdb7fb143357591000.svg",
                De = a.p + "images/pathCharacters/guidebook/4c6f1af016a2d198bb198a690889b303.svg",
                Ne = a.p + "images/pathCharacters/locked/91e7b42fcfad51403e221227646d6bf7.svg",
                Oe = a.p + "images/pathCharacters/locked/712983de6ee1534605ff11e8e7db1f9d.svg",
                xe = a.p + "images/pathCharacters/locked/ec557effb34d21d0bc4ec743cc6b88eb.svg",
                Fe = a.p + "images/pathCharacters/locked/5a84d39927b1f9ff52797b8dd305c8e9.svg",
                Me = a.p + "images/pathCharacters/locked/b2aa4648b65477fa276fbf2987575756.svg",
                Ue = a.p + "images/pathCharacters/locked/e33954c3ceeea67f43937613c3f4cc0a.svg",
                He = a.p + "images/pathCharacters/locked/b77ce87b8d78bf56fbec23b9abe2ff51.svg",
                Ge = a.p + "images/pathCharacters/locked/bf1a9ccba05390a74cf13a0f7c9a665d.svg",
                Ve = a.p + "images/pathCharacters/locked/905c171ee1863bfa3cfff749ce7b0fda.svg",
                Be = a.p + "images/pathCharacters/locked/061c9a310ba3cb90a5165046e9b807c4.svg",
                ze = a.p + "images/pathCharacters/locked/40203307d51ccadc8592fb18c9b3495e.svg",
                Ze = a.p + "images/pathCharacters/locked/6fec8b4fbf961af1323716a1f94ef6a3.svg",
                We = a.p + "images/pathCharacters/locked/a226369d1c7123b2cab8b94c876217c2.svg",
                $e = a.p + "images/pathCharacters/locked/3b85864235b8ff1dca19e95e5626b581.svg",
                je = a.p + "images/pathCharacters/locked/9c2dab526f9f8d5bbbf6640f8dceb3be.svg",
                qe = a.p + "images/pathCharacters/locked/5fd0a5a8769f5dba24bca6378f8d50f0.svg",
                Qe = a.p + "images/pathCharacters/locked/0e95d11fb22f79166a6e1a234fbd588c.svg",
                Ke = a.p + "images/pathCharacters/locked/9b47b796e62017999b87844189101f6f.svg",
                Ye = a.p + "images/pathCharacters/locked/f328bd6af7a695e18b14151d41af0bb7.svg",
                Je = a.p + "images/pathCharacters/locked/895382cc24dd06b9051d91b0aede65d1.svg",
                Xe = a.p + "images/pathCharacters/locked/553fbab291d8d785159c3f37dc0a08b8.svg",
                et = a.p + "images/pathCharacters/locked/f9390df95434c7fde9b81bee083a1b1b.svg",
                tt = a.p + "images/pathCharacters/locked/6d779e83712860a01164c3145c65818a.svg",
                at = a.p + "images/pathCharacters/locked/6c7e2a7843e764cbb4ed665ba22f0015.svg",
                st = a.p + "images/pathCharacters/locked/4fe84a0544799c74348afb28bb9833da.svg",
                nt = a.p + "images/pathCharacters/locked/dbd618958ac83871a1b1a43983ef9e11.svg",
                rt = a.p + "images/pathCharacters/locked/34443969dabd59f00795cc94457c1b3b.svg",
                it = a.p + "images/pathCharacters/locked/3f3753f97c661eb8dcc99b6b9296f5c0.svg",
                ot = a.p + "images/pathCharacters/locked/f0170ea1b382b18bf20cc8542319d737.svg",
                lt = a.p + "images/pathCharacters/locked/79487c035b5b5851604e1cbad2a08ce5.svg",
                ct = a.p + "images/pathCharacters/locked/9ebf7d48e9584e3cf5664e48045f76a5.svg",
                dt = a.p + "images/pathCharacters/locked/738a67cd7d33976c73a2894b741bb6eb.svg",
                ut = a.p + "images/pathCharacters/locked/57c584002faafd3eb2eac6fc3a9cb1b5.svg",
                gt = a.p + "images/pathCharacters/locked/f1a8ca7d22677f84c9781b7e9034f688.svg",
                pt = a.p + "images/pathCharacters/locked/1a590fb861a96e0bf266bfa51b4c49f2.svg",
                mt = a.p + "images/pathCharacters/locked/2cd0458ca11c7750844aec70009447a1.svg",
                ht = a.p + "images/pathCharacters/locked/a39bec2df6719a6ccfaedce0dadb8186.svg",
                vt = a.p + "images/pathCharacters/locked/4da08f8ab837264583efa654925e6c60.svg",
                _t = a.p + "images/pathCharacters/locked/f61b069908217e296577a477e58e00a5.svg",
                ft = a.p + "images/pathCharacters/locked/a0cb3a88f573417a7c8947a27ca0fdf5.svg",
                St = a.p + "images/pathCharacters/locked/e489245b60a7f45968e3cf497d7e4a13.svg",
                yt = a.p + "images/pathCharacters/locked/51c2fae37ac6000a32b56b49452300c1.svg",
                Et = a.p + "images/pathCharacters/dark/d04961b6ab7a67fc666c31ddb9ae7300.svg",
                bt = a.p + "images/pathCharacters/dark/d8c966fb8b990397836029468874b3c7.svg",
                It = a.p + "images/pathCharacters/dark/6424c07838b740553d47b194169b9687.svg",
                wt = a.p + "images/pathCharacters/dark/e34ed8cd1c855f7a0bd355aa753f6187.svg",
                kt = a.p + "images/pathCharacters/dark/c9379a6ea0a3d2304db5107c87e9cd8d.svg",
                Tt = a.p + "images/pathCharacters/dark/9edc1bab8bb64e35d1a6ad46acf6f21f.svg",
                Ct = a.p + "images/pathCharacters/dark/063b19fbbfec48f887c7d5ad2b1849d7.svg",
                Rt = a.p + "images/pathCharacters/dark/c4419cac8477c25a1761abbf438cf531.svg",
                Lt = a.p + "images/pathCharacters/dark/05164af290313e637e51f5a30c472e96.svg",
                At = a.p + "images/pathCharacters/dark/297a3a905c8cabf3728dc123e9eed2ae.svg",
                Pt = a.p + "images/pathCharacters/dark/f8fa790433c0f5cb4eccf8b15ec17cb7.svg",
                Dt = a.p + "images/pathCharacters/dark/b82d75c2859ed7eb6fc32415cd4a049a.svg",
                Nt = a.p + "images/pathCharacters/dark/8f596552d9922c0053afb1595fd17e4d.svg",
                Ot = a.p + "images/pathCharacters/dark/e46e218ccaf58ee7b0828b2d7823f67e.svg",
                xt = a.p + "images/pathCharacters/dark/a182083228ca9ae7caa6e04c67ba3319.svg",
                Ft = a.p + "images/pathCharacters/dark/7c9adeb1fe285009c6e2a66237a1d67c.svg",
                Mt = a.p + "images/pathCharacters/dark/61a06d7064f6e9faf54ad90f2e91f82b.svg",
                Ut = a.p + "images/pathCharacters/dark/7dee264e444be67317676501571d1adf.svg",
                Ht = a.p + "images/pathCharacters/dark/0658130f08ebff08d9fec5f63de374ad.svg",
                Gt = a.p + "images/pathCharacters/dark/9614e10008fe07d7cc143883a76bed81.svg",
                Vt = a.p + "images/pathCharacters/dark/2d30e5a86c537dac04b7f87e50faa495.svg",
                Bt = a.p + "images/pathCharacters/dark/c45923336541ef5a8309a1758ff5ca91.svg",
                zt = a.p + "images/pathCharacters/dark/0666681732336ff1a9740bba04bd0920.svg",
                Zt = a.p + "images/pathCharacters/dark/6f31bc33f041ccb7009072ddeebefd54.svg",
                Wt = a.p + "images/pathCharacters/dark/4830ce54059fde22c292153f044eea5b.svg",
                $t = a.p + "images/pathCharacters/dark/f389b81e89cdb9c91f1c11d0e2b43c6c.svg",
                jt = a.p + "images/pathCharacters/dark/a3e1fd17f6d11b10ecae6bf5bc1ca701.svg",
                qt = a.p + "images/pathCharacters/dark/fd54597a7b5e285bce32a8a97860b9c1.svg",
                Qt = a.p + "images/pathCharacters/dark/497f3d136d0af6285e915ed47c4a8f36.svg",
                Kt = a.p + "images/pathCharacters/dark/24b858c7608560bff72d1eacc89467e1.svg",
                Yt = a.p + "images/pathCharacters/dark/7a6f4ccab9ff546c3f3780d33a0641ff.svg",
                Jt = a.p + "images/pathCharacters/dark/5c67588a2c368e997aeabe4f1d349593.svg",
                Xt = a.p + "images/pathCharacters/dark/9d3aea4743e0cb72d2449a5b400de680.svg",
                ea = a.p + "images/pathCharacters/dark/350eb5e80d4ddc292088d0acc5ef3e2d.svg",
                ta = a.p + "images/pathCharacters/dark/c43181b8aff6b93a60c67aa9683352bd.svg",
                aa = a.p + "images/pathCharacters/dark/1c076601edde48ff382d23b0929d277e.svg",
                sa = a.p + "images/pathCharacters/dark/d2df0451dcc78faeba2fd5e4bb0d1422.svg",
                na = a.p + "images/pathCharacters/dark/b3ae4979d0f3a2d284727d3aa8b6d755.svg",
                ra = a.p + "images/pathCharacters/dark/365b784b66dd40dab60da28e065b8b9a.svg",
                ia = a.p + "images/pathCharacters/dark/791fc3429e145eafb9419778f922f13e.svg",
                oa = a.p + "images/pathCharacters/dark/096e4bb633b6c35eba1a2ec2f814e7d4.svg",
                la = a.p + "images/pathCharacters/dark/379c41f243b0bac4ec06e120ad03e9fc.svg",
                ca = {
                    BEA_SMORES: {
                        activeImage: s,
                        guidebookHeaderImage: W,
                        lockedImage: Ne,
                        darkImage: Et,
                        animation: a.p + "lottie/pathCharacters/1607e4d7d34a90b7801f1c47d6f9c6ea.json"
                    },
                    BEA_TENNIS: {
                        activeImage: n,
                        guidebookHeaderImage: $,
                        lockedImage: Oe,
                        darkImage: bt,
                        animation: a.p + "lottie/pathCharacters/fe36d90699c984de29ff7981c9cc2d05.json"
                    },
                    DUO_BALL: {
                        activeImage: r,
                        guidebookHeaderImage: j,
                        lockedImage: xe,
                        darkImage: It,
                        animation: a.p + "lottie/pathCharacters/241a1daf9e1650c59c2421aa73744336.json"
                    },
                    DUO_BOOKS: {
                        activeImage: i,
                        guidebookHeaderImage: q,
                        lockedImage: Fe,
                        darkImage: wt,
                        animation: a.p + "lottie/pathCharacters/dc7f54a73e6340a16176a91bf0d18b83.json"
                    },
                    DUO_BUTTERFLY: {
                        activeImage: o,
                        guidebookHeaderImage: Q,
                        lockedImage: Me,
                        darkImage: kt,
                        animation: a.p + "lottie/pathCharacters/192edd4e5f1a09d2d53f8ab605b05695.json"
                    },
                    DUO_CHEER: {
                        activeImage: l,
                        guidebookHeaderImage: K,
                        lockedImage: Ue,
                        darkImage: Tt,
                        animation: a.p + "lottie/pathCharacters/7e038d7ac140bbafc9a6665404f0efe1.json"
                    },
                    DUO_GEM: {
                        activeImage: c,
                        guidebookHeaderImage: Y,
                        lockedImage: He,
                        darkImage: Ct,
                        animation: a.p + "lottie/pathCharacters/c61c8f0fe4a9e1a9ae4f443eb7c314f0.json"
                    },
                    DUO_GLOBE: {
                        activeImage: d,
                        guidebookHeaderImage: J,
                        lockedImage: Ge,
                        darkImage: Rt,
                        animation: a.p + "lottie/pathCharacters/71886a73198014f8277ba04fa5f5fbf0.json"
                    },
                    DUO_HEADPHONES: {
                        activeImage: u,
                        guidebookHeaderImage: X,
                        lockedImage: Ve,
                        darkImage: Lt,
                        animation: a.p + "lottie/pathCharacters/db2060dfa323f5380a5aad451b089ae8.json"
                    },
                    DUO_JUMPFLAP: {
                        activeImage: g,
                        guidebookHeaderImage: ee,
                        lockedImage: Be,
                        darkImage: At,
                        animation: a.p + "lottie/pathCharacters/8bb6c897c3f01efa2cbd0c138772ef67.json"
                    },
                    DUO_POTION: {
                        activeImage: p,
                        guidebookHeaderImage: te,
                        lockedImage: ze,
                        darkImage: Pt,
                        animation: a.p + "lottie/pathCharacters/320a1cd60f7d26a3d4b7801fecc7f01e.json"
                    },
                    DUO_SUNGLASSES: {
                        activeImage: m,
                        guidebookHeaderImage: ae,
                        lockedImage: Ze,
                        darkImage: Dt,
                        animation: a.p + "lottie/pathCharacters/f872318ec63a7e667458456703a51513.json"
                    },
                    DUO_TWIRL: {
                        activeImage: h,
                        guidebookHeaderImage: se,
                        lockedImage: We,
                        darkImage: Nt,
                        animation: a.p + "lottie/pathCharacters/01a1427cc5613179ea3d7568a5f7445b.json"
                    },
                    DUO_WHISTLING: {
                        activeImage: v,
                        guidebookHeaderImage: ne,
                        lockedImage: $e,
                        darkImage: Ot,
                        animation: a.p + "lottie/pathCharacters/9eaf4990aaf1c6a96ea3960cf159c787.json"
                    },
                    EDDY_BASKETBALL: {
                        activeImage: _,
                        guidebookHeaderImage: re,
                        lockedImage: je,
                        darkImage: xt,
                        animation: a.p + "lottie/pathCharacters/a6b12fd04248e71c10fb618c21728f64.json"
                    },
                    EDDY_JUMPROPE: {
                        activeImage: f,
                        guidebookHeaderImage: ie,
                        lockedImage: qe,
                        darkImage: Ft,
                        animation: a.p + "lottie/pathCharacters/67844ded0243177e653006a90ff2d123.json"
                    },
                    FALSTAFF_EATING: {
                        activeImage: S,
                        guidebookHeaderImage: oe,
                        lockedImage: Qe,
                        darkImage: Mt,
                        animation: a.p + "lottie/pathCharacters/2b220ab845add3699ee05c74616256a2.json"
                    },
                    FALSTAFF_FISHING: {
                        activeImage: y,
                        guidebookHeaderImage: le,
                        lockedImage: Ke,
                        darkImage: Ut,
                        animation: a.p + "lottie/pathCharacters/ae34cc76c0de53ade116ac8805199ba2.json"
                    },
                    FALSTAFF_SNEEZING: {
                        activeImage: E,
                        guidebookHeaderImage: ce,
                        lockedImage: Ye,
                        darkImage: Ht,
                        animation: a.p + "lottie/pathCharacters/08a9aac28d225ce2bedcbdb26327bf7f.json"
                    },
                    FALSTAFF_SNOOZE: {
                        activeImage: b,
                        guidebookHeaderImage: de,
                        lockedImage: Je,
                        darkImage: Gt,
                        animation: a.p + "lottie/pathCharacters/f1ef5bf2963d4a07a873b19b97452c17.json"
                    },
                    JUNIOR_FROG: {
                        activeImage: I,
                        guidebookHeaderImage: ue,
                        lockedImage: Xe,
                        darkImage: Vt,
                        animation: a.p + "lottie/pathCharacters/88d9353d9f8743e369eff8bb7e903e08.json"
                    },
                    JUNIOR_ICECREAM: {
                        activeImage: w,
                        guidebookHeaderImage: ge,
                        lockedImage: et,
                        darkImage: Bt,
                        animation: a.p + "lottie/pathCharacters/094c591bedc6b367a58332bbe4da9319.json"
                    },
                    JUNIOR_POGO: {
                        activeImage: k,
                        guidebookHeaderImage: pe,
                        lockedImage: tt,
                        darkImage: zt,
                        animation: a.p + "lottie/pathCharacters/35a6eb069de131103f1a217dc839974d.json"
                    },
                    JUNIOR_SLEEP: {
                        activeImage: T,
                        guidebookHeaderImage: me,
                        lockedImage: at,
                        darkImage: Zt,
                        animation: a.p + "lottie/pathCharacters/c522eaf9eba484ed712bb6d2235e8b92.json"
                    },
                    LILY_DOOMSCROLL: {
                        activeImage: C,
                        guidebookHeaderImage: he,
                        lockedImage: st,
                        darkImage: Wt,
                        animation: a.p + "lottie/pathCharacters/c89e727c30b2be9affdbe76d869f45fa.json"
                    },
                    LILY_RAINCLOUD: {
                        activeImage: R,
                        guidebookHeaderImage: ve,
                        lockedImage: nt,
                        darkImage: $t,
                        animation: a.p + "lottie/pathCharacters/884f551952f9476c7b9b98a344fb6119.json"
                    },
                    LILY_SHIRTS: {
                        activeImage: L,
                        guidebookHeaderImage: _e,
                        lockedImage: rt,
                        darkImage: jt,
                        animation: a.p + "lottie/pathCharacters/a3579eb9c6bb2fd6ee757fe0e7e415ad.json"
                    },
                    LIN_BIKE: {
                        activeImage: A,
                        guidebookHeaderImage: fe,
                        lockedImage: it,
                        darkImage: qt,
                        animation: a.p + "lottie/pathCharacters/bbdaf0d9b14a9aedddf9677b081b2ccb.json"
                    },
                    LIN_BIKEKISS: {
                        activeImage: P,
                        guidebookHeaderImage: Se,
                        lockedImage: ot,
                        darkImage: Qt,
                        animation: a.p + "lottie/pathCharacters/5e697e3598a488b072c5c9a26b0698a9.json"
                    },
                    LUCY_CAT: {
                        activeImage: D,
                        guidebookHeaderImage: ye,
                        lockedImage: lt,
                        darkImage: Kt,
                        animation: a.p + "lottie/pathCharacters/ba26a1174d78ad0448028049f9caf665.json"
                    },
                    LUCY_WALKIETALKIE: {
                        activeImage: N,
                        guidebookHeaderImage: Ee,
                        lockedImage: ct,
                        darkImage: Yt,
                        animation: a.p + "lottie/pathCharacters/ed60015b3035b85cf593ec1e2c941077.json"
                    },
                    OSCAR_BONSAI: {
                        activeImage: O,
                        guidebookHeaderImage: be,
                        lockedImage: dt,
                        darkImage: Jt,
                        animation: a.p + "lottie/pathCharacters/949e42a5121007d24252cc1f13dc5340.json"
                    },
                    OSCAR_COMB: {
                        activeImage: x,
                        guidebookHeaderImage: Ie,
                        lockedImage: ut,
                        darkImage: Xt,
                        animation: a.p + "lottie/pathCharacters/d8995c025643e9a8b14df60490607117.json"
                    },
                    OSCAR_FLOWER: {
                        activeImage: F,
                        guidebookHeaderImage: we,
                        lockedImage: gt,
                        darkImage: ea,
                        animation: a.p + "lottie/pathCharacters/843367dca1d93f9279d29b44e03d78bf.json"
                    },
                    OSCAR_PAINTING: {
                        activeImage: M,
                        guidebookHeaderImage: ke,
                        lockedImage: pt,
                        darkImage: ta,
                        animation: a.p + "lottie/pathCharacters/760c257b6301764926b2437c5ef49396.json"
                    },
                    VIKRAM_GRILL: {
                        activeImage: U,
                        guidebookHeaderImage: Te,
                        lockedImage: mt,
                        darkImage: aa,
                        animation: a.p + "lottie/pathCharacters/e2c0feab5bfdf0681026cf74a3e68780.json"
                    },
                    VIKRAM_NOODLES: {
                        activeImage: H,
                        guidebookHeaderImage: Ce,
                        lockedImage: ht,
                        darkImage: sa,
                        animation: a.p + "lottie/pathCharacters/53827134d9f7d9bdcdf51aaa70c808fc.json"
                    },
                    VIKRAM_PANCAKES: {
                        activeImage: G,
                        guidebookHeaderImage: Re,
                        lockedImage: vt,
                        darkImage: na,
                        animation: a.p + "lottie/pathCharacters/235a9512cd87635aae19380f4fd4ff46.json"
                    },
                    VIKRAM_PANSIES: {
                        activeImage: V,
                        guidebookHeaderImage: Le,
                        lockedImage: _t,
                        darkImage: ra,
                        animation: a.p + "lottie/pathCharacters/4563de1e9b220d608fe1e0959e5bb74e.json"
                    },
                    ZARI_GAMING: {
                        activeImage: B,
                        guidebookHeaderImage: Ae,
                        lockedImage: ft,
                        darkImage: ia,
                        animation: a.p + "lottie/pathCharacters/e3fe1ff10daf05e0cc2499af28f113db.json"
                    },
                    ZARI_KICK: {
                        activeImage: z,
                        guidebookHeaderImage: Pe,
                        lockedImage: St,
                        darkImage: oa,
                        animation: a.p + "lottie/pathCharacters/2eecad629ae938d2a280feeab1f33aac.json"
                    },
                    ZARI_LOLLIPOP: {
                        activeImage: Z,
                        guidebookHeaderImage: De,
                        lockedImage: yt,
                        darkImage: la,
                        animation: a.p + "lottie/pathCharacters/f30c12ed93bdc41695cdded00b8f45a9.json"
                    }
                }
        },
        63198: (e, t, a) => {
            var s = {
                "./sampleChallenges.json": [48033, 223, 5314, 75],
                "./sampleChallengesCharacterWrite.json": [92485, 5770],
                "./sampleChallengesJapanese.json": [89437, 407, 3860, 5905],
                "./sampleChallengesKorean.json": [66265, 407, 7493, 3860, 1012, 7764],
                "./sampleChallengesPuzzleArabic.json": [18451, 2039, 7981, 3869],
                "./sampleChallengesPuzzleKorean.json": [56158, 4099],
                "./sampleChallengesSpanish.json": [90337, 2039, 9031, 7253],
                "./sampleChallengesSpeak.json": [19872, 5123],
                "./sampleChallengesSvgPuzzle.json": [42870, 3746],
                "./sampleChallengesTrace.json": [54731, 9481]
            };

            function n(e) {
                if (!a.o(s, e)) return Promise.resolve().then((() => {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }));
                var t = s[e],
                    n = t[0];
                return Promise.all(t.slice(1).map(a.e)).then((() => a.t(n, 19)))
            }
            n.keys = () => Object.keys(s), n.id = 63198, e.exports = n
        },
        55081: (e, t, a) => {
            var s = {
                "./ar.duostrings": [99135, 9135],
                "./bn.duostrings": [17464, 7464],
                "./contextual_variables.duostrings": [78805, 8805],
                "./cs.duostrings": [96102, 6102],
                "./de.duostrings": [82867, 2867],
                "./el.duostrings": [49495, 9495],
                "./en.duostrings": [39819, 9819],
                "./es.duostrings": [12579, 2579],
                "./experiments.duostrings": [69295, 9295],
                "./fr.duostrings": [34970, 4970],
                "./hi.duostrings": [40620, 620],
                "./hu.duostrings": [39666, 9666],
                "./id.duostrings": [71062, 1062],
                "./it.duostrings": [87490, 7490],
                "./ja.duostrings": [43162, 3162],
                "./ko.duostrings": [15750, 5750],
                "./metadata.duostrings": [84309, 4309],
                "./nl-NL.duostrings": [67674, 7674],
                "./pl.duostrings": [17716, 7716],
                "./pt.duostrings": [37763, 7763],
                "./ro.duostrings": [37292, 7292],
                "./ru.duostrings": [25529, 5529],
                "./te.duostrings": [87274, 7274],
                "./th.duostrings": [39943, 9943],
                "./tl.duostrings": [8324, 821],
                "./tr.duostrings": [7396, 7396],
                "./uk.duostrings": [78374, 8374],
                "./vi.duostrings": [89036, 9036],
                "./zh-CN.duostrings": [85189, 5189],
                "./zh-TW.duostrings": [74615, 4615]
            };

            function n(e) {
                if (!a.o(s, e)) return Promise.resolve().then((() => {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }));
                var t = s[e],
                    n = t[0];
                return a.e(t[1]).then((() => a.t(n, 19)))
            }
            n.keys = () => Object.keys(s), n.id = 55081, e.exports = n
        },
        91575: (e, t, a) => {
            ! function() {
                var e = "function" == typeof Object.defineProperties ? Object.defineProperty : function(e, t, a) {
                        if (a.get || a.set) throw new TypeError("ES3 does not support getters and setters.");
                        e != Array.prototype && e != Object.prototype && (e[t] = a.value)
                    },
                    t = "undefined" != typeof window && window === this ? this : void 0 !== a.g && null != a.g ? a.g : this;

                function s() {
                    s = function() {}, t.Symbol || (t.Symbol = r)
                }
                var n = 0;

                function r(e) {
                    return "jscomp_symbol_" + (e || "") + n++
                }

                function i() {
                    s();
                    var a = t.Symbol.iterator;
                    a || (a = t.Symbol.iterator = t.Symbol("iterator")), "function" != typeof Array.prototype[a] && e(Array.prototype, a, {
                        configurable: !0,
                        writable: !0,
                        value: function() {
                            return o(this)
                        }
                    }), i = function() {}
                }

                function o(e) {
                    var a = 0;
                    return function(e) {
                        return i(), (e = {
                            next: e
                        })[t.Symbol.iterator] = function() {
                            return this
                        }, e
                    }((function() {
                        return a < e.length ? {
                            done: !1,
                            value: e[a++]
                        } : {
                            done: !0
                        }
                    }))
                }

                function l(e) {
                    if (!(e instanceof Array)) {
                        i();
                        var t = e[Symbol.iterator];
                        e = t ? t.call(e) : o(e);
                        for (var a = []; !(t = e.next()).done;) a.push(t.value);
                        e = a
                    }
                    return e
                }
                var c = [];

                function d(e, t) {
                    var a = this;
                    this.context = e, this.h = t, this.f = (this.c = /Task$/.test(t)) ? e.get(t) : e[t], this.a = [], this.b = [], this.g = function(e) {
                        for (var t = [], s = 0; s < arguments.length; ++s) t[s - 0] = arguments[s];
                        return a.b[a.b.length - 1].apply(null, [].concat(l(t)))
                    }, this.c ? e.set(t, this.g) : e[t] = this.g
                }

                function u(e, t) {
                    -1 < (t = e.a.indexOf(t)) && (e.a.splice(t, 1), 0 < e.a.length ? g(e) : -1 < (t = c.indexOf(e)) && (c.splice(t, 1), e.c ? e.context.set(e.h, e.f) : e.context[e.h] = e.f))
                }

                function g(e) {
                    e.b = [];
                    for (var t, a = 0; t = e.a[a]; a++) {
                        var s = e.b[a - 1] || e.f.bind(e.context);
                        e.b.push(t(s))
                    }
                }

                function p(e) {
                    var t = history,
                        a = c.filter((function(a) {
                            return a.context == t && a.h == e
                        }))[0];
                    return a || (a = new d(t, e), c.push(a)), a
                }
                var m, h, v, _ = Object.assign || function(e, t) {
                        for (var a = [], s = 1; s < arguments.length; ++s) a[s - 1] = arguments[s];
                        s = 0;
                        for (var n = a.length; s < n; s++) {
                            var r, i = Object(a[s]);
                            for (r in i) Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
                        }
                        return e
                    },
                    f = {
                        l: 1,
                        m: 2,
                        o: 3,
                        u: 4,
                        v: 5,
                        w: 6,
                        A: 7,
                        B: 8,
                        j: 9,
                        s: 10
                    },
                    S = Object.keys(f).length;

                function y(e, t) {
                    var a = f.j;
                    e.set("&_av", "2.4.1");
                    var s = e.get("&_au");
                    if ((s = parseInt(s || "0", 16).toString(2)).length < S)
                        for (var n = S - s.length; n;) s = "0" + s, n--;
                    a = S - a, s = s.substr(0, a) + 1 + s.substr(a + 1), e.set("&_au", parseInt(s || "0", 2).toString(16)), history.pushState && window.addEventListener && (this.b = _({
                        shouldTrackUrlChange: this.shouldTrackUrlChange,
                        trackReplaceState: !1,
                        fieldsObj: {},
                        hitFilter: null
                    }, t), this.g = e, this.i = location.pathname + location.search, this.c = this.c.bind(this), this.f = this.f.bind(this), this.a = this.a.bind(this), e = this.c, (t = p("pushState")).a.push(e), g(t), e = this.f, (t = p("replaceState")).a.push(e), g(t), window.addEventListener("popstate", this.a))
                }

                function E(e, t) {
                    setTimeout((function() {
                        var a = e.i,
                            s = location.pathname + location.search;
                        a != s && e.b.shouldTrackUrlChange.call(e, s, a) && (e.i = s, e.g.set({
                            page: s,
                            title: document.title
                        }), (t || e.b.trackReplaceState) && e.g.send("pageview", function(e, t, a) {
                            var s = {
                                transport: "beacon"
                            };
                            if ("function" == typeof a) {
                                var n = t.get("buildHitTask");
                                return {
                                    buildHitTask: function(t) {
                                        t.set(s, null, !0), t.set(e, null, !0), a(t, void 0, void 0), n(t)
                                    }
                                }
                            }
                            return _({}, s, e)
                        }(e.b.fieldsObj, e.g, e.b.hitFilter)))
                    }), 0)
                }
                y.prototype.c = function(e) {
                    var t = this;
                    return function(a) {
                        for (var s = [], n = 0; n < arguments.length; ++n) s[n - 0] = arguments[n];
                        e.apply(null, [].concat(l(s))), E(t, !0)
                    }
                }, y.prototype.f = function(e) {
                    var t = this;
                    return function(a) {
                        for (var s = [], n = 0; n < arguments.length; ++n) s[n - 0] = arguments[n];
                        e.apply(null, [].concat(l(s))), E(t, !1)
                    }
                }, y.prototype.a = function() {
                    E(this, !0)
                }, y.prototype.shouldTrackUrlChange = function(e, t) {
                    return !(!e || !t)
                }, y.prototype.remove = function() {
                    var e = this.c;
                    u(p("pushState"), e), e = this.f, u(p("replaceState"), e), window.removeEventListener("popstate", this.a)
                }, m = "urlChangeTracker", h = y, v = window.GoogleAnalyticsObject || "ga", window[v] = window[v] || function(e) {
                    for (var t = [], a = 0; a < arguments.length; ++a) t[a - 0] = arguments[a];
                    (window[v].q = window[v].q || []).push(t)
                }, window.gaDevIds = window.gaDevIds || [], 0 > window.gaDevIds.indexOf("i5iSjo") && window.gaDevIds.push("i5iSjo"), window[v]("provide", m, h), window.gaplugins = window.gaplugins || {}, window.gaplugins[m.charAt(0).toUpperCase() + m.slice(1)] = h
            }()
        },
        17833: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/512eb76d3f55365106b6553583884c81.svg"
        },
        98149: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/1fab4a7428381cbb290d8f591d7934fb.svg"
        },
        42158: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/617c9bcf01673a55c983c7d0a14a6bd4.svg"
        },
        90778: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/68388f00ef865490c5b79b3a7238a791.svg"
        },
        45437: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/c29a13c4b115e8a9000ba1b6ac2e1918.svg"
        },
        20770: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/goals/235433119ddbb9e7a011fce8d725610e.svg"
        },
        20750: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/7da752378a3b1b8bbcd94a4d4f10561e.svg"
        },
        9115: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/b294c1b7e661d8039b723d450e12a91e.svg"
        },
        13567: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/9249183104c6fcd338c3dc70fe33612c.svg"
        },
        21778: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/icons/f5358b2d4087a109790fc809eedc08c5.svg"
        },
        39631: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/b2cfacfc26adff8e547866db1b4d2249.svg"
        },
        80869: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/838ba65643baef4c8442317df514cab5.svg"
        },
        83577: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/afe5c7067cd5fb7de936d3928ea7add6.svg"
        },
        92902: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/020eeff7a4bb54d62dc430445102de8f.svg"
        },
        83831: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/50e20c051d41d8446f13d5fae10f8797.svg"
        },
        8466: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/80fecb328c5aefd400db229794fd7a08.svg"
        },
        8146: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/58454634c8fdf43d606b85832102eb9b.svg"
        },
        79815: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/fc303539a465de810900b8bf9101df5b.svg"
        },
        9175: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/b7c96323c16272efa6794d33791686d2.svg"
        },
        40301: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/8b3ff5d2a2b0ec2ff7cec8ebd639a5ab.svg"
        },
        26858: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/968f56b566887d7718898cf8b5e74f40.svg"
        },
        78466: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/1795aa8b3b10d243e5d138a79bde360a.svg"
        },
        65908: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/eef523c872b71178ef5acb2442d453a2.svg"
        },
        66586: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/9e4f18c0bc42c7508d5fa5b18346af11.svg"
        },
        25324: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/leagues/cc7b8f8582e9cfb88408ab851ec2e9bd.svg"
        },
        87122: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/dca3b978d07a7dfc05adb1d5526e9e21.svg"
        },
        26219: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/streakCalendar/85f13bef0cec7175ae190a3a8a513d58.svg"
        },
        57127: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/streakCalendar/ddd4794e495fca5c45bf358115bd9053.svg"
        },
        34049: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/streakCalendar/8d8a819f30b6f538853e0877599ed7f1.svg"
        },
        480: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/super/8183c77cba99daf1e900fb5f9b0cc671.svg"
        },
        89090: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/48b38c250a652878bc0c779a07f2ca48.svg"
        },
        45633: (e, t, a) => {
            "use strict";
            e.exports = a.p + "images/ed25a8cf69261b0c1e25b147f369f74a.svg"
        },
        76986: e => {
            "use strict";
            e.exports = JSON.parse('[["[’\\\\\\"´‘`′ʻ́̀´]","\'"],["[\\\\[\\\\]\\\\{\\\\}\\\\<\\\\>\\\\)\\\\(\\\\^\\\\~\\\\_\\\\-\\\\‐\\\\;\\\\!\\\\¡\\\\|\\\\?\\\\¿\\\\/\\\\·\\\\\\"\\\\«\\\\»\\\\“\\\\”\\\\„\\\\–\\\\:\\\\,\\\\.\\\\▶\\\\*\\\\+\\\\’\\\\。\\\\，\\\\、\\\\､\\\\‚\\\\｡\\\\；\\\\：\\\\「\\\\」\\\\『\\\\』\\\\（\\\\）\\\\？\\\\！\\\\─\\\\…\\\\《\\\\》\\\\〈\\\\〉\\\\．\\\\～\\\\،\\\\؟\\\\।\\\\—\\\\‧]",""],["\\\\s+"," "],["^ | $",""]]')
        },
        72538: e => {
            "use strict";
            e.exports = JSON.parse('{"ar":{"de":"الألمانية","en":"الإنجليزية","fr":"الفرنسية","sv":"السويدية"},"bn":{"en":"ইংরেজি"},"cs":{"en":"Angličtina"},"de":{"en":"Englisch","es":"Spanisch","fr":"Französisch","it":"Italienisch"},"el":{"en":"Αγγλικά"},"en":{"ar":"Arabic","cs":"Czech","cy":"Welsh","da":"Danish","de":"German","el":"Greek","en":"English","eo":"Esperanto","es":"Spanish","fi":"Finnish","fr":"French","ga":"Irish","gd":"Scottish Gaelic","he":"Hebrew","hi":"Hindi","ht":"Haitian Creole","hu":"Hungarian","hv":"High Valyrian","hw":"Hawaiian","id":"Indonesian","it":"Italian","ja":"Japanese","ko":"Korean","la":"Latin","nl-NL":"Dutch","no-BO":"Norwegian (Bokmål)","nv":"Navajo","pl":"Polish","pt":"Portuguese","ro":"Romanian","ru":"Russian","sv":"Swedish","sw":"Swahili","tlh":"Klingon","tr":"Turkish","uk":"Ukrainian","vi":"Vietnamese","yi":"Yiddish","zh":"Chinese","zu":"Zulu"},"es":{"ca":"Catalán","de":"Alemán","en":"Inglés","eo":"Esperanto","fr":"Francés","gn":"Guaraní","it":"Italiano","pt":"Portugués","ru":"Ruso","sv":"Sueco"},"fr":{"de":"allemand","en":"anglais","eo":"espéranto","es":"espagnol","it":"italien","pt":"portugais"},"hi":{"en":"इंग्लिश"},"hu":{"de":"Német","en":"Angol"},"id":{"en":"Bahasa Inggris"},"it":{"de":"Tedesco","en":"Inglese","es":"Spagnolo","fr":"Francese"},"ja":{"en":"英語","fr":"フランス語","ko":"韓国語","zh":"中国語"},"ko":{"en":"영⁠어"},"nl-NL":{"de":"Duits","en":"Engels","fr":"Frans"},"pl":{"en":"Angielski"},"pt":{"de":"Alemão","en":"Inglês","eo":"Esperanto","es":"Espanhol","fr":"Francês","it":"Italiano"},"ro":{"en":"engleză"},"ru":{"de":"Немецкий","en":"Английский","es":"Испанский","fr":"Французский"},"te":{"en":"ఇంగ్లీష్"},"th":{"en":"ภ⁠า⁠ษ⁠าอั⁠ง⁠ก⁠ฤ⁠ษ"},"tl":{"en":"Ingles"},"tr":{"de":"Almanca","en":"İngilizce","ru":"Rusça"},"uk":{"en":"Англійська"},"vi":{"en":"Tiếng Anh","zh":"Tiếng Hoa"},"zh-CN":{"en":"英语","es":"西班牙语","fr":"法语","it":"意大利语","ja":"日语","ko":"韩语","zh-HK":"中文（粤语）"},"zh-TW":{"en":"英語","es":"西班牙語","fr":"法語","it":"義大利語","ja":"日語","ko":"韓語","zh-HK":"中文（粵語）"}}')
        }
    },
    e => {
        e.O(0, [1765], (() => (30027, e(e.s = 30027)))), e.O()
    }
]);